!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
$0x2	block8.h	/^	addl	$0x2,%edi$/;"	v
$0x4	block16.h	/^	addl	$0x4,%edi$/;"	v
A2A_ACK	protocol.h	86;"	d
A2A_ECHO	protocol.h	88;"	d
A2A_NACK	protocol.h	87;"	d
A2A_PING	protocol.h	85;"	d
A2C_CLIENT_COMMAND	protocol.h	92;"	d
A2C_PRINT	protocol.h	89;"	d
ABS	debug.h	229;"	d
ABSOLUTE_MAX_PARTICLES	gl_rpart.c	37;"	d	file:
ABSOLUTE_MAX_PARTICLES	r_part.c	53;"	d	file:
ABSOLUTE_MIN_PARTICLES	gl_rpart.c	36;"	d	file:
ABSOLUTE_MIN_PARTICLES	r_part.c	52;"	d	file:
ACCEL16_driver	mgraph.h	1672;"	d
ACCEL24_driver	mgraph.h	1673;"	d
ACCEL32_driver	mgraph.h	1674;"	d
ACCEL8_driver	mgraph.h	1671;"	d
ACM_GETFUNC	movie_avi.c	79;"	d	file:
ADDOP	parser.c	441;"	d	file:
ADDOP	parser.c	454;"	d	file:
ADDSET_ACTION	settings.h	24;"	d
ADDSET_ADVANCED_SECTION	settings.h	15;"	d
ADDSET_BASIC_SECTION	settings.h	18;"	d
ADDSET_BIND	settings.h	51;"	d
ADDSET_BOOL	settings.h	36;"	d
ADDSET_BOOLLATE	settings.h	39;"	d
ADDSET_COLOR	settings.h	48;"	d
ADDSET_CUSTOM	settings.h	55;"	d
ADDSET_ENUM	settings.h	33;"	d
ADDSET_INTNUMBER	settings.h	30;"	d
ADDSET_NAMED	settings.h	45;"	d
ADDSET_NUMBER	settings.h	27;"	d
ADDSET_SEPARATOR	settings.h	21;"	d
ADDSET_SKIN	settings.h	58;"	d
ADDSET_STRING	settings.h	42;"	d
ADD_CICON_TEXTURE	cl_screen.c	1257;"	d	file:
ADD_CP_TEXTURE	console.c	1145;"	d	file:
ADD_PARTICLE_TEXTURE	gl_rpart.c	256;"	d	file:
ADD_PARTICLE_TYPE	gl_rpart.c	266;"	d	file:
ALIAS_ARCHIVE	cmd.h	180;"	d
ALIAS_BASE_SIZE_RATIO	gl_local.h	74;"	d
ALIAS_BASE_SIZE_RATIO	r_local.h	29;"	d
ALIAS_BOTTOM_CLIP	r_shared.h	130;"	d
ALIAS_GROUP	modelgen.h	/^typedef enum { ALIAS_SINGLE=0, ALIAS_GROUP } aliasframetype_t;$/;"	e	enum:__anon222
ALIAS_HASHPOOL_SIZE	cl_tcl.c	43;"	d	file:
ALIAS_HASHPOOL_SIZE	cmd.c	482;"	d	file:
ALIAS_HAS_PARAMETERS	cmd.h	186;"	d
ALIAS_LEFT_CLIP	r_shared.h	127;"	d
ALIAS_ONSEAM	d_ifacea.h	32;"	d
ALIAS_ONSEAM	modelgen.h	47;"	d
ALIAS_ONSEAM	r_shared.h	133;"	d
ALIAS_RIGHT_CLIP	r_shared.h	129;"	d
ALIAS_SERVER	cmd.h	182;"	d
ALIAS_SINGLE	modelgen.h	/^typedef enum { ALIAS_SINGLE=0, ALIAS_GROUP } aliasframetype_t;$/;"	e	enum:__anon222
ALIAS_SKIN_GROUP	modelgen.h	/^typedef enum { ALIAS_SKIN_SINGLE=0, ALIAS_SKIN_GROUP } aliasskintype_t;$/;"	e	enum:__anon223
ALIAS_SKIN_SINGLE	modelgen.h	/^typedef enum { ALIAS_SKIN_SINGLE=0, ALIAS_SKIN_GROUP } aliasskintype_t;$/;"	e	enum:__anon223
ALIAS_TCL	cmd.h	189;"	d
ALIAS_TEMP	cmd.h	184;"	d
ALIAS_TOP_CLIP	r_shared.h	128;"	d
ALIAS_VERSION	modelgen.h	45;"	d
ALIAS_XY_CLIP_MASK	r_shared.h	135;"	d
ALIAS_Z_CLIP	r_shared.h	131;"	d
ALIAS_Z_CLIP_PLANE	r_local.h	185;"	d
ALL_BUTTON_WIDTH	sys_win.c	812;"	d	file:
ALPHA	r_draw.c	1318;"	d	file:
ALSA_FUNC	snd_alsa.c	117;"	d	file:
ALSA_FUNC	snd_alsa.c	126;"	d	file:
ALSA_FUNC	snd_alsa.c	30;"	d	file:
ALSA_FUNC	snd_alsa.c	33;"	d	file:
ALSA_FUNC	snd_alsa_funcs.h	29;"	d
ALSA_FUNC	snd_alsa_funcs.h	59;"	d
ALT_ROCKET_TRAIL	render.h	/^	ROCKET_TRAIL, GRENADE_TRAIL, ALT_ROCKET_TRAIL, BLOOD_TRAIL, BIG_BLOOD_TRAIL,$/;"	e	enum:trail_type_s
AMBIENT_LAVA	bspfile.h	197;"	d
AMBIENT_SKY	bspfile.h	195;"	d
AMBIENT_SLIME	bspfile.h	196;"	d
AMBIENT_WATER	bspfile.h	194;"	d
AMFDEBUGTRAIL	gl_rpart.c	/^void AMFDEBUGTRAIL (vec3_t start, vec3_t end, float time)$/;"	f
AMF_ROCKET_TRAIL	render.h	/^	AMF_ROCKET_TRAIL,$/;"	e	enum:trail_type_s
AMP	r_local.h	201;"	d
AMP2	r_local.h	202;"	d
ANIM_CYCLE	gl_model.c	665;"	d	file:
ANIM_CYCLE	r_model.c	413;"	d	file:
APIENTRY	gl_local.h	58;"	d
AREA_DEPTH	sv_world.h	41;"	d
AREA_NODES	sv_world.h	42;"	d
AREA_SOLID	sv_world.h	38;"	d
AREA_TRIGGERS	sv_world.h	39;"	d
AREGTYPE	vfs_tar.h	27;"	d
ASMAPI	mgraph.h	77;"	d
AS_IDENT	nmenu_autosave.c	7;"	d	file:
ATTR_BLUE_IDX	linux_glimp.c	1085;"	d	file:
ATTR_DEPTH_IDX	linux_glimp.c	1086;"	d	file:
ATTR_GREEN_IDX	linux_glimp.c	1084;"	d	file:
ATTR_RED_IDX	linux_glimp.c	1083;"	d	file:
ATTR_STENCIL_IDX	linux_glimp.c	1087;"	d	file:
AUDACIOUS_COMMAND	mp3_audacious.c	185;"	d	file:
AUDACIOUS_FreeLibrary	mp3_audacious.c	/^static void AUDACIOUS_FreeLibrary(void) {$/;"	f	file:
AUDACIOUS_Set_ToggleFn	mp3_audacious.c	/^static void AUDACIOUS_Set_ToggleFn(char *name, void *togglefunc, void *getfunc) {$/;"	f	file:
AUDACIOUS_pid	mp3_audacious.c	/^static int AUDACIOUS_pid = 0;$/;"	v	file:
AUTH_BADCRC	auth.c	38;"	d	file:
AUTH_BADFORMAT	auth.c	37;"	d	file:
AUTH_GOODCRC	auth.c	39;"	d	file:
AUTH_NOTHING	auth.c	36;"	d	file:
AUTOID_ARMORBAR_GREEN_ARMOR	cl_screen.c	935;"	d	file:
AUTOID_ARMORBAR_OFFSET_Y	cl_screen.c	939;"	d	file:
AUTOID_ARMORBAR_RED_ARMOR	cl_screen.c	937;"	d	file:
AUTOID_ARMORBAR_YELLOW_ARMOR	cl_screen.c	936;"	d	file:
AUTOID_ARMORNAME_OFFSET_X	cl_screen.c	941;"	d	file:
AUTOID_ARMORNAME_OFFSET_Y	cl_screen.c	940;"	d	file:
AUTOID_HEALTHBAR_BG_COLOR	cl_screen.c	927;"	d	file:
AUTOID_HEALTHBAR_MEGA_COLOR	cl_screen.c	929;"	d	file:
AUTOID_HEALTHBAR_NORMAL_COLOR	cl_screen.c	928;"	d	file:
AUTOID_HEALTHBAR_OFFSET_Y	cl_screen.c	933;"	d	file:
AUTOID_HEALTHBAR_TWO_MEGA_COLOR	cl_screen.c	930;"	d	file:
AUTOID_HEALTHBAR_UNNATURAL_COLOR	cl_screen.c	931;"	d	file:
AUTOID_WEAPON_OFFSET_X	cl_screen.c	944;"	d	file:
AUTOID_WEAPON_OFFSET_Y	cl_screen.c	943;"	d	file:
AVCodecTag	ffmpeg.c	/^typedef struct AVCodecTag$/;"	s	file:
AVCodecTag	ffmpeg.c	/^} AVCodecTag;$/;"	t	typeref:struct:AVCodecTag	file:
AVI_GETFUNC	movie_avi.c	78;"	d	file:
AXE_INFO	mvd_utils_common.h	39;"	d
Activate_Popup_Menu	new_menu.c	/^void Activate_Popup_Menu(void)$/;"	f
ActiveApp	sys_win.c	/^qbool		ActiveApp, Minimized;$/;"	v
AddBlankLine	document_rendering.c	/^static void AddBlankLine(document_rendering_context_t *cx)$/;"	f	file:
AddCP	console.c	/^void AddCP(void) {$/;"	f
AddGroupMember	match_tools.c	/^static void AddGroupMember(mapgroup_t *group, char *member) {$/;"	f	file:
AddInlineLink	document_rendering.c	/^static void AddInlineLink(document_rendering_context_t *cx, document_rendered_link_t *link)$/;"	f	file:
AddInternalTrigger	tp_triggers.c	/^static void AddInternalTrigger (char* regexpstr, unsigned mask, internal_trigger_func func)$/;"	f	file:
AddLinksToPmove	sv_user.c	/^void AddLinksToPmove (areanode_t *node)$/;"	f
AddModeDesc	vid_win.c	/^static void AddModeDesc(vmode_t *mode) {$/;"	f	file:
AddPage	Ctrl_PageViewer.c	/^static void AddPage(CPageViewer_t *viewer)$/;"	f	file:
AddParticle	gl_rpart.c	/^__inline static void AddParticle(part_type_t type, vec3_t org, int count, float size, float time, col_t col, vec3_t dir) {$/;"	f	file:
AddParticleTrail	gl_rpart.c	/^__inline static void AddParticleTrail(part_type_t type, vec3_t start, vec3_t end, float size, float time, col_t col) {$/;"	f	file:
AddServer_f	EX_browser.c	/^void AddServer_f(void)$/;"	f
AddSkyGroupMember	match_tools.c	/^static void AddSkyGroupMember(skygroup_t *group, char *member) {$/;"	f	file:
AddToFatPVS_r	cmodel.c	/^static void AddToFatPVS_r (cnode_t *node)$/;"	f	file:
AddToFileSource	EX_browser_sources.c	/^void AddToFileSource(source_data *source, server_data *serv)$/;"	f
AddUnbound	EX_browser_sources.c	/^void AddUnbound(server_data *s)$/;"	f
AddUnboundServer	EX_browser.c	/^qbool AddUnboundServer(char *addr)$/;"	f
Add_Column	EX_FileList.c	/^static void Add_Column(char *line, int *pos, char *t, int w)$/;"	f	file:
Add_Column2	EX_browser.c	/^void Add_Column2(int x, int y, int *pos, const char *t, int w, int red)$/;"	f
Add_ColumnColored	EX_browser.c	/^void Add_ColumnColored(int x, int y, int *pos, const char *t, int w, const char* color)$/;"	f
Add_Inline_A	document_rendering.c	/^char * Add_Inline_A(document_rendering_context_t *cx, char *text, document_tag_a_t *tag)$/;"	f
Add_Inline_Br	document_rendering.c	/^char * Add_Inline_Br(document_rendering_context_t *cx, char *text, document_tag_br_t *tag)$/;"	f
Add_Inline_Color	document_rendering.c	/^char * Add_Inline_Color(document_rendering_context_t *cx, char *text, document_tag_color_t *tag)$/;"	f
Add_Inline_Em	document_rendering.c	/^char * Add_Inline_Em(document_rendering_context_t *cx, char *text, document_tag_em_t *tag)$/;"	f
Add_Inline_Img	document_rendering.c	/^char * Add_Inline_Img(document_rendering_context_t *cx, char *text, document_tag_img_t *tag)$/;"	f
Add_Inline_Sp	document_rendering.c	/^char * Add_Inline_Sp(document_rendering_context_t *cx, char *text, document_tag_sp_t *tag)$/;"	f
Add_Inline_String	document_rendering.c	/^char *Add_Inline_String (char *text, char *string)$/;"	f
Add_Inline_Tag	document_rendering.c	/^char * Add_Inline_Tag(document_rendering_context_t *cx, char *text, document_tag_t *tag)$/;"	f
Add_Inline_Text	document_rendering.c	/^char *Add_Inline_Text (document_rendering_context_t *cx, char *text, document_tag_text_t *tag)$/;"	f
Add_Lua_State	lua.c	/^struct L_lua_states *Add_Lua_State(void)$/;"	f
Add_Server_Draw	EX_browser.c	/^void Add_Server_Draw(void)$/;"	f
Add_Server_Key	EX_browser.c	/^void Add_Server_Key(int key)$/;"	f
Add_Source_Draw	EX_browser.c	/^void Add_Source_Draw(void)$/;"	f
Add_Source_Key	EX_browser.c	/^void Add_Source_Key(int key)$/;"	f
AdjustConsoleHeight	keys.c	/^static void AdjustConsoleHeight (int delta) {$/;"	f	file:
All_Players_Compare_Func	EX_browser.c	/^int All_Players_Compare_Func(const void * p_p1, const void * p_p2)$/;"	f
AllocBlock	gl_rsurf.c	/^int AllocBlock (int w, int h, int *x, int *y) {$/;"	f
AllowedImpulse	cmd.c	/^qbool AllowedImpulse(int imp)$/;"	f
Alter_Autoupdate	EX_browser_net.c	/^void Alter_Autoupdate(server_data *s)$/;"	f
AlwaysRun	menu_options.c	/^static qbool AlwaysRun(void) { return cl_forwardspeed.value > 200; }$/;"	f	file:
AlwaysRunRead	menu_options.c	/^const char* AlwaysRunRead(void) { return AlwaysRun() ? "on" : "off"; }$/;"	f
AlwaysRunToggle	menu_options.c	/^void AlwaysRunToggle(qbool back) {$/;"	f
Amf_Reset_DamageStats	vx_stuff.c	/^void Amf_Reset_DamageStats (void) {$/;"	f
Amf_SetMode_f	vx_stuff.c	/^void Amf_SetMode_f(void)$/;"	f
AngleInterpolate	mathlib.h	135;"	d
AngleVectors	mathlib.c	/^void AngleVectors (vec3_t angles, vec3_t forward, vec3_t right, vec3_t up) {$/;"	f
AngleVectorsFLU	mathlib.c	/^void AngleVectorsFLU (const vec3_t angles, vec3_t forward, vec3_t left, vec3_t up)$/;"	f
AppActivate	vid_wgl.c	/^void AppActivate(BOOL fActive, BOOL minimize) {$/;"	f
AppActivate	vid_win.c	/^void AppActivate(BOOL fActive, BOOL minimize) {$/;"	f
AppActivate	win_wndproc.c	/^void AppActivate(BOOL fActive, BOOL minimize) {$/;"	f
ApplyVideoSettings	menu_options.c	/^static void ApplyVideoSettings(const menu_video_settings_t *s) {$/;"	f	file:
AssertCvarRange	tr_init.c	/^static void AssertCvarRange( cvar_t *cv, float minVal, float maxVal, qbool shouldBeIntegral )$/;"	f	file:
Audacious_LoadLibrary	mp3_audacious.c	/^static void Audacious_LoadLibrary(void) {$/;"	f	file:
Auth_AuthenticateClient	auth.c	/^static void Auth_AuthenticateClient (int slot)$/;"	f	file:
Auth_CheckAuthResponse	auth.c	/^static void Auth_CheckAuthResponse (wchar *s, int flags, int offset)$/;"	f	file:
Auth_CheckFServerResponse	auth.c	/^static void Auth_CheckFServerResponse (wchar *s, int flags, int offset)$/;"	f	file:
Auth_CheckResponse	auth.c	/^void Auth_CheckResponse (wchar *s, int flags, int offset)$/;"	f
Auth_CheckString	auth.c	/^static int Auth_CheckString (char *id, wchar *i_hate_wide_chars, int flags, int offset, int *out_slot, char *out_data, int out_size)$/;"	f	file:
Auth_Generate_Crc	auth.c	/^char *Auth_Generate_Crc (void)$/;"	f
Auth_Init	auth.c	/^void Auth_Init (void)$/;"	f
Auth_UnauthenticateClient	auth.c	/^static void Auth_UnauthenticateClient (int slot)$/;"	f	file:
Auth_Verify_Clients_f	auth.c	/^static void Auth_Verify_Clients_f(void)$/;"	f	file:
AutoSW	menu_options.c	/^static qbool AutoSW(void) { return (w_switch.value > 2) || (!w_switch.value) || (b_switch.value > 2) || (!b_switch.value); }$/;"	f	file:
AutoSWRead	menu_options.c	/^const char* AutoSWRead(void) { return AutoSW() ? "on" : "off"; }$/;"	f
AutoSWToggle	menu_options.c	/^void AutoSWToggle(qbool back) {$/;"	f
AutoupdateProc	EX_browser_net.c	/^DWORD WINAPI AutoupdateProc(void * lpParameter)$/;"	f
AxisFly	in_win.c	/^	AxisNada = 0, AxisForward, AxisLook, AxisSide, AxisTurn, AxisFly $/;"	e	enum:_ControlList	file:
AxisForward	in_win.c	/^	AxisNada = 0, AxisForward, AxisLook, AxisSide, AxisTurn, AxisFly $/;"	e	enum:_ControlList	file:
AxisLook	in_win.c	/^	AxisNada = 0, AxisForward, AxisLook, AxisSide, AxisTurn, AxisFly $/;"	e	enum:_ControlList	file:
AxisNada	in_win.c	/^	AxisNada = 0, AxisForward, AxisLook, AxisSide, AxisTurn, AxisFly $/;"	e	enum:_ControlList	file:
AxisSide	in_win.c	/^	AxisNada = 0, AxisForward, AxisLook, AxisSide, AxisTurn, AxisFly $/;"	e	enum:_ControlList	file:
AxisTurn	in_win.c	/^	AxisNada = 0, AxisForward, AxisLook, AxisSide, AxisTurn, AxisFly $/;"	e	enum:_ControlList	file:
B	parser.c	/^LOCAL expr_val B(EParser p) { return Bap(p, E(p)); }$/;"	f
BACKFACE_EPSILON	gl_local.h	83;"	d
BACKFACE_EPSILON	r_local.h	74;"	d
BANNED_BY_MTFL	rulesets.h	24;"	d
BASEHEIGHT	vid_wgl.c	36;"	d	file:
BASEWIDTH	vid_wgl.c	35;"	d	file:
BIGLETTER_HEIGHT	menu.c	398;"	d	file:
BIGLETTER_WIDTH	menu.c	397;"	d	file:
BIGMENU_ITEMS_COUNT	menu.c	410;"	d	file:
BIGMENU_ITEMS_SCALE	menu.c	401;"	d	file:
BIGMENU_LEFT	menu.c	399;"	d	file:
BIGMENU_LETTER_SPACING	menu.c	402;"	d	file:
BIGMENU_TOP	menu.c	400;"	d	file:
BIGMENU_VERTICAL_PADDING	menu.c	403;"	d	file:
BIG_BLOOD_TRAIL	render.h	/^	ROCKET_TRAIL, GRENADE_TRAIL, ALT_ROCKET_TRAIL, BLOOD_TRAIL, BIG_BLOOD_TRAIL,$/;"	e	enum:trail_type_s
BIG_INFO_STRING	tr_types.h	43;"	d
BIND_ALIGN_COL	config_manager.c	86;"	d	file:
BLEEDING_TRAIL	render.h	/^	BLEEDING_TRAIL,$/;"	e	enum:trail_type_s
BLEEDING_TRAIL2	render.h	/^	BLEEDING_TRAIL2,$/;"	e	enum:trail_type_s
BLKTYPE	vfs_tar.h	31;"	d
BLOCKED_ANY	pmove.c	43;"	d	file:
BLOCKED_FLOOR	pmove.c	40;"	d	file:
BLOCKED_OTHER	pmove.c	42;"	d	file:
BLOCKED_STEP	pmove.c	41;"	d	file:
BLOCKSIZE	vfs_tar.h	49;"	d
BLOCK_HEIGHT	gl_draw.c	327;"	d	file:
BLOCK_HEIGHT	gl_rsurf.c	35;"	d	file:
BLOCK_WIDTH	gl_draw.c	326;"	d	file:
BLOCK_WIDTH	gl_rsurf.c	34;"	d	file:
BLOOD_TRAIL	render.h	/^	ROCKET_TRAIL, GRENADE_TRAIL, ALT_ROCKET_TRAIL, BLOOD_TRAIL, BIG_BLOOD_TRAIL,$/;"	e	enum:trail_type_s
BLOOM_SIZE	gl_bloom.c	/^static int BLOOM_SIZE;$/;"	v	file:
BLUE	r_draw.c	1317;"	d	file:
BMODEL_FULLY_CLIPPED	r_local.h	33;"	d
BOOL_FALSE	parser.c	29;"	d	file:
BOOL_TRUE	parser.c	28;"	d	file:
BOPS_Error	mathlib.c	/^void BOPS_Error (void) {$/;"	f
BOTMATCH	menu_ingame.c	92;"	d	file:
BOTTOM_OFFSET	sys_win.c	811;"	d	file:
BOTTOM_RANGE	render.h	24;"	d
BOX_ON_PLANE_SIDE	mathlib.h	110;"	d
BROWSERPADDING	menu_multiplayer.c	16;"	d	file:
BTN_LOGITECH8	linux_glimp.c	444;"	d	file:
BTN_LOGITECH8	vid_glx.c	960;"	d	file:
BUF	match_tools.c	396;"	d	file:
BUF	match_tools.c	402;"	d	file:
BUF	match_tools.c	405;"	d	file:
BUF	match_tools.c	415;"	d	file:
BUTTON_ATTACK	protocol.h	401;"	d
BUTTON_ATTACK2	protocol.h	404;"	d
BUTTON_GAP	sys_win.c	810;"	d	file:
BUTTON_HEIGHT	sys_win.c	806;"	d	file:
BUTTON_JUMP	protocol.h	402;"	d
BUTTON_USE	protocol.h	403;"	d
Bap	parser.c	/^LOCAL expr_val Bap(EParser p, expr_val v)$/;"	f
BestWeapon	teamplay.c	/^int BestWeapon (void)$/;"	f
BestWeaponFromStatItems	teamplay.c	/^int BestWeaponFromStatItems (int stat)$/;"	f
BigFloat	q_shared.h	176;"	d
BigFloat	q_shared.h	184;"	d
BigFloat	q_shared.h	192;"	d
BigLong	q_shared.h	175;"	d
BigLong	q_shared.h	183;"	d
BigLong	q_shared.h	191;"	d
BigShort	q_shared.h	174;"	d
BigShort	q_shared.h	182;"	d
BigShort	q_shared.h	190;"	d
BitDepthRead	menu_options.c	/^const char* BitDepthRead(void) { return mvs_selected.bpp == 32 ? "32 bit" : mvs_selected.bpp == 16 ? "16 bit" : "use desktop settings"; }$/;"	f
BitDepthToggle	menu_options.c	/^void BitDepthToggle(qbool back) {$/;"	f
Bookmark_Update	nmenu_demo.c	/^void Bookmark_Update(void)$/;"	f
BoundPoly	gl_warp.c	/^void BoundPoly (int numverts, float *verts, vec3_t mins, vec3_t maxs) {$/;"	f
BoxOnPlaneSide	mathlib.c	/^int BoxOnPlaneSide (vec3_t emins, vec3_t emaxs, struct mplane_s *p) {$/;"	f
Browser_Init	EX_browser.c	/^void Browser_Init (void)$/;"	f
Browser_Init2	EX_browser.c	/^void Browser_Init2 (void)$/;"	f
Browser_window	EX_browser.c	/^serverbrowser_window_t Browser_window;$/;"	v
BuffBigLong	q_shared.c	/^unsigned int BuffBigLong (const unsigned char *buffer)$/;"	f
BuffBigShort	q_shared.c	/^unsigned short BuffBigShort (const unsigned char *buffer)$/;"	f
BuffLittleLong	q_shared.c	/^unsigned int BuffLittleLong (const unsigned char *buffer)$/;"	f
BuffLittleShort	q_shared.c	/^unsigned short BuffLittleShort (const unsigned char *buffer)$/;"	f
BuildGammaTable	cl_view.c	/^void BuildGammaTable (float g, float c) {$/;"	f
BuildHash	vfs.h	/^	void	(*BuildHash)(void *handle);$/;"	m	struct:__anon289
BuildSurfaceDisplayList	gl_rsurf.c	/^void BuildSurfaceDisplayList (msurface_t *fa) {$/;"	f
BuildTris	gl_mesh.c	/^void BuildTris (void)$/;"	f
Build_FragMsg_Indices	fragstats.c	/^static void Build_FragMsg_Indices(void) {$/;"	f	file:
BurningExplosion	gl_rpart.c	/^void BurningExplosion (vec3_t org) $/;"	f
C	asm_i386.h	27;"	d
C	asm_i386.h	29;"	d
C	parser.c	/^LOCAL expr_val C(EParser p) { return Cap(p, B(p)); }$/;"	f
CACHED_PICS_HDSIZE	common_draw.h	23;"	d
CACHE_SIZE	d_ifacea.h	44;"	d
CACHE_SIZE	r_local.h	265;"	d
CALLBACK_API	CarbonSndPlayDB.h	/^typedef CALLBACK_API( void, SndDoubleBackProcPtr )(SndChannelPtr channel, SndDoubleBufferPtr doubleBufferPtr);$/;"	t
CAM_NONE	client.h	835;"	d
CAM_TRACK	client.h	836;"	d
CANCEL_BUTTON_WIDTH	sys_win.c	809;"	d	file:
CDAudio_CloseDoor	cd_linux.c	/^static void CDAudio_CloseDoor(void)$/;"	f	file:
CDAudio_CloseDoor	cd_win.c	/^static void CDAudio_CloseDoor(void)$/;"	f	file:
CDAudio_Eject	cd_linux.c	/^static void CDAudio_Eject(void)$/;"	f	file:
CDAudio_Eject	cd_win.c	/^static void CDAudio_Eject(void)$/;"	f	file:
CDAudio_GetAudioDiskInfo	cd_linux.c	/^static int CDAudio_GetAudioDiskInfo(void)$/;"	f	file:
CDAudio_GetAudioDiskInfo	cd_win.c	/^static int CDAudio_GetAudioDiskInfo(void)$/;"	f	file:
CDAudio_Init	cd_linux.c	/^int CDAudio_Init(void)$/;"	f
CDAudio_Init	cd_null.c	/^int CDAudio_Init(void)$/;"	f
CDAudio_Init	cd_win.c	/^int CDAudio_Init(void)$/;"	f
CDAudio_MessageHandler	cd_win.c	/^LONG CDAudio_MessageHandler(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)$/;"	f
CDAudio_Pause	cd_linux.c	/^void CDAudio_Pause(void)$/;"	f
CDAudio_Pause	cd_null.c	/^void CDAudio_Pause(void)$/;"	f
CDAudio_Pause	cd_win.c	/^void CDAudio_Pause(void)$/;"	f
CDAudio_Play	cd_linux.c	/^void CDAudio_Play(byte track, qbool looping)$/;"	f
CDAudio_Play	cd_null.c	/^void CDAudio_Play(byte track, qbool looping)$/;"	f
CDAudio_Play	cd_win.c	/^void CDAudio_Play(byte track, qbool looping)$/;"	f
CDAudio_Resume	cd_linux.c	/^void CDAudio_Resume(void)$/;"	f
CDAudio_Resume	cd_null.c	/^void CDAudio_Resume(void)$/;"	f
CDAudio_Resume	cd_win.c	/^void CDAudio_Resume(void)$/;"	f
CDAudio_Shutdown	cd_linux.c	/^void CDAudio_Shutdown(void)$/;"	f
CDAudio_Shutdown	cd_null.c	/^void CDAudio_Shutdown(void)$/;"	f
CDAudio_Shutdown	cd_win.c	/^void CDAudio_Shutdown(void)$/;"	f
CDAudio_Stop	cd_linux.c	/^void CDAudio_Stop(void)$/;"	f
CDAudio_Stop	cd_null.c	/^void CDAudio_Stop(void)$/;"	f
CDAudio_Stop	cd_win.c	/^void CDAudio_Stop(void)$/;"	f
CDAudio_Update	cd_linux.c	/^void CDAudio_Update(void)$/;"	f
CDAudio_Update	cd_null.c	/^void CDAudio_Update(void)$/;"	f
CDAudio_Update	cd_win.c	/^void CDAudio_Update(void)$/;"	f
CDROM_DATA_TRACK	cd_linux.c	159;"	d	file:
CD_f	cd_linux.c	/^void CD_f (void) {$/;"	f
CD_f	cd_null.c	/^void CD_f (void) {$/;"	f
CD_f	cd_win.c	/^void CD_f (void) {$/;"	f
CEM_Add_Button_ce	cam_event_system.c	/^void CEM_Add_Button_ce(void)$/;"	f
CEM_Del_Entry_Value_ce	cam_event_system.c	/^void CEM_Del_Entry_Value_ce(void)$/;"	f
CEM_IDENT	cam_event_system.c	336;"	d	file:
CEM_Next_Entry_Value_ce	cam_event_system.c	/^void CEM_Next_Entry_Value_ce(void)$/;"	f
CEM_Next_Entry_ce	cam_event_system.c	/^void CEM_Next_Entry_ce(void)$/;"	f
CEM_Prev_Entry_Value_ce	cam_event_system.c	/^void CEM_Prev_Entry_Value_ce(void)$/;"	f
CEM_Prev_Entry_ce	cam_event_system.c	/^void CEM_Prev_Entry_ce(void)$/;"	f
CEM_Type_Button_Update_ce	cam_event_system.c	/^void CEM_Type_Button_Update_ce(struct menu_ct *self)$/;"	f
CEM_Type_Button_ce	cam_event_system.c	/^void CEM_Type_Button_ce(void)$/;"	f
CEM_Update_Event_Text_ce	cam_event_system.c	/^void CEM_Update_Event_Text_ce(struct menu_ct *self)$/;"	f
CEM_Value_Add_Button_ce	cam_event_system.c	/^void CEM_Value_Add_Button_ce(void)$/;"	f
CENT_TRAILDRAWN	client.h	200;"	d
CEditBox	Ctrl_EditBox.h	/^} CEditBox;$/;"	t	typeref:struct:CEditBox_s
CEditBox_Draw	Ctrl_EditBox.c	/^void CEditBox_Draw(CEditBox *e, int x, int y, qbool active)$/;"	f
CEditBox_Init	Ctrl_EditBox.c	/^void CEditBox_Init(CEditBox *e, int width, int max)$/;"	f
CEditBox_Key	Ctrl_EditBox.c	/^void CEditBox_Key(CEditBox *e, int key)$/;"	f
CEditBox_s	Ctrl_EditBox.h	/^typedef struct CEditBox_s$/;"	s
CG_dx	in_mac.c	/^static CGMouseDelta 	CG_dx = 0, CG_dy = 0;$/;"	v	file:
CG_dy	in_mac.c	/^static CGMouseDelta 	CG_dx = 0, CG_dy = 0;$/;"	v	file:
CHAIN_RESET	gl_rsurf.c	716;"	d	file:
CHAIN_SURF_B2F	gl_rsurf.c	74;"	d	file:
CHAIN_SURF_F2B	gl_rsurf.c	67;"	d	file:
CHAN	r_draw.c	1314;"	d	file:
CHAN_AUTO	sv_send.c	23;"	d	file:
CHAN_BODY	sv_send.c	27;"	d	file:
CHAN_ITEM	sv_send.c	26;"	d	file:
CHAN_VOICE	sv_send.c	25;"	d	file:
CHAN_WEAPON	sv_send.c	24;"	d	file:
CHARSET_CHARS_PER_ROW	gl_draw.c	800;"	d	file:
CHARSET_CHAR_HEIGHT	gl_draw.c	804;"	d	file:
CHARSET_CHAR_WIDTH	gl_draw.c	803;"	d	file:
CHARSET_HEIGHT	gl_draw.c	802;"	d	file:
CHARSET_ROW_LENGTH	r_draw.c	518;"	d	file:
CHARSET_WIDTH	gl_draw.c	801;"	d	file:
CHAR_SIZE	r_draw.c	517;"	d	file:
CHAT_MM1	cl_parse.c	2306;"	d	file:
CHAT_MM2	cl_parse.c	2307;"	d	file:
CHAT_SPEC	cl_parse.c	2308;"	d	file:
CHECK_CD_ARGS	cd_linux.c	298;"	d	file:
CHECK_CD_ARGS	cd_win.c	243;"	d	file:
CHECK_TEXTURE_ALREADY_LOADED	gl_texture.c	595;"	d	file:
CHECK_TEXTURE_ALREADY_LOADED	gl_texture.c	603;"	d	file:
CHRTYPE	vfs_tar.h	30;"	d
CHUNK	fs.c	1739;"	d	file:
CHUNKSIZE	sv_user.c	566;"	d	file:
CIF_AFK	q_shared.h	287;"	d
CIF_CHAT	q_shared.h	286;"	d
CIRCLE_LINE_COUNT	gl_draw.c	1559;"	d	file:
CI_Bind	cl_screen.c	/^static void CI_Bind(ci_texture_t *citex, int *texture)$/;"	f	file:
CI_Init	cl_screen.c	/^void CI_Init (void) {$/;"	f
CLASS_ID	ez_controls.h	/^	ez_control_id_t			CLASS_ID;				\/\/ An ID unique for this class, this is set at initilization$/;"	m	struct:ez_control_s
CLEANCHAR	match_tools.c	73;"	d	file:
CLEANCHAR	match_tools.c	88;"	d	file:
CLEANFIELD	match_tools.c	388;"	d	file:
CLEANFIELD	match_tools.c	394;"	d	file:
CLIENT_EXTENSIONS	protocol.h	60;"	d
CLIPBOARDSIZE	utils.c	500;"	d	file:
CLIP_BOTTOM	r_draw.c	69;"	d	file:
CLIP_EPSILON	r_local.h	72;"	d
CLIP_LEFT	r_draw.c	70;"	d	file:
CLIP_RIGHT	r_draw.c	71;"	d	file:
CLIP_TOP	r_draw.c	68;"	d	file:
CLOSE_BUTTON_EDGE_GAP	ez_window.c	100;"	d	file:
CL_AddEntity	cl_ents.c	/^void CL_AddEntity (entity_t *ent) {$/;"	f
CL_AddFlagModels	cl_ents.c	/^void CL_AddFlagModels (entity_t *ent, int team) $/;"	f
CL_AddVWepModel	cl_ents.c	/^static qbool CL_AddVWepModel (entity_t *ent, int vw_index)$/;"	f	file:
CL_AdjustAngles	cl_input.c	/^void CL_AdjustAngles (void) {$/;"	f
CL_AllocBlur	vx_motiontrail.c	/^motionblur_t *CL_AllocBlur (void) $/;"	f
CL_AllocDlight	cl_ents.c	/^dlight_t *CL_AllocDlight (int key) {$/;"	f
CL_AllocExplosion	cl_tent.c	/^explosion_t *CL_AllocExplosion(void) $/;"	f
CL_AutoRecord_CancelMatch	cl_demo.c	/^void CL_AutoRecord_CancelMatch(void)$/;"	f
CL_AutoRecord_SaveMatch	cl_demo.c	/^void CL_AutoRecord_SaveMatch(void)$/;"	f
CL_AutoRecord_StartMatch	cl_demo.c	/^void CL_AutoRecord_StartMatch(char *demoname)$/;"	f
CL_AutoRecord_Status	cl_demo.c	/^qbool CL_AutoRecord_Status(void)$/;"	f
CL_AutoRecord_StopMatch	cl_demo.c	/^void CL_AutoRecord_StopMatch(void)$/;"	f
CL_Autotrack_f	cl_cam.c	/^void CL_Autotrack_f(void)$/;"	f
CL_BaseMove	cl_input.c	/^void CL_BaseMove (usercmd_t *cmd) {	$/;"	f
CL_BeginLocalConnection	cl_main.c	/^void CL_BeginLocalConnection (void) $/;"	f
CL_BeginServerConnect	cl_main.c	/^void CL_BeginServerConnect(void) $/;"	f
CL_CalcCrouch	cl_pred.c	/^void CL_CalcCrouch (void) {$/;"	f
CL_CalcFPS	cl_main.c	/^void CL_CalcFPS(void)$/;"	f
CL_CalcNet	cl_parse.c	/^int CL_CalcNet (void) $/;"	f
CL_CalcNetStatistics	cl_parse.c	/^int CL_CalcNetStatistics($/;"	f
CL_CalcPlayerFPS	cl_ents.c	/^void CL_CalcPlayerFPS(player_info_t *info, int msec)$/;"	f
CL_CalculateDemoTime	cl_demo.c	/^float CL_CalculateDemoTime(vfsfile_t *demfile)$/;"	f
CL_Cam_SetKiller	cl_cam.c	/^void CL_Cam_SetKiller(int killernum, int victimnum) {$/;"	f
CL_CategorizePosition	cl_pred.c	/^void CL_CategorizePosition (void) {$/;"	f
CL_Changing_f	cl_cmd.c	/^void CL_Changing_f (void) {$/;"	f
CL_CheckAutoPause	cl_main.c	/^static void CL_CheckAutoPause (void) $/;"	f	file:
CL_CheckForResend	cl_main.c	/^void CL_CheckForResend (void) $/;"	f
CL_CheckIfQWProtocolHandler	cl_main.c	/^qbool CL_CheckIfQWProtocolHandler()$/;"	f
CL_CheckOrDownloadFile	cl_parse.c	/^qbool CL_CheckOrDownloadFile (char *filename) $/;"	f
CL_CheckQizmoCompletion	cl_demo.c	/^void CL_CheckQizmoCompletion (void)$/;"	f
CL_CheckServerCommand	cl_cmd.c	/^qbool CL_CheckServerCommand () {$/;"	f
CL_ClearBlurs	vx_motiontrail.c	/^void CL_ClearBlurs (void) $/;"	f
CL_ClearPredict	cl_ents.c	/^void CL_ClearPredict(void) {$/;"	f
CL_ClearProjectiles	cl_ents.c	/^void CL_ClearProjectiles (void) $/;"	f
CL_ClearScene	cl_ents.c	/^void CL_ClearScene (void) {$/;"	f
CL_ClearState	cl_main.c	/^void CL_ClearState (void) $/;"	f
CL_ClearTEnts	cl_tent.c	/^void CL_ClearTEnts(void) $/;"	f
CL_ClientState	cl_main.c	/^int CL_ClientState (void)$/;"	f
CL_Cmd_SayString_ApplyFilters	cl_cmd.c	/^static void CL_Cmd_SayString_ApplyFilters(char *s)$/;"	f	file:
CL_Cmd_SayString_FilterColoredText	cl_cmd.c	/^static void CL_Cmd_SayString_FilterColoredText(char *s)$/;"	f	file:
CL_Cmd_SayString_FilterWhite	cl_cmd.c	/^static void CL_Cmd_SayString_FilterWhite(char *s)$/;"	f	file:
CL_Cmd_SayString_InsertAppendix	cl_cmd.c	/^static void CL_Cmd_SayString_InsertAppendix(char *s, char *appendix)$/;"	f	file:
CL_Cmd_SayString_IsColored	cl_cmd.c	/^static qbool CL_Cmd_SayString_IsColored(char *s)$/;"	f	file:
CL_Cmd_SayString_Send	cl_cmd.c	/^static void CL_Cmd_SayString_Send(char *s)$/;"	f	file:
CL_Cmd_SayString_SendBase	cl_cmd.c	/^static void CL_Cmd_SayString_SendBase(char *s, char *appendix)$/;"	f	file:
CL_Color2ConColor	cl_parse.c	/^char *CL_Color2ConColor(int color)$/;"	f
CL_Color_f	cl_cmd.c	/^void CL_Color_f (void) {$/;"	f
CL_ColorizeFragMessage	cl_parse.c	/^static wchar* CL_ColorizeFragMessage (const wchar *source, cfrags_format *cff)$/;"	f	file:
CL_Connect_f	cl_main.c	/^void CL_Connect_f (void) $/;"	f
CL_ConnectedToProxy	cl_main.c	/^qbool CL_ConnectedToProxy(void)$/;"	f
CL_ConnectionlessPacket	cl_main.c	/^void CL_ConnectionlessPacket (void) $/;"	f
CL_CreateBlurs	vx_motiontrail.c	/^void CL_CreateBlurs (vec3_t start, vec3_t end, entity_t *ent)$/;"	f
CL_DNS_f	cl_main.c	/^void CL_DNS_f(void) $/;"	f
CL_DecayLights	cl_ents.c	/^void CL_DecayLights (void) {$/;"	f
CL_DemoDirectory	cl_demo.c	/^char *CL_DemoDirectory(void)$/;"	f
CL_DemoKeyframeAdd	cl_demo.c	/^static void CL_DemoKeyframeAdd(unsigned long filepos, float timestamp)$/;"	f	file:
CL_DemoKeyframeClearAll	cl_demo.c	/^static void CL_DemoKeyframeClearAll(void)$/;"	f	file:
CL_DemoKeyframeFindClosest	cl_demo.c	/^static demo_keyframe_t *CL_DemoKeyframeFindClosest(double time)$/;"	f	file:
CL_DemoPlaybackInit	cl_demo.c	/^static void CL_DemoPlaybackInit(void)$/;"	f	file:
CL_Demo_Close	cl_demo.c	/^static void CL_Demo_Close(void)$/;"	f	file:
CL_Demo_Compress	cl_demo.c	/^int CL_Demo_Compress(char* qwdname)$/;"	f
CL_Demo_DumpBenchmarkResult	cl_demo.c	/^void CL_Demo_DumpBenchmarkResult(int frames, float timet)$/;"	f
CL_Demo_Flush	cl_demo.c	/^static void CL_Demo_Flush(void)$/;"	f	file:
CL_Demo_GetCompressedName	cl_demo.c	/^void CL_Demo_GetCompressedName (char* cdemo_name)$/;"	f
CL_Demo_Init	cl_demo.c	/^void CL_Demo_Init(void)$/;"	f
CL_Demo_Jump_f	cl_demo.c	/^void CL_Demo_Jump_f (void)$/;"	f
CL_Demo_Open	cl_demo.c	/^static qbool CL_Demo_Open(char *name)$/;"	f	file:
CL_Demo_PB_Init	cl_demo.c	/^void CL_Demo_PB_Init(void *buf, int buflen)$/;"	f
CL_Demo_Playlist_f	menu_demo.c	/^void CL_Demo_Playlist_f (void)$/;"	f
CL_Demo_Read	cl_demo.c	/^int CL_Demo_Read(void *buf, int size, qbool peek)$/;"	f
CL_Demo_RemoveCompressed	cl_demo.c	/^void CL_Demo_RemoveCompressed(void)$/;"	f
CL_Demo_RemoveQWD	cl_demo.c	/^void CL_Demo_RemoveQWD(void)$/;"	f
CL_Demo_SetSpeed_f	cl_demo.c	/^void CL_Demo_SetSpeed_f (void)$/;"	f
CL_Demo_Write	cl_demo.c	/^static void CL_Demo_Write(void *data, int size)$/;"	f	file:
CL_Disconnect	cl_main.c	/^void CL_Disconnect (void) $/;"	f
CL_Disconnect_f	cl_main.c	/^void CL_Disconnect_f (void) $/;"	f
CL_Download_f	cl_cmd.c	/^void CL_Download_f (void){$/;"	f
CL_ED_LoadFromFile	pr_edict.c	/^void CL_ED_LoadFromFile (char *data) {	$/;"	f
CL_EasyRecord_f	cl_demo.c	/^void CL_EasyRecord_f (void)$/;"	f
CL_EmitEntities	cl_ents.c	/^void CL_EmitEntities (void) $/;"	f
CL_EntityParticles	cl_nqdemo.c	24;"	d	file:
CL_ExplosionSprite	cl_tent.c	/^void CL_ExplosionSprite(vec3_t pos) $/;"	f
CL_FakeExplosion	gl_rpart.c	/^void CL_FakeExplosion (vec3_t pos)$/;"	f
CL_FakeRocketLight	gl_rpart.c	/^void CL_FakeRocketLight(vec3_t org)$/;"	f
CL_FindModelNumbers	cl_parse.c	/^void CL_FindModelNumbers (void) $/;"	f
CL_FindReTrigger	tp_triggers.c	/^pcre_trigger_t *CL_FindReTrigger (char *name)$/;"	f
CL_FinishDownload	cl_parse.c	/^void CL_FinishDownload(qbool rename_files)$/;"	f
CL_FinishMove	cl_input.c	/^void CL_FinishMove (usercmd_t *cmd) {$/;"	f
CL_FixupModelNames	cl_main.c	/^static void CL_FixupModelNames (void) {$/;"	f	file:
CL_Fog_f	cl_main.c	/^void CL_Fog_f (void) $/;"	f
CL_ForwardToServer_f	cl_cmd.c	/^void CL_ForwardToServer_f (void) {$/;"	f
CL_Frame	cl_main.c	/^void CL_Frame (double time) $/;"	f
CL_FreeExplosion	cl_tent.c	/^void CL_FreeExplosion(explosion_t *ex)$/;"	f
CL_FullInfo_f	cl_cmd.c	/^void CL_FullInfo_f (void) {$/;"	f
CL_FullServerinfo_f	cl_cmd.c	/^void CL_FullServerinfo_f (void) {$/;"	f
CL_GenStatic	cl_parse.c	/^void CL_GenStatic (vec3_t origin) $/;"	f
CL_GetDemoLength	cl_demo.c	/^float CL_GetDemoLength(void)$/;"	f
CL_GetDemoMessage	cl_demo.c	/^qbool CL_GetDemoMessage (void)$/;"	f
CL_GetIsMVD	cl_demo.c	/^qbool CL_GetIsMVD(vfsfile_t *demfile)$/;"	f
CL_GetLastCmd	cl_cmd.c	/^usermainbuttons_t CL_GetLastCmd (void) { $/;"	f
CL_GetMessage	cl_main.c	/^qbool CL_GetMessage (void) $/;"	f
CL_GetNQDemoMessage	cl_nqdemo.c	/^static qbool CL_GetNQDemoMessage (void)$/;"	f	file:
CL_GetUnpackedDemoPath	cl_demo.c	/^static int CL_GetUnpackedDemoPath (char *play_path, char *unpacked_path, int unpacked_path_size)$/;"	f	file:
CL_Hash_f	cl_main.c	/^void CL_Hash_f(void)$/;"	f
CL_INPUT_WEAPONHIDE	cl_input.c	53;"	d	file:
CL_IncrLoop	cl_main.c	/^int CL_IncrLoop(int cview, int max)$/;"	f
CL_Init	cl_main.c	/^void CL_Init (void) $/;"	f
CL_InitCam	cl_cam.c	/^void CL_InitCam(void) $/;"	f
CL_InitCommands	cl_cmd.c	/^void CL_InitCommands (void) {$/;"	f
CL_InitEnts	cl_ents.c	/^void CL_InitEnts(void) {$/;"	f
CL_InitInput	cl_input.c	/^void CL_InitInput (void) {$/;"	f
CL_InitLocal	cl_main.c	/^void CL_InitLocal (void) $/;"	f
CL_InitPrediction	cl_pred.c	/^void CL_InitPrediction (void) {$/;"	f
CL_InitTEnts	cl_tent.c	/^void CL_InitTEnts (void)$/;"	f
CL_IsDemoExtension	cl_demo.c	/^qbool CL_IsDemoExtension(const char *filename)$/;"	f
CL_IsUploading	cl_parse.c	/^qbool CL_IsUploading(void)$/;"	f
CL_Join_f	cl_main.c	/^void CL_Join_f (void) $/;"	f
CL_KeyState	cl_input.c	/^float CL_KeyState (kbutton_t *key, qbool lookbutton) {$/;"	f
CL_LerpMove	cl_pred.c	/^static void CL_LerpMove (double msgtime)$/;"	f	file:
CL_LinkPacketEntities	cl_ents.c	/^void CL_LinkPacketEntities (void) $/;"	f
CL_LinkPacketEntities	cl_ents.c	/^void CL_LinkPacketEntities (void) {$/;"	f
CL_LinkPlayers	cl_ents.c	/^void CL_LinkPlayers (void) $/;"	f
CL_LinkProjectiles	cl_ents.c	/^void CL_LinkProjectiles (void) {$/;"	f
CL_MAX_EDICTS	common.h	45;"	d
CL_Macro_Conheight	cl_main.c	/^char *CL_Macro_Conheight(void)$/;"	f
CL_Macro_ConnectionType	cl_main.c	/^char *CL_Macro_ConnectionType(void) $/;"	f
CL_Macro_Conwidth	cl_main.c	/^char *CL_Macro_Conwidth(void) $/;"	f
CL_Macro_Demoplayback	cl_main.c	/^char *CL_Macro_Demoplayback(void) $/;"	f
CL_Macro_Demotime	cl_main.c	/^char *CL_Macro_Demotime(void)$/;"	f
CL_Macro_Rand	cl_main.c	/^char *CL_Macro_Rand(void)$/;"	f
CL_Macro_ServerIp	cl_main.c	/^char *CL_Macro_ServerIp(void) $/;"	f
CL_Macro_Serverstatus	cl_main.c	/^char *CL_Macro_Serverstatus(void)$/;"	f
CL_MakeActive	cl_main.c	/^void CL_MakeActive(void) $/;"	f
CL_MatchRecordDemo	cl_demo.c	/^static qbool CL_MatchRecordDemo(char *dir, char *name, qbool autorecord)$/;"	f	file:
CL_Messages_f	cl_parse.c	/^void CL_Messages_f(void)$/;"	f
CL_MinFrameTime	cl_main.c	/^static double CL_MinFrameTime (void) $/;"	f	file:
CL_Multiview	cl_main.c	/^void CL_Multiview(void)$/;"	f
CL_MuzzleFlash	cl_parse.c	/^void CL_MuzzleFlash (void) $/;"	f
CL_NewDlight	cl_ents.c	/^void CL_NewDlight (int key, vec3_t origin, float radius, float time, dlighttype_t type, int bubble) {$/;"	f
CL_NewDlightEx	cl_ents.c	/^void CL_NewDlightEx (int key, vec3_t origin, float radius, float time, customlight_t *l, int bubble) {$/;"	f
CL_NewTranslation	cl_parse.c	/^void CL_NewTranslation (int slot)$/;"	f
CL_NextPlayer	cl_main.c	/^int CL_NextPlayer(int plr)$/;"	f
CL_NextUpload	cl_parse.c	/^void CL_NextUpload(void)$/;"	f
CL_Observe_f	cl_main.c	/^void CL_Observe_f (void) $/;"	f
CL_PR_LoadProgs	pr_edict.c	/^void CL_PR_LoadProgs (void) {$/;"	f
CL_Packet_f	cl_cmd.c	/^void CL_Packet_f(void) {$/;"	f
CL_ParseBaseline	cl_parse.c	/^void CL_ParseBaseline (entity_state_t *es)$/;"	f
CL_ParseBeam	cl_tent.c	/^static void CL_ParseBeam(int type) $/;"	f	file:
CL_ParseChunkedDownload	cl_parse.c	/^void CL_ParseChunkedDownload(void)$/;"	f
CL_ParseClientdata	cl_parse.c	/^void CL_ParseClientdata (void) $/;"	f
CL_ParseDelta	cl_ents.c	/^void CL_ParseDelta (entity_state_t *from, entity_state_t *to, int bits) {$/;"	f
CL_ParseDownload	cl_parse.c	/^void CL_ParseDownload (void)$/;"	f
CL_ParseModellist	cl_parse.c	/^void CL_ParseModellist (qbool extended)$/;"	f
CL_ParsePacketEntities	cl_ents.c	/^void CL_ParsePacketEntities (qbool delta) $/;"	f
CL_ParseParticleEffect	cl_nqdemo.c	/^static void CL_ParseParticleEffect (void)$/;"	f	file:
CL_ParsePlayerinfo	cl_ents.c	/^void CL_ParsePlayerinfo (void) $/;"	f
CL_ParsePrint	cl_parse.c	/^void CL_ParsePrint (void)$/;"	f
CL_ParseProjectiles	cl_ents.c	/^void CL_ParseProjectiles (qbool indexed) $/;"	f
CL_ParseQizmoVoice	cl_parse.c	/^void CL_ParseQizmoVoice (void) $/;"	f
CL_ParseServerData	cl_parse.c	/^void CL_ParseServerData (void) $/;"	f
CL_ParseServerInfoChange	cl_parse.c	/^void CL_ParseServerInfoChange (void) $/;"	f
CL_ParseServerMessage	cl_parse.c	/^void CL_ParseServerMessage (void) $/;"	f
CL_ParseSoundlist	cl_parse.c	/^void CL_ParseSoundlist (void)$/;"	f
CL_ParseSpawnBaseline2	cl_parse.c	/^static void CL_ParseSpawnBaseline2 (void)$/;"	f	file:
CL_ParseStartSoundPacket	cl_parse.c	/^void CL_ParseStartSoundPacket(void)$/;"	f
CL_ParseStatic	cl_parse.c	/^void CL_ParseStatic (qbool extended)$/;"	f
CL_ParseStaticSound	cl_parse.c	/^void CL_ParseStaticSound (void)$/;"	f
CL_ParseStufftext	cl_parse.c	/^void CL_ParseStufftext (void) $/;"	f
CL_ParseTEnt	cl_tent.c	/^void CL_ParseTEnt (void) $/;"	f
CL_ParseVWepPrecache	cl_parse.c	/^void CL_ParseVWepPrecache (char *str)$/;"	f
CL_Parse_OOB_ChunkedDownload	cl_parse.c	/^void CL_Parse_OOB_ChunkedDownload(void)$/;"	f
CL_Parse_TE_BLOOD	cl_tent.c	/^static void CL_Parse_TE_BLOOD(void)$/;"	f	file:
CL_Parse_TE_EXPLOSION	cl_tent.c	/^static void CL_Parse_TE_EXPLOSION(vec3_t pos)$/;"	f	file:
CL_Parse_TE_GUNSHOT	cl_tent.c	/^static void CL_Parse_TE_GUNSHOT(void)$/;"	f	file:
CL_Parse_TE_LIGHTNINGBLOOD	cl_tent.c	/^static void CL_Parse_TE_LIGHTNINGBLOOD(void)$/;"	f	file:
CL_Parse_TE_SPIKE	cl_tent.c	/^static void CL_Parse_TE_SPIKE(vec3_t pos)$/;"	f	file:
CL_Parse_TE_SUPERSPIKE	cl_tent.c	/^static void CL_Parse_TE_SUPERSPIKE(vec3_t pos)$/;"	f	file:
CL_Parse_TE_TAREXPLOSION	cl_tent.c	/^static void CL_Parse_TE_TAREXPLOSION(vec3_t pos)$/;"	f	file:
CL_Parse_TE_TELEPORT	cl_tent.c	/^static void CL_Parse_TE_TELEPORT(vec3_t pos)$/;"	f	file:
CL_Parse_TE_WIZSPIKE	cl_tent.c	/^static void CL_Parse_TE_WIZSPIKE(vec3_t pos)$/;"	f	file:
CL_Pause_f	cl_cmd.c	/^void CL_Pause_f (void) {$/;"	f
CL_Play_f	cl_demo.c	/^void CL_Play_f (void)$/;"	f
CL_PlayerEnterSlot	cl_parse.c	/^void CL_PlayerEnterSlot(player_info_t *player) $/;"	f
CL_PlayerLeaveSlot	cl_parse.c	/^void CL_PlayerLeaveSlot(player_info_t *player) $/;"	f
CL_PredictMove	cl_pred.c	/^void CL_PredictMove (void) {$/;"	f
CL_PredictUsercmd	cl_pred.c	/^void CL_PredictUsercmd (player_state_t *from, player_state_t *to, usercmd_t *u) {$/;"	f
CL_Prespawn	cl_parse.c	/^void CL_Prespawn (void)$/;"	f
CL_PrintQStatReply	cl_cmd.c	/^void CL_PrintQStatReply (char *s) {$/;"	f
CL_ProbeDemo	cl_demo.c	/^qbool CL_ProbeDemo(vfsfile_t *demfile, demoprobe_parse_type_t probetype, float *demotime)$/;"	f
CL_ProcessServerInfo	cl_parse.c	/^void CL_ProcessServerInfo (void) $/;"	f
CL_ProcessUserInfo	cl_parse.c	/^void CL_ProcessUserInfo (int slot, player_info_t *player, char *key) $/;"	f
CL_ProxyEnter	cl_parse.c	/^void CL_ProxyEnter (void) $/;"	f
CL_QStat_f	cl_cmd.c	/^void CL_QStat_f (void)$/;"	f
CL_QTVList_f	cl_demo.c	/^void CL_QTVList_f (void)$/;"	f
CL_QTVPlay	cl_demo.c	/^void CL_QTVPlay (vfsfile_t *newf, void *buf, int buflen)$/;"	f
CL_QTVPlay_f	cl_demo.c	/^void CL_QTVPlay_f (void)$/;"	f
CL_QTVPoll	cl_demo.c	/^void CL_QTVPoll (void)$/;"	f
CL_QWURL_f	cl_main.c	/^void CL_QWURL_f (void)$/;"	f
CL_Quit_f	cl_cmd.c	/^void CL_Quit_f (void) {$/;"	f
CL_RE_Trigger_Delete_f	tp_triggers.c	/^static void CL_RE_Trigger_Delete_f (void)$/;"	f	file:
CL_RE_Trigger_Disable_f	tp_triggers.c	/^static void CL_RE_Trigger_Disable_f (void)$/;"	f	file:
CL_RE_Trigger_Enable_f	tp_triggers.c	/^static void CL_RE_Trigger_Enable_f (void)$/;"	f	file:
CL_RE_Trigger_Match_f	tp_triggers.c	/^static void CL_RE_Trigger_Match_f (void)$/;"	f	file:
CL_RE_Trigger_Options_f	tp_triggers.c	/^static void CL_RE_Trigger_Options_f (void)$/;"	f	file:
CL_RE_Trigger_ResetLasttime	tp_triggers.c	/^void CL_RE_Trigger_ResetLasttime (void)$/;"	f
CL_RE_Trigger_f	tp_triggers.c	/^static void CL_RE_Trigger_f (void)$/;"	f	file:
CL_R_DrawViewModel_f	cl_cmd.c	/^void CL_R_DrawViewModel_f (void) {$/;"	f
CL_Rcon_f	cl_cmd.c	/^void CL_Rcon_f (void) {$/;"	f
CL_ReadPackets	cl_main.c	/^void CL_ReadPackets (void) $/;"	f
CL_Reconnect_f	cl_main.c	/^void CL_Reconnect_f (void) $/;"	f
CL_Record_f	cl_demo.c	/^void CL_Record_f (void)$/;"	f
CL_RegisterQWURLProtocol_f	cl_main.c	/^void CL_RegisterQWURLProtocol_f(void)$/;"	f
CL_RequestADownloadChunk	cl_parse.c	/^int CL_RequestADownloadChunk(void)$/;"	f
CL_RequestNextDownload	cl_parse.c	/^void CL_RequestNextDownload (void) $/;"	f
CL_Rotate_f	cl_input.c	/^void CL_Rotate_f (void) {$/;"	f
CL_Say_f	cl_cmd.c	/^void CL_Say_f (void) {$/;"	f
CL_SearchForReTriggers	tp_triggers.c	/^qbool CL_SearchForReTriggers (const char *s, unsigned trigger_type)$/;"	f
CL_SendChunkDownloadReq	cl_parse.c	/^void CL_SendChunkDownloadReq(void)$/;"	f
CL_SendClientCommand	cl_input.c	/^void CL_SendClientCommand(qbool reliable, char *format, ...)$/;"	f
CL_SendCmd	cl_input.c	/^void CL_SendCmd (void) {$/;"	f
CL_SendConnectPacket	cl_main.c	/^static void CL_SendConnectPacket($/;"	f	file:
CL_SendToServer	cl_main.c	/^void CL_SendToServer (void) $/;"	f
CL_Serverinfo_f	cl_cmd.c	/^void CL_Serverinfo_f (void) {$/;"	f
CL_SetInfo	cl_parse.c	/^void CL_SetInfo (void) $/;"	f
CL_SetInfo_f	cl_cmd.c	/^void CL_SetInfo_f (void) {$/;"	f
CL_SetSolidEntities	cl_ents.c	/^void CL_SetSolidEntities (void)$/;"	f
CL_SetSolidPlayers	cl_ents.c	/^void CL_SetSolidPlayers (int playernum)$/;"	f
CL_SetStat	cl_parse.c	/^void CL_SetStat (int stat, int value)$/;"	f
CL_SetUpPlayerPrediction	cl_ents.c	/^void CL_SetUpPlayerPrediction(qbool dopred)$/;"	f
CL_SetupPacketEntity	cl_ents.c	/^void CL_SetupPacketEntity (int number, entity_state_t *state, qbool changed) {$/;"	f
CL_Shutdown	cl_main.c	/^void CL_Shutdown (void) $/;"	f
CL_StartFileUpload	cl_parse.c	/^void CL_StartFileUpload (void)$/;"	f
CL_StartUpload	cl_parse.c	/^void CL_StartUpload (byte *data, int size)$/;"	f
CL_StopPlayback	cl_demo.c	/^void CL_StopPlayback (void)$/;"	f
CL_StopRecording	cl_demo.c	/^static void CL_StopRecording (void)$/;"	f	file:
CL_StopUpload	cl_parse.c	/^void CL_StopUpload(void)$/;"	f
CL_Stop_f	cl_demo.c	/^void CL_Stop_f (void)$/;"	f
CL_SupportedFTEExtensions	cl_main.c	/^unsigned int CL_SupportedFTEExtensions (void)$/;"	f
CL_TCPConnect_f	cl_main.c	/^void CL_TCPConnect_f (void)$/;"	f
CL_TimeDemo_f	cl_demo.c	/^void CL_TimeDemo_f (void)$/;"	f
CL_TraceLine	collision.c	/^float CL_TraceLine (vec3_t start, vec3_t end, vec3_t impact, vec3_t normal)$/;"	f
CL_Track	cl_cam.c	/^void CL_Track (int trackview)$/;"	f
CL_TrackMV1_f	cl_cam.c	/^void CL_TrackMV1_f() $/;"	f
CL_TrackMV2_f	cl_cam.c	/^void CL_TrackMV2_f() $/;"	f
CL_TrackMV3_f	cl_cam.c	/^void CL_TrackMV3_f() $/;"	f
CL_TrackMV4_f	cl_cam.c	/^void CL_TrackMV4_f() $/;"	f
CL_TrackTeam_f	cl_cam.c	/^void CL_TrackTeam_f(void) $/;"	f
CL_Track_f	cl_cam.c	/^void CL_Track_f(void) $/;"	f
CL_Trackkiller_f	cl_cam.c	/^void CL_Trackkiller_f(void)$/;"	f
CL_TransmitModelCrc	cl_parse.c	/^static void CL_TransmitModelCrc (int index, char *info_key)$/;"	f	file:
CL_UpdateBeams	cl_tent.c	/^void CL_UpdateBeams(void) $/;"	f
CL_UpdateBlurs	vx_motiontrail.c	/^void CL_UpdateBlurs (void) $/;"	f
CL_UpdateCaption	cl_main.c	/^void CL_UpdateCaption(qbool force)$/;"	f
CL_UpdateExplosions	cl_tent.c	/^void CL_UpdateExplosions (void) {$/;"	f
CL_UpdateTEnts	cl_tent.c	/^void CL_UpdateTEnts (void) {$/;"	f
CL_UpdateUserinfo	cl_parse.c	/^void CL_UpdateUserinfo (void) $/;"	f
CL_UserInfo_f	cl_cmd.c	/^void CL_UserInfo_f (void) {$/;"	f
CL_User_f	cl_cmd.c	/^void CL_User_f (void) {$/;"	f
CL_Userdir_f	cl_cmd.c	/^void CL_Userdir_f (void)$/;"	f
CL_UserinfoChanged	cl_main.c	/^void CL_UserinfoChanged (char *key, char *string) $/;"	f
CL_Users_f	cl_cmd.c	/^void CL_Users_f (void) {$/;"	f
CL_Version_f	version.c	/^void CL_Version_f (void)$/;"	f
CL_Windows_f	cl_cmd.c	/^void CL_Windows_f (void) {$/;"	f
CL_WriteConfig	cl_cmd.c	/^void CL_WriteConfig (char *name) {$/;"	f
CL_WriteConfig_f	cl_cmd.c	/^void CL_WriteConfig_f (void) {$/;"	f
CL_WriteConfiguration	cl_cmd.c	/^void CL_WriteConfiguration (void) {$/;"	f
CL_WriteDemoCmd	cl_demo.c	/^void CL_WriteDemoCmd (usercmd_t *pcmd)$/;"	f
CL_WriteDemoEntities	cl_demo.c	/^void CL_WriteDemoEntities (void)$/;"	f
CL_WriteDemoMessage	cl_demo.c	/^void CL_WriteDemoMessage (sizebuf_t *msg)$/;"	f
CL_WriteDemoPimpMessage	cl_demo.c	/^static void CL_WriteDemoPimpMessage(void)$/;"	f	file:
CL_WriteSetDemoMessage	cl_demo.c	/^static void CL_WriteSetDemoMessage (void)$/;"	f	file:
CL_WriteStartupData	cl_demo.c	/^static void CL_WriteStartupData (void)$/;"	f	file:
CL_WriteStartupDemoMessage	cl_demo.c	/^static void CL_WriteStartupDemoMessage (sizebuf_t *msg, int seq)$/;"	f	file:
CL_Z_Ext_List_f	cl_cmd.c	/^void CL_Z_Ext_List_f (void)$/;"	f
CMDLINES	keys.c	60;"	d	file:
CMD_HASHPOOL_SIZE	cmd.c	952;"	d	file:
CMPRESULT_eq	parser.c	/^	CMPRESULT_eq,$/;"	e	enum:__anon54	file:
CMPRESULT_ge	parser.c	/^	CMPRESULT_ge,$/;"	e	enum:__anon54	file:
CMPRESULT_gt	parser.c	/^	CMPRESULT_gt$/;"	e	enum:__anon54	file:
CMPRESULT_le	parser.c	/^	CMPRESULT_le,$/;"	e	enum:__anon54	file:
CMPRESULT_lt	parser.c	/^	CMPRESULT_lt,$/;"	e	enum:__anon54	file:
CMPRESULT_ne	parser.c	/^	CMPRESULT_ne,$/;"	e	enum:__anon54	file:
CMP_LZSS	wad.h	32;"	d
CMP_NONE	wad.h	31;"	d
CM_ANGLE1	protocol.h	231;"	d
CM_ANGLE2	protocol.h	238;"	d
CM_ANGLE3	protocol.h	232;"	d
CM_BUTTONS	protocol.h	236;"	d
CM_BuildPHS	cmodel.c	/^static void CM_BuildPHS (void)$/;"	f	file:
CM_BuildPVS	cmodel.c	/^static void CM_BuildPVS (lump_t *lump_vis, lump_t *lump_leafs)$/;"	f	file:
CM_EntityString	cmodel.c	/^char *CM_EntityString (void)$/;"	f
CM_FORWARD	protocol.h	233;"	d
CM_FatPVS	cmodel.c	/^byte *CM_FatPVS (vec3_t org)$/;"	f
CM_FindTouchedLeafs	cmodel.c	/^int CM_FindTouchedLeafs (const vec3_t mins, const vec3_t maxs, int leafs[], int maxleafs, int headnode, int *topnode)$/;"	f
CM_HullForBox	cmodel.c	/^hull_t *CM_HullForBox (vec3_t mins, vec3_t maxs)$/;"	f
CM_HullPointContents	cmodel.c	/^int CM_HullPointContents (hull_t *hull, int num, vec3_t p)$/;"	f
CM_HullTrace	cmodel.c	/^trace_t CM_HullTrace (hull_t *hull, vec3_t start, vec3_t end)$/;"	f
CM_IMPULSE	protocol.h	237;"	d
CM_Init	cmodel.c	/^void CM_Init (void)$/;"	f
CM_InitBoxHull	cmodel.c	/^static void CM_InitBoxHull (void)$/;"	f	file:
CM_InlineModel	cmodel.c	/^cmodel_t *CM_InlineModel (char *name)$/;"	f
CM_InvalidateMap	cmodel.c	/^void CM_InvalidateMap (void)$/;"	f
CM_LeafAmbientLevel	cmodel.c	/^int	CM_LeafAmbientLevel (const cleaf_t *leaf, int ambient_channel)$/;"	f
CM_LeafPHS	cmodel.c	/^byte *CM_LeafPHS (const cleaf_t *leaf)$/;"	f
CM_LeafPVS	cmodel.c	/^byte *CM_LeafPVS (const cleaf_t *leaf)$/;"	f
CM_Leafnum	cmodel.c	/^int CM_Leafnum (const cleaf_t *leaf)$/;"	f
CM_LoadClipnodes	cmodel.c	/^static void CM_LoadClipnodes (lump_t *l)$/;"	f	file:
CM_LoadEntities	cmodel.c	/^static void CM_LoadEntities (lump_t *l)$/;"	f	file:
CM_LoadLeafs	cmodel.c	/^static void CM_LoadLeafs (lump_t *l)$/;"	f	file:
CM_LoadMap	cmodel.c	/^cmodel_t *CM_LoadMap (char *name, qbool clientload, unsigned *checksum, unsigned *checksum2)$/;"	f
CM_LoadNodes	cmodel.c	/^static void CM_LoadNodes (lump_t *l)$/;"	f	file:
CM_LoadPlanes	cmodel.c	/^static void CM_LoadPlanes (lump_t *l)$/;"	f	file:
CM_LoadSubmodels	cmodel.c	/^static void CM_LoadSubmodels (lump_t *l)$/;"	f	file:
CM_MSEC	com_msg.c	472;"	d	file:
CM_MakeHull0	cmodel.c	/^static void CM_MakeHull0 (void)$/;"	f	file:
CM_NumInlineModels	cmodel.c	/^int	CM_NumInlineModels (void)$/;"	f
CM_PointInLeaf	cmodel.c	/^cleaf_t *CM_PointInLeaf (const vec3_t p)$/;"	f
CM_SIDE	protocol.h	234;"	d
CM_SetParent	cmodel.c	/^static void CM_SetParent (cnode_t *node, cnode_t *parent)$/;"	f	file:
CM_UP	protocol.h	235;"	d
COLORED	tp_msgs.c	41;"	d	file:
COLORNAME	settings_page.c	59;"	d	file:
COLOR_ALPHA	r_draw.c	1744;"	d	file:
COLOR_CHECK	utils.c	78;"	d	file:
COLOR_TO_RGBA	common_draw.c	/^byte* COLOR_TO_RGBA(color_t i, byte rgba[4]) $/;"	f
COLOR_WHITE	common_draw.c	/^const int COLOR_WHITE = 0xFFFFFFFF;$/;"	v
COLUMNWIDTH	keys.c	321;"	d	file:
COL_DATE	EX_FileList.c	33;"	d	file:
COL_FRAGLIMIT	EX_browser.h	22;"	d
COL_GAMEDIR	EX_browser.h	20;"	d
COL_IP	EX_browser.h	17;"	d
COL_MAP	EX_browser.h	19;"	d
COL_NAME	EX_browser.h	18;"	d
COL_PING	EX_browser.h	16;"	d
COL_PLAYERS	EX_browser.h	21;"	d
COL_SIZE	EX_FileList.c	32;"	d	file:
COL_TIME	EX_FileList.c	34;"	d	file:
COL_TIMELIMIT	EX_browser.h	23;"	d
COM_AddParm	common.c	/^void COM_AddParm (char *parm)$/;"	f
COM_Argc	common.c	/^int COM_Argc (void)$/;"	f
COM_Argv	common.c	/^char *COM_Argv (int arg)$/;"	f
COM_BlockSequenceCRCByte	common.c	/^byte COM_BlockSequenceCRCByte (byte *base, int length, int sequence) {$/;"	f
COM_CheckArgsForPlayableFiles	common.c	/^qbool COM_CheckArgsForPlayableFiles(char *commandbuf_out, unsigned int commandbuf_size)$/;"	f
COM_CheckParm	common.c	/^int COM_CheckParm (char *parm)$/;"	f
COM_CheckParmOffset	common.c	/^int COM_CheckParmOffset (char *parm, int offset)$/;"	f
COM_ClearArgv	common.c	/^void COM_ClearArgv (int arg)$/;"	f
COM_DefaultExtension	common.c	/^void COM_DefaultExtension (char *path, char *extension)$/;"	f
COM_FileBase	common.c	/^void COM_FileBase (const char *in, char *out)$/;"	f
COM_FileExists	common.c	/^qbool COM_FileExists (char *path)$/;"	f
COM_FileExtension	common.c	/^char *COM_FileExtension (const char *in)$/;"	f
COM_FitPath	common.c	/^char *COM_FitPath(char *dest, int destination_size, char *src, int size_to_fit)$/;"	f
COM_ForceExtension	common.c	/^void COM_ForceExtension (char *path, char *extension)$/;"	f
COM_ForceExtensionEx	common.c	/^void COM_ForceExtensionEx (char *path, char *extension, size_t path_size)$/;"	f
COM_GetFloatTokens	common.c	/^int COM_GetFloatTokens(const char *s, float *fl_array, int fl_array_size)$/;"	f
COM_GetTempDir	common.c	/^int COM_GetTempDir(char *buf, int bufsize)$/;"	f
COM_GetUniqueTempFilename	common.c	/^int COM_GetUniqueTempFilename (char *path, char *filename, int filename_size, qbool verify_exists)$/;"	f
COM_Init	common.c	/^void COM_Init (void)$/;"	f
COM_InitArgv	common.c	/^void COM_InitArgv (int argc, char **argv)$/;"	f
COM_Parse	common.c	/^char *COM_Parse (char *data)$/;"	f
COM_ParseIPCData	common.c	/^void COM_ParseIPCData(const char *buf, unsigned int bufsize)$/;"	f
COM_SkipPath	common.c	/^const char *COM_SkipPath (const char *pathname)$/;"	f
COM_SkipPathWritable	common.c	/^char *COM_SkipPathWritable (char *pathname)$/;"	f
COM_StoreOriginalCmdline	common.c	/^void COM_StoreOriginalCmdline (int argc, char **argv)$/;"	f
COM_StripExtension	common.c	/^void COM_StripExtension (const char *in, char *out)$/;"	f
CONFIG_MAX_COL	config_manager.c	117;"	d	file:
CONFIG_WIDTH	config_manager.c	651;"	d	file:
CONFIRM_TEXT_DEFAULT	EX_browser.c	295;"	d	file:
CONSOLE_HELP_MARGIN	help.c	30;"	d	file:
CONTENTS_EMPTY	bspfile.h	137;"	d
CONTENTS_LAVA	bspfile.h	141;"	d
CONTENTS_SKY	bspfile.h	142;"	d
CONTENTS_SLIME	bspfile.h	140;"	d
CONTENTS_SOLID	bspfile.h	138;"	d
CONTENTS_WATER	bspfile.h	139;"	d
CONTROL_ADD_EVENTHANDLER	ez_controls.h	321;"	d
CONTROL_EVENT_HANDLER_CALL	ez_controls.h	428;"	d
CONTROL_EVENT_HANDLER_CALL	ez_controls.h	452;"	d
CONTROL_IS_CONTAINED	ez_controls.h	350;"	d
CONTROL_NEEDS	in_mac.c	63;"	d	file:
CONTROL_RAISE_EVENT	ez_controls.h	357;"	d
CONTROL_RAISE_EVENT	ez_controls.h	371;"	d
CONTROL_REGISTER_EVENT	ez_controls.h	482;"	d
CONTROL_REMOVE_EVENTHANDLER	ez_controls.h	330;"	d
CONTTYPE	vfs_tar.h	34;"	d
CORONA_ALPHA	vx_coronas.c	34;"	d	file:
CORONA_SCALE	vx_coronas.c	33;"	d	file:
CP	mgraph.h	/^	point_t			CP;				\/* Graphics pen position			*\/$/;"	m	struct:__anon216
CPU_HAVE_3DNOW	cpu.h	31;"	d
CPU_HAVE_3DNOWEXT	cpu.h	32;"	d
CPU_HAVE_HT	cpu.h	36;"	d
CPU_HAVE_MMXEXT	cpu.h	30;"	d
CPU_HAVE_SSE	cpu.h	33;"	d
CPU_HAVE_SSE2	cpu.h	34;"	d
CPU_HAVE_SSE3	cpu.h	35;"	d
CPU_IS_AMD	cpu.h	28;"	d
CPU_IS_INTEL	cpu.h	27;"	d
CPU_Info	cpu.c	/^void CPU_Info (void)$/;"	f
CPU_Init	cpu.c	/^void CPU_Init (void)$/;"	f
CPY_HAVE_MMX	cpu.h	29;"	d
CP_Bind	console.c	/^static void CP_Bind(cp_texture_t *cptex, int *texture)$/;"	f	file:
CP_Init	console.c	/^void CP_Init (void) {$/;"	f
CPageViewer_Back	Ctrl_PageViewer.c	/^void CPageViewer_Back(CPageViewer_t *viewer, int level)$/;"	f
CPageViewer_Clear	Ctrl_PageViewer.c	/^void CPageViewer_Clear(CPageViewer_t *viewer)$/;"	f
CPageViewer_Draw	Ctrl_PageViewer.c	/^void CPageViewer_Draw(CPageViewer_t *viewer, int x, int y, int w, int h)$/;"	f
CPageViewer_Free	Ctrl_PageViewer.c	/^void CPageViewer_Free(CPageViewer_t *viewer)$/;"	f
CPageViewer_Go	Ctrl_PageViewer.c	/^void CPageViewer_Go(CPageViewer_t *viewer, char *url, xml_document_t *doc)$/;"	f
CPageViewer_GoUrl	Ctrl_PageViewer.c	/^void CPageViewer_GoUrl(CPageViewer_t *viewer, char *url)$/;"	f
CPageViewer_Init	Ctrl_PageViewer.c	/^void CPageViewer_Init(CPageViewer_t *viewer)$/;"	f
CPageViewer_Key	Ctrl_PageViewer.c	/^qbool CPageViewer_Key(CPageViewer_t *viewer, int key)$/;"	f
CPageViewer_New	Ctrl_PageViewer.c	/^CPageViewer_t * CPageViewer_New(void)$/;"	f
CPageViewer_page_s	Ctrl_PageViewer.h	/^typedef struct CPageViewer_page_s$/;"	s
CPageViewer_page_t	Ctrl_PageViewer.h	/^CPageViewer_page_t;$/;"	t	typeref:struct:CPageViewer_page_s
CPageViewer_s	Ctrl_PageViewer.h	/^typedef struct CPageViewer_s$/;"	s
CPageViewer_t	Ctrl_PageViewer.h	/^CPageViewer_t;$/;"	t	typeref:struct:CPageViewer_s
CRC_Block	crc.c	/^unsigned short CRC_Block (byte *start, unsigned int count)$/;"	f
CRC_INIT_VALUE	crc.c	29;"	d	file:
CRC_Init	crc.c	/^void CRC_Init(unsigned short *crcvalue)$/;"	f
CRC_ProcessByte	crc.c	/^void CRC_ProcessByte(unsigned short *crcvalue, byte data)$/;"	f
CRC_TEXT	auth.c	85;"	d	file:
CRC_Value	crc.c	/^unsigned short CRC_Value(unsigned short crcvalue)$/;"	f
CRC_XOR_VALUE	crc.c	30;"	d	file:
CROSSHAIR_IMAGE	gl_draw.c	75;"	d	file:
CROSSHAIR_NONE	gl_draw.c	73;"	d	file:
CROSSHAIR_TXT	gl_draw.c	74;"	d	file:
CSHIFT_BONUS	client.h	210;"	d
CSHIFT_CONTENTS	client.h	208;"	d
CSHIFT_DAMAGE	client.h	209;"	d
CSHIFT_POWERUP	client.h	211;"	d
CS_COLOR_A	cam_new.c	16;"	d	file:
CS_COLOR_B	cam_new.c	15;"	d	file:
CS_COLOR_G	cam_new.c	14;"	d	file:
CS_COLOR_R	cam_new.c	13;"	d	file:
CS_ENABLE	cam_new.c	18;"	d	file:
CS_SHOW	cam_new.c	17;"	d	file:
CS_STARTTIME	cam_new.c	11;"	d	file:
CS_STOPTIME	cam_new.c	12;"	d	file:
CT_Demo_Browser_Draw	menu_demo.c	/^void CT_Demo_Browser_Draw(int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page)$/;"	f
CT_Demo_Browser_Key	menu_demo.c	/^int CT_Demo_Browser_Key(int key, CTab_t *tab, CTabPage_t *page)$/;"	f
CT_Demo_Browser_Mouse_Event	menu_demo.c	/^qbool CT_Demo_Browser_Mouse_Event(const mouse_state_t *ms)$/;"	f
CT_Demo_Entry_Draw	menu_demo.c	/^void CT_Demo_Entry_Draw(int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page)$/;"	f
CT_Demo_Entry_Key	menu_demo.c	/^int CT_Demo_Entry_Key(int key, CTab_t *tab, CTabPage_t *page)$/;"	f
CT_Demo_Options_Draw	menu_demo.c	/^void CT_Demo_Options_Draw(int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page)$/;"	f
CT_Demo_Options_Key	menu_demo.c	/^int CT_Demo_Options_Key(int key, CTab_t *tab, CTabPage_t *page)$/;"	f
CT_Demo_Options_Mouse_Event	menu_demo.c	/^qbool CT_Demo_Options_Mouse_Event(const mouse_state_t *ms)$/;"	f
CT_Demo_Playlist_Draw	menu_demo.c	/^void CT_Demo_Playlist_Draw(int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page)$/;"	f
CT_Demo_Playlist_Key	menu_demo.c	/^int CT_Demo_Playlist_Key(int key, CTab_t *tab, CTabPage_t *page)$/;"	f
CT_Opt_Binds_Draw	menu_options.c	/^void CT_Opt_Binds_Draw (int x2, int y2, int w, int h, CTab_t *tab, CTabPage_t *page) {$/;"	f
CT_Opt_Binds_Key	menu_options.c	/^int CT_Opt_Binds_Key (int k, CTab_t *tab, CTabPage_t *page) {$/;"	f
CT_Opt_Binds_Mouse_Event	menu_options.c	/^qbool CT_Opt_Binds_Mouse_Event(const mouse_state_t *ms)$/;"	f
CT_Opt_Config_Draw	menu_options.c	/^void CT_Opt_Config_Draw(int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page)$/;"	f
CT_Opt_Config_Key	menu_options.c	/^int CT_Opt_Config_Key(int key, CTab_t *tab, CTabPage_t *page)$/;"	f
CT_Opt_Config_Mouse_Event	menu_options.c	/^qbool CT_Opt_Config_Mouse_Event(const mouse_state_t *ms)$/;"	f
CT_Opt_Demo_Spec_Draw	menu_options.c	/^void CT_Opt_Demo_Spec_Draw (int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page) {$/;"	f
CT_Opt_Demo_Spec_Key	menu_options.c	/^int CT_Opt_Demo_Spec_Key (int k, CTab_t *tab, CTabPage_t *page) {$/;"	f
CT_Opt_Demo_Spec_Mouse_Event	menu_options.c	/^qbool CT_Opt_Demo_Spec_Mouse_Event(const mouse_state_t *ms)$/;"	f
CT_Opt_FPS_Draw	menu_options.c	/^void CT_Opt_FPS_Draw (int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page)$/;"	f
CT_Opt_FPS_Key	menu_options.c	/^int CT_Opt_FPS_Key (int k, CTab_t *tab, CTabPage_t *page) {$/;"	f
CT_Opt_FPS_Mouse_Event	menu_options.c	/^qbool CT_Opt_FPS_Mouse_Event(const mouse_state_t *ms)$/;"	f
CT_Opt_HUD_Draw	menu_options.c	/^void CT_Opt_HUD_Draw (int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page) {$/;"	f
CT_Opt_HUD_Key	menu_options.c	/^int CT_Opt_HUD_Key (int k, CTab_t *tab, CTabPage_t *page) {$/;"	f
CT_Opt_HUD_Mouse_Event	menu_options.c	/^qbool CT_Opt_HUD_Mouse_Event(const mouse_state_t *ms)$/;"	f
CT_Opt_Player_Draw	menu_options.c	/^void CT_Opt_Player_Draw (int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page) {$/;"	f
CT_Opt_Player_Key	menu_options.c	/^int CT_Opt_Player_Key (int k, CTab_t *tab, CTabPage_t *page) {$/;"	f
CT_Opt_Player_Mouse_Event	menu_options.c	/^qbool CT_Opt_Player_Mouse_Event(const mouse_state_t *ms)$/;"	f
CT_Opt_Settings_Draw	menu_options.c	/^void CT_Opt_Settings_Draw (int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page) {$/;"	f
CT_Opt_Settings_Key	menu_options.c	/^int CT_Opt_Settings_Key (int k, CTab_t *tab, CTabPage_t *page) {$/;"	f
CT_Opt_Settings_Mouse_Event	menu_options.c	/^qbool CT_Opt_Settings_Mouse_Event(const mouse_state_t *ms)$/;"	f
CT_Opt_Video_Draw	menu_options.c	/^void CT_Opt_Video_Draw (int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page) {$/;"	f
CT_Opt_Video_Key	menu_options.c	/^int CT_Opt_Video_Key (int key, CTab_t *tab, CTabPage_t *page) {$/;"	f
CT_Opt_Video_Mouse_Event	menu_options.c	/^qbool CT_Opt_Video_Mouse_Event(const mouse_state_t *ms)$/;"	f
CTabPage_DrawType	Ctrl_Tab.h	/^typedef void (*CTabPage_DrawType)(int x, int y, int w, int h, struct CTab_s *, struct CTabPage_s *);$/;"	t
CTabPage_Handlers_s	Ctrl_Tab.h	/^typedef struct CTabPage_Handlers_s$/;"	s
CTabPage_Handlers_t	Ctrl_Tab.h	/^CTabPage_Handlers_t;$/;"	t	typeref:struct:CTabPage_Handlers_s
CTabPage_KeyType	Ctrl_Tab.h	/^typedef int  (*CTabPage_KeyType)(int key, struct CTab_s *, struct CTabPage_s *);$/;"	t
CTabPage_MouseMoveType	Ctrl_Tab.h	/^typedef qbool (*CTabPage_MouseMoveType) (const mouse_state_t * ms);$/;"	t
CTabPage_OnShowType	Ctrl_Tab.h	/^typedef void (*CTabPage_OnShowType) (void);$/;"	t
CTabPage_s	Ctrl_Tab.h	/^typedef struct CTabPage_s$/;"	s
CTabPage_t	Ctrl_Tab.h	/^CTabPage_t;$/;"	t	typeref:struct:CTabPage_s
CTab_AddPage	Ctrl_Tab.c	/^void CTab_AddPage(CTab_t *tab, const char *name, int id, const CTabPage_Handlers_t *handlers)$/;"	f
CTab_Clear	Ctrl_Tab.c	/^void CTab_Clear(CTab_t *tab)$/;"	f
CTab_Draw	Ctrl_Tab.c	/^void CTab_Draw(CTab_t *tab, int x, int y, int w, int h)$/;"	f
CTab_Draw_PageLinks	Ctrl_Tab.c	/^static int CTab_Draw_PageLinks(CTab_t *tab, int x, int y, int w, int h)$/;"	f	file:
CTab_Free	Ctrl_Tab.c	/^void CTab_Free(CTab_t *tab)$/;"	f
CTab_GetCurrent	Ctrl_Tab.c	/^CTabPage_t * CTab_GetCurrent(CTab_t *tab)$/;"	f
CTab_GetCurrentId	Ctrl_Tab.c	/^int CTab_GetCurrentId(CTab_t *tab)$/;"	f
CTab_GetCurrentPage	Ctrl_Tab.c	/^char * CTab_GetCurrentPage(CTab_t *tab)$/;"	f
CTab_Init	Ctrl_Tab.c	/^void CTab_Init(CTab_t *tab)$/;"	f
CTab_Key	Ctrl_Tab.c	/^int CTab_Key(CTab_t *tab, int key)$/;"	f
CTab_Mouse_Event	Ctrl_Tab.c	/^qbool CTab_Mouse_Event(CTab_t *tab, const mouse_state_t *ms)$/;"	f
CTab_Navi_Mouse_Event	Ctrl_Tab.c	/^static qbool CTab_Navi_Mouse_Event (CTab_t *tab, const mouse_state_t *ms) $/;"	f	file:
CTab_New	Ctrl_Tab.c	/^CTab_t * CTab_New(void)$/;"	f
CTab_SetCurrentId	Ctrl_Tab.c	/^void CTab_SetCurrentId(CTab_t *tab, int id)$/;"	f
CTab_s	Ctrl_Tab.h	/^typedef struct CTab_s$/;"	s
CTab_t	Ctrl_Tab.h	/^CTab_t;$/;"	t	typeref:struct:CTab_s
CURCHAR	parser.c	89;"	d	file:
CURRVIEW	cl_main.c	/^int		CURRVIEW;					\/\/ The current view being drawn in multiview mode.$/;"	v
CVAR_ARCHIVE	cvar.h	27;"	d
CVAR_COLOR	cvar.h	41;"	d
CVAR_GROUPS_DEFINE_VARIABLES	cvar.c	390;"	d	file:
CVAR_GROUPS_DEFINE_VARIABLES	cvar.c	392;"	d	file:
CVAR_GROUP_BLEND	cvar_groups.h	36;"	d
CVAR_GROUP_CHAT	cvar_groups.h	63;"	d
CVAR_GROUP_COMMUNICATION	cvar_groups.h	66;"	d
CVAR_GROUP_CONFIG	cvar_groups.h	69;"	d
CVAR_GROUP_CONSOLE	cvar_groups.h	64;"	d
CVAR_GROUP_CROSSHAIR	cvar_groups.h	38;"	d
CVAR_GROUP_DEMO	cvar_groups.h	33;"	d
CVAR_GROUP_EYECANDY	cvar_groups.h	62;"	d
CVAR_GROUP_HELP_BROWSER	cvar_groups.h	73;"	d
CVAR_GROUP_HUD	cvar_groups.h	70;"	d
CVAR_GROUP_INPUT_JOY	cvar_groups.h	43;"	d
CVAR_GROUP_INPUT_KEYBOARD	cvar_groups.h	45;"	d
CVAR_GROUP_INPUT_MISC	cvar_groups.h	42;"	d
CVAR_GROUP_INPUT_MOUSE	cvar_groups.h	44;"	d
CVAR_GROUP_ITEM_NAMES	cvar_groups.h	30;"	d
CVAR_GROUP_ITEM_NEED	cvar_groups.h	29;"	d
CVAR_GROUP_LIGHTING	cvar_groups.h	60;"	d
CVAR_GROUP_MATCH_TOOLS	cvar_groups.h	34;"	d
CVAR_GROUP_MP3	cvar_groups.h	46;"	d
CVAR_GROUP_MVD	cvar_groups.h	72;"	d
CVAR_GROUP_NETWORK	cvar_groups.h	41;"	d
CVAR_GROUP_NO_GROUP	cvar_groups.h	24;"	d
CVAR_GROUP_OPENGL	cvar_groups.h	52;"	d
CVAR_GROUP_PARTICLES	cvar_groups.h	61;"	d
CVAR_GROUP_SBAR	cvar_groups.h	39;"	d
CVAR_GROUP_SCREEN	cvar_groups.h	37;"	d
CVAR_GROUP_SCREENSHOTS	cvar_groups.h	32;"	d
CVAR_GROUP_SERVERINFO	cvar_groups.h	27;"	d
CVAR_GROUP_SERVER_BROWSER	cvar_groups.h	40;"	d
CVAR_GROUP_SERVER_MAIN	cvar_groups.h	28;"	d
CVAR_GROUP_SERVER_PERMISSIONS	cvar_groups.h	25;"	d
CVAR_GROUP_SERVER_PHYSICS	cvar_groups.h	26;"	d
CVAR_GROUP_SKIN	cvar_groups.h	65;"	d
CVAR_GROUP_SOFTWARE	cvar_groups.h	54;"	d
CVAR_GROUP_SOUND	cvar_groups.h	47;"	d
CVAR_GROUP_SPECTATOR	cvar_groups.h	31;"	d
CVAR_GROUP_SYSTEM_SETTINGS	cvar_groups.h	49;"	d
CVAR_GROUP_TEXTURES	cvar_groups.h	57;"	d
CVAR_GROUP_TURB	cvar_groups.h	59;"	d
CVAR_GROUP_USERINFO	cvar_groups.h	68;"	d
CVAR_GROUP_VIDEO	cvar_groups.h	48;"	d
CVAR_GROUP_VIEW	cvar_groups.h	35;"	d
CVAR_GROUP_VIEWMODEL	cvar_groups.h	58;"	d
CVAR_INIT	cvar.h	31;"	d
CVAR_LATCH	cvar.h	38;"	d
CVAR_NO_RESET	cvar.h	36;"	d
CVAR_ROM	cvar.h	30;"	d
CVAR_RULESET_MAX	cvar.h	34;"	d
CVAR_RULESET_MIN	cvar.h	35;"	d
CVAR_SERVERINFO	cvar.h	29;"	d
CVAR_SILENT	cvar.h	40;"	d
CVAR_TEMP	cvar.h	37;"	d
CVAR_USERINFO	cvar.h	28;"	d
CVAR_USER_ARCHIVE	cvar.h	33;"	d
CVAR_USER_CREATED	cvar.h	32;"	d
CYCLE	asm_draw.h	35;"	d
CYCLE	d_iface.h	181;"	d
CYCLE	d_ifacea.h	38;"	d
C_BLUEFLASH	vx_stuff.h	/^	C_BLUEFLASH,		\/\/ Blob expl$/;"	e	enum:__anon295
C_BLUESPARK	vx_stuff.h	/^	C_BLUESPARK,		\/\/ Gibbed building spark$/;"	e	enum:__anon295
C_CHASECAM	vx_stuff.h	/^	C_CHASECAM, \/\/Chase cam is on$/;"	e	enum:__anon296
C_EXPLODE	vx_stuff.h	/^	C_EXPLODE,			\/\/ Animated explosion$/;"	e	enum:__anon295
C_EXTERNAL	vx_stuff.h	/^	C_EXTERNAL, \/\/Looking at the player for whatever reason$/;"	e	enum:__anon296
C_FIRE	vx_stuff.h	/^	C_FIRE,				\/\/ Used in torches$/;"	e	enum:__anon295
C_FLASH	vx_stuff.h	/^	C_FLASH,			\/\/ Explosion type - Basically just fades out$/;"	e	enum:__anon295
C_FREE	vx_stuff.h	/^	C_FREE,				\/\/ Unused$/;"	e	enum:__anon295
C_GREENLIGHT	vx_stuff.h	/^	C_GREENLIGHT,		\/\/ Detpack$/;"	e	enum:__anon295
C_GUNFLASH	vx_stuff.h	/^	C_GUNFLASH,			\/\/ Shotgun hit effect$/;"	e	enum:__anon295
C_KNIGHTLIGHT	vx_stuff.h	/^	C_KNIGHTLIGHT,$/;"	e	enum:__anon295
C_LIGHTNING	vx_stuff.h	/^	C_LIGHTNING,		\/\/ Used on lightning beams$/;"	e	enum:__anon295
C_NORMAL	vx_stuff.h	/^	C_NORMAL, \/\/Normal camera$/;"	e	enum:__anon296
C_REDLIGHT	vx_stuff.h	/^	C_REDLIGHT,			\/\/ Detpack about to blow$/;"	e	enum:__anon295
C_ROCKETLIGHT	vx_stuff.h	/^	C_ROCKETLIGHT,		\/\/ A rockets glow...$/;"	e	enum:__anon295
C_SMALLFLASH	vx_stuff.h	/^	C_SMALLFLASH,		\/\/ Muzzleflash$/;"	e	enum:__anon295
C_SMALLLIGHTNING	vx_stuff.h	/^	C_SMALLLIGHTNING,	\/\/ Used on lightning beams$/;"	e	enum:__anon295
C_VORELIGHT	vx_stuff.h	/^	C_VORELIGHT,$/;"	e	enum:__anon295
C_WHITELIGHT	vx_stuff.h	/^	C_WHITELIGHT,		\/\/ Gunshot #2 effect$/;"	e	enum:__anon295
C_WIZLIGHT	vx_stuff.h	/^	C_WIZLIGHT,			\/\/ CREATURE TRACER LIGHTS$/;"	e	enum:__anon295
CachePic_Add	common_draw.c	/^mpic_t* CachePic_Add(const char *path, mpic_t *pic) $/;"	f
CachePic_Find	common_draw.c	/^mpic_t *CachePic_Find(const char *path) $/;"	f
CachePics_DeInit	common_draw.c	/^void CachePics_DeInit(void) $/;"	f
CachePlaylist	mp3_player.h	/^	int   (*CachePlaylist)      (void);$/;"	m	struct:__anon236
Cache_Alloc	zone.c	/^void *Cache_Alloc (cache_user_t *c, int size, char *name) {$/;"	f
Cache_Alloc	zone2.c	/^void *Cache_Alloc (cache_user_t *c, int size, char *name)$/;"	f
Cache_Check	zone.c	/^void *Cache_Check (cache_user_t *c) {$/;"	f
Cache_Check	zone2.c	/^void *Cache_Check (cache_user_t *c)$/;"	f
Cache_Flush	zone.c	/^void Cache_Flush (void) {$/;"	f
Cache_Free	zone.c	/^void Cache_Free (cache_user_t *c) {$/;"	f
Cache_Free	zone2.c	/^void Cache_Free (cache_user_t *c)$/;"	f
Cache_FreeHigh	zone.c	/^void Cache_FreeHigh (int new_high_hunk) {$/;"	f
Cache_FreeLow	zone.c	/^void Cache_FreeLow (int new_low_hunk) {$/;"	f
Cache_Init	zone.c	/^void Cache_Init (void) {$/;"	f
Cache_Init_Commands	zone.c	/^void Cache_Init_Commands (void) {$/;"	f
Cache_MakeLRU	zone.c	/^void Cache_MakeLRU (cache_system_t *cs) {$/;"	f
Cache_Move	zone.c	/^void Cache_Move ( cache_system_t *c) {$/;"	f
Cache_Print	zone.c	/^void Cache_Print (void) {$/;"	f
Cache_Report	zone.c	/^void Cache_Report (void) {$/;"	f
Cache_TryAlloc	zone.c	/^cache_system_t *Cache_TryAlloc (int size, qbool nobottom) {$/;"	f
Cache_UnlinkLRU	zone.c	/^void Cache_UnlinkLRU (cache_system_t *cs) {$/;"	f
CalcCausticTexCoords	gl_warp.c	/^void CalcCausticTexCoords(float *v, float *s, float *t) {$/;"	f
CalcFov	cl_screen.c	/^static float CalcFov (float fov_x, float width, float height) {$/;"	f	file:
CalcSurfaceExtents	gl_model.c	/^void CalcSurfaceExtents (msurface_t *s) {$/;"	f
CalcSurfaceExtents	r_model.c	/^void CalcSurfaceExtents (msurface_t *s) {$/;"	f
Calendar_f	console.c	/^void Calendar_f(void)$/;"	f
CamSys_Active_Spline_Change	cam_new.c	/^void CamSys_Active_Spline_Change(int type, int dir)$/;"	f
CamSys_Active_Spline_Change_Active_Point	cam_new.c	/^void CamSys_Active_Spline_Change_Active_Point(int type, int dir)$/;"	f
CamSys_Add	cam_new.c	/^void CamSys_Add(void)$/;"	f
CamSys_Add_Cam	cam_new.c	/^void CamSys_Add_Cam(void)$/;"	f
CamSys_Add_Point_Active_Spline	cam_new.c	/^void CamSys_Add_Point_Active_Spline(int type)$/;"	f
CamSys_Add_Point_Active_Spline_BA	cam_new.c	/^void CamSys_Add_Point_Active_Spline_BA(int type, int ba)$/;"	f
CamSys_Add_Spline	cam_new.c	/^struct CamSys_Spline *CamSys_Add_Spline(int type)$/;"	f
CamSys_Add_View	cam_new.c	/^void CamSys_Add_View(void)$/;"	f
CamSys_Alloc_Spline	cam_new.c	/^struct CamSys_Spline *CamSys_Alloc_Spline(void)$/;"	f
CamSys_Check_Active_Spline	cam_new.c	/^struct CamSys_Spline *CamSys_Check_Active_Spline(struct CamSys_Spline *spline, double time)$/;"	f
CamSys_Cleanup_Spline	cam_new.c	/^void CamSys_Cleanup_Spline(struct CamSys_Spline *spline)$/;"	f
CamSys_Copied_Point	cam_new.c	/^vec3_t	CamSys_Copied_Point;$/;"	v
CamSys_Copy_Active_Point	cam_new.c	/^void CamSys_Copy_Active_Point(int type)$/;"	f
CamSys_Draw	cam_new.c	/^void CamSys_Draw(void)$/;"	f
CamSys_Draw_Spline	cam_new.c	/^void CamSys_Draw_Spline(struct CamSys_Spline *spline)$/;"	f
CamSys_Duplicate_Selected_Spline	cam_new.c	/^void CamSys_Duplicate_Selected_Spline(int type)$/;"	f
CamSys_Duplicate_Spline	cam_new.c	/^void CamSys_Duplicate_Spline(struct CamSys_Spline *original, struct CamSys_Spline *copy)$/;"	f
CamSys_Event_Add_Entry	cam_event_system.c	/^struct event_list_entry *CamSys_Event_Add_Entry(struct event_list *event_list, char *name)$/;"	f
CamSys_Event_Add_Entry_Value	cam_event_system.c	/^struct event_list_entry_value *CamSys_Event_Add_Entry_Value(struct event_list_entry *entry_list, char *text, double value, double time)$/;"	f
CamSys_Event_Add_Value_By_Number	cam_event_system.c	/^void CamSys_Event_Add_Value_By_Number(struct event_list *event_list, int event_number, double time, double value, char *text)$/;"	f
CamSys_Event_Free_Event	cam_event_system.c	/^void CamSys_Event_Free_Event(void *data)$/;"	f
CamSys_Event_Free_Event_Value	cam_event_system.c	/^void CamSys_Event_Free_Event_Value(void *data)$/;"	f
CamSys_Event_Handle	cam_event_system.c	/^void CamSys_Event_Handle(struct event_list *event_list, double time)$/;"	f
CamSys_Event_Handle_Entry	cam_event_system.c	/^void CamSys_Event_Handle_Entry(struct event_list_entry *entry, double time)$/;"	f
CamSys_Event_Init	cam_event_system.c	/^void CamSys_Event_Init(void)$/;"	f
CamSys_Event_List_Alloc	cam_event_system.c	/^struct event_list *CamSys_Event_List_Alloc(void)$/;"	f
CamSys_Event_Print	cam_event_system.c	/^void CamSys_Event_Print(struct event_list *event_list)$/;"	f
CamSys_Event_Update_Pointer	cam_event_system.c	/^void CamSys_Event_Update_Pointer(void)$/;"	f
CamSys_Find_Active_Spline	cam_new.c	/^struct CamSys_Spline *CamSys_Find_Active_Spline(struct CamSys_Spline *spline, double time)$/;"	f
CamSys_Frame	cam_new.c	/^void CamSys_Frame(void)$/;"	f
CamSys_Get_Active_Event_List	cam_new.c	/^struct event_list *CamSys_Get_Active_Event_List(int type)$/;"	f
CamSys_Get_Active_Spline_Active_Point	cam_new.c	/^int CamSys_Get_Active_Spline_Active_Point(int type)$/;"	f
CamSys_Get_Active_Spline_Enable	cam_new.c	/^int CamSys_Get_Active_Spline_Enable(int type)$/;"	f
CamSys_Get_Active_Spline_Number	cam_new.c	/^int CamSys_Get_Active_Spline_Number(int type)$/;"	f
CamSys_Get_Active_Spline_Point_Count	cam_new.c	/^int CamSys_Get_Active_Spline_Point_Count(int type)$/;"	f
CamSys_Get_Active_Spline_Show	cam_new.c	/^int CamSys_Get_Active_Spline_Show(int type)$/;"	f
CamSys_Get_Position	cam_new.c	/^int CamSys_Get_Position(struct CamSys_Spline *spline, double time, vec3_t position)$/;"	f
CamSys_Get_Spline_Count	cam_new.c	/^int CamSys_Get_Spline_Count(int type)$/;"	f
CamSys_Get_Spline_Point_Time	cam_new.c	/^void CamSys_Get_Spline_Point_Time(struct CamSys_Spline *spline, double in_time, double *out_time, int *out_point)$/;"	f
CamSys_Handler	cam_new.c	/^void CamSys_Handler(void)$/;"	f
CamSys_Init	cam_new.c	/^void CamSys_Init(void)$/;"	f
CamSys_MenuHook	cam_new.c	/^void CamSys_MenuHook(void)$/;"	f
CamSys_Menu_Cam_Numbers	cam_new.c	/^char *CamSys_Menu_Cam_Numbers(void)$/;"	f
CamSys_Menu_View_Numbers	cam_new.c	/^char *CamSys_Menu_View_Numbers(void)$/;"	f
CamSys_Move_Spline	cam_new.c	/^void CamSys_Move_Spline(struct CamSys_Spline *spline, float x, float y, float z)$/;"	f
CamSys_Paste_Active_Point	cam_new.c	/^void CamSys_Paste_Active_Point(int type)$/;"	f
CamSys_Popups_Cleanup	cam_new.c	/^void CamSys_Popups_Cleanup(struct CamSys_Spline *spline, struct CamSys_Spline *last_selected, int *last_point_count, struct MS_Popup_Menu_Menu ***popups, vec3_t last_pos, vec3_t last_view)$/;"	f
CamSys_Popups_Setup	cam_new.c	/^void CamSys_Popups_Setup(struct CamSys_Spline *spline, struct CamSys_Spline *last_selected, int *last_point_count, struct MS_Popup_Menu_Menu ***popups, vec3_t last_pos, vec3_t last_view)$/;"	f
CamSys_Print_Help	cam_new.c	/^void CamSys_Print_Help(void)$/;"	f
CamSys_Remove_Active_Spline	cam_new.c	/^void CamSys_Remove_Active_Spline(int type)$/;"	f
CamSys_Remove_Point_Active_Spline	cam_new.c	/^void CamSys_Remove_Point_Active_Spline(int type)$/;"	f
CamSys_Remove_Spline	cam_new.c	/^void CamSys_Remove_Spline(struct CamSys_Spline *spline, int number, int type)$/;"	f
CamSys_Remove_Spline_By_Number	cam_new.c	/^void CamSys_Remove_Spline_By_Number(int num, int type)$/;"	f
CamSys_Remove_Value_Entry_By_Number	cam_event_system.c	/^void CamSys_Remove_Value_Entry_By_Number(struct event_list_entry *entry, int number)$/;"	f
CamSys_Set_Spline	cam_new.c	/^void CamSys_Set_Spline(struct CamSys_Spline *spline, int type, double value)$/;"	f
CamSys_Set_Starttime	cam_new.c	/^void CamSys_Set_Starttime(int type)$/;"	f
CamSys_Set_Stoptime	cam_new.c	/^void CamSys_Set_Stoptime(int type)$/;"	f
CamSys_Spline	cam_new.c	/^struct CamSys_Spline$/;"	s	file:
CamSys_Spline	cam_new.h	/^struct CamSys_Spline$/;"	s
CamSys_Spline_Data	cam_new.c	/^struct CamSys_Spline_Data$/;"	s	file:
CamSys_Spline_Get	cam_new.c	/^struct CamSys_Spline *CamSys_Spline_Get(int type, int number)$/;"	f
CamSys_Time_CP	cam_new.c	/^void CamSys_Time_CP(int type, int ss, int cp)$/;"	f
CamSys_Toggle_Active_Spline	cam_new.c	/^void CamSys_Toggle_Active_Spline(int type, int var)$/;"	f
CamSys_Update_Menu_Pointer	cam_new.c	/^void CamSys_Update_Menu_Pointer(void)$/;"	f
CamSys_Update_Numbers	cam_new.c	/^void CamSys_Update_Numbers(int type)$/;"	f
CamSys_Update_Popups	cam_new.c	/^void CamSys_Update_Popups(void)$/;"	f
CamSys_Vector_To_Angles	cam_new.c	/^void CamSys_Vector_To_Angles(vec3_t vec, vec3_t ang) $/;"	f
CamSys_Write_Config	cam_new.c	/^void CamSys_Write_Config(void)$/;"	f
CamSys_Write_Events	cam_event_system.c	/^void CamSys_Write_Events(struct event_list *list, int camnum, int type, FILE *f)$/;"	f
CamSys_Write_Spline	cam_new.c	/^void CamSys_Write_Spline(FILE *f, struct CamSys_Spline *spline, int cam_count, int type)$/;"	f
Cam_Angles_f	cl_cam.c	/^static void Cam_Angles_f (void)$/;"	f	file:
Cam_CheckHighTarget	cl_cam.c	/^static void Cam_CheckHighTarget(void)$/;"	f	file:
Cam_DelP	mosdm.c	/^void Cam_DelP(void){$/;"	f
Cam_Del_Point	mosdm.c	/^void Cam_Del_Point(void){$/;"	f
Cam_DoTrace	cl_cam.c	/^trace_t Cam_DoTrace(vec3_t vec1, vec3_t vec2) {$/;"	f
Cam_DrawPlayer	cl_cam.c	/^qbool Cam_DrawPlayer(int playernum) {$/;"	f
Cam_DrawViewModel	cl_cam.c	/^qbool Cam_DrawViewModel(void) {$/;"	f
Cam_Event_Checktime	mosdm.c	/^void Cam_Event_Checktime(void){$/;"	f
Cam_Event_Del	mosdm.c	/^void Cam_Event_Del(void){$/;"	f
Cam_Event_Sort	mosdm.c	/^void Cam_Event_Sort(int direction){$/;"	f
Cam_FinishMove	cl_cam.c	/^void Cam_FinishMove(usercmd_t *cmd) {$/;"	f
Cam_IsVisible	cl_cam.c	/^static qbool Cam_IsVisible(player_state_t *player, vec3_t vec) {$/;"	f	file:
Cam_Lock	cl_cam.c	/^void Cam_Lock(int playernum) $/;"	f
Cam_MIS	mosdm.c	/^void Cam_MIS(void){$/;"	f
Cam_Menu_Frame	cam_new_menu.c	/^void Cam_Menu_Frame(void)$/;"	f
Cam_Menu_Init	cam_new_menu.c	/^void Cam_Menu_Init(void)$/;"	f
Cam_Pos_f	cl_cam.c	/^static void Cam_Pos_f (void)$/;"	f	file:
Cam_Reset	cl_cam.c	/^void Cam_Reset(void) {$/;"	f
Cam_SES	mosdm.c	/^void Cam_SES(void){$/;"	f
Cam_SSE	mosdm.c	/^void Cam_SSE(void){$/;"	f
Cam_SetP	mosdm.c	/^void Cam_SetP(void){$/;"	f
Cam_SetStart	mosdm.c	/^void Cam_SetStart(void){$/;"	f
Cam_SetStop	mosdm.c	/^void Cam_SetStop(void){$/;"	f
Cam_SetViewPlayer	cl_cam.c	/^void Cam_SetViewPlayer (void) {$/;"	f
Cam_Set_Point	mosdm.c	/^void Cam_Set_Point(void){$/;"	f
Cam_Track	cl_cam.c	/^void Cam_Track(usercmd_t *cmd) $/;"	f
Cam_TrackNum	cl_cam.c	/^int Cam_TrackNum(void) $/;"	f
Cam_TryFlyby	cl_cam.c	/^static float Cam_TryFlyby(player_state_t *self, player_state_t *player, vec3_t vec, qbool checkvis) {$/;"	f	file:
Cam_TryLock	cl_cam.c	/^void Cam_TryLock (void) {$/;"	f
Cam_Unlock	cl_cam.c	/^void Cam_Unlock(void) $/;"	f
CameraRandomPoint	vx_camera.c	/^void CameraRandomPoint (vec3_t org)$/;"	f
CameraUpdate	vx_camera.c	/^void CameraUpdate (qbool dead)$/;"	f
CamsSys_Even_Out	cam_new.c	/^void CamsSys_Even_Out(int type)$/;"	f
CamsSys_Set_Active_Point	cam_new.c	/^void CamsSys_Set_Active_Point(int type)$/;"	f
Cams_Event_Add	mosdm.c	/^void Cams_Event_Add(void){$/;"	f
CancelNewVideoSettings	menu_options.c	/^static void CancelNewVideoSettings (void) {$/;"	f	file:
Cap	parser.c	/^LOCAL expr_val Cap(EParser p, expr_val v)$/;"	f
Capture_Close	movie_avi.c	/^void Capture_Close (void)$/;"	f
Capture_Cursor_f	in_mac.c	/^void Capture_Cursor_f (void)$/;"	f
Capture_InitACM	movie_avi.c	/^void Capture_InitACM (void)$/;"	f
Capture_InitAVI	movie_avi.c	/^void Capture_InitAVI (void)$/;"	f
Capture_Open	movie_avi.c	/^qbool Capture_Open (char *filename)$/;"	f
Capture_VideoStream	movie_avi.c	/^PAVISTREAM Capture_VideoStream (void)$/;"	f
Capture_WriteAudio	movie_avi.c	/^void Capture_WriteAudio (int samples, byte *sample_buffer)$/;"	f
Capture_WriteVideo	movie_avi.c	/^void Capture_WriteVideo (byte *pixel_buffer, int size)$/;"	f
CarbonSndPlayDoubleBuffer	CarbonSndPlayDB.c	/^OSErr	CarbonSndPlayDoubleBuffer (SndChannelPtr chan, SndDoubleBufferHeaderPtr theParams) {$/;"	f
CarbonSndPlayDoubleBufferCallBackProc	CarbonSndPlayDB.c	/^static pascal void	CarbonSndPlayDoubleBufferCallBackProc (SndChannelPtr theChannel, SndCommand * theCallBackCmd) {$/;"	f	file:
CarbonSndPlayDoubleBufferCleanUpProc	CarbonSndPlayDB.c	/^static pascal void	CarbonSndPlayDoubleBufferCleanUpProc (SndChannelPtr theChannel, SndCommand * theCallBackCmd) {$/;"	f	file:
Cbuf_AddEarlyCommands	cmd.c	/^void Cbuf_AddEarlyCommands (void)$/;"	f
Cbuf_AddText	cmd.c	/^void Cbuf_AddText (const char *text)$/;"	f
Cbuf_AddTextEx	cmd.c	/^void Cbuf_AddTextEx (cbuf_t *cbuf, const char *text)$/;"	f
Cbuf_Execute	cmd.c	/^void Cbuf_Execute (void)$/;"	f
Cbuf_ExecuteEx	cmd.c	/^void Cbuf_ExecuteEx (cbuf_t *cbuf)$/;"	f
Cbuf_Init	cmd.c	/^void Cbuf_Init (void)$/;"	f
Cbuf_InsertText	cmd.c	/^void Cbuf_InsertText (const char *text)$/;"	f
Cbuf_InsertTextEx	cmd.c	/^void Cbuf_InsertTextEx (cbuf_t *cbuf, const char *text)$/;"	f
Cbuf_Register	cmd.c	/^static void Cbuf_Register (cbuf_t *cbuf, int maxsize)$/;"	f	file:
CenterWindow	vid_wgl.c	/^void CenterWindow(HWND hWndCenter, int width, int height, BOOL lefttopjustify) {$/;"	f
Center_Playlist	menu_mp3player.c	/^static void Center_Playlist(void) {$/;"	f	file:
ChangeColor	document_rendering.c	/^static char ChangeColor(char c)$/;"	f	file:
ChangeFreq	vid_wgl.c	/^qbool ChangeFreq(int freq) {$/;"	f
Change_v_idle	cl_view.c	/^void Change_v_idle (cvar_t *var, char *value, qbool *cancel) {$/;"	f
CharToBrown	utils.c	/^unsigned char CharToBrown(unsigned char ch)$/;"	f
CharToWhite	utils.c	/^unsigned char CharToWhite(unsigned char ch)$/;"	f
CharsToBrown	utils.c	/^void CharsToBrown(char* start, char* end)$/;"	f
CharsToWhite	utils.c	/^void CharsToWhite(char* start, char* end)$/;"	f
CheckArrayExtensions	vid_mac.c	/^void CheckArrayExtensions (void)$/;"	f
CheckCursor	settings_page.c	/^static void CheckCursor(settings_page *tab, qbool up)$/;"	f	file:
CheckExtension	vid_common_gl.c	/^qbool CheckExtension (const char *extension) {$/;"	f
CheckForCommand	keys.c	/^qbool CheckForCommand (void) {$/;"	f
CheckGLXExtension	vid_glx.c	/^qbool CheckGLXExtension (const char *extension) {$/;"	f
CheckIntermission	pr_cmds.c	/^static void CheckIntermission (void)$/;"	f	file:
CheckModels_f	vx_stuff.c	/^void CheckModels_f(void)$/;"	f
CheckMultiTextureExtensions	vid_common_gl.c	/^void CheckMultiTextureExtensions (void) {$/;"	f
CheckProxyConnection	menu_proxy.c	/^qbool CheckProxyConnection(void) {$/;"	f
CheckSPGame	menu.c	/^static void CheckSPGame (void) {$/;"	f	file:
CheckTextureExtensions	vid_mac.c	/^void CheckTextureExtensions (void)$/;"	f
CheckTextureLoaded	gl_texture.c	/^static qbool CheckTextureLoaded(int mode) $/;"	f	file:
CheckTrigger	teamplay.c	/^static qbool CheckTrigger (void)$/;"	f	file:
CheckViewpoint	settings_page.c	/^static void CheckViewpoint(settings_page *tab)$/;"	f	file:
CheckVsyncControlExtensions	vid_glx.c	/^void CheckVsyncControlExtensions(void) {$/;"	f
CheckWindowedMouse	win_glimp.c	/^void CheckWindowedMouse(void) {$/;"	f
Check_Gamma	vid_common_gl.c	/^void Check_Gamma (unsigned char *pal) {$/;"	f
Cl_DemoSpeed	cl_main.c	/^double Cl_DemoSpeed(void)$/;"	f
Cl_ToggleSpec_f	cl_main.c	/^void Cl_ToggleSpec_f (void)$/;"	f
Classic_AllocParticles	r_part.c	/^void Classic_AllocParticles (void) {$/;"	f
Classic_BlobExplosion	r_part.c	/^void Classic_BlobExplosion (vec3_t org) {$/;"	f
Classic_ClearParticles	r_part.c	/^void Classic_ClearParticles (void) {$/;"	f
Classic_DrawParticles	r_part.c	/^void Classic_DrawParticles (void) {$/;"	f
Classic_InitParticles	r_part.c	/^void Classic_InitParticles (void) {$/;"	f
Classic_LavaSplash	r_part.c	/^void Classic_LavaSplash (vec3_t org) {$/;"	f
Classic_LoadParticleTexures	r_part.c	/^void Classic_LoadParticleTexures (void) {$/;"	f
Classic_ParticleExplosion	r_part.c	/^void Classic_ParticleExplosion (vec3_t org) {$/;"	f
Classic_ParticleRailTrail	r_part.c	/^void Classic_ParticleRailTrail (vec3_t start, vec3_t end, int color) {$/;"	f
Classic_ParticleTrail	r_part.c	/^void Classic_ParticleTrail (vec3_t start, vec3_t end, vec3_t *trail_origin, trail_type_t type) {$/;"	f
Classic_RunParticleEffect	r_part.c	/^void Classic_RunParticleEffect (vec3_t org, vec3_t dir, int color, int count) {$/;"	f
Classic_TeleportSplash	r_part.c	/^void Classic_TeleportSplash (vec3_t org) {$/;"	f
ClearAllStates	vid_wgl.c	/^void ClearAllStates (void) {$/;"	f
ClearAllStates	vid_win.c	/^void ClearAllStates (void) {$/;"	f
ClearAllStates	win_wndproc.c	/^void ClearAllStates (void) {$/;"	f
ClearLink	sv_world.c	/^static void ClearLink (link_t *l) {$/;"	f	file:
ClearSky	gl_warp.c	/^static void ClearSky (void)$/;"	f	file:
Clear_Lua_State	lua.c	/^void Clear_Lua_State(struct L_lua_states *ls)$/;"	f
ClientConnect	progdefs.h	/^	func_t	ClientConnect;$/;"	m	struct:__anon252
ClientDisconnect	progdefs.h	/^	func_t	ClientDisconnect;$/;"	m	struct:__anon252
ClientKill	progdefs.h	/^	func_t	ClientKill;$/;"	m	struct:__anon252
ClientReliableCheckBlock	sv_nchan.c	/^void ClientReliableCheckBlock(client_t *cl, int maxsize)$/;"	f
ClientReliableWrite_Angle	sv_nchan.c	/^void ClientReliableWrite_Angle(client_t *cl, float f)$/;"	f
ClientReliableWrite_Angle16	sv_nchan.c	/^void ClientReliableWrite_Angle16(client_t *cl, float f)$/;"	f
ClientReliableWrite_Begin	sv_nchan.c	/^void ClientReliableWrite_Begin(client_t *cl, int c, int maxsize)$/;"	f
ClientReliableWrite_Byte	sv_nchan.c	/^void ClientReliableWrite_Byte(client_t *cl, int c)$/;"	f
ClientReliableWrite_Char	sv_nchan.c	/^void ClientReliableWrite_Char(client_t *cl, int c)$/;"	f
ClientReliableWrite_Coord	sv_nchan.c	/^void ClientReliableWrite_Coord(client_t *cl, float f)$/;"	f
ClientReliableWrite_Float	sv_nchan.c	/^void ClientReliableWrite_Float(client_t *cl, float f)$/;"	f
ClientReliableWrite_Long	sv_nchan.c	/^void ClientReliableWrite_Long(client_t *cl, int c)$/;"	f
ClientReliableWrite_SZ	sv_nchan.c	/^void ClientReliableWrite_SZ(client_t *cl, void *data, int len)$/;"	f
ClientReliableWrite_Short	sv_nchan.c	/^void ClientReliableWrite_Short(client_t *cl, int c)$/;"	f
ClientReliableWrite_String	sv_nchan.c	/^void ClientReliableWrite_String(client_t *cl, char *s)$/;"	f
ClientReliableWrite_UnterminatedString	sv_nchan.c	/^void ClientReliableWrite_UnterminatedString(client_t *cl, char *s)$/;"	f
ClientReliable_FinishWrite	sv_nchan.c	/^void ClientReliable_FinishWrite(client_t *cl)$/;"	f
ClipSkyPolygon	gl_warp.c	/^void ClipSkyPolygon (int nump, vec3_t vecs, int stage) {$/;"	f
ClipVelocity	sv_phys.c	/^void ClipVelocity (vec3_t in, vec3_t normal, vec3_t out, float overbounce) {$/;"	f
Close	fs.h	/^	void (*Close) (struct vfsfile_s *file);$/;"	m	struct:vfsfile_s
ClosePath	vfs.h	/^	void	(*ClosePath)(void *handle);$/;"	m	struct:__anon289
Cmd_AddCommand	cmd.c	/^void Cmd_AddCommand (char *cmd_name, xcommand_t function)$/;"	f
Cmd_AddLegacyCommand	cmd.c	/^void Cmd_AddLegacyCommand (char *oldname, char *newname)$/;"	f
Cmd_AddMacro	cmd.c	/^void Cmd_AddMacro (const char *s, char *(*f) (void))$/;"	f
Cmd_AddMacroEx	cmd.c	/^void Cmd_AddMacroEx (const char *s, char *(*f) (void), int teamplay)$/;"	f
Cmd_AliasCompare	cmd.c	/^int Cmd_AliasCompare (const void *p1, const void *p2)$/;"	f
Cmd_AliasCompleteCountPossible	cmd.c	/^int Cmd_AliasCompleteCountPossible (char *partial)$/;"	f
Cmd_AliasCreate	cmd.c	/^static cmd_alias_t* Cmd_AliasCreate (char* name)$/;"	f	file:
Cmd_AliasList_f	cmd.c	/^void Cmd_AliasList_f (void)$/;"	f
Cmd_AliasString	cmd.c	/^char *Cmd_AliasString (char *name)$/;"	f
Cmd_Alias_In_f	cmd.c	/^void Cmd_Alias_In_f (void)$/;"	f
Cmd_Alias_Out_f	cmd.c	/^void Cmd_Alias_Out_f (void)$/;"	f
Cmd_Alias_f	cmd.c	/^void Cmd_Alias_f (void)$/;"	f
Cmd_Argc	cmd.c	/^int Cmd_Argc (void)$/;"	f
Cmd_ArgcEx	cmd.c	/^int Cmd_ArgcEx (tokenizecontext_t *ctx)$/;"	f
Cmd_Args	cmd.c	/^char *Cmd_Args (void)$/;"	f
Cmd_ArgsEx	cmd.c	/^char *Cmd_ArgsEx (tokenizecontext_t *ctx)$/;"	f
Cmd_Argv	cmd.c	/^char *Cmd_Argv (int arg)$/;"	f
Cmd_ArgvEx	cmd.c	/^char *Cmd_ArgvEx (tokenizecontext_t *ctx, int arg)$/;"	f
Cmd_Begin_f	sv_user.c	/^void Cmd_Begin_f (void) {$/;"	f
Cmd_CatchTriggerSubpatterns	cmd.c	/^void Cmd_CatchTriggerSubpatterns(const char *s, int* offsets, int num)$/;"	f
Cmd_CmdList	cmd.c	/^void Cmd_CmdList (qbool use_regex)$/;"	f
Cmd_CmdList_f	cmd.c	/^void Cmd_CmdList_f (void)$/;"	f
Cmd_CmdList_re_f	cmd.c	/^void Cmd_CmdList_re_f (void)$/;"	f
Cmd_CommandCompare	cmd.c	/^int Cmd_CommandCompare (const void *p1, const void *p2)$/;"	f
Cmd_CompleteCommand	cmd.c	/^char *Cmd_CompleteCommand (char *partial)$/;"	f
Cmd_CompleteCountPossible	cmd.c	/^int Cmd_CompleteCountPossible (char *partial)$/;"	f
Cmd_Cvar_In_f	cmd.c	/^void Cmd_Cvar_In_f (void)$/;"	f
Cmd_Cvar_Out_f	cmd.c	/^void Cmd_Cvar_Out_f (void)$/;"	f
Cmd_DeleteAlias	cmd.c	/^qbool Cmd_DeleteAlias (char *name)$/;"	f
Cmd_Download_f	sv_user.c	/^void Cmd_Download_f (void) {$/;"	f
Cmd_Drop_f	sv_user.c	/^void Cmd_Drop_f (void) {$/;"	f
Cmd_Echo_f	cmd.c	/^void Cmd_Echo_f (void)$/;"	f
Cmd_EditAlias_f	cmd.c	/^void Cmd_EditAlias_f (void)$/;"	f
Cmd_Eval_f	cmd.c	/^void Cmd_Eval_f(void)$/;"	f
Cmd_Exec_f	cmd.c	/^void Cmd_Exec_f (void)$/;"	f
Cmd_ExecuteString	cmd.c	/^void Cmd_ExecuteString (char *text)$/;"	f
Cmd_ExecuteStringEx	cmd.c	/^static void Cmd_ExecuteStringEx (cbuf_t *context, char *text)$/;"	f	file:
Cmd_Exists	cmd.c	/^qbool Cmd_Exists (char *cmd_name)$/;"	f
Cmd_ExpandString	cmd.c	/^void Cmd_ExpandString (const char *data, char *dest)$/;"	f
Cmd_FindAlias	cmd.c	/^cmd_alias_t *Cmd_FindAlias (char *name)$/;"	f
Cmd_FindCommand	cmd.c	/^cmd_function_t *Cmd_FindCommand (const char *cmd_name)$/;"	f
Cmd_Fly_f	sv_user.c	/^void Cmd_Fly_f (void) {$/;"	f
Cmd_ForwardToServer	cl_cmd.c	/^void Cmd_ForwardToServer (void) {$/;"	f
Cmd_Give_f	sv_user.c	/^void Cmd_Give_f (void) {$/;"	f
Cmd_God_f	sv_user.c	/^void Cmd_God_f (void) {$/;"	f
Cmd_If_Exists_f	cmd.c	/^void Cmd_If_Exists_f(void)$/;"	f
Cmd_If_New	cmd.c	/^void Cmd_If_New(void)$/;"	f
Cmd_If_Old	cmd.c	/^void Cmd_If_Old (void)$/;"	f
Cmd_If_f	cmd.c	/^void Cmd_If_f(void) {$/;"	f
Cmd_Init	cmd.c	/^void Cmd_Init (void)$/;"	f
Cmd_IsCommandAllowedInMessageTrigger	cmd.c	/^static qbool Cmd_IsCommandAllowedInMessageTrigger( const char *command )$/;"	f	file:
Cmd_IsCommandAllowedInTeamPlayMacros	cmd.c	/^static qbool Cmd_IsCommandAllowedInTeamPlayMacros( const char *command )$/;"	f	file:
Cmd_IsLegacyCommand	cmd.c	/^qbool Cmd_IsLegacyCommand (char *oldname)$/;"	f
Cmd_Join_f	sv_user.c	/^static void Cmd_Join_f (void)$/;"	f	file:
Cmd_Kill_f	sv_user.c	/^void Cmd_Kill_f (void) {$/;"	f
Cmd_LegacyCommand	cmd.c	/^static qbool Cmd_LegacyCommand (void)$/;"	f	file:
Cmd_MacroCompare	cmd.c	/^static int Cmd_MacroCompare (const void *p1, const void *p2)$/;"	f	file:
Cmd_MacroList_f	cmd.c	/^void Cmd_MacroList_f (void)$/;"	f
Cmd_MacroString	cmd.c	/^char *Cmd_MacroString (const char *s, int *macro_length)$/;"	f
Cmd_MakeArgs	cmd.c	/^char *Cmd_MakeArgs (int start)$/;"	f
Cmd_MakeArgsEx	cmd.c	/^char *Cmd_MakeArgsEx (tokenizecontext_t *ctx, int start)$/;"	f
Cmd_Modellist_f	sv_user.c	/^void Cmd_Modellist_f (void) {$/;"	f
Cmd_New_f	sv_user.c	/^void Cmd_New_f (void) {$/;"	f
Cmd_NextDL_f	sv_user.c	/^void Cmd_NextDL_f (void) {$/;"	f
Cmd_Noclip_f	sv_user.c	/^void Cmd_Noclip_f (void) {$/;"	f
Cmd_Observe_f	sv_user.c	/^static void Cmd_Observe_f (void)$/;"	f	file:
Cmd_PTrack_f	sv_user.c	/^void Cmd_PTrack_f (void) {$/;"	f
Cmd_Pause_f	sv_user.c	/^void Cmd_Pause_f (void) {$/;"	f
Cmd_Pings_f	sv_user.c	/^void Cmd_Pings_f (void) {$/;"	f
Cmd_PreSpawn_f	sv_user.c	/^void Cmd_PreSpawn_f (void) {$/;"	f
Cmd_ReInitAllMacro	cmd.c	/^void Cmd_ReInitAllMacro (void)$/;"	f
Cmd_RestoreContext	cmd.c	/^void Cmd_RestoreContext(tokenizecontext_t *ctx)$/;"	f
Cmd_SaveContext	cmd.c	/^void Cmd_SaveContext(tokenizecontext_t *ctx)$/;"	f
Cmd_Say_Team_f	sv_user.c	/^void Cmd_Say_Team_f(void) {$/;"	f
Cmd_Say_f	sv_user.c	/^void Cmd_Say_f(void) {$/;"	f
Cmd_Serverinfo_f	sv_user.c	/^void Cmd_Serverinfo_f (void) {$/;"	f
Cmd_SetInfo_f	sv_user.c	/^void Cmd_SetInfo_f (void) {$/;"	f
Cmd_Shutdown	cmd.c	/^void Cmd_Shutdown(void)$/;"	f
Cmd_Snap_f	sv_user.c	/^void Cmd_Snap_f(void) {$/;"	f
Cmd_Soundlist_f	sv_user.c	/^void Cmd_Soundlist_f (void) {$/;"	f
Cmd_Spawn_f	sv_user.c	/^void Cmd_Spawn_f (void) {$/;"	f
Cmd_StuffCmds_f	cmd.c	/^void Cmd_StuffCmds_f (void)$/;"	f
Cmd_TokenizeString	cmd.c	/^void Cmd_TokenizeString (char *text)$/;"	f
Cmd_TokenizeStringEx	cmd.c	/^void Cmd_TokenizeStringEx (tokenizecontext_t *ctx, char *text)$/;"	f
Cmd_UnAlias	cmd.c	/^void Cmd_UnAlias (qbool use_regex)$/;"	f
Cmd_UnAliasAll_f	cmd.c	/^void Cmd_UnAliasAll_f (void)$/;"	f
Cmd_UnAlias_f	cmd.c	/^void Cmd_UnAlias_f (void)$/;"	f
Cmd_UnAlias_re_f	cmd.c	/^void Cmd_UnAlias_re_f (void)$/;"	f
Cmd_Viewalias_f	cmd.c	/^void Cmd_Viewalias_f (void)$/;"	f
Cmd_Wait_f	cmd.c	/^void Cmd_Wait_f (void)$/;"	f
Cmd_WriteAliases	cmd.c	/^void Cmd_WriteAliases (FILE *f)$/;"	f
CmpCI_Order	cl_screen.c	/^int CmpCI_Order(const void *p1, const void *p2)$/;"	f
ColorForParticle	gl_rpart.c	/^static byte *ColorForParticle(part_type_t type) {$/;"	f	file:
ColorNameToRGBString	utils.c	/^char *ColorNameToRGBString(char *color_name)$/;"	f
Com_BeginRedirect	common.c	/^void Com_BeginRedirect (void (*RedirectedPrint) (char *)) {$/;"	f
Com_BlockChecksum	md4.c	/^unsigned Com_BlockChecksum (void *buffer, int length)$/;"	f
Com_BlockFullChecksum	md4.c	/^void Com_BlockFullChecksum (void *buffer, int len, unsigned char *outbuf)$/;"	f
Com_DPrintf	common.c	/^void Com_DPrintf (char *fmt, ...) $/;"	f
Com_EndRedirect	common.c	/^void Com_EndRedirect (void) {$/;"	f
Com_HashKey	q_shared.c	/^unsigned long Com_HashKey (const char *str) {$/;"	f
Com_PrintVerticalBar	common.c	/^void Com_PrintVerticalBar(int width)$/;"	f
Com_Printf	common.c	/^void Com_Printf (char *fmt, ...) $/;"	f
Com_Printf	sys_lib_linux.c	6;"	d	file:
Com_Printf	sys_lib_win.c	6;"	d	file:
Com_Printf_State	common.c	/^void Com_Printf_State(int state, char *fmt, ...)$/;"	f
Com_VPrintf	common.c	/^void Com_VPrintf (char *fmt, va_list vl)$/;"	f
Commands_Compare_Func	cmd.c	/^int Commands_Compare_Func (const void * arg1, const void * arg2)$/;"	f
Commands_For_Configs_Init	host.c	/^static void Commands_For_Configs_Init (void)$/;"	f	file:
CommonDraw_Init	hud_common.c	/^void CommonDraw_Init(void)$/;"	f
Compare_Double	parser.c	/^LOCAL int Compare_Double(double a, double b)$/;"	f
Compare_FragMsg	fragstats.c	/^int Compare_FragMsg (const void *p1, const void *p2) {$/;"	f
CompleteCommandNew	keys.c	/^void CompleteCommandNew (void)$/;"	f
CompleteCommandNew_Reset	keys.c	/^void CompleteCommandNew_Reset (void)$/;"	f
CompleteName	keys.c	/^void CompleteName(void) {$/;"	f
Con_CheckResize	console.c	/^void Con_CheckResize (void) {$/;"	f
Con_ClearNotify	console.c	/^void Con_ClearNotify (void) {$/;"	f
Con_Clear_f	console.c	/^void Con_Clear_f (void) {$/;"	f
Con_CreateReadableChars	console.c	/^static void Con_CreateReadableChars(void) {$/;"	f	file:
Con_DrawConsole	console.c	/^void Con_DrawConsole (int lines) {$/;"	f
Con_DrawInput	console.c	/^static void Con_DrawInput(void) {$/;"	f	file:
Con_DrawNotify	console.c	/^void Con_DrawNotify (void) {$/;"	f
Con_Init	console.c	/^void Con_Init (void) {$/;"	f
Con_InitConsoleBuffer	console.c	/^static void Con_InitConsoleBuffer(console_t *conbuffer, int size) {$/;"	f	file:
Con_Linefeed	console.c	/^void Con_Linefeed (void) {$/;"	f
Con_MessageMode2_f	console.c	/^void Con_MessageMode2_f (void) {$/;"	f
Con_MessageMode_f	console.c	/^void Con_MessageMode_f (void) {$/;"	f
Con_PrintW	console.c	/^void Con_PrintW (wchar *txt) {$/;"	f
Con_SafePrintf	console.c	/^void Con_SafePrintf (char *fmt, ...)$/;"	f
Con_SetColor	console.c	/^void Con_SetColor(int idx_from, int count, int c) {$/;"	f
Con_SetWhite	console.c	/^void Con_SetWhite (void) {$/;"	f
Con_Shutdown	console.c	/^void Con_Shutdown (void) {$/;"	f
Con_ToggleConsole_f	console.c	/^void Con_ToggleConsole_f (void) {$/;"	f
Concat	parser.c	/^LOCAL expr_val Concat(EParser p, const expr_val e1, const expr_val e2)$/;"	f
ConfigManager_Init	config_manager.c	/^void ConfigManager_Init(void)$/;"	f
Config_LegacyQuake_f	config_manager.c	/^void Config_LegacyQuake_f(void)$/;"	f
Config_PrintBorder	config_manager.c	/^static void Config_PrintBorder(FILE *f)$/;"	f	file:
Config_PrintHeading	config_manager.c	/^static void Config_PrintHeading(FILE *f, char *title)$/;"	f	file:
Config_PrintLine	config_manager.c	/^static void Config_PrintLine(FILE *f, char *title, int width)$/;"	f	file:
Config_PrintPreamble	config_manager.c	/^static void Config_PrintPreamble(FILE *f)$/;"	f	file:
Config_QuitSave	config_manager.c	/^void Config_QuitSave(void)$/;"	f
ConsistantMVDData	qtv.c	/^int ConsistantMVDData(unsigned char *buffer, int remaining)$/;"	f
ConsistantMVDDataEx	qtv.c	/^int ConsistantMVDDataEx(unsigned char *buffer, int remaining, int *ms)$/;"	f
ConvertWad3ToRGBA	wad.c	/^byte *ConvertWad3ToRGBA(int width, int height, byte *in, qbool alpha)$/;"	f
CopyDirent	sys_linux.c	/^int CopyDirent(sys_dirent *ent, struct dirent *tmpent)$/;"	f
CopyDirent	sys_mac.c	/^int CopyDirent(sys_dirent *ent, struct dirent *tmpent)$/;"	f
CopyServerToClipboard	EX_browser.c	/^static void CopyServerToClipboard (server_data *s)$/;"	f	file:
CopyToClipboard	utils.c	/^void CopyToClipboard(const char *text)$/;"	f
CoronaCount	vx_stuff.h	/^int ParticleCount, ParticleCountHigh, CoronaCount, CoronaCountHigh, MotionBlurCount, MotionBlurCountHigh;$/;"	v
CoronaCountHigh	vx_stuff.h	/^int ParticleCount, ParticleCountHigh, CoronaCount, CoronaCountHigh, MotionBlurCount, MotionBlurCountHigh;$/;"	v
CoronaStats	vx_coronas.c	/^void CoronaStats (int change)$/;"	f
CountNearbyPlayers	teamplay.c	/^static void CountNearbyPlayers(qbool dead)$/;"	f	file:
CreateGame_Draw	menu_multiplayer.c	/^static void CreateGame_Draw(int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page)$/;"	f	file:
CreateGame_Key	menu_multiplayer.c	/^static int CreateGame_Key(int key, CTab_t *tab, CTabPage_t *page)$/;"	f	file:
CreateGame_Mouse_Event	menu_multiplayer.c	/^static qbool CreateGame_Mouse_Event(const mouse_state_t *ms)$/;"	f	file:
CreateNullCursor	linux_glimp.c	/^static Cursor CreateNullCursor(Display *display, Window root)$/;"	f	file:
CreateNullCursor	vid_glx.c	/^static Cursor CreateNullCursor(Display *display, Window root) {$/;"	f	file:
CreateNullCursor	vid_x11.c	/^static Cursor CreateNullCursor (Display *display, Window root)$/;"	f	file:
CreateSpaces	utils.c	/^char *CreateSpaces(int amount) {$/;"	f
Create_Server	EX_browser.c	/^server_data * Create_Server (char *ip)$/;"	f
Create_Server2	EX_browser.c	/^server_data * Create_Server2 (netadr_t n)$/;"	f
Create_Source	EX_browser_sources.c	/^source_data * Create_Source(void)$/;"	f
CrossProduct	mathlib.h	61;"	d
Cvar_AddCvarToGroup	cvar.c	/^static void Cvar_AddCvarToGroup(cvar_t *var)$/;"	f	file:
Cvar_AddGroup	cvar.c	/^static cvar_group_t *Cvar_AddGroup(char *name)$/;"	f	file:
Cvar_CleanUpTempVars	cvar.c	/^void Cvar_CleanUpTempVars (void)$/;"	f
Cvar_Command	cvar.c	/^qbool Cvar_Command (void)$/;"	f
Cvar_CompleteCountPossible	cvar.c	/^int Cvar_CompleteCountPossible (char *partial)$/;"	f
Cvar_CompleteVariable	cvar.c	/^char *Cvar_CompleteVariable (char *partial)$/;"	f
Cvar_Create	cvar.c	/^cvar_t *Cvar_Create (char *name, char *string, int cvarflags)$/;"	f
Cvar_CreateTempVar	cvar.c	/^qbool Cvar_CreateTempVar (void)$/;"	f
Cvar_CvarCompare	cvar.c	/^int Cvar_CvarCompare (const void *p1, const void *p2)$/;"	f
Cvar_CvarList	cvar.c	/^void Cvar_CvarList (qbool use_regex)$/;"	f
Cvar_CvarList_f	cvar.c	/^void Cvar_CvarList_f (void)$/;"	f
Cvar_CvarList_re_f	cvar.c	/^void Cvar_CvarList_re_f (void)$/;"	f
Cvar_Delete	cvar.c	/^qbool Cvar_Delete (const char *name)$/;"	f
Cvar_Find	cvar.c	/^cvar_t *Cvar_Find (const char *var_name)$/;"	f
Cvar_ForceSet	cvar.c	/^void Cvar_ForceSet (cvar_t *var, char *value)$/;"	f
Cvar_GetFlags	cvar.c	/^int Cvar_GetFlags (cvar_t *var)$/;"	f
Cvar_Inc_f	cvar.c	/^void Cvar_Inc_f (void)$/;"	f
Cvar_Init	cvar.c	/^void Cvar_Init (void)$/;"	f
Cvar_LatchedSet	cvar.c	/^void Cvar_LatchedSet (cvar_t *var, char *value)$/;"	f
Cvar_LatchedSetValue	cvar.c	/^void Cvar_LatchedSetValue (cvar_t *var, float value)$/;"	f
Cvar_Next	cvar.c	/^cvar_t *Cvar_Next (cvar_t *var)$/;"	f
Cvar_Register	cvar.c	/^void Cvar_Register (cvar_t *var)$/;"	f
Cvar_Reset	cvar.c	/^void Cvar_Reset (qbool use_regex)$/;"	f
Cvar_ResetCurrentGroup	cvar.c	/^void Cvar_ResetCurrentGroup(void)$/;"	f
Cvar_ResetVar	cvar.c	/^void Cvar_ResetVar (cvar_t *var)$/;"	f
Cvar_Reset_f	cvar.c	/^void Cvar_Reset_f (void)$/;"	f
Cvar_Reset_re_f	cvar.c	/^void Cvar_Reset_re_f (void)$/;"	f
Cvar_RulesetSet	cvar.c	/^void Cvar_RulesetSet(cvar_t *var, char *val, int m)$/;"	f
Cvar_Set	cvar.c	/^void Cvar_Set (cvar_t *var, char *value)$/;"	f
Cvar_SetCurrentGroup	cvar.c	/^void Cvar_SetCurrentGroup(char *name)$/;"	f
Cvar_SetDefault	cvar.c	/^void Cvar_SetDefault(cvar_t *var, float value)$/;"	f
Cvar_SetFlags	cvar.c	/^void Cvar_SetFlags (cvar_t *var, int flags)$/;"	f
Cvar_SetValue	cvar.c	/^void Cvar_SetValue (cvar_t *var, float value)$/;"	f
Cvar_Set_Alias_Str_f	cvar.c	/^void Cvar_Set_Alias_Str_f (void)$/;"	f
Cvar_Set_Bind_Str_f	cvar.c	/^void Cvar_Set_Bind_Str_f (void)$/;"	f
Cvar_Set_Calc_f	cvar.c	/^void Cvar_Set_Calc_f(void)$/;"	f
Cvar_Set_ex_f	cvar.c	/^void Cvar_Set_ex_f (void)$/;"	f
Cvar_Set_f	cvar.c	/^void Cvar_Set_f (void)$/;"	f
Cvar_Set_tp_f	cvar.c	/^void Cvar_Set_tp_f (void)$/;"	f
Cvar_String	cvar.c	/^char *Cvar_String (char *var_name)$/;"	f
Cvar_Toggle	cvar.c	/^void Cvar_Toggle (qbool use_regex)$/;"	f
Cvar_Toggle_f	cvar.c	/^void Cvar_Toggle_f (void)$/;"	f
Cvar_Toggle_re_f	cvar.c	/^void Cvar_Toggle_re_f (void)$/;"	f
Cvar_UnSet	cvar.c	/^void Cvar_UnSet (qbool use_regex)$/;"	f
Cvar_UnSet_f	cvar.c	/^void Cvar_UnSet_f(void)$/;"	f
Cvar_UnSet_re_f	cvar.c	/^void Cvar_UnSet_re_f(void)$/;"	f
Cvar_Value	cvar.c	/^float Cvar_Value (char *var_name)$/;"	f
Cvar_WriteVariables	cvar.c	/^void Cvar_WriteVariables (FILE *f)$/;"	f
DAMAGE_AIM	server.h	338;"	d
DAMAGE_NO	server.h	336;"	d
DAMAGE_YES	server.h	337;"	d
DBG	debug.h	213;"	d
DBG	debug.h	215;"	d
DDActive	vid_wgl.c	/^qbool DDActive;$/;"	v
DDActive	vid_win.c	/^qbool	DDActive;$/;"	v
DDActive	win_wndproc.c	/^qbool DDActive; \/\/ dummy, unused$/;"	v
DDRAW16_driver	mgraph.h	1677;"	d
DDRAW24_driver	mgraph.h	1678;"	d
DDRAW32_driver	mgraph.h	1679;"	d
DDRAW8_driver	mgraph.h	1676;"	d
DEAD	tp_msgs.c	48;"	d	file:
DEAD_DEAD	server.h	334;"	d
DEAD_DYING	server.h	333;"	d
DEAD_NO	server.h	332;"	d
DEAD_SIZE	stats_grid.c	595;"	d	file:
DEATH_WEIGHT	stats_grid.c	703;"	d	file:
DEATH_WEIGHT_CLOSE	stats_grid.c	704;"	d	file:
DEATH_WEIGHT_FAR	stats_grid.c	705;"	d	file:
DEBUG	CarbonSndPlayDB.c	74;"	d	file:
DEBUG	in_mac.c	56;"	d	file:
DEFAULT_CONBUFSIZE	console.c	45;"	d	file:
DEFAULT_CONTROL_FLAGS	ez_controls.h	613;"	d
DEFAULT_HEIGHT	vid_mac.c	32;"	d	file:
DEFAULT_SOUND_PACKET_ATTENUATION	protocol.h	319;"	d
DEFAULT_SOUND_PACKET_VOLUME	protocol.h	318;"	d
DEFAULT_SSHOT_FORMAT	cl_screen.c	73;"	d	file:
DEFAULT_VIEWHEIGHT	protocol.h	344;"	d
DEFAULT_WIDTH	vid_mac.c	31;"	d	file:
DEF_PACKET_SIZE	EX_browser_ping.c	65;"	d	file:
DEF_SAVEGLOBAL	pr_comp.h	134;"	d
DEG2RAD	mathlib.h	47;"	d
DEMOCACHE_FLUSHSIZE	cl_demo.c	148;"	d	file:
DEMOCACHE_MINSIZE	cl_demo.c	147;"	d	file:
DEMOPAGEPADDING	menu_demo.c	452;"	d	file:
DEMOPG_BROWSER	menu_demo.c	/^    DEMOPG_BROWSER,		\/\/ Browse page$/;"	e	enum:__anon44	file:
DEMOPG_ENTRY	menu_demo.c	/^	DEMOPG_ENTRY,		\/\/ Entry page$/;"	e	enum:__anon44	file:
DEMOPG_OPTIONS	menu_demo.c	/^	DEMOPG_OPTIONS		\/\/ Options page$/;"	e	enum:__anon44	file:
DEMOPG_PLAYLIST	menu_demo.c	/^	DEMOPG_PLAYLIST,	\/\/ Playlist page$/;"	e	enum:__anon44	file:
DEMOPLAYBACK	menu_ingame.c	91;"	d	file:
DEMOPROBE_SEEK	cl_demo.c	2493;"	d	file:
DEMOPROBE_VALIDATE_READ	cl_demo.c	2482;"	d	file:
DEMORECORDTIME	cl_demo.c	146;"	d	file:
DEMO_MATCH_AUTOSAVE	cl_demo.c	1764;"	d	file:
DEMO_MATCH_MANUALSAVE	cl_demo.c	1763;"	d	file:
DEMO_MATCH_NORECORD	cl_demo.c	1762;"	d	file:
DEMO_MAXLINES	menu_demo.c	49;"	d	file:
DEMO_OPTIONS_MAX	menu_demo.c	56;"	d	file:
DEMO_PLAYLIST_MAX	menu_demo.c	53;"	d	file:
DEMO_PLAYLIST_NAME_MAX	menu_demo.c	51;"	d	file:
DEMO_PLAYLIST_OPTIONS_MAX	menu_demo.c	52;"	d	file:
DEMO_PLAYLIST_TAB_MAIN	menu_demo.c	54;"	d	file:
DEMO_TAB_MAIN	menu_demo.c	58;"	d	file:
DEMO_TAB_MAX	menu_demo.c	61;"	d	file:
DEMO_TAB_OPTIONS	menu_demo.c	60;"	d	file:
DEMO_TAB_PLAYLIST	menu_demo.c	59;"	d	file:
DEMO_TIME	menu_demo.c	42;"	d	file:
DEMO_TIME	menu_demo.c	44;"	d	file:
DF_ANGLES	protocol.h	244;"	d
DF_DEAD	protocol.h	247;"	d
DF_EFFECTS	protocol.h	245;"	d
DF_GIB	protocol.h	248;"	d
DF_MODEL	protocol.h	250;"	d
DF_ORIGIN	protocol.h	243;"	d
DF_SKINNUM	protocol.h	246;"	d
DF_WEAPONFRAME	protocol.h	249;"	d
DIBHeight	vid_win.c	/^int			DIBWidth, DIBHeight;$/;"	v
DIBWidth	vid_win.c	/^int			DIBWidth, DIBHeight;$/;"	v
DIGEST_SIZE	sha1.h	26;"	d
DIRECTINPUT_VERSION	in_win.c	21;"	d	file:
DIRECTINPUT_VERSION	in_win.c	27;"	d	file:
DIRECTINPUT_VERSION	in_win.c	28;"	d	file:
DIRTYPE	vfs_tar.h	32;"	d
DIST_EPSILON	cmodel.c	168;"	d	file:
DIST_NOT_SET	r_local.h	78;"	d
DI_BufSize	in_win.c	/^static unsigned int DI_BufSize(void)$/;"	f	file:
DI_NODIR	sv_move.c	279;"	d	file:
DLBLOCKSIZE	cl_parse.c	760;"	d	file:
DLL_MW_RemoveHook	in_win.c	/^MW_DllFunc1 DLL_MW_RemoveHook = NULL;$/;"	v
DLL_MW_SetHook	in_win.c	/^MW_DllFunc2 DLL_MW_SetHook = NULL;$/;"	v
DL_NONE	client.h	/^	enum {DL_NONE = 0, DL_QW             } downloadmethod;$/;"	e	enum:__anon122::__anon124
DL_NONE	client.h	/^	enum {DL_NONE = 0, DL_QW, DL_QWCHUNKS} downloadmethod;$/;"	e	enum:__anon122::__anon123
DL_QW	client.h	/^	enum {DL_NONE = 0, DL_QW             } downloadmethod;$/;"	e	enum:__anon122::__anon124
DL_QW	client.h	/^	enum {DL_NONE = 0, DL_QW, DL_QWCHUNKS} downloadmethod;$/;"	e	enum:__anon122::__anon123
DL_QWCHUNKS	client.h	/^	enum {DL_NONE = 0, DL_QW, DL_QWCHUNKS} downloadmethod;$/;"	e	enum:__anon122::__anon123
DMGM_arena	menu_multiplayer.c	/^		DMGM_ffa, DMGM_duel, DMGM_tp, DMGM_arena, DM_game_mode_max$/;"	e	enum:DM_game_mode_e	file:
DMGM_duel	menu_multiplayer.c	/^		DMGM_ffa, DMGM_duel, DMGM_tp, DMGM_arena, DM_game_mode_max$/;"	e	enum:DM_game_mode_e	file:
DMGM_ffa	menu_multiplayer.c	/^		DMGM_ffa, DMGM_duel, DMGM_tp, DMGM_arena, DM_game_mode_max$/;"	e	enum:DM_game_mode_e	file:
DMGM_tp	menu_multiplayer.c	/^		DMGM_ffa, DMGM_duel, DMGM_tp, DMGM_arena, DM_game_mode_max$/;"	e	enum:DM_game_mode_e	file:
DM_IDENT	nmenu_demo.c	7;"	d	file:
DM_game_mode	menu_multiplayer.c	/^	GENERATE_ENUM_MENU_FUNC(DM_game_mode);$/;"	v
DM_game_mode_desc	menu_multiplayer.c	/^	static const char* DM_game_mode_desc[DM_game_mode_max] = {$/;"	v	file:
DM_game_mode_e	menu_multiplayer.c	/^	typedef enum DM_game_mode_e {$/;"	g	file:
DM_game_mode_max	menu_multiplayer.c	/^		DMGM_ffa, DMGM_duel, DMGM_tp, DMGM_arena, DM_game_mode_max$/;"	e	enum:DM_game_mode_e	file:
DM_game_mode_t	menu_multiplayer.c	/^	} DM_game_mode_t;$/;"	t	typeref:enum:DM_game_mode_e	file:
DOCUMENT_INDENT	document_rendering.c	5;"	d	file:
DOT_SIZE	common.c	155;"	d	file:
DPS_MAXSPANS	d_polyse.c	36;"	d	file:
DRAW_CI_BILLBOARD	cl_screen.c	1356;"	d	file:
DRAW_CP_BILLBOARD	console.c	/^void DRAW_CP_BILLBOARD(cp_texture_t *_ptex, conpart_t *_p) {$/;"	f
DRAW_PARTICLE_BILLBOARD	gl_rpart.c	663;"	d	file:
DR_SOLID	d_iface.h	148;"	d
DR_TRANSPARENT	d_iface.h	149;"	d
DS_EnumDevices	snd_win.c	/^static BOOL CALLBACK DS_EnumDevices(LPGUID lpGUID, LPCTSTR lpszDesc, LPCTSTR lpszDrvName, LPVOID lpContext)$/;"	f	file:
DS_SPAN_LIST_END	d_local.h	34;"	d
DSoundError	snd_win.c	/^char *DSoundError (int error)$/;"	f
DT_FACES_FRONT	modelgen.h	90;"	d
DT_MVD	client.h	/^	DT_MVD,$/;"	e	enum:demotype_e
DT_NONE	client.h	/^	DT_NONE,$/;"	e	enum:demotype_e
DT_NQDEMO	client.h	/^	DT_NQDEMO$/;"	e	enum:demotype_e
DT_QWD	client.h	/^	DT_QWD,$/;"	e	enum:demotype_e
DWORD	sys.h	35;"	d
D_BeginDirectRect	vid_glx.c	/^void D_BeginDirectRect (int x, int y, byte *pbitmap, int width, int height) {}$/;"	f
D_BeginDirectRect	vid_svgalib.c	/^void D_BeginDirectRect (int x, int y, byte *pbitmap, int width, int height)$/;"	f
D_BeginDirectRect	vid_win.c	/^void D_BeginDirectRect (int x, int y, byte *pbitmap, int width, int height) {$/;"	f
D_BeginDirectRect	vid_x11.c	/^void D_BeginDirectRect (int x, int y, byte *pbitmap, int width, int height) { }$/;"	f
D_CacheSurface	d_surf.c	/^surfcache_t *D_CacheSurface (msurface_t *surface, int miplevel)$/;"	f
D_CalcGradients	d_edge.c	/^void D_CalcGradients (msurface_t *pface) {$/;"	f
D_CheckCacheGuard	d_surf.c	/^void D_CheckCacheGuard (void)$/;"	f
D_ClearCacheGuard	d_surf.c	/^void D_ClearCacheGuard (void)$/;"	f
D_DisableBackBufferAccess	d_init.c	/^void D_DisableBackBufferAccess (void) {$/;"	f
D_DrawNonSubdiv	d_polyse.c	/^void D_DrawNonSubdiv (void)$/;"	f
D_DrawParticle	d_part.c	/^void D_DrawParticle (particle_t *pparticle)$/;"	f
D_DrawParticle	r_part.c	/^void D_DrawParticle (particle_t *pparticle) {$/;"	f
D_DrawSkyScans8	d_sky.c	/^void D_DrawSkyScans8 (espan_t *pspan) {$/;"	f
D_DrawSolidSurface	d_edge.c	/^void D_DrawSolidSurface (surf_t *surf, int color) {$/;"	f
D_DrawSpans8	d_scan.c	/^void D_DrawSpans8 (espan_t *pspan) {$/;"	f
D_DrawSprite	d_sprite.c	/^void D_DrawSprite (void)$/;"	f
D_DrawSubdiv	d_polyse.c	/^void D_DrawSubdiv (void)$/;"	f
D_DrawSurfaces	d_edge.c	/^void D_DrawSurfaces (void) {$/;"	f
D_DrawTurbulent8Span	d_scan.c	/^void D_DrawTurbulent8Span (void) {$/;"	f
D_DrawZPoint	d_zpoint.c	/^void D_DrawZPoint (void)$/;"	f
D_DrawZSpans	d_scan.c	/^void D_DrawZSpans (espan_t *pspan) {$/;"	f
D_EnableBackBufferAccess	d_init.c	/^void D_EnableBackBufferAccess (void) {$/;"	f
D_EndDirectRect	vid_glx.c	/^void D_EndDirectRect (int x, int y, int width, int height) {}$/;"	f
D_EndDirectRect	vid_svgalib.c	/^void D_EndDirectRect (int x, int y, int width, int height)$/;"	f
D_EndDirectRect	vid_win.c	/^void D_EndDirectRect (int x, int y, int width, int height) {$/;"	f
D_EndDirectRect	vid_x11.c	/^void D_EndDirectRect (int x, int y, int width, int height) {}$/;"	f
D_EndParticles	d_part.c	/^void D_EndParticles (void)$/;"	f
D_FillRect	d_fill.c	/^void D_FillRect (vrect_t *rect, int color)$/;"	f
D_FlushCaches	d_surf.c	/^void D_FlushCaches (void)$/;"	f
D_FlushCaches	gl_rmisc.c	/^void D_FlushCaches (void) {}$/;"	f
D_Init	d_init.c	/^void D_Init (void) {$/;"	f
D_InitCaches	d_surf.c	/^void D_InitCaches (void *buffer, int size)$/;"	f
D_MipLevelForScale	d_edge.c	/^int D_MipLevelForScale (float scale) {$/;"	f
D_Patch	d_modech.c	/^void D_Patch (void)$/;"	f
D_PolysetCalcGradients	d_polyse.c	/^void D_PolysetCalcGradients (int skinwidth)$/;"	f
D_PolysetDraw	d_polyse.c	/^void D_PolysetDraw (void)$/;"	f
D_PolysetDrawFinalVerts	d_polyse.c	/^void D_PolysetDrawFinalVerts (finalvert_t *fv, int numverts)$/;"	f
D_PolysetDrawSpans8	d_polyse.c	/^void D_PolysetDrawSpans8 (spanpackage_t *pspanpackage)$/;"	f
D_PolysetFillSpans8	d_polyse.c	/^void D_PolysetFillSpans8 (spanpackage_t *pspanpackage)$/;"	f
D_PolysetRecursiveTriangle	d_polyse.c	/^void D_PolysetRecursiveTriangle (int *lp1, int *lp2, int *lp3)$/;"	f
D_PolysetScanLeftEdge	d_polyse.c	/^void D_PolysetScanLeftEdge (int height)$/;"	f
D_PolysetSetEdgeTable	d_polyse.c	/^void D_PolysetSetEdgeTable (void)$/;"	f
D_PolysetSetUpForLineScan	d_polyse.c	/^void D_PolysetSetUpForLineScan(fixed8_t startvertu, fixed8_t startvertv,$/;"	f
D_PolysetUpdateTables	d_polyse.c	/^void D_PolysetUpdateTables (void)$/;"	f
D_RasterizeAliasPolySmooth	d_polyse.c	/^void D_RasterizeAliasPolySmooth (void)$/;"	f
D_SCAlloc	d_surf.c	/^surfcache_t     *D_SCAlloc (int width, int size)$/;"	f
D_SCDump	d_surf.c	/^void D_SCDump (void)$/;"	f
D_SetupFrame	d_init.c	/^void D_SetupFrame (void) {$/;"	f
D_Sky_uv_To_st	d_sky.c	/^void D_Sky_uv_To_st (int u, int v, fixed16_t *s, fixed16_t *t) {$/;"	f
D_SpriteCalculateGradients	d_sprite.c	/^void D_SpriteCalculateGradients (void)$/;"	f
D_SpriteDrawSpans	d_sprite.c	/^void D_SpriteDrawSpans (sspan_t *pspan)$/;"	f
D_SpriteScanLeftEdge	d_sprite.c	/^void D_SpriteScanLeftEdge (void)$/;"	f
D_SpriteScanRightEdge	d_sprite.c	/^void D_SpriteScanRightEdge (void)$/;"	f
D_StartParticles	d_part.c	/^void D_StartParticles (void)$/;"	f
D_SurfaceCacheForRes	d_surf.c	/^int     D_SurfaceCacheForRes (int width, int height)$/;"	f
D_ViewChanged	d_modech.c	/^void D_ViewChanged (void)$/;"	f
D_WarpScreen	d_scan.c	/^void D_WarpScreen (void) {$/;"	f
D_log2	d_surf.c	/^int D_log2 (int num)$/;"	f
Date_f	console.c	/^void Date_f (void)$/;"	f
Deactivate_Popup_Menu	new_menu.c	/^void Deactivate_Popup_Menu(void)$/;"	f
Decode	md4.c	/^static void Decode (UINT4 *output, unsigned char *input, unsigned int len)$/;"	f	file:
DecompressVis	cmodel.c	/^static byte *DecompressVis (byte *in)$/;"	f	file:
DefaultConfig	menu_options.c	/^void DefaultConfig(void) { Cbuf_AddText("cfg_reset full\\n"); }$/;"	f
DeleteGroupMember	match_tools.c	/^static void DeleteGroupMember(mapgroup_t *group, char *member) {$/;"	f	file:
DeleteMapGroup	match_tools.c	/^static void DeleteMapGroup(mapgroup_t *group) {$/;"	f	file:
DeleteReTrigger	tp_triggers.c	/^static void DeleteReTrigger (pcre_trigger_t *t)$/;"	f	file:
DeleteServerAliases	cmd.c	/^void DeleteServerAliases(void)$/;"	f
DeleteSkyGroup	match_tools.c	/^static void DeleteSkyGroup(skygroup_t *group) {$/;"	f	file:
DeleteSkyGroupMember	match_tools.c	/^static void DeleteSkyGroupMember(skygroup_t *group, char *member) {$/;"	f	file:
DeleteUserAliases	config_manager.c	/^static void DeleteUserAliases(void)$/;"	f	file:
DeleteUserVariables	config_manager.c	/^static void DeleteUserVariables(void)$/;"	f	file:
Delete_Server	EX_browser.c	/^void Delete_Server (server_data *s)$/;"	f
Delete_Source	EX_browser_sources.c	/^void Delete_Source(source_data *s)$/;"	f
DemoControls_Destroy	demo_controls.c	/^static void DemoControls_Destroy(void)$/;"	f	file:
DemoControls_Draw	demo_controls.c	/^void DemoControls_Draw(void)$/;"	f
DemoControls_Init	demo_controls.c	/^static void DemoControls_Init(void)$/;"	f	file:
DemoControls_KeyEvent	demo_controls.c	/^qbool DemoControls_KeyEvent(int key, int unichar, qbool down)$/;"	f
DemoControls_MouseEvent	demo_controls.c	/^qbool DemoControls_MouseEvent(mouse_state_t *ms)$/;"	f
DemoControls_Toggle	demo_controls.c	/^static void DemoControls_Toggle(void)$/;"	f	file:
DemoControls_f	demo_controls.c	/^void DemoControls_f(void)$/;"	f
Demo_AddArchiveToPlayList	menu_demo.c	/^void Demo_AddArchiveToPlayList(const char *archive_path) {$/;"	f
Demo_AddDemoToPlaylist	menu_demo.c	/^void Demo_AddDemoToPlaylist (char *display_name, char *path)$/;"	f
Demo_AddDirToPlaylist	menu_demo.c	/^void Demo_AddDirToPlaylist (char *dir_path)$/;"	f
Demo_AddZipToPlaylist	menu_demo.c	/^void Demo_AddZipToPlaylist (const char *zip_path)$/;"	f
Demo_Playlist_Del	menu_demo.c	/^static void Demo_Playlist_Del (int i)$/;"	f	file:
Demo_Playlist_Move_Down	menu_demo.c	/^static void Demo_Playlist_Move_Down (int i)$/;"	f	file:
Demo_Playlist_Move_Up	menu_demo.c	/^static void Demo_Playlist_Move_Up (int i)$/;"	f	file:
Demo_Playlist_SelectNext	menu_demo.c	/^static void Demo_Playlist_SelectNext(void)$/;"	f	file:
Demo_Playlist_SelectPrev	menu_demo.c	/^static void Demo_Playlist_SelectPrev(void)$/;"	f	file:
Demo_Playlist_Setup_f	menu_demo.c	/^static void Demo_Playlist_Setup_f (void)$/;"	f	file:
Demo_Playlist_Start	menu_demo.c	/^static void Demo_Playlist_Start (int i)$/;"	f	file:
DestroyDIBWindow	vid_win.c	/^void DestroyDIBWindow (void) {$/;"	f
DestroyFullDIBWindow	vid_win.c	/^void DestroyFullDIBWindow (void) {$/;"	f
DestroyFullscreenWindow	vid_win.c	/^void DestroyFullscreenWindow (void) {$/;"	f
Diamond4x	gl_bloom.c	/^static float Diamond4x[4][4] = {  $/;"	v	file:
Diamond6x	gl_bloom.c	/^static float Diamond6x[6][6] = { $/;"	v	file:
Diamond8x	gl_bloom.c	/^static float Diamond8x[8][8] = { $/;"	v	file:
Display_Ignorelist	ignore.c	/^static void Display_Ignorelist(void) {$/;"	f	file:
DoOptions	sys_mac.c	/^DoOptions()$/;"	f	file:
DotProduct	mathlib.h	53;"	d
DrawCI	cl_screen.c	/^void DrawCI (void) {$/;"	f
DrawCP	console.c	/^void DrawCP (int lines) {$/;"	f
DrawGLPoly	gl_rsurf.c	/^void DrawGLPoly (glpoly_t *p) {$/;"	f
DrawMuzzleflash	gl_rpart.c	/^void DrawMuzzleflash (vec3_t start, vec3_t angle, vec3_t vel)$/;"	f
DrawSkyFace	gl_warp.c	/^static void DrawSkyFace (int axis)$/;"	f	file:
DrawSkyPolygon	gl_warp.c	/^void DrawSkyPolygon (int nump, vec3_t vecs) {$/;"	f
DrawTextureChains	gl_rsurf.c	/^void DrawTextureChains (model_t *model, int contents)$/;"	f
Draw_3D_Text	3dtext.c	/^void Draw_3D_Text(vec3_t position, vec3_t orientation, int x, int y, char *text, int type)$/;"	f
Draw_3D_Text_Pop_Matrix	3dtext.c	/^void Draw_3D_Text_Pop_Matrix(void)$/;"	f
Draw_3D_Text_Position	3dtext.c	/^void Draw_3D_Text_Position(vec3_t position, vec3_t destination, int x, int y, char *text, int type, float scale)$/;"	f
Draw_3D_Text_Position_Setup_Matrix	3dtext.c	/^void Draw_3D_Text_Position_Setup_Matrix(vec3_t position, vec3_t destination, float scale)$/;"	f
Draw_3D_Text_Remove_Drawable_Rectangle	3dtext.c	/^void Draw_3D_Text_Remove_Drawable_Rectangle(void)$/;"	f
Draw_3D_Text_Scale	3dtext.c	/^void Draw_3D_Text_Scale(vec3_t position, vec3_t orientation, int x, int y, char *text, int type, float scale)$/;"	f
Draw_3D_Text_Setup_Drawable_Rectangle	3dtext.c	/^void Draw_3D_Text_Setup_Drawable_Rectangle(int width, int height)$/;"	f
Draw_AMFStatLoss	vx_stuff.c	/^void Draw_AMFStatLoss (int stat, hud_t* hud) {$/;"	f
Draw_AdjustConback	gl_draw.c	/^void Draw_AdjustConback (void)$/;"	f
Draw_AlphaCircle	gl_draw.c	/^void Draw_AlphaCircle (int x, int y, float radius, float thickness, qbool fill, byte c, float alpha)$/;"	f
Draw_AlphaCircleFill	gl_draw.c	/^void Draw_AlphaCircleFill (int x, int y, float radius, byte color, float alpha)$/;"	f
Draw_AlphaCircleFillRGB	gl_draw.c	/^void Draw_AlphaCircleFillRGB (int x, int y, float radius, color_t color)$/;"	f
Draw_AlphaCircleOutline	gl_draw.c	/^void Draw_AlphaCircleOutline (int x, int y, float radius, float thickness, byte color, float alpha)$/;"	f
Draw_AlphaCircleOutlineRGB	gl_draw.c	/^void Draw_AlphaCircleOutlineRGB (int x, int y, float radius, float thickness, color_t color)$/;"	f
Draw_AlphaCircleRGB	gl_draw.c	/^void Draw_AlphaCircleRGB (int x, int y, float radius, float thickness, qbool fill, color_t color)$/;"	f
Draw_AlphaFill	gl_draw.c	/^void Draw_AlphaFill (int x, int y, int w, int h, byte c, float alpha)$/;"	f
Draw_AlphaFill	r_draw.c	/^void Draw_AlphaFill (int x, int y, int w, int h, byte c, float alpha)$/;"	f
Draw_AlphaFill	sbar.c	1085;"	d	file:
Draw_AlphaFillRGB	gl_draw.c	/^void Draw_AlphaFillRGB (int x, int y, int w, int h, color_t color)$/;"	f
Draw_AlphaFillRGB	r_draw.c	/^void Draw_AlphaFillRGB (int x, int y, int width, int height, color_t color)$/;"	f
Draw_AlphaLine	gl_draw.c	/^void Draw_AlphaLine (int x_start, int y_start, int x_end, int y_end, float thickness, byte c, float alpha)$/;"	f
Draw_AlphaLine	r_draw.c	/^void Draw_AlphaLine (int x_start, int y_start, int x_end, int y_end, float thickness, byte c, float alpha)$/;"	f
Draw_AlphaLineRGB	gl_draw.c	/^void Draw_AlphaLineRGB (int x_start, int y_start, int x_end, int y_end, float thickness, color_t color)$/;"	f
Draw_AlphaLineRGB	r_draw.c	/^void Draw_AlphaLineRGB (int x_start, int y_start, int x_end, int y_end, float thickness, color_t color)$/;"	f
Draw_AlphaLineRealRGB	gl_draw.c	/^void Draw_AlphaLineRealRGB (int x_start, int y_start, int x_end, int y_end, float thickness, float r, float g, float b, float a)$/;"	f
Draw_AlphaPic	gl_draw.c	/^void Draw_AlphaPic (int x, int y, mpic_t *pic, float alpha)$/;"	f
Draw_AlphaPic	r_draw.c	/^void Draw_AlphaPic (int x, int y, mpic_t *pic, float alpha)$/;"	f
Draw_AlphaPieSlice	gl_draw.c	/^void Draw_AlphaPieSlice (int x, int y, float radius, float startangle, float endangle, float thickness, qbool fill, byte c, float alpha)$/;"	f
Draw_AlphaPieSliceRGB	gl_draw.c	/^void Draw_AlphaPieSliceRGB (int x, int y, float radius, float startangle, float endangle, float thickness, qbool fill, color_t color)$/;"	f
Draw_AlphaRectangle	gl_draw.c	/^void Draw_AlphaRectangle (int x, int y, int w, int h, byte c, float thickness, qbool fill, float alpha)$/;"	f
Draw_AlphaRectangleRGB	gl_draw.c	/^void Draw_AlphaRectangleRGB (int x, int y, int w, int h, float thickness, qbool fill, color_t color)$/;"	f
Draw_AlphaRectangleRGB	r_draw.c	/^void Draw_AlphaRectangleRGB (int x, int y, int w, int h, float thickness, qbool fill, color_t color)$/;"	f
Draw_AlphaRectangleRealRGB	gl_draw.c	/^void Draw_AlphaRectangleRealRGB (int x, int y, int w, int h, float thickness, qbool fill, float r, float g, float b, float a)$/;"	f
Draw_AlphaString	gl_draw.c	/^void Draw_AlphaString(int x, int y, const char *text, float alpha)$/;"	f
Draw_AlphaSubPic	gl_draw.c	/^void Draw_AlphaSubPic (int x, int y, mpic_t *pic, int srcx, int srcy, int width, int height, float alpha)$/;"	f
Draw_AlphaSubPic	r_draw.c	/^void Draw_AlphaSubPic (int x, int y, mpic_t *pic, int srcx, int srcy, int width, int height, float alpha)$/;"	f
Draw_AlphaWindow	vx_stuff.c	/^void Draw_AlphaWindow (int x1, int y1, int x2, int y2, int col, float alpha)$/;"	f
Draw_Alt_String	gl_draw.c	/^void Draw_Alt_String(int x, int y, const char *text)$/;"	f
Draw_Alt_String	r_draw.c	/^void Draw_Alt_String (int x, int y, const char *str)$/;"	f
Draw_BeginDisc	gl_draw.c	/^void Draw_BeginDisc (void)$/;"	f
Draw_BeginDisc	r_draw.c	/^void Draw_BeginDisc (void)$/;"	f
Draw_BigCharacter	gl_draw.c	/^void Draw_BigCharacter(int x, int y, char c, color_t color, float scale, float alpha)$/;"	f
Draw_BigCharacter	r_draw.c	/^void Draw_BigCharacter(int x, int y, char c, color_t color, float scale, float alpha)$/;"	f
Draw_BigFontAvailable	common_draw.c	/^qbool Draw_BigFontAvailable(void)$/;"	f
Draw_BigString	gl_draw.c	/^void Draw_BigString (int x, int y, const char *text, clrinfo_t *color, int color_count, float scale, float alpha, int char_gap)$/;"	f
Draw_BigString	r_draw.c	/^void Draw_BigString (int x, int y, const char *text, clrinfo_t *color, int color_count, float scale, float alpha, int char_gap)$/;"	f
Draw_BresenhamLine	r_draw.c	/^static void Draw_BresenhamLine(int x1, int y1, int x2, int y2, byte color)$/;"	f	file:
Draw_BresenhamThickLine	r_draw.c	/^static void Draw_BresenhamThickLine (int x1, int y1, int x2, int y2, int thick, byte color)$/;"	f	file:
Draw_CachePic	gl_draw.c	/^mpic_t *Draw_CachePic (char *path)$/;"	f
Draw_CachePic	r_draw.c	/^mpic_t *Draw_CachePic (char *path)$/;"	f
Draw_CachePicSafe	gl_draw.c	/^mpic_t *Draw_CachePicSafe (const char *path, qbool crash, qbool only24bit)$/;"	f
Draw_CachePicSafe	r_draw.c	/^mpic_t *Draw_CachePicSafe(const char *path, qbool syserror, qbool only24bit)$/;"	f
Draw_CacheWadPic	gl_draw.c	/^mpic_t *Draw_CacheWadPic (char *name)$/;"	f
Draw_CacheWadPic	r_draw.c	/^mpic_t *Draw_CacheWadPic (char *name)$/;"	f
Draw_CharToConback	r_draw.c	/^void Draw_CharToConback (int num, byte *dest)$/;"	f
Draw_Character	gl_draw.c	/^void Draw_Character (int x, int y, int num)$/;"	f
Draw_Character	r_draw.c	/^void Draw_Character (int x, int y, int num)$/;"	f
Draw_CharacterBase	gl_draw.c	/^static void Draw_CharacterBase (int x, int y, wchar num, float scale, qbool apply_overall_alpha, byte color[4], qbool bigchar)$/;"	f	file:
Draw_CharacterW	gl_draw.c	/^void Draw_CharacterW (int x, int y, wchar num)$/;"	f
Draw_CharacterW	r_draw.c	/^void Draw_CharacterW (int x, int y, wchar num)$/;"	f
Draw_ColoredString	gl_draw.c	/^void Draw_ColoredString(int x, int y, const char *text, int red)$/;"	f
Draw_ColoredString	r_draw.c	/^void Draw_ColoredString (int x, int y, const char *text, int red)$/;"	f
Draw_ColoredString3	gl_draw.c	/^void Draw_ColoredString3(int x, int y, const char *text, clrinfo_t *color, int color_count, int red)$/;"	f
Draw_ColoredString3	r_draw.c	/^void Draw_ColoredString3 (int x, int y, const char *text, clrinfo_t *clr, int clr_cnt, int red)$/;"	f
Draw_ColoredString3W	gl_draw.c	/^void Draw_ColoredString3W(int x, int y, const wchar *text, clrinfo_t *color, int color_count, int red)$/;"	f
Draw_ColoredString3W	r_draw.c	/^void Draw_ColoredString3W (int x, int y, const wchar *text, clrinfo_t *clr, int clr_cnt, int red)$/;"	f
Draw_ConsoleBackground	gl_draw.c	/^void Draw_ConsoleBackground (int lines)$/;"	f
Draw_ConsoleBackground	r_draw.c	/^void Draw_ConsoleBackground (int lines)$/;"	f
Draw_Convert24bitTo8bit	r_draw.c	/^byte *Draw_Convert24bitTo8bit(byte *src, int bytes_per_pixel, int width, int height, qbool dither)$/;"	f
Draw_Crosshair	gl_draw.c	/^void Draw_Crosshair (void)$/;"	f
Draw_Crosshair	r_draw.c	/^void Draw_Crosshair(void)$/;"	f
Draw_DisableScissor	gl_draw.c	/^void Draw_DisableScissor()$/;"	f
Draw_DisableScissor	r_draw.c	/^void Draw_DisableScissor()$/;"	f
Draw_EnableScissor	gl_draw.c	/^void Draw_EnableScissor(int left, int right, int top, int bottom)$/;"	f
Draw_EnableScissor	r_draw.c	/^void Draw_EnableScissor(int left, int right, int top, int bottom)$/;"	f
Draw_EnableScissorRectangle	gl_draw.c	/^void Draw_EnableScissorRectangle(int x, int y, int width, int height)$/;"	f
Draw_EnableScissorRectangle	r_draw.c	/^void Draw_EnableScissorRectangle(int x, int y, int width, int height)$/;"	f
Draw_EndDisc	gl_draw.c	/^void Draw_EndDisc (void) {}$/;"	f
Draw_EndDisc	r_draw.c	/^void Draw_EndDisc (void)$/;"	f
Draw_FadeBox	r_draw.c	/^static void Draw_FadeBox (int x, int y, int width, int height, byte color, float alpha)$/;"	f	file:
Draw_FadeScreen	gl_draw.c	/^void Draw_FadeScreen (void)$/;"	f
Draw_FadeScreen	r_draw.c	/^void Draw_FadeScreen (void)$/;"	f
Draw_Fill	gl_draw.c	/^void Draw_Fill (int x, int y, int w, int h, byte c)$/;"	f
Draw_Fill	r_draw.c	/^void Draw_Fill (int x, int y, int w, int h, byte c)$/;"	f
Draw_FindNearestColor	r_draw.c	/^byte Draw_FindNearestColor(color_t color)$/;"	f
Draw_FindNearestColorByBytes	r_draw.c	/^byte Draw_FindNearestColorByBytes(byte r, byte g, byte b, byte a)$/;"	f
Draw_FindNearestColorByVect	r_draw.c	/^byte Draw_FindNearestColorByVect(byte rgba[4])$/;"	f
Draw_FitAlphaSubPic	common_draw.c	/^void Draw_FitAlphaSubPic (int x, int y, int target_width, int target_height, $/;"	f
Draw_FitPic	gl_draw.c	/^void Draw_FitPic (int x, int y, int fit_width, int fit_height, mpic_t *gl)$/;"	f
Draw_FitPic	r_draw.c	/^void Draw_FitPic (int x, int y, int fit_width, int fit_height, mpic_t *pic)$/;"	f
Draw_GetBigfontSourceCoords	common_draw.c	/^void Draw_GetBigfontSourceCoords(char c, int char_width, int char_height, int *sx, int *sy)$/;"	f
Draw_Init	gl_draw.c	/^void Draw_Init (void)$/;"	f
Draw_Init	r_draw.c	/^void Draw_Init (void)$/;"	f
Draw_InitCharset	gl_draw.c	/^void Draw_InitCharset(void)$/;"	f
Draw_InitConback	gl_draw.c	/^void Draw_InitConback (void)$/;"	f
Draw_InitCrosshairs	gl_draw.c	/^void Draw_InitCrosshairs(void)$/;"	f
Draw_LoadCharset	gl_draw.c	/^static int Draw_LoadCharset(const char *name)$/;"	f	file:
Draw_LoadCharset_f	gl_draw.c	/^void Draw_LoadCharset_f (void)$/;"	f
Draw_Pic	gl_draw.c	/^void Draw_Pic (int x, int y, mpic_t *pic)$/;"	f
Draw_Pic	r_draw.c	/^void Draw_Pic (int x, int y, mpic_t *pic)$/;"	f
Draw_Pixel	r_draw.c	/^static __inline void Draw_Pixel(int x, int y, byte color)$/;"	f	file:
Draw_Polygon	gl_draw.c	/^void Draw_Polygon(int x, int y, vec3_t *vertices, int num_vertices, qbool fill, color_t color)$/;"	f
Draw_Polygon	r_draw.c	/^void Draw_Polygon(int x, int y, vec3_t *vertices, int num_vertices, qbool fill, color_t color)$/;"	f
Draw_RectStretch	r_draw.c	/^void Draw_RectStretch(mpic_t *pic, int x, int y, int width, int height)$/;"	f
Draw_RectStretchSubPic	r_draw.c	/^void Draw_RectStretchSubPic(byte *src,								\/\/ Source picture data.$/;"	f
Draw_SAlphaPic	gl_draw.c	/^void Draw_SAlphaPic (int x, int y, mpic_t *gl, float alpha, float scale)$/;"	f
Draw_SAlphaSubPic	gl_draw.c	/^void Draw_SAlphaSubPic (int x, int y, mpic_t *pic, int src_x, int src_y, int src_width, int src_height, float scale, float alpha)$/;"	f
Draw_SAlphaSubPic	r_draw.c	/^void Draw_SAlphaSubPic (int x, int y, mpic_t *pic, int src_x, int src_y, int src_width, int src_height, float scale, float alpha)$/;"	f
Draw_SAlphaSubPic2	gl_draw.c	/^void Draw_SAlphaSubPic2 (int x, int y, mpic_t *pic, int src_x, int src_y, int src_width, int src_height, float scale_x, float scale_y, float alpha)$/;"	f
Draw_SAlphaSubPic2	r_draw.c	/^void Draw_SAlphaSubPic2 (int x, int y, mpic_t *pic, int src_x, int src_y, int src_width, int src_height, float scale_x, float scale_y, float alpha)$/;"	f
Draw_SAlt_String	gl_draw.c	/^void Draw_SAlt_String (int x, int y, const char *text, float scale)$/;"	f
Draw_SAlt_String	r_draw.c	/^void Draw_SAlt_String (int x, int y, const char *str, float scale)$/;"	f
Draw_SCharacter	gl_draw.c	/^void Draw_SCharacter (int x, int y, int num, float scale)$/;"	f
Draw_SCharacter	r_draw.c	/^void Draw_SCharacter (int x, int y, int num, float scale)$/;"	f
Draw_SCharacterW	gl_draw.c	/^void Draw_SCharacterW (int x, int y, wchar num, float scale)$/;"	f
Draw_SColoredAlphaString	gl_draw.c	/^void Draw_SColoredAlphaString (int x, int y, const wchar *text, clrinfo_t *color, int color_count, int red, float scale, float alpha)$/;"	f
Draw_SColoredCharacterW	gl_draw.c	/^void Draw_SColoredCharacterW (int x, int y, wchar num, color_t color, float scale)$/;"	f
Draw_SColoredCharacterW	r_draw.c	/^void Draw_SColoredCharacterW (int x, int y, wchar num, color_t color, float scale)$/;"	f
Draw_SColoredString	gl_draw.c	/^void Draw_SColoredString (int x, int y, const wchar *text, clrinfo_t *color, int color_count, int red, float scale)$/;"	f
Draw_SColoredString	r_draw.c	/^void Draw_SColoredString (int x, int y, const wchar *text, clrinfo_t *clr, int clr_cnt, int red, float scale)$/;"	f
Draw_SFill	gl_draw.c	/^void Draw_SFill (int x, int y, int w, int h, byte c, float scale)$/;"	f
Draw_SFill	r_draw.c	/^void Draw_SFill (int x, int y, int w, int h, byte c, float scale)$/;"	f
Draw_SPic	gl_draw.c	/^void Draw_SPic (int x, int y, mpic_t *gl, float scale)$/;"	f
Draw_SPic	r_draw.c	/^void Draw_SPic (int x, int y, mpic_t *pic, float scale)$/;"	f
Draw_SString	gl_draw.c	/^void Draw_SString (int x, int y, const char *text, float scale)$/;"	f
Draw_SString	r_draw.c	/^void Draw_SString (int x, int y, const char *str, float scale)$/;"	f
Draw_SSubPic	gl_draw.c	/^void Draw_SSubPic(int x, int y, mpic_t *gl, int srcx, int srcy, int width, int height, float scale)$/;"	f
Draw_SSubPic	r_draw.c	/^void Draw_SSubPic(int x, int y, mpic_t *pic, int srcx, int srcy, int width, int height, float scale)$/;"	f
Draw_STransPic	gl_draw.c	/^void Draw_STransPic (int x, int y, mpic_t *pic, float scale)$/;"	f
Draw_STransPic	r_draw.c	/^void Draw_STransPic (int x, int y, mpic_t *pic, float scale)$/;"	f
Draw_ScaledCharacterW	r_draw.c	/^void Draw_ScaledCharacterW (int x, int y, wchar num, float scale)$/;"	f
Draw_Server_Statusbar	EX_browser.c	/^void Draw_Server_Statusbar(int x, int y, int w, int h, server_data *s, int count, int total)$/;"	f
Draw_SetOverallAlpha	gl_draw.c	/^void Draw_SetOverallAlpha(float alpha)$/;"	f
Draw_SetOverallAlpha	r_draw.c	/^void Draw_SetOverallAlpha(float opacity)$/;"	f
Draw_StretchLine	r_draw.c	/^static void Draw_StretchLine(byte *srcdata, int src_width, int x_dest_start, int x_dest_end, int x_src_start, int x_src_end, int y_src, int y_dest)$/;"	f	file:
Draw_String	gl_draw.c	/^void Draw_String (int x, int y, const char *text)$/;"	f
Draw_String	r_draw.c	/^void Draw_String (int x, int y, const char *str)$/;"	f
Draw_StringBase	gl_draw.c	/^static void Draw_StringBase (int x, int y, const wchar *text, clrinfo_t *color, int color_count, int red, float scale, float alpha, qbool bigchar, int char_gap)$/;"	f	file:
Draw_StringW	gl_draw.c	/^void Draw_StringW (int x, int y, const wchar *text)$/;"	f
Draw_StringW	r_draw.c	/^void Draw_StringW (int x, int y, const wchar *str)$/;"	f
Draw_SubPic	gl_draw.c	/^void Draw_SubPic (int x, int y, mpic_t *pic, int srcx, int srcy, int width, int height)$/;"	f
Draw_SubPic	r_draw.c	/^void Draw_SubPic (int x, int y, mpic_t *pic, int srcx, int srcy, int width, int height)$/;"	f
Draw_SubPicTiled	common_draw.c	/^void Draw_SubPicTiled(int x, int y, $/;"	f
Draw_TextBox	gl_draw.c	/^void Draw_TextBox (int x, int y, int width, int lines)$/;"	f
Draw_TextBox	r_draw.c	/^void Draw_TextBox (int x, int y, int width, int lines)$/;"	f
Draw_TileClear	gl_draw.c	/^void Draw_TileClear (int x, int y, int w, int h)$/;"	f
Draw_TileClear	r_draw.c	/^void Draw_TileClear (int x, int y, int w, int h)$/;"	f
Draw_TransPic	gl_draw.c	/^void Draw_TransPic (int x, int y, mpic_t *pic)$/;"	f
Draw_TransPic	r_draw.c	/^void Draw_TransPic (int x, int y, mpic_t *pic)$/;"	f
Draw_TransSubPic	gl_draw.c	/^void Draw_TransSubPic(int x, int y, mpic_t *pic, int srcx, int srcy, int width, int height)$/;"	f
Draw_TransSubPic	r_draw.c	/^void Draw_TransSubPic (int x, int y, mpic_t *pic, int sub_x, int sub_y, int sub_width, int sub_height)$/;"	f
DropPunchAngle	cl_view.c	/^void DropPunchAngle (void) {$/;"	f
DstBlend	gl_rpart.c	/^	int			DstBlend;$/;"	m	struct:particle_tree_s	file:
DumpAliases	config_manager.c	/^static void DumpAliases(FILE *f)$/;"	f	file:
DumpBindings	config_manager.c	/^void DumpBindings (FILE *f)$/;"	f
DumpCmdLine	config_manager.c	/^void DumpCmdLine(FILE *f)$/;"	f
DumpConfig	config_manager.c	/^void DumpConfig(char *name)$/;"	f
DumpFlagCommand	teamplay.c	/^static void DumpFlagCommand(FILE *f, char *name, unsigned int flags, unsigned int default_flags)$/;"	f	file:
DumpFlagCommands	teamplay.c	/^void DumpFlagCommands(FILE *f)$/;"	f
DumpFloodProtSettings	config_manager.c	/^void DumpFloodProtSettings(FILE *f)$/;"	f
DumpFogSettings	config_manager.c	/^void DumpFogSettings(FILE *f)$/;"	f
DumpHUD	config_manager.c	/^void DumpHUD(const char *name)$/;"	f
DumpHUD_f	config_manager.c	/^void DumpHUD_f(void)$/;"	f
DumpMapGroups	match_tools.c	/^void DumpMapGroups(FILE *f) {$/;"	f
DumpMisc	config_manager.c	/^void DumpMisc(FILE *f)$/;"	f
DumpPlusCommand	config_manager.c	/^static void DumpPlusCommand(FILE *f, kbutton_t	*b,	const char *name)$/;"	f	file:
DumpPlusCommands	config_manager.c	/^static void DumpPlusCommands(FILE *f)$/;"	f	file:
DumpSkyGroups	match_tools.c	/^void DumpSkyGroups(FILE *f) {$/;"	f
DumpSource	EX_browser_sources.c	/^void DumpSource(source_data *s)$/;"	f
DumpTeamplay	config_manager.c	/^static void DumpTeamplay(FILE *f)$/;"	f	file:
DumpVariables	config_manager.c	/^static void DumpVariables(FILE	*f)$/;"	f	file:
DumpVariablesDefaults_f	config_manager.c	/^void DumpVariablesDefaults_f(void)$/;"	f
E	parser.c	/^LOCAL expr_val E(EParser p) { return Eap(p, T(p)); }$/;"	f
EADDRNOTAVAIL	net.h	35;"	d
EAFNOSUPPORT	net.h	36;"	d
ECONNABORTED	net.h	33;"	d
ECONNREFUSED	net.h	34;"	d
ECONNRESET	net.h	32;"	d
EDICT_FROM_AREA	progs.h	42;"	d
EDICT_NUM	pr_edict.c	/^edict_t *EDICT_NUM(int n) {$/;"	f
EDICT_TO_PROG	progs.h	107;"	d
EDITBOXMAXLENGTH	settings_page.c	48;"	d	file:
EDITBOXWIDTH	settings_page.c	47;"	d	file:
ED_Alloc	pr_edict.c	/^edict_t *ED_Alloc (void) {$/;"	f
ED_ClearEdict	pr_edict.c	/^void ED_ClearEdict (edict_t *e) {$/;"	f
ED_Count	pr_edict.c	/^void ED_Count (void) {$/;"	f
ED_FieldAtOfs	pr_edict.c	/^ddef_t *ED_FieldAtOfs (int ofs) {$/;"	f
ED_FindField	pr_edict.c	/^ddef_t *ED_FindField (char *name) {$/;"	f
ED_FindFieldOffset	pr_edict.c	/^int ED_FindFieldOffset (char *field)$/;"	f
ED_FindFunction	pr_edict.c	/^dfunction_t *ED_FindFunction (char *name) {$/;"	f
ED_FindFunctionOffset	pr_edict.c	/^func_t ED_FindFunctionOffset (char *name)$/;"	f
ED_FindGlobal	pr_edict.c	/^ddef_t *ED_FindGlobal (char *name) {$/;"	f
ED_Free	pr_edict.c	/^void ED_Free (edict_t *ed) {$/;"	f
ED_GlobalAtOfs	pr_edict.c	/^ddef_t *ED_GlobalAtOfs (int ofs) {$/;"	f
ED_LoadFromFile	pr_edict.c	/^void ED_LoadFromFile (char *data) {	$/;"	f
ED_NewString	pr_edict.c	/^char *ED_NewString (char *string) {$/;"	f
ED_ParseEdict	pr_edict.c	/^char *ED_ParseEdict (char *data, edict_t *ent) {$/;"	f
ED_ParseEpair	pr_edict.c	/^qbool ED_ParseEpair (void *base, ddef_t *key, char *s) {$/;"	f
ED_ParseGlobals	pr_edict.c	/^void ED_ParseGlobals (char *data) {$/;"	f
ED_Print	pr_edict.c	/^void ED_Print (edict_t *ed) {$/;"	f
ED_PrintEdict_f	pr_edict.c	/^void ED_PrintEdict_f (void) {$/;"	f
ED_PrintEdicts	pr_edict.c	/^void ED_PrintEdicts (void) {$/;"	f
ED_PrintNum	pr_edict.c	/^void ED_PrintNum (int ent) {$/;"	f
ED_Write	pr_edict.c	/^void ED_Write (FILE *f, edict_t *ed) {$/;"	f
ED_WriteGlobals	pr_edict.c	/^void ED_WriteGlobals (FILE *f) {$/;"	f
EF_BLUE	common.h	125;"	d
EF_BRIGHTFIELD	common.h	118;"	d
EF_BRIGHTLIGHT	common.h	121;"	d
EF_DIMLIGHT	common.h	122;"	d
EF_FLAG1	common.h	123;"	d
EF_FLAG2	common.h	124;"	d
EF_GIB	gl_model.h	359;"	d
EF_GIB	r_model.h	256;"	d
EF_GREEN	common.h	120;"	d
EF_GRENADE	gl_model.h	358;"	d
EF_GRENADE	r_model.h	255;"	d
EF_MUZZLEFLASH	common.h	119;"	d
EF_RED	common.h	126;"	d
EF_ROCKET	gl_model.h	357;"	d
EF_ROCKET	r_model.h	254;"	d
EF_ROTATE	gl_model.h	360;"	d
EF_ROTATE	r_model.h	257;"	d
EF_TRACER	gl_model.h	361;"	d
EF_TRACER	r_model.h	258;"	d
EF_TRACER2	gl_model.h	363;"	d
EF_TRACER2	r_model.h	260;"	d
EF_TRACER3	gl_model.h	364;"	d
EF_TRACER3	r_model.h	261;"	d
EF_ZOMGIB	gl_model.h	362;"	d
EF_ZOMGIB	r_model.h	259;"	d
ELEMENT_X_COORD	screen.h	66;"	d
ELEMENT_Y_COORD	screen.h	67;"	d
EMPTY_BUILTIN_X10	pr_cmds.c	1779;"	d	file:
EMPTY_BUILTIN_X100	pr_cmds.c	1782;"	d	file:
EMPTY_BUILTIN_X20	pr_cmds.c	1780;"	d	file:
EMPTY_BUILTIN_X50	pr_cmds.c	1781;"	d	file:
EMSGSIZE	net.h	31;"	d
ENGINE_EXTENSIONS	pr_cmds.c	/^static char *ENGINE_EXTENSIONS[] = {$/;"	v	file:
ENUM_ITEM_NOT_FOUND	settings_page.c	54;"	d	file:
ENUM_NAME	settings_page.c	52;"	d	file:
ENUM_VALUE	settings_page.c	53;"	d	file:
EParser	parser.c	/^} expr_parser_t, *EParser;$/;"	t	typeref:struct:__anon53	file:
EQ_VAL	parser.c	440;"	d	file:
EQ_VAL	parser.c	456;"	d	file:
ERR_INTERNAL	parser.c	38;"	d	file:
ERR_INVALID_TOKEN	parser.c	31;"	d	file:
ERR_MALFORMED_NUM	parser.c	36;"	d	file:
ERR_NOTIMPL	parser.c	35;"	d	file:
ERR_OUT_OF_MEM	parser.c	37;"	d	file:
ERR_REGEXP	parser.c	39;"	d	file:
ERR_TYPE_MISMATCH	parser.c	33;"	d	file:
ERR_UNEXPECTED_CHAR	parser.c	32;"	d	file:
ERR_ZERO_DIV	parser.c	34;"	d	file:
ESHADER	gl_rsurf.c	569;"	d	file:
ET_BOOL	parser.h	/^	ET_BOOL,	\/\/\/< boolean$/;"	e	enum:__anon241
ET_DBL	parser.h	/^	ET_DBL,		\/\/\/< double$/;"	e	enum:__anon241
ET_INT	parser.h	/^	ET_INT,		\/\/\/< integer$/;"	e	enum:__anon241
ET_STR	parser.h	/^	ET_STR		\/\/\/< string$/;"	e	enum:__anon241
EVT_ALLBMASK	mgraph.h	462;"	d
EVT_ALTSTATE	mgraph.h	471;"	d
EVT_ASCIIMASK	mgraph.h	449;"	d
EVT_BOTHBMASK	mgraph.h	461;"	d
EVT_COUNTMASK	mgraph.h	451;"	d
EVT_CTRLSTATE	mgraph.h	470;"	d
EVT_EVERYEVT	mgraph.h	493;"	d
EVT_KEYDOWN	mgraph.h	479;"	d
EVT_KEYEVT	mgraph.h	490;"	d
EVT_KEYREPEAT	mgraph.h	480;"	d
EVT_KEYUP	mgraph.h	481;"	d
EVT_LEFTALT	mgraph.h	473;"	d
EVT_LEFTBMASK	mgraph.h	459;"	d
EVT_LEFTBUT	mgraph.h	466;"	d
EVT_LEFTCTRL	mgraph.h	472;"	d
EVT_LEFTSHIFT	mgraph.h	469;"	d
EVT_MOUSECLICK	mgraph.h	492;"	d
EVT_MOUSEDOWN	mgraph.h	482;"	d
EVT_MOUSEEVT	mgraph.h	491;"	d
EVT_MOUSEMOVE	mgraph.h	484;"	d
EVT_MOUSEUP	mgraph.h	483;"	d
EVT_NULLEVT	mgraph.h	478;"	d
EVT_RIGHTBMASK	mgraph.h	460;"	d
EVT_RIGHTBUT	mgraph.h	467;"	d
EVT_RIGHTSHIFT	mgraph.h	468;"	d
EVT_SCANMASK	mgraph.h	450;"	d
EVT_SHIFTKEY	mgraph.h	474;"	d
EVT_TIMERTICK	mgraph.h	485;"	d
EVT_USEREVT	mgraph.h	486;"	d
EVT_asciiCode	mgraph.h	453;"	d
EVT_repeatCount	mgraph.h	455;"	d
EVT_scanCode	mgraph.h	454;"	d
EWOULDBLOCK	net.h	30;"	d
EXPECTED_BYTES_READ	fs.c	2384;"	d	file:
EXPORT	security.h	26;"	d
EXPORT	security.h	28;"	d
EXPR_EVAL_SUCCESS	parser.h	27;"	d
EZQUAKE_MAILSLOT	sys_win.c	1160;"	d	file:
EZ_BUTTON_DEFAULT_HOVER_IMAGE	ez_button.h	33;"	d
EZ_BUTTON_DEFAULT_NORMAL_IMAGE	ez_button.h	32;"	d
EZ_BUTTON_DEFAULT_PRESSED_IMAGE	ez_button.h	34;"	d
EZ_BUTTON_ID	ez_controls.h	/^	EZ_BUTTON_ID,$/;"	e	enum:ez_control_id_e
EZ_CONTROL_DESTROY_HANDLER	ez_controls.h	302;"	d
EZ_CONTROL_HANDLER	ez_controls.h	298;"	d
EZ_CONTROL_ID	ez_controls.h	/^	EZ_CONTROL_ID,$/;"	e	enum:ez_control_id_e
EZ_CONTROL_KEYSP_HANDLER	ez_controls.h	301;"	d
EZ_CONTROL_KEY_HANDLER	ez_controls.h	300;"	d
EZ_CONTROL_MOUSE_HANDLER	ez_controls.h	299;"	d
EZ_LABEL_ID	ez_controls.h	/^	EZ_LABEL_ID,$/;"	e	enum:ez_control_id_e
EZ_SCROLLBAR_ID	ez_controls.h	/^	EZ_SCROLLBAR_ID,$/;"	e	enum:ez_control_id_e
EZ_SCROLLPANE_ID	ez_controls.h	/^	EZ_SCROLLPANE_ID,$/;"	e	enum:ez_control_id_e
EZ_SLIDER_ID	ez_controls.h	/^	EZ_SLIDER_ID,$/;"	e	enum:ez_control_id_e
EZ_WINDOW_ID	ez_controls.h	/^	EZ_WINDOW_ID$/;"	e	enum:ez_control_id_e
EZ_button_AddOnAction	ez_button.c	/^void EZ_button_AddOnAction(ez_button_t *self, ez_eventhandler_fp OnAction, void *payload)$/;"	f
EZ_button_AddOnTextAlignmentChanged	ez_button.c	/^void EZ_button_AddOnTextAlignmentChanged(ez_button_t *button, ez_eventhandler_fp OnTextAlignmentChanged, void *payload)$/;"	f
EZ_button_Create	ez_button.c	/^ez_button_t *EZ_button_Create(ez_tree_t *tree, ez_control_t *parent,$/;"	f
EZ_button_Destroy	ez_button.c	/^void EZ_button_Destroy(ez_control_t *self, qbool destroy_children)$/;"	f
EZ_button_DrawButtonImage	ez_button.c	/^static void EZ_button_DrawButtonImage(ez_button_t *button, mpic_t *pic)$/;"	f	file:
EZ_button_Init	ez_button.c	/^void EZ_button_Init(ez_button_t *button, ez_tree_t *tree, ez_control_t *parent,$/;"	f
EZ_button_OnAction	ez_button.c	/^int EZ_button_OnAction(ez_control_t *self)$/;"	f
EZ_button_OnDraw	ez_button.c	/^int EZ_button_OnDraw(ez_control_t *self)$/;"	f
EZ_button_OnLabelTextChanged	ez_button.c	/^static int EZ_button_OnLabelTextChanged(ez_control_t *self, void *payload)$/;"	f	file:
EZ_button_OnResize	ez_button.c	/^int EZ_button_OnResize(ez_control_t *self)$/;"	f
EZ_button_OnTextAlignmentChanged	ez_button.c	/^int EZ_button_OnTextAlignmentChanged(ez_control_t *self)$/;"	f
EZ_button_RecalculateLabelPosition	ez_button.c	/^static void EZ_button_RecalculateLabelPosition(ez_button_t *button)$/;"	f	file:
EZ_button_SetFocusedColor	ez_button.c	/^void EZ_button_SetFocusedColor(ez_button_t *self, byte r, byte g, byte b, byte alpha)$/;"	f
EZ_button_SetHoverColor	ez_button.c	/^void EZ_button_SetHoverColor(ez_button_t *self, byte r, byte g, byte b, byte alpha)$/;"	f
EZ_button_SetHoverImage	ez_button.c	/^void EZ_button_SetHoverImage(ez_button_t *button, const char *hover_image)$/;"	f
EZ_button_SetNormalColor	ez_button.c	/^void EZ_button_SetNormalColor(ez_button_t *self, byte r, byte g, byte b, byte alpha)$/;"	f
EZ_button_SetNormalImage	ez_button.c	/^void EZ_button_SetNormalImage(ez_button_t *button, const char *normal_image)$/;"	f
EZ_button_SetPressedColor	ez_button.c	/^void EZ_button_SetPressedColor(ez_button_t *self, byte r, byte g, byte b, byte alpha)$/;"	f
EZ_button_SetPressedImage	ez_button.c	/^void EZ_button_SetPressedImage(ez_button_t *button, const char *pressed_image)$/;"	f
EZ_button_SetText	ez_button.c	/^void EZ_button_SetText(ez_button_t *button, const char *text)$/;"	f
EZ_button_SetTextAlignment	ez_button.c	/^void EZ_button_SetTextAlignment(ez_button_t *button, ez_textalign_t text_alignment)$/;"	f
EZ_button_SetTileCenter	ez_button.c	/^void EZ_button_SetTileCenter(ez_button_t *button, qbool tilecenter)$/;"	f
EZ_button_SetTileEdges	ez_button.c	/^void EZ_button_SetTileEdges(ez_button_t *button, qbool tileedges)$/;"	f
EZ_button_SetUseImages	ez_button.c	/^void EZ_button_SetUseImages(ez_button_t *button, qbool useimages)$/;"	f
EZ_control_AddChild	ez_controls.c	/^void EZ_control_AddChild(ez_control_t *self, ez_control_t *child)$/;"	f
EZ_control_AddOnDestroy	ez_controls.c	/^void EZ_control_AddOnDestroy(ez_control_t *self, ez_destroy_eventhandler_fp OnDestroy, void *payload)$/;"	f
EZ_control_AddOnDraw	ez_controls.c	/^void EZ_control_AddOnDraw(ez_control_t *self, ez_eventhandler_fp OnDraw, void *payload)$/;"	f
EZ_control_AddOnEventHandlerChanged	ez_controls.c	/^void EZ_control_AddOnEventHandlerChanged(ez_control_t *self, ez_eventhandler_fp OnEventHandlerChanged, void *payload)$/;"	f
EZ_control_AddOnFlagsChanged	ez_controls.c	/^void EZ_control_AddOnFlagsChanged(ez_control_t *self, ez_eventhandler_fp OnFlagsChanged, void *payload)$/;"	f
EZ_control_AddOnGotFocus	ez_controls.c	/^void EZ_control_AddOnGotFocus(ez_control_t *self, ez_eventhandler_fp OnGotFocus, void *payload)$/;"	f
EZ_control_AddOnKeyEvent	ez_controls.c	/^void EZ_control_AddOnKeyEvent(ez_control_t *self, ez_key_eventhandler_fp OnKeyEvent, void *payload)$/;"	f
EZ_control_AddOnLayoutChildren	ez_controls.c	/^void EZ_control_AddOnLayoutChildren(ez_control_t *self, ez_eventhandler_fp OnLayoutChildren, void *payload)$/;"	f
EZ_control_AddOnLostFocus	ez_controls.c	/^void EZ_control_AddOnLostFocus(ez_control_t *self, ez_eventhandler_fp OnLostFocus, void *payload)$/;"	f
EZ_control_AddOnMinVirtualResize	ez_controls.c	/^void EZ_control_AddOnMinVirtualResize(ez_control_t *self, ez_eventhandler_fp OnMinVirtualResize, void *payload)$/;"	f
EZ_control_AddOnMouseClick	ez_controls.c	/^void EZ_control_AddOnMouseClick(ez_control_t *self, ez_mouse_eventhandler_fp OnMouseClick, void *payload)$/;"	f
EZ_control_AddOnMouseDown	ez_controls.c	/^void EZ_control_AddOnMouseDown(ez_control_t *self, ez_mouse_eventhandler_fp OnMouseDown, void *payload)$/;"	f
EZ_control_AddOnMouseEnter	ez_controls.c	/^void EZ_control_AddOnMouseEnter(ez_control_t *self, ez_mouse_eventhandler_fp OnMouseEnter, void *payload)$/;"	f
EZ_control_AddOnMouseEvent	ez_controls.c	/^void EZ_control_AddOnMouseEvent(ez_control_t *self, ez_mouse_eventhandler_fp OnMouseEvent, void *payload)$/;"	f
EZ_control_AddOnMouseHover	ez_controls.c	/^void EZ_control_AddOnMouseHover(ez_control_t *self, ez_mouse_eventhandler_fp OnMouseHover, void *payload)$/;"	f
EZ_control_AddOnMouseLeave	ez_controls.c	/^void EZ_control_AddOnMouseLeave(ez_control_t *self, ez_mouse_eventhandler_fp OnMouseLeave, void *payload)$/;"	f
EZ_control_AddOnMouseUp	ez_controls.c	/^void EZ_control_AddOnMouseUp(ez_control_t *self, ez_mouse_eventhandler_fp OnMouseUp, void *payload)$/;"	f
EZ_control_AddOnMouseUpOutside	ez_controls.c	/^void EZ_control_AddOnMouseUpOutside(ez_control_t *self, ez_mouse_eventhandler_fp OnMouseUpOutside, void *payload)$/;"	f
EZ_control_AddOnMove	ez_controls.c	/^void EZ_control_AddOnMove(ez_control_t *self, ez_eventhandler_fp OnMove, void *payload)$/;"	f
EZ_control_AddOnParentResize	ez_controls.c	/^void EZ_control_AddOnParentResize(ez_control_t *self, ez_eventhandler_fp OnParentResize, void *payload)$/;"	f
EZ_control_AddOnResize	ez_controls.c	/^void EZ_control_AddOnResize(ez_control_t *self, ez_eventhandler_fp OnResize, void *payload)$/;"	f
EZ_control_AddOnResizeHandleThicknessChanged	ez_controls.c	/^void EZ_control_AddOnResizeHandleThicknessChanged(ez_control_t *self, ez_eventhandler_fp OnResizeHandleThicknessChanged, void *payload)$/;"	f
EZ_control_AddOnScroll	ez_controls.c	/^void EZ_control_AddOnScroll(ez_control_t *self, ez_eventhandler_fp OnScroll, void *payload)$/;"	f
EZ_control_AddOnVirtualResize	ez_controls.c	/^void EZ_control_AddOnVirtualResize(ez_control_t *self, ez_eventhandler_fp OnVirtualResize, void *payload)$/;"	f
EZ_control_Create	ez_controls.c	/^ez_control_t *EZ_control_Create(ez_tree_t *tree, ez_control_t *parent,$/;"	f
EZ_control_Destroy	ez_controls.c	/^int EZ_control_Destroy(ez_control_t *self, qbool destroy_children)$/;"	f
EZ_control_GetAnchor	ez_controls.c	/^ez_anchor_t EZ_control_GetAnchor(ez_control_t *self)$/;"	f
EZ_control_GetDrawingPosition	ez_controls.c	/^void EZ_control_GetDrawingPosition(ez_control_t *self, int *x, int *y)$/;"	f
EZ_control_GetFlags	ez_controls.c	/^ez_control_flags_t EZ_control_GetFlags(ez_control_t *self)$/;"	f
EZ_control_Init	ez_controls.c	/^void EZ_control_Init(ez_control_t *control, ez_tree_t *tree, ez_control_t *parent,$/;"	f
EZ_control_IsRoot	ez_controls.c	/^qbool EZ_control_IsRoot(ez_control_t *self)$/;"	f
EZ_control_OnAnchorChanged	ez_controls.c	/^int EZ_control_OnAnchorChanged(ez_control_t *self)$/;"	f
EZ_control_OnDraw	ez_controls.c	/^int EZ_control_OnDraw(ez_control_t *self)$/;"	f
EZ_control_OnEventHandlerChanged	ez_controls.c	/^int EZ_control_OnEventHandlerChanged(ez_control_t *self)$/;"	f
EZ_control_OnFlagsChanged	ez_controls.c	/^int EZ_control_OnFlagsChanged(ez_control_t *self)$/;"	f
EZ_control_OnGotFocus	ez_controls.c	/^int EZ_control_OnGotFocus(ez_control_t *self)$/;"	f
EZ_control_OnKeyDown	ez_controls.c	/^int EZ_control_OnKeyDown(ez_control_t *self, int key, int unichar)$/;"	f
EZ_control_OnKeyEvent	ez_controls.c	/^int EZ_control_OnKeyEvent(ez_control_t *self, int key, int unichar, qbool down)$/;"	f
EZ_control_OnKeyUp	ez_controls.c	/^int EZ_control_OnKeyUp(ez_control_t *self, int key, int unichar)$/;"	f
EZ_control_OnLayoutChildren	ez_controls.c	/^int EZ_control_OnLayoutChildren(ez_control_t *self)$/;"	f
EZ_control_OnLostFocus	ez_controls.c	/^int EZ_control_OnLostFocus(ez_control_t *self)$/;"	f
EZ_control_OnMinVirtualResize	ez_controls.c	/^int EZ_control_OnMinVirtualResize(ez_control_t *self)$/;"	f
EZ_control_OnMouseClick	ez_controls.c	/^int EZ_control_OnMouseClick(ez_control_t *self, mouse_state_t *mouse_state)$/;"	f
EZ_control_OnMouseDown	ez_controls.c	/^int EZ_control_OnMouseDown(ez_control_t *self, mouse_state_t *ms)$/;"	f
EZ_control_OnMouseEnter	ez_controls.c	/^int EZ_control_OnMouseEnter(ez_control_t *self, mouse_state_t *mouse_state)$/;"	f
EZ_control_OnMouseEvent	ez_controls.c	/^int EZ_control_OnMouseEvent(ez_control_t *self, mouse_state_t *ms)$/;"	f
EZ_control_OnMouseHover	ez_controls.c	/^int EZ_control_OnMouseHover(ez_control_t *self, mouse_state_t *mouse_state)$/;"	f
EZ_control_OnMouseLeave	ez_controls.c	/^int EZ_control_OnMouseLeave(ez_control_t *self, mouse_state_t *mouse_state)$/;"	f
EZ_control_OnMouseUp	ez_controls.c	/^int EZ_control_OnMouseUp(ez_control_t *self, mouse_state_t *mouse_state)$/;"	f
EZ_control_OnMouseUpOutside	ez_controls.c	/^int EZ_control_OnMouseUpOutside(ez_control_t *self, mouse_state_t *ms)$/;"	f
EZ_control_OnMove	ez_controls.c	/^int EZ_control_OnMove(ez_control_t *self)$/;"	f
EZ_control_OnParentResize	ez_controls.c	/^int EZ_control_OnParentResize(ez_control_t *self)$/;"	f
EZ_control_OnParentScroll	ez_controls.c	/^int EZ_control_OnParentScroll(ez_control_t *self)$/;"	f
EZ_control_OnResize	ez_controls.c	/^int EZ_control_OnResize(ez_control_t *self)$/;"	f
EZ_control_OnResizeHandleThicknessChanged	ez_controls.c	/^int EZ_control_OnResizeHandleThicknessChanged(ez_control_t *self)$/;"	f
EZ_control_OnScroll	ez_controls.c	/^int EZ_control_OnScroll(ez_control_t *self)$/;"	f
EZ_control_OnVirtualResize	ez_controls.c	/^int EZ_control_OnVirtualResize(ez_control_t *self)$/;"	f
EZ_control_OnVisibilityChanged	ez_controls.c	/^int EZ_control_OnVisibilityChanged(ez_control_t *self)$/;"	f
EZ_control_RemoveChild	ez_controls.c	/^ez_control_t *EZ_control_RemoveChild(ez_control_t *self, ez_control_t *child)$/;"	f
EZ_control_ResizeByDirection	ez_controls.c	/^static void EZ_control_ResizeByDirection(ez_control_t *self, mouse_state_t *ms, int delta_x, int delta_y, resize_direction_t direction)$/;"	f	file:
EZ_control_SetAnchor	ez_controls.c	/^void EZ_control_SetAnchor(ez_control_t *self, ez_anchor_t anchor_flags)$/;"	f
EZ_control_SetBackgroundColor	ez_controls.c	/^void EZ_control_SetBackgroundColor(ez_control_t *self, byte r, byte g, byte b, byte alpha)$/;"	f
EZ_control_SetBackgroundImage	ez_controls.c	/^void EZ_control_SetBackgroundImage(ez_control_t *self, const char *background_path)$/;"	f
EZ_control_SetContained	ez_controls.c	/^void EZ_control_SetContained(ez_control_t *self, qbool contained)$/;"	f
EZ_control_SetDrawOrder	ez_controls.c	/^void EZ_control_SetDrawOrder(ez_control_t *self, int draw_order, qbool update_children)$/;"	f
EZ_control_SetEnabled	ez_controls.c	/^void EZ_control_SetEnabled(ez_control_t *self, qbool enabled)$/;"	f
EZ_control_SetFlags	ez_controls.c	/^void EZ_control_SetFlags(ez_control_t *self, ez_control_flags_t flags)$/;"	f
EZ_control_SetFocus	ez_controls.c	/^qbool EZ_control_SetFocus(ez_control_t *self)$/;"	f
EZ_control_SetFocusByNode	ez_controls.c	/^qbool EZ_control_SetFocusByNode(ez_control_t *self, ez_dllist_node_t *node)$/;"	f
EZ_control_SetFocusable	ez_controls.c	/^void EZ_control_SetFocusable(ez_control_t *self, qbool focusable)$/;"	f
EZ_control_SetHiddenByParent	ez_controls.c	/^static void EZ_control_SetHiddenByParent(ez_control_t *self, qbool hidden)$/;"	f	file:
EZ_control_SetIgnoreMouse	ez_controls.c	/^void EZ_control_SetIgnoreMouse(ez_control_t *self, qbool ignore_mouse)$/;"	f
EZ_control_SetListenToRepeatedMouseClicks	ez_controls.c	/^void EZ_control_SetListenToRepeatedMouseClicks(ez_control_t *self, qbool listen_repeat)$/;"	f
EZ_control_SetMaxSize	ez_controls.c	/^void EZ_control_SetMaxSize(ez_control_t *self, int max_width, int max_height)$/;"	f
EZ_control_SetMinSize	ez_controls.c	/^void EZ_control_SetMinSize(ez_control_t *self, int min_width, int min_height)$/;"	f
EZ_control_SetMinVirtualSize	ez_controls.c	/^void EZ_control_SetMinVirtualSize(ez_control_t *self, int min_virtual_width, int min_virtual_height)$/;"	f
EZ_control_SetMovable	ez_controls.c	/^void EZ_control_SetMovable(ez_control_t *self, qbool movable)$/;"	f
EZ_control_SetMovesParent	ez_controls.c	/^void EZ_control_SetMovesParent(ez_control_t *self, qbool moves_parent)$/;"	f
EZ_control_SetPosition	ez_controls.c	/^void EZ_control_SetPosition(ez_control_t *self, int x, int y)$/;"	f
EZ_control_SetRepeatMouseClickDelay	ez_controls.c	/^void EZ_control_SetRepeatMouseClickDelay(ez_control_t *self, double delay)$/;"	f
EZ_control_SetResizeHandleThickness	ez_controls.c	/^void EZ_control_SetResizeHandleThickness(ez_control_t *self, int thickness)$/;"	f
EZ_control_SetResizeable	ez_controls.c	/^void EZ_control_SetResizeable(ez_control_t *self, qbool resizeable)$/;"	f
EZ_control_SetResizeableBoth	ez_controls.c	/^void EZ_control_SetResizeableBoth(ez_control_t *self, qbool resize)$/;"	f
EZ_control_SetResizeableHorizontally	ez_controls.c	/^void EZ_control_SetResizeableHorizontally(ez_control_t *self, qbool resize_horizontally)$/;"	f
EZ_control_SetResizeableVertically	ez_controls.c	/^void EZ_control_SetResizeableVertically(ez_control_t *self, qbool resize_vertically)$/;"	f
EZ_control_SetScrollChange	ez_controls.c	/^void EZ_control_SetScrollChange(ez_control_t *self, int delta_scroll_x, int delta_scroll_y)$/;"	f
EZ_control_SetScrollPosition	ez_controls.c	/^void EZ_control_SetScrollPosition(ez_control_t *self, int scroll_x, int scroll_y)$/;"	f
EZ_control_SetScrollable	ez_controls.c	/^void EZ_control_SetScrollable(ez_control_t *self, qbool scrollable)$/;"	f
EZ_control_SetSize	ez_controls.c	/^void EZ_control_SetSize(ez_control_t *self, int width, int height)$/;"	f
EZ_control_SetTabOrder	ez_controls.c	/^void EZ_control_SetTabOrder(ez_control_t *self, int tab_order)$/;"	f
EZ_control_SetVirtualSize	ez_controls.c	/^void EZ_control_SetVirtualSize(ez_control_t *self, int virtual_width, int virtual_height)$/;"	f
EZ_control_SetVisible	ez_controls.c	/^void EZ_control_SetVisible(ez_control_t *self, qbool visible)$/;"	f
EZ_control_UpdateAnchorGap	ez_controls.c	/^static void EZ_control_UpdateAnchorGap(ez_control_t *self)$/;"	f	file:
EZ_double_linked_list_Add	ez_controls.c	/^void EZ_double_linked_list_Add(ez_double_linked_list_t *list, void *payload)$/;"	f
EZ_double_linked_list_FindByPayload	ez_controls.c	/^ez_dllist_node_t *EZ_double_linked_list_FindByPayload(ez_double_linked_list_t *list, void *payload)$/;"	f
EZ_double_linked_list_Order	ez_controls.c	/^void EZ_double_linked_list_Order(ez_double_linked_list_t *list, PtFuncCompare compare_function)$/;"	f
EZ_double_linked_list_Remove	ez_controls.c	/^void *EZ_double_linked_list_Remove(ez_double_linked_list_t *list, ez_dllist_node_t *item)$/;"	f
EZ_double_linked_list_RemoveByPayload	ez_controls.c	/^void *EZ_double_linked_list_RemoveByPayload(ez_double_linked_list_t *list, void *payload)$/;"	f
EZ_eventhandler_Create	ez_controls.c	/^ez_eventhandler_t *EZ_eventhandler_Create(void *event_func, int func_type, void *payload)$/;"	f
EZ_eventhandler_Exec	ez_controls.c	/^void EZ_eventhandler_Exec(ez_eventhandler_t *event_handler, ez_control_t *ctrl, ...)$/;"	f
EZ_eventhandler_Remove	ez_controls.c	/^void EZ_eventhandler_Remove(ez_eventhandler_t *eventhandler, void *event_func, qbool all)$/;"	f
EZ_label_AddOnTextChanged	ez_label.c	/^void EZ_label_AddOnTextChanged(ez_label_t *label, ez_eventhandler_fp OnTextChanged, void *payload)$/;"	f
EZ_label_AddOnTextOnCaretMoved	ez_label.c	/^void EZ_label_AddOnTextOnCaretMoved(ez_label_t *label, ez_eventhandler_fp OnCaretMoved, void *payload)$/;"	f
EZ_label_AddOnTextScaleChanged	ez_label.c	/^void EZ_label_AddOnTextScaleChanged(ez_label_t *label, ez_eventhandler_fp OnTextScaleChanged, void *payload)$/;"	f
EZ_label_AppendText	ez_label.c	/^void EZ_label_AppendText(ez_label_t *label, int position, const char *append_text)$/;"	f
EZ_label_ArrowKeyDown	ez_label.c	/^static void EZ_label_ArrowKeyDown(ez_label_t *label, int key)$/;"	f	file:
EZ_label_BackspaceDeleteKeyDown	ez_label.c	/^static void EZ_label_BackspaceDeleteKeyDown(ez_label_t *label, int key)$/;"	f	file:
EZ_label_CalculateWordwraps	ez_label.c	/^static void EZ_label_CalculateWordwraps(ez_label_t *label)$/;"	f	file:
EZ_label_Create	ez_label.c	/^ez_label_t *EZ_label_Create(ez_tree_t *tree, ez_control_t *parent,$/;"	f
EZ_label_CtrlComboKeyDown	ez_label.c	/^static void EZ_label_CtrlComboKeyDown(ez_label_t *label, int key)$/;"	f	file:
EZ_label_DeselectText	ez_label.c	/^void EZ_label_DeselectText(ez_label_t *label)$/;"	f
EZ_label_Destroy	ez_label.c	/^int EZ_label_Destroy(ez_control_t *self, qbool destroy_children)$/;"	f
EZ_label_EndHomeKeyDown	ez_label.c	/^static void EZ_label_EndHomeKeyDown(ez_label_t *label, int key)$/;"	f	file:
EZ_label_FindIndexByRowColumn	ez_label.c	/^static int EZ_label_FindIndexByRowColumn(ez_label_t *label, int row, int column)$/;"	f	file:
EZ_label_FindMouseTextIndex	ez_label.c	/^static int EZ_label_FindMouseTextIndex(ez_label_t *label, mouse_state_t *ms)$/;"	f	file:
EZ_label_FindRowColumnByIndex	ez_label.c	/^static void EZ_label_FindRowColumnByIndex(ez_label_t *label, int index, int *row, int *column)$/;"	f	file:
EZ_label_GetNextWordBoundary	ez_label.c	/^static int EZ_label_GetNextWordBoundary(ez_label_t *label, int cur_pos, qbool forward)$/;"	f	file:
EZ_label_GetSelectedText	ez_label.c	/^void EZ_label_GetSelectedText(ez_label_t *label, char *target, int target_size)$/;"	f
EZ_label_GetSelectedTextSize	ez_label.c	/^int EZ_label_GetSelectedTextSize(ez_label_t *label)$/;"	f
EZ_label_GetTextFlags	ez_label.c	/^ez_label_flags_t EZ_label_GetTextFlags(ez_label_t *label)$/;"	f
EZ_label_HideCaret	ez_label.c	/^void EZ_label_HideCaret(ez_label_t *label)$/;"	f
EZ_label_Init	ez_label.c	/^void EZ_label_Init(ez_label_t *label, ez_tree_t *tree, ez_control_t *parent,$/;"	f
EZ_label_InputKeyDown	ez_label.c	/^static void EZ_label_InputKeyDown(ez_label_t *label, int key)$/;"	f	file:
EZ_label_MoveCaretVertically	ez_label.c	/^static void EZ_label_MoveCaretVertically(ez_label_t *label, int amount)$/;"	f	file:
EZ_label_OnCaretMoved	ez_label.c	/^int EZ_label_OnCaretMoved(ez_control_t *self)$/;"	f
EZ_label_OnDraw	ez_label.c	/^int EZ_label_OnDraw(ez_control_t *self)$/;"	f
EZ_label_OnKeyDown	ez_label.c	/^int EZ_label_OnKeyDown(ez_control_t *self, int key, int unichar)$/;"	f
EZ_label_OnKeyUp	ez_label.c	/^int EZ_label_OnKeyUp(ez_control_t *self, int key, int unichar)$/;"	f
EZ_label_OnMouseDown	ez_label.c	/^int EZ_label_OnMouseDown(ez_control_t *self, mouse_state_t *ms)$/;"	f
EZ_label_OnMouseHover	ez_label.c	/^int EZ_label_OnMouseHover(ez_control_t *self, mouse_state_t *ms)$/;"	f
EZ_label_OnMouseUp	ez_label.c	/^int EZ_label_OnMouseUp(ez_control_t *self, mouse_state_t *ms)$/;"	f
EZ_label_OnResize	ez_label.c	/^int EZ_label_OnResize(ez_control_t *self)$/;"	f
EZ_label_OnTextChanged	ez_label.c	/^int EZ_label_OnTextChanged(ez_control_t *self)$/;"	f
EZ_label_OnTextFlagsChanged	ez_label.c	/^int EZ_label_OnTextFlagsChanged(ez_control_t *self)$/;"	f
EZ_label_OnTextScaleChanged	ez_label.c	/^int EZ_label_OnTextScaleChanged(ez_control_t *self)$/;"	f
EZ_label_PageUpDnKeyDown	ez_label.c	/^static void EZ_label_PageUpDnKeyDown(ez_label_t *label, int key)$/;"	f	file:
EZ_label_RemoveText	ez_label.c	/^void EZ_label_RemoveText(ez_label_t *label, int start_index, int end_index)$/;"	f
EZ_label_SetAutoEllipsis	ez_label.c	/^void EZ_label_SetAutoEllipsis(ez_label_t *label, qbool auto_ellipsis)$/;"	f
EZ_label_SetAutoSize	ez_label.c	/^void EZ_label_SetAutoSize(ez_label_t *label, qbool auto_size)$/;"	f
EZ_label_SetCaretPosition	ez_label.c	/^void EZ_label_SetCaretPosition(ez_label_t *label, int caret_pos)$/;"	f
EZ_label_SetLargeFont	ez_label.c	/^void EZ_label_SetLargeFont(ez_label_t *label, qbool large_font)$/;"	f
EZ_label_SetReadOnly	ez_label.c	/^void EZ_label_SetReadOnly(ez_label_t *label, qbool read_only)$/;"	f
EZ_label_SetText	ez_label.c	/^void EZ_label_SetText(ez_label_t *label, const char *text)$/;"	f
EZ_label_SetTextColor	ez_label.c	/^void EZ_label_SetTextColor(ez_label_t *label, byte r, byte g, byte b, byte alpha)$/;"	f
EZ_label_SetTextFlags	ez_label.c	/^void EZ_label_SetTextFlags(ez_label_t *label, ez_label_flags_t flags)$/;"	f
EZ_label_SetTextScale	ez_label.c	/^void EZ_label_SetTextScale(ez_label_t *label, float scale)$/;"	f
EZ_label_SetTextSelectable	ez_label.c	/^void EZ_label_SetTextSelectable(ez_label_t *label, qbool selectable)$/;"	f
EZ_label_SetWrapText	ez_label.c	/^void EZ_label_SetWrapText(ez_label_t *label, qbool wrap_text)$/;"	f
EZ_scrollbar_CalculateParentScrollPosition	ez_scrollbar.c	/^static void EZ_scrollbar_CalculateParentScrollPosition(ez_scrollbar_t *scrollbar, ez_control_t *target)$/;"	f	file:
EZ_scrollbar_CalculateSliderSize	ez_scrollbar.c	/^static void EZ_scrollbar_CalculateSliderSize(ez_scrollbar_t *scrollbar, ez_control_t *target)$/;"	f	file:
EZ_scrollbar_Create	ez_scrollbar.c	/^ez_scrollbar_t *EZ_scrollbar_Create(ez_tree_t *tree, ez_control_t *parent,$/;"	f
EZ_scrollbar_Destroy	ez_scrollbar.c	/^int EZ_scrollbar_Destroy(ez_control_t *self, qbool destroy_children)$/;"	f
EZ_scrollbar_Init	ez_scrollbar.c	/^void EZ_scrollbar_Init(ez_scrollbar_t *scrollbar, ez_tree_t *tree, ez_control_t *parent,$/;"	f
EZ_scrollbar_OnBackButtonMouseDown	ez_scrollbar.c	/^static int EZ_scrollbar_OnBackButtonMouseDown(ez_control_t *self, void *payload, mouse_state_t *ms)$/;"	f	file:
EZ_scrollbar_OnForwardButtonMouseDown	ez_scrollbar.c	/^static int EZ_scrollbar_OnForwardButtonMouseDown(ez_control_t *self, void *payload, mouse_state_t *ms)$/;"	f	file:
EZ_scrollbar_OnMouseDown	ez_scrollbar.c	/^int EZ_scrollbar_OnMouseDown(ez_control_t *self, mouse_state_t *ms)$/;"	f
EZ_scrollbar_OnMouseEvent	ez_scrollbar.c	/^int EZ_scrollbar_OnMouseEvent(ez_control_t *self, mouse_state_t *ms)$/;"	f
EZ_scrollbar_OnMouseUpOutside	ez_scrollbar.c	/^int EZ_scrollbar_OnMouseUpOutside(ez_control_t *self, mouse_state_t *ms)$/;"	f
EZ_scrollbar_OnParentResize	ez_scrollbar.c	/^int EZ_scrollbar_OnParentResize(ez_control_t *self)$/;"	f
EZ_scrollbar_OnParentScroll	ez_scrollbar.c	/^int EZ_scrollbar_OnParentScroll(ez_control_t *self)$/;"	f
EZ_scrollbar_OnResize	ez_scrollbar.c	/^int EZ_scrollbar_OnResize(ez_control_t *self)$/;"	f
EZ_scrollbar_OnScrollButtonMouseDown	ez_scrollbar.c	/^static void EZ_scrollbar_OnScrollButtonMouseDown(ez_scrollbar_t *scrollbar, qbool back)$/;"	f	file:
EZ_scrollbar_OnSliderMouseDown	ez_scrollbar.c	/^int EZ_scrollbar_OnSliderMouseDown(ez_control_t *self, void *payload, mouse_state_t *ms)$/;"	f
EZ_scrollbar_OnTargetChanged	ez_scrollbar.c	/^int EZ_scrollbar_OnTargetChanged(ez_control_t *self)$/;"	f
EZ_scrollbar_OnTargetResize	ez_scrollbar.c	/^static int EZ_scrollbar_OnTargetResize(ez_control_t *self, void *payload)$/;"	f	file:
EZ_scrollbar_OnTargetScroll	ez_scrollbar.c	/^static int EZ_scrollbar_OnTargetScroll(ez_control_t *self, void *payload)$/;"	f	file:
EZ_scrollbar_RepositionScrollButtons	ez_scrollbar.c	/^static void EZ_scrollbar_RepositionScrollButtons(ez_scrollbar_t *scrollbar)$/;"	f	file:
EZ_scrollbar_SetIsVertical	ez_scrollbar.c	/^void EZ_scrollbar_SetIsVertical(ez_scrollbar_t *scrollbar, qbool is_vertical)$/;"	f
EZ_scrollbar_SetScrollDelta	ez_scrollbar.c	/^void EZ_scrollbar_SetScrollDelta(ez_scrollbar_t *scrollbar, int scroll_delta_x, int scroll_delta_y)$/;"	f
EZ_scrollbar_SetSliderMinSize	ez_scrollbar.c	/^void EZ_scrollbar_SetSliderMinSize(ez_scrollbar_t *scrollbar, int minsize)$/;"	f
EZ_scrollbar_SetTarget	ez_scrollbar.c	/^void EZ_scrollbar_SetTarget(ez_scrollbar_t *scrollbar, ez_control_t *target)$/;"	f
EZ_scrollbar_SetTargetIsParent	ez_scrollbar.c	/^void EZ_scrollbar_SetTargetIsParent(ez_scrollbar_t *scrollbar, qbool targetparent)$/;"	f
EZ_scrollbar_UpdateSliderBasedOnTarget	ez_scrollbar.c	/^static void EZ_scrollbar_UpdateSliderBasedOnTarget(ez_scrollbar_t *scrollbar, ez_control_t *target)$/;"	f	file:
EZ_scrollpane_AdjustTargetSize	ez_scrollpane.c	/^static void EZ_scrollpane_AdjustTargetSize(ez_scrollpane_t *scrollpane)$/;"	f	file:
EZ_scrollpane_Create	ez_scrollpane.c	/^ez_scrollpane_t *EZ_scrollpane_Create(ez_tree_t *tree, ez_control_t *parent,$/;"	f
EZ_scrollpane_Destroy	ez_scrollpane.c	/^int EZ_scrollpane_Destroy(ez_control_t *self, qbool destroy_children)$/;"	f
EZ_scrollpane_DetermineScrollbarVisibility	ez_scrollpane.c	/^static void EZ_scrollpane_DetermineScrollbarVisibility(ez_scrollpane_t *scrollpane)$/;"	f	file:
EZ_scrollpane_Init	ez_scrollpane.c	/^void EZ_scrollpane_Init(ez_scrollpane_t *scrollpane, ez_tree_t *tree, ez_control_t *parent,$/;"	f
EZ_scrollpane_OnResize	ez_scrollpane.c	/^int EZ_scrollpane_OnResize(ez_control_t *self)$/;"	f
EZ_scrollpane_OnScrollbarThicknessChanged	ez_scrollpane.c	/^int EZ_scrollpane_OnScrollbarThicknessChanged(ez_control_t *self)$/;"	f
EZ_scrollpane_OnTargetChanged	ez_scrollpane.c	/^int EZ_scrollpane_OnTargetChanged(ez_control_t *self)$/;"	f
EZ_scrollpane_OnTargetVirtualResize	ez_scrollpane.c	/^static int EZ_scrollpane_OnTargetVirtualResize(ez_control_t *self, void *payload)$/;"	f	file:
EZ_scrollpane_ResizeScrollbars	ez_scrollpane.c	/^static void EZ_scrollpane_ResizeScrollbars(ez_scrollpane_t *scrollpane)$/;"	f	file:
EZ_scrollpane_SetAlwaysShowHorizontalScrollbar	ez_scrollpane.c	/^void EZ_scrollpane_SetAlwaysShowHorizontalScrollbar(ez_scrollpane_t *scrollpane, qbool always_show)$/;"	f
EZ_scrollpane_SetAlwaysShowVerticalScrollbar	ez_scrollpane.c	/^void EZ_scrollpane_SetAlwaysShowVerticalScrollbar(ez_scrollpane_t *scrollpane, qbool always_show)$/;"	f
EZ_scrollpane_SetScrollbarThickness	ez_scrollpane.c	/^void EZ_scrollpane_SetScrollbarThickness(ez_scrollpane_t *scrollpane, int scrollbar_thickness)$/;"	f
EZ_scrollpane_SetTarget	ez_scrollpane.c	/^void EZ_scrollpane_SetTarget(ez_scrollpane_t *scrollpane, ez_control_t *target)$/;"	f
EZ_slider_AddOnMaxValueChanged	ez_slider.c	/^void EZ_slider_AddOnMaxValueChanged(ez_slider_t *slider, ez_eventhandler_fp OnMaxValueChanged, void *payload)$/;"	f
EZ_slider_AddOnMinValueChanged	ez_slider.c	/^void EZ_slider_AddOnMinValueChanged(ez_slider_t *slider, ez_eventhandler_fp OnMinValueChanged, void *payload)$/;"	f
EZ_slider_AddOnScaleChanged	ez_slider.c	/^void EZ_slider_AddOnScaleChanged(ez_slider_t *slider, ez_eventhandler_fp OnScaleChanged, void *payload)$/;"	f
EZ_slider_AddOnSliderPositionChanged	ez_slider.c	/^void EZ_slider_AddOnSliderPositionChanged(ez_slider_t *slider, ez_eventhandler_fp OnSliderPositionChanged, void *payload)$/;"	f
EZ_slider_CalculateGapSize	ez_slider.c	/^__inline void EZ_slider_CalculateGapSize(ez_slider_t *slider)$/;"	f
EZ_slider_CalculateRealSliderPos	ez_slider.c	/^__inline void EZ_slider_CalculateRealSliderPos(ez_slider_t *slider)$/;"	f
EZ_slider_Create	ez_slider.c	/^ez_slider_t *EZ_slider_Create(ez_tree_t *tree, ez_control_t *parent,$/;"	f
EZ_slider_GetPosition	ez_slider.c	/^int EZ_slider_GetPosition(ez_slider_t *slider)$/;"	f
EZ_slider_Init	ez_slider.c	/^void EZ_slider_Init(ez_slider_t *slider, ez_tree_t *tree, ez_control_t *parent,$/;"	f
EZ_slider_OnDraw	ez_slider.c	/^int EZ_slider_OnDraw(ez_control_t *self)$/;"	f
EZ_slider_OnKeyDown	ez_slider.c	/^int EZ_slider_OnKeyDown(ez_control_t *self, int key, int unichar)$/;"	f
EZ_slider_OnMaxValueChanged	ez_slider.c	/^int EZ_slider_OnMaxValueChanged(ez_control_t *self)$/;"	f
EZ_slider_OnMinValueChanged	ez_slider.c	/^int EZ_slider_OnMinValueChanged(ez_control_t *self)$/;"	f
EZ_slider_OnMouseDown	ez_slider.c	/^int EZ_slider_OnMouseDown(ez_control_t *self, mouse_state_t *ms)$/;"	f
EZ_slider_OnMouseEvent	ez_slider.c	/^int EZ_slider_OnMouseEvent(ez_control_t *self, mouse_state_t *ms)$/;"	f
EZ_slider_OnMouseUpOutside	ez_slider.c	/^int EZ_slider_OnMouseUpOutside(ez_control_t *self, mouse_state_t *ms)$/;"	f
EZ_slider_OnResize	ez_slider.c	/^int EZ_slider_OnResize(ez_control_t *self)$/;"	f
EZ_slider_OnScaleChanged	ez_slider.c	/^int EZ_slider_OnScaleChanged(ez_control_t *self)$/;"	f
EZ_slider_OnSliderPositionChanged	ez_slider.c	/^int EZ_slider_OnSliderPositionChanged(ez_control_t *self)$/;"	f
EZ_slider_SetMax	ez_slider.c	/^void EZ_slider_SetMax(ez_slider_t *slider, int max_value)$/;"	f
EZ_slider_SetMin	ez_slider.c	/^void EZ_slider_SetMin(ez_slider_t *slider, int min_value)$/;"	f
EZ_slider_SetPosition	ez_slider.c	/^void EZ_slider_SetPosition(ez_slider_t *slider, int slider_pos)$/;"	f
EZ_slider_SetScale	ez_slider.c	/^void EZ_slider_SetScale(ez_slider_t *slider, float scale)$/;"	f
EZ_tree_ChangeFocus	ez_controls.c	/^void EZ_tree_ChangeFocus(ez_tree_t *tree, qbool next_control)$/;"	f
EZ_tree_Destroy	ez_controls.c	/^void EZ_tree_Destroy(ez_tree_t *tree)$/;"	f
EZ_tree_Draw	ez_controls.c	/^static void EZ_tree_Draw(ez_tree_t *tree)$/;"	f	file:
EZ_tree_DrawOrderFunc	ez_controls.c	/^static int EZ_tree_DrawOrderFunc(const void *val1, const void *val2)$/;"	f	file:
EZ_tree_EventLoop	ez_controls.c	/^void EZ_tree_EventLoop(ez_tree_t *tree)$/;"	f
EZ_tree_KeyEvent	ez_controls.c	/^qbool EZ_tree_KeyEvent(ez_tree_t *tree, int key, int unichar, qbool down)$/;"	f
EZ_tree_MouseEvent	ez_controls.c	/^qbool EZ_tree_MouseEvent(ez_tree_t *tree, mouse_state_t *ms)$/;"	f
EZ_tree_OrderDrawList	ez_controls.c	/^void EZ_tree_OrderDrawList(ez_tree_t *tree)$/;"	f
EZ_tree_OrderTabList	ez_controls.c	/^void EZ_tree_OrderTabList(ez_tree_t *tree)$/;"	f
EZ_tree_RaiseRepeatedMouseButtonEvents	ez_controls.c	/^static void EZ_tree_RaiseRepeatedMouseButtonEvents(ez_tree_t *tree)$/;"	f	file:
EZ_tree_SetDrawBounds	ez_controls.c	/^static void EZ_tree_SetDrawBounds(ez_control_t *control)$/;"	f	file:
EZ_tree_TabOrderFunc	ez_controls.c	/^static int EZ_tree_TabOrderFunc(const void *val1, const void *val2)$/;"	f	file:
EZ_tree_UnOrphanizeChildren	ez_controls.c	/^void EZ_tree_UnOrphanizeChildren(ez_tree_t *tree)$/;"	f
EZ_window_AddChild	ez_window.c	/^void EZ_window_AddChild(ez_window_t *window, ez_control_t *child)$/;"	f
EZ_window_Create	ez_window.c	/^ez_window_t *EZ_window_Create(ez_tree_t *tree, ez_control_t *parent,$/;"	f
EZ_window_Destroy	ez_window.c	/^int EZ_window_Destroy(ez_control_t *self, qbool destroy_children)$/;"	f
EZ_window_Init	ez_window.c	/^void EZ_window_Init(ez_window_t *window, ez_tree_t *tree, ez_control_t *parent,$/;"	f
EZ_window_SetWindowAreaMinVirtualSize	ez_window.c	/^void EZ_window_SetWindowAreaMinVirtualSize(ez_window_t *window, int min_virtual_width, int min_virtual_height)$/;"	f
E_FLOAT	progs.h	120;"	d
E_INT	progs.h	121;"	d
E_STRING	progs.h	123;"	d
E_VECTOR	progs.h	122;"	d
Eap	parser.c	/^LOCAL expr_val Eap(EParser p, expr_val v)$/;"	f
EdictFieldFloat	progs.h	145;"	d
EditBoxCheck	settings_page.c	/^static void EditBoxCheck(settings_page* tab, int oldm, int newm)$/;"	f	file:
EmitCausticsPolys	gl_warp.c	/^void EmitCausticsPolys (void) {$/;"	f
EmitDetailPolys	gl_rsurf.c	/^void EmitDetailPolys (void) {$/;"	f
EmitFlatPoly	gl_warp.c	/^void EmitFlatPoly (msurface_t *fa) {$/;"	f
EmitFlatWaterPoly	gl_warp.c	/^void EmitFlatWaterPoly (msurface_t *fa) {$/;"	f
EmitParticleEffect	gl_warp.c	/^void EmitParticleEffect (msurface_t *fa, void (*fun)(vec3_t nv)) {$/;"	f
EmitSkyPolys	gl_warp.c	/^void EmitSkyPolys (msurface_t *fa, qbool mtex) {$/;"	f
EmitSkyVert	gl_warp.c	/^static void EmitSkyVert (vec3_t v)$/;"	f	file:
EmitWaterPolys	gl_warp.c	/^void EmitWaterPolys (msurface_t *fa) {$/;"	f
Encode	md4.c	/^static void Encode (unsigned char *output, UINT4 *input, unsigned int len)$/;"	f	file:
EnterNavigationMode	Ctrl_PageViewer.c	/^static void EnterNavigationMode(CPageViewer_t *viewer)$/;"	f	file:
EntityState_Compare	sv_ents.c	/^static int EntityState_Compare(const void *p1, const void *p2) {$/;"	f	file:
Enum_Find_ValueCode	settings_page.c	/^static int Enum_Find_ValueCode(setting* set)$/;"	f	file:
EnumerateFiles	vfs.h	/^	int		(*EnumerateFiles)(void *handle, char *match, int (*func)(char *, int, void *), void *parm);$/;"	m	struct:__anon289
ErrorAlert	sys_mac.c	/^void ErrorAlert (Str255 inAlertString, int inError, Boolean inQuit)$/;"	f
EvDev_UpdateMouse	linux_glimp.c	/^void EvDev_UpdateMouse(void *v) {$/;"	f
EvDev_UpdateMouse	vid_glx.c	/^void EvDev_UpdateMouse(void *v) {$/;"	f
ExWindowStyle	vid_wgl.c	/^DWORD		WindowStyle, ExWindowStyle;$/;"	v
ExWindowStyle	vid_win.c	/^DWORD		WindowStyle, ExWindowStyle;$/;"	v
ExecTookTrigger	teamplay.c	/^static void ExecTookTrigger (char *s, int flag, vec3_t org)$/;"	f	file:
Execute_f	mp3_player.h	/^	void  (*Execute_f)       (void);$/;"	m	struct:__anon236
Expr_Eval	parser.c	/^GLOBAL expr_val Expr_Eval(const char *str, const parser_extra* f, int *error)$/;"	f
Expr_Eval_Bool	parser.c	/^GLOBAL int Expr_Eval_Bool(const char* str, const parser_extra* f, int *result)$/;"	f
Expr_Eval_Double	parser.c	/^GLOBAL int Expr_Eval_Double(const char *str, const parser_extra* f, double *result)$/;"	f
Expr_Eval_Int	parser.c	/^GLOBAL int Expr_Eval_Int(const char *str, const parser_extra* f, int *result)$/;"	f
ExtraInformation	in_raw.h	/^	ULONG ExtraInformation;$/;"	m	struct:tagRAWKEYBOARD
F	md4.c	102;"	d	file:
F	parser.c	/^LOCAL expr_val F(EParser p)$/;"	f
FAILED	sys_mac.c	/^static enum { QUIT, START, FAILED } action = START;$/;"	e	enum:__anon67	file:
FALSE	debug.h	271;"	d
FALSE	debug.h	279;"	d
FALSE	debug.h	286;"	d
FChecks_CheckFModRequest	fchecks.c	/^static qbool FChecks_CheckFModRequest (const char *s)$/;"	f	file:
FChecks_CheckFRulesetRequest	fchecks.c	/^static qbool FChecks_CheckFRulesetRequest (const char *s)$/;"	f	file:
FChecks_CheckFServerRequest	fchecks.c	/^static qbool FChecks_CheckFServerRequest (const char *s)$/;"	f	file:
FChecks_CheckRequest	fchecks.c	/^void FChecks_CheckRequest (const char *s)$/;"	f
FChecks_CmdlineRequest	fchecks.c	/^static qbool FChecks_CmdlineRequest (const char *s)$/;"	f	file:
FChecks_FServerResponse	fchecks.c	/^static void FChecks_FServerResponse (void)$/;"	f	file:
FChecks_FakeshaftRequest	fchecks.c	/^static qbool FChecks_FakeshaftRequest (const char *s)$/;"	f	file:
FChecks_FakeshaftResponse	fchecks.c	/^static void FChecks_FakeshaftResponse (void)$/;"	f	file:
FChecks_Init	fchecks.c	/^void FChecks_Init (void)$/;"	f
FChecks_ScriptsRequest	fchecks.c	/^static qbool FChecks_ScriptsRequest (const char *s)$/;"	f	file:
FChecks_ScriptsResponse	fchecks.c	/^static void FChecks_ScriptsResponse (void)$/;"	f	file:
FChecks_SkinRequest	fchecks.c	/^static qbool FChecks_SkinRequest (const char *s)$/;"	f	file:
FChecks_SkinsResponse	fchecks.c	/^static void FChecks_SkinsResponse (float fbskins)$/;"	f	file:
FChecks_SystemRequest	fchecks.c	/^static qbool FChecks_SystemRequest (const char *s)$/;"	f	file:
FChecks_VersionRequest	fchecks.c	/^static qbool FChecks_VersionRequest (const char *s)$/;"	f	file:
FChecks_VersionResponse	fchecks.c	/^static void FChecks_VersionResponse (void)$/;"	f	file:
FF	md4.c	111;"	d	file:
FFM_Callback	ffmpeg.c	/^void FFM_Callback(void* ptr, int level, const char* fmt, va_list vl)$/;"	f
FFM_Check_Frame_List	ffmpeg.c	/^void FFM_Check_Frame_List (void)$/;"	f
FFM_Check_Settings	ffmpeg.c	/^void FFM_Check_Settings(void)$/;"	f
FFM_Child_Thread	ffmpeg.c	/^void *FFM_Child_Thread (void *noargs)$/;"	f
FFM_Codec_Is_Usable_With_Outputformat	ffmpeg.c	/^qbool FFM_Codec_Is_Usable_With_Outputformat(AVCodec *codec, AVOutputFormat *format)$/;"	f
FFM_Codec_Type_Enum	ffmpeg.c	/^char *FFM_Codec_Type_Enum(int en)$/;"	f
FFM_Create_New_Frame	ffmpeg.c	/^struct frames_list_s *FFM_Create_New_Frame (void)$/;"	f
FFM_Encode	ffmpeg.c	/^void FFM_Encode(void)$/;"	f
FFM_Encode_Frame	ffmpeg.c	/^int FFM_Encode_Frame(struct frames_list_s *f, struct SwsContext *img_convert_context)$/;"	f
FFM_End	ffmpeg.c	/^void FFM_End(void)$/;"	f
FFM_Frame	ffmpeg.c	/^void FFM_Frame(void)$/;"	f
FFM_FrameTime	ffmpeg.c	/^double FFM_FrameTime(void)$/;"	f
FFM_Init	ffmpeg.c	/^void FFM_Init(void)$/;"	f
FFM_IsCapturing	ffmpeg.c	/^qbool FFM_IsCapturing(void)$/;"	f
FFM_List_Codecs_f	ffmpeg.c	/^void FFM_List_Codecs_f (void) $/;"	f
FFM_List_Output_Formats_f	ffmpeg.c	/^void FFM_List_Output_Formats_f (void)$/;"	f
FFM_Loadlib	ffmpeg.c	/^int FFM_Loadlib(void)$/;"	f
FFM_Quit	ffmpeg.c	/^void FFM_Quit (void)$/;"	f
FFM_Record_Start_f	ffmpeg.c	/^void FFM_Record_Start_f (void)$/;"	f
FFM_Record_Stop_f	ffmpeg.c	/^void FFM_Record_Stop_f (void)$/;"	f
FIFOTYPE	vfs_tar.h	33;"	d
FILE_TRANSFER_BUF_SIZE	q_shared.h	294;"	d
FIRSTUSERGROUP	match_tools.c	819;"	d	file:
FIRSTUSERSKYGROUP	match_tools.c	1087;"	d	file:
FLASHINGARROW	menu.h	59;"	d
FLASHINGCURSOR	menu.h	60;"	d
FLOODFILL_FIFO_MASK	gl_model.c	1462;"	d	file:
FLOODFILL_FIFO_SIZE	gl_model.c	1461;"	d	file:
FLOODFILL_STEP	gl_model.c	1464;"	d	file:
FLOODLIST_SIZE	ignore.c	30;"	d	file:
FL_AddFileType	EX_FileList.c	/^void FL_AddFileType(filelist_t *fl, int id, char *ext)$/;"	f
FL_CLIENT	server.h	344;"	d
FL_ChangeArchive	EX_FileList.c	/^void FL_ChangeArchive(filelist_t *fl, char *archive)$/;"	f
FL_ChangeDir	EX_FileList.c	/^void FL_ChangeDir(filelist_t *fl, char *newdir)$/;"	f
FL_ChangeDirUp	EX_FileList.c	/^void FL_ChangeDirUp(filelist_t *fl)$/;"	f
FL_CheckDisplayPosition	EX_FileList.c	/^void FL_CheckDisplayPosition(filelist_t *fl)$/;"	f
FL_CheckPosition	EX_FileList.c	/^void FL_CheckPosition(filelist_t *fl)$/;"	f
FL_CompareFunc	EX_FileList.c	/^int FL_CompareFunc(const void * p_d1, const void * p_d2)$/;"	f
FL_CompareFunc_FileList	EX_FileList.c	/^filelist_t * FL_CompareFunc_FileList;    \/\/ global$/;"	v
FL_CompressFile	EX_FileList.c	/^void FL_CompressFile (filelist_t *fl)$/;"	f
FL_DecompressFile	EX_FileList.c	/^void FL_DecompressFile (filelist_t *fl)$/;"	f
FL_DeleteFile	EX_FileList.c	/^void FL_DeleteFile(filelist_t *fl)$/;"	f
FL_Draw	EX_FileList.c	/^void FL_Draw(filelist_t *fl, int x, int y, int w, int h)$/;"	f
FL_EnumerateArchive	EX_FileList.c	/^int FL_EnumerateArchive(char *desc, int size, void *param)$/;"	f
FL_FLY	server.h	341;"	d
FL_FindHighlightEntry	EX_FileList.c	/^static void FL_FindHighlightEntry (filelist_t *fl)$/;"	f	file:
FL_FindRegisteredType	EX_FileList.c	/^static int FL_FindRegisteredType(filelist_t *fl, sys_dirent *ent)$/;"	f	file:
FL_GLIMPSE	server.h	343;"	d
FL_GODMODE	server.h	347;"	d
FL_GetCurrentDir	EX_FileList.c	/^char *FL_GetCurrentDir(filelist_t *fl)$/;"	f
FL_GetCurrentDisplay	EX_FileList.c	/^ char *FL_GetCurrentDisplay(filelist_t *fl)$/;"	f
FL_GetCurrentEntry	EX_FileList.c	/^ filedesc_t * FL_GetCurrentEntry(filelist_t *fl)$/;"	f
FL_GetCurrentEntryType	EX_FileList.c	/^int FL_GetCurrentEntryType(filelist_t *fl)$/;"	f
FL_GetCurrentPath	EX_FileList.c	/^ char *FL_GetCurrentPath(filelist_t *fl)$/;"	f
FL_GotoFile	EX_FileList.c	/^void FL_GotoFile(filelist_t *fl, char *name)$/;"	f
FL_INWATER	server.h	345;"	d
FL_ITEM	server.h	349;"	d
FL_Init	EX_FileList.c	/^void FL_Init(filelist_t	*	fl,$/;"	f
FL_IsCurrentArchive	EX_FileList.c	/^qbool FL_IsCurrentArchive(filelist_t *fl)$/;"	f
FL_IsCurrentDir	EX_FileList.c	/^qbool FL_IsCurrentDir(filelist_t *fl)$/;"	f
FL_Key	EX_FileList.c	/^ qbool FL_Key(filelist_t *fl, int key)$/;"	f
FL_MODE_COMPRESS	EX_FileList.h	67;"	d
FL_MODE_DECOMPRESS	EX_FileList.h	68;"	d
FL_MODE_DELETE	EX_FileList.h	66;"	d
FL_MODE_NORMAL	EX_FileList.h	65;"	d
FL_MONSTER	server.h	346;"	d
FL_Mouse_Event	EX_FileList.c	/^qbool FL_Mouse_Event(filelist_t *fl, const mouse_state_t *ms)$/;"	f
FL_NOTARGET	server.h	348;"	d
FL_ONGROUND	server.h	350;"	d
FL_PARTIALGROUND	server.h	351;"	d
FL_ReadArchive	EX_FileList.c	/^void FL_ReadArchive (filelist_t *fl) $/;"	f
FL_ReadArchive	EX_FileList.c	/^void FL_ReadArchive (filelist_t *fl)$/;"	f
FL_ReadDir	EX_FileList.c	/^void FL_ReadDir(filelist_t *fl)$/;"	f
FL_SEARCH_TIMEOUT	EX_FileList.c	39;"	d	file:
FL_SWIM	server.h	342;"	d
FL_Search	EX_FileList.c	/^qbool FL_Search(filelist_t *fl)$/;"	f
FL_SetCurrentDir	EX_FileList.c	/^void FL_SetCurrentDir(filelist_t *fl, const char *dir)$/;"	f
FL_SetDirUpOption	EX_FileList.c	/^void FL_SetDirUpOption(filelist_t *fl, qbool show)$/;"	f
FL_SetDirsOption	EX_FileList.c	/^void FL_SetDirsOption(filelist_t *fl, qbool show)$/;"	f
FL_SortDir	EX_FileList.c	/^void FL_SortDir (filelist_t *fl)$/;"	f
FL_StripFileName	EX_FileList.c	/^void FL_StripFileName(filelist_t *fl, filedesc_t *f)$/;"	f
FL_WATERJUMP	server.h	352;"	d
FMOD_DM	fmod.c	156;"	d	file:
FMOD_TF	fmod.c	157;"	d	file:
FMod_AddModel	fmod.c	/^static int FMod_AddModel (const char *name, const qbool flags, const void *hash)$/;"	f	file:
FMod_AddModelAlt	fmod.c	/^static void FMod_AddModelAlt (int cm_num, check_models_hashes_entry_t *hash_new)$/;"	f	file:
FMod_CheckModel	fmod.c	/^void FMod_CheckModel (const char *name, const void *buf, const size_t len)$/;"	f
FMod_Init	fmod.c	/^void FMod_Init (void)$/;"	f
FMod_IsModelModified	fmod.c	/^static qbool FMod_IsModelModified (const char *name, const int flags, const byte *buf, const size_t len)$/;"	f	file:
FMod_Response	fmod.c	/^void FMod_Response (void)$/;"	f
FONTWIDTH	cl_screen.c	1484;"	d	file:
FONT_SIZE	cl_screen.c	1255;"	d	file:
FONT_SIZE	console.c	1143;"	d	file:
FPD_LIMIT_PITCH	teamplay.h	99;"	d
FPD_LIMIT_YAW	teamplay.h	100;"	d
FPD_NO_FORCE_COLOR	teamplay.h	98;"	d
FPD_NO_FORCE_SKIN	teamplay.h	97;"	d
FPD_NO_SOUNDTRIGGERS	teamplay.h	96;"	d
FPD_NO_TIMERS	teamplay.h	95;"	d
FRAGFILE_VERSION_1_00	fragstats.c	33;"	d	file:
FRAGS_HEALTHBAR_MEGA_COLOR	hud_common.c	2754;"	d	file:
FRAGS_HEALTHBAR_NORMAL_COLOR	hud_common.c	2753;"	d	file:
FRAGS_HEALTHBAR_TWO_MEGA_COLOR	hud_common.c	2755;"	d	file:
FRAGS_HEALTHBAR_UNNATURAL_COLOR	hud_common.c	2756;"	d	file:
FRAGS_HEALTHBAR_WIDTH	hud_common.c	2751;"	d	file:
FRAMECOUNT_MASK	r_rast.c	37;"	d	file:
FSGZIP_BuildHash	vfs_gzip.c	/^static void FSGZIP_BuildHash(void *handle)$/;"	f	file:
FSGZIP_ClosePath	vfs_gzip.c	/^static void FSGZIP_ClosePath(void *handle)$/;"	f	file:
FSGZIP_EnumerateFiles	vfs_gzip.c	/^static int FSGZIP_EnumerateFiles (void *handle, char *match, int (*func)(char *, int, void *), void *parm)$/;"	f	file:
FSGZIP_FLocate	vfs_gzip.c	/^static qbool FSGZIP_FLocate(void *handle, flocation_t *loc, const char *filename, void *hashedresult)$/;"	f	file:
FSGZIP_LoadGZipFile	vfs_gzip.c	/^static void *FSGZIP_LoadGZipFile(vfsfile_t *gziphandle, const char *desc)$/;"	f	file:
FSGZIP_OpenVFS	vfs_gzip.c	/^static vfsfile_t *FSGZIP_OpenVFS(void *handle, flocation_t *loc, char *mode) $/;"	f	file:
FSGZIP_PrintPath	vfs_gzip.c	/^static void FSGZIP_PrintPath(void *handle)$/;"	f	file:
FSGZIP_ReadFile	vfs_gzip.c	/^static void FSGZIP_ReadFile(void *handle, flocation_t *loc, char *buffer)$/;"	f	file:
FSLFRT_DEPTH_ANYPATH	fs.c	/^	FSLFRT_DEPTH_ANYPATH$/;"	e	enum:__anon18	file:
FSLFRT_DEPTH_OSONLY	fs.c	/^	FSLFRT_DEPTH_OSONLY,$/;"	e	enum:__anon18	file:
FSLFRT_IFFOUND	fs.c	/^	FSLFRT_IFFOUND,$/;"	e	enum:__anon18	file:
FSLFRT_LENGTH	fs.c	/^	FSLFRT_LENGTH,$/;"	e	enum:__anon18	file:
FSLF_ReturnType_e	fs.c	/^} FSLF_ReturnType_e;$/;"	t	typeref:enum:__anon18	file:
FSMMAP_OpenVFS	vfs_mmap.c	/^vfsfile_t *FSMMAP_OpenVFS(void *buf, size_t buf_len) $/;"	f
FSOS_BuildHash	vfs_os.c	/^static void FSOS_BuildHash(void *handle)$/;"	f	file:
FSOS_ClosePath	vfs_os.c	/^static void FSOS_ClosePath(void *handle)$/;"	f	file:
FSOS_EnumerateFiles	vfs_os.c	/^static int FSOS_EnumerateFiles (void *handle, char *match, int (*func)(char *, int, void *), void *parm)$/;"	f	file:
FSOS_FLocate	vfs_os.c	/^static qbool FSOS_FLocate(void *handle, flocation_t *loc, const char *filename, void *hashedresult)$/;"	f	file:
FSOS_OpenVFS	vfs_os.c	/^vfsfile_t *FSOS_OpenVFS(void *handle, flocation_t *loc, char *mode)$/;"	f
FSOS_PrintPath	vfs_os.c	/^static void FSOS_PrintPath(void *handle)$/;"	f	file:
FSOS_ReadFile	vfs_os.c	/^void FSOS_ReadFile(void *handle, flocation_t *loc, char *buffer)$/;"	f
FSOS_RebuildFSHash	vfs_os.c	/^static int FSOS_RebuildFSHash(char *filename, int filesize, void *data)$/;"	f	file:
FSPAK_BuildHash	vfs_pak.c	/^static void FSPAK_BuildHash(void *handle)$/;"	f	file:
FSPAK_ClosePath	vfs_pak.c	/^static void FSPAK_ClosePath(void *handle)$/;"	f	file:
FSPAK_EnumerateFiles	vfs_pak.c	/^static int FSPAK_EnumerateFiles (void *handle, char *match, int (*func)(char *, int, void *), void *parm)$/;"	f	file:
FSPAK_FLocate	vfs_pak.c	/^static qbool FSPAK_FLocate(void *handle, flocation_t *loc, const char *filename, void *hashedresult)$/;"	f	file:
FSPAK_LoadDoomWadFile	vfs_doomwad.c	/^void *FSPAK_LoadDoomWadFile (vfsfile_t *packhandle, char *desc)$/;"	f
FSPAK_LoadPackFile	vfs_pak.c	/^static void *FSPAK_LoadPackFile (vfsfile_t *file, const char *desc)$/;"	f	file:
FSPAK_OpenVFS	vfs_pak.c	/^static vfsfile_t *FSPAK_OpenVFS(void *handle, flocation_t *loc, char *mode)$/;"	f	file:
FSPAK_OpenVFS	vfs_pak.c	/^vfsfile_t *FSPAK_OpenVFS(FILE *handle, int fsize, int fpos, char *mode)$/;"	f
FSPAK_PrintPath	vfs_pak.c	/^static void FSPAK_PrintPath(void *handle)$/;"	f	file:
FSTAR_BuildHash	vfs_tar.c	/^static void FSTAR_BuildHash(void *handle)$/;"	f	file:
FSTAR_ClosePath	vfs_tar.c	/^static void FSTAR_ClosePath(void *handle)$/;"	f	file:
FSTAR_EnumerateFiles	vfs_tar.c	/^static int FSTAR_EnumerateFiles (void *handle, char *match, int (*func)(char *, int, void *), void *parm)$/;"	f	file:
FSTAR_FLocate	vfs_tar.c	/^static qbool FSTAR_FLocate(void *handle, flocation_t *loc, const char *filename, void *hashedresult)$/;"	f	file:
FSTAR_LoadTarFile	vfs_tar.c	/^static void *FSTAR_LoadTarFile(vfsfile_t *tarhandle, const char *desc)$/;"	f	file:
FSTAR_OpenVFS	vfs_tar.c	/^static vfsfile_t *FSTAR_OpenVFS(void *handle, flocation_t *loc, char *mode) $/;"	f	file:
FSTAR_PrintPath	vfs_tar.c	/^static void FSTAR_PrintPath(void *handle)$/;"	f	file:
FSTAR_ReadFile	vfs_tar.c	/^static void FSTAR_ReadFile(void *handle, flocation_t *loc, char *buffer)$/;"	f	file:
FSZIP_BuildHash	vfs_zip.c	/^static void FSZIP_BuildHash(void *handle)$/;"	f	file:
FSZIP_ClosePath	vfs_zip.c	/^static void FSZIP_ClosePath(void *handle)$/;"	f	file:
FSZIP_CreteFileFuncs	vfs_zip.c	/^static void FSZIP_CreteFileFuncs(zlib_filefunc_def *funcs) {$/;"	f	file:
FSZIP_EnumerateFiles	vfs_zip.c	/^static int FSZIP_EnumerateFiles (void *handle, char *match, int (*func)(char *, int, void *), void *parm)$/;"	f	file:
FSZIP_FLocate	vfs_zip.c	/^static qbool FSZIP_FLocate(void *handle, flocation_t *loc, const char *filename, void *hashedresult)$/;"	f	file:
FSZIP_GeneratePureCRC	vfs_zip.c	/^static int FSZIP_GeneratePureCRC(void *handle, int seed, int crctype)$/;"	f	file:
FSZIP_LoadZipFile	vfs_zip.c	/^static void *FSZIP_LoadZipFile(vfsfile_t *packhandle, const char *desc)$/;"	f	file:
FSZIP_OpenVFS	vfs_zip.c	/^static vfsfile_t *FSZIP_OpenVFS(void *handle, flocation_t *loc, char *mode)$/;"	f	file:
FSZIP_PrintPath	vfs_zip.c	/^static void FSZIP_PrintPath(void *handle)$/;"	f	file:
FSZIP_ReadFile	vfs_zip.c	/^static void FSZIP_ReadFile(void *handle, flocation_t *loc, char *buffer)$/;"	f	file:
FSZIP_ZCloseFile	vfs_zip.c	/^static int FSZIP_ZCloseFile(void *fin, void *stream) {$/;"	f	file:
FSZIP_ZErrorFileFile	vfs_zip.c	/^static int FSZIP_ZErrorFileFile(void *fin, void *stream) {$/;"	f	file:
FSZIP_ZOpenFile	vfs_zip.c	/^static void *FSZIP_ZOpenFile(void *fin, const char *filename, int mode) {$/;"	f	file:
FSZIP_ZReadFile	vfs_zip.c	/^static unsigned long FSZIP_ZReadFile(void *fin, void *stream, void *buf, unsigned long size) {$/;"	f	file:
FSZIP_ZSeekFile	vfs_zip.c	/^static long FSZIP_ZSeekFile(void *fin, void *stream, unsigned long offset, int origin) {$/;"	f	file:
FSZIP_ZTellFile	vfs_zip.c	/^static long FSZIP_ZTellFile(void *fin, void *stream) {$/;"	f	file:
FSZIP_ZWriteFile	vfs_zip.c	/^static unsigned long FSZIP_ZWriteFile(void *fin, void *stream, const void *buf, unsigned long size) {$/;"	f	file:
FS_ANY	fs.h	/^	FS_ANY      \/\/ file searched on quake file system even in paks, u may use$/;"	e	enum:__anon151
FS_AddDataFiles	fs.c	/^static void FS_AddDataFiles(char *pathto, searchpath_t *parent, char *extension, searchpathfuncs_t *funcs)$/;"	f	file:
FS_AddGameDirectory	fs.c	/^void FS_AddGameDirectory (char *dir, FS_Load_File_Types loadstuff)$/;"	f
FS_AddGameDirectory	fs.c	/^void FS_AddGameDirectory (char *path_to_dir, char *dir) {$/;"	f
FS_AddHomeDirectory	fs.c	/^void FS_AddHomeDirectory (char *dir, FS_Load_File_Types loadstuff)$/;"	f
FS_AddPak	fs.c	/^static int FS_AddPak(char *pathto, char *pakname, searchpath_t *search, searchpathfuncs_t *funcs) $/;"	f	file:
FS_AddPak	fs.c	/^static qbool FS_AddPak (char *pakfile) {$/;"	f	file:
FS_AddPathHandle	fs.c	/^searchpath_t *FS_AddPathHandle(char *probablepath, searchpathfuncs_t *funcs, void *handle, qbool copyprotect, qbool istemporary, FS_Load_File_Types loadstuff)$/;"	f
FS_AddUserDirectory	fs.c	/^void FS_AddUserDirectory ( char *dir ) {$/;"	f
FS_AddUserPaks	fs.c	/^static void FS_AddUserPaks (char *dir)$/;"	f	file:
FS_AddWildDataFiles	fs.c	/^static int FS_AddWildDataFiles (char *descriptor, int size, void *vparam)$/;"	f	file:
FS_BASE	fs.h	/^	FS_BASE,	\/\/ file is relative to the com_basedir\/com_homedir$/;"	e	enum:__anon151
FS_BreakUpArchivePath	fs.c	/^int FS_BreakUpArchivePath(const char *filename, $/;"	f
FS_CreatePath	fs.c	/^void FS_CreatePath(char *path)$/;"	f
FS_CreatePathRelative	fs.c	/^void FS_CreatePathRelative(char *pname, int relativeto)$/;"	f
FS_DecompressGZip	fs.c	/^vfsfile_t *FS_DecompressGZip(vfsfile_t *infile, gzheader_t *header)$/;"	f
FS_DiffFile_f	fs.c	/^static void FS_DiffFile_f(void) $/;"	f	file:
FS_Dir_List	fs.c	/^static int FS_Dir_List(char *name, int size, void *parm)$/;"	f	file:
FS_Dir_f	fs.c	/^void FS_Dir_f (void)$/;"	f
FS_EnumerateFiles	fs.c	/^void FS_EnumerateFiles (char *match, int (*func)(char *, int, void *), void *parm)$/;"	f
FS_FCreateFile	fs.c	/^int FS_FCreateFile (char *filename, FILE **file, char *path, char *mode)$/;"	f
FS_FLocateFile	fs.c	/^int FS_FLocateFile(const char *filename, FSLF_ReturnType_e returntype, flocation_t *loc)$/;"	f
FS_FOpenFile	fs.c	/^int FS_FOpenFile (const char *filename, FILE **file) {$/;"	f
FS_FOpenPathFile	fs.c	/^int FS_FOpenPathFile (const char *filename, FILE **file) {$/;"	f
FS_FileLength	fs.c	/^int FS_FileLength (FILE *f)$/;"	f
FS_FileNameToSearchFunctions	fs.c	/^searchpathfuncs_t *FS_FileNameToSearchFunctions(const char *filename) {$/;"	f
FS_FileOpenRead	fs.c	/^int FS_FileOpenRead (char *path, FILE **hndl)$/;"	f
FS_FlushFSCache	fs.c	/^void FS_FlushFSCache(void)$/;"	f
FS_FlushFSHash	fs.c	/^void FS_FlushFSHash(void)$/;"	f
FS_ForceToPure	fs.c	/^void FS_ForceToPure(char *str, char *crcs, int seed)$/;"	f
FS_GAME_OS	fs.h	/^	FS_GAME_OS, \/\/ file used as com_basedir\/filename, opened with OS functions $/;"	e	enum:__anon151
FS_GZipPack	fs.c	/^int FS_GZipPack (char *source_path,$/;"	f
FS_GZipUnpack	fs.c	/^int FS_GZipUnpack (char *source_path,		\/\/ The path to the compressed source file.$/;"	f
FS_GZipUnpackToTemp	fs.c	/^int FS_GZipUnpackToTemp (char *source_path,		\/\/ The compressed source file.$/;"	f
FS_GenerateClientPacksList	fs.c	/^char *FS_GenerateClientPacksList(char *buffer, int maxlen, int basechecksum)$/;"	f
FS_GetPackHashes	fs.c	/^char *FS_GetPackHashes(char *buffer, int buffersize, qbool referencedonly)$/;"	f
FS_GetPackNames	fs.c	/^char *FS_GetPackNames(char *buffer, int buffersize, qbool referencedonly)$/;"	f
FS_HOME	fs.h	/^	FS_HOME,$/;"	e	enum:__anon151
FS_InitFilesystem	fs.c	/^void FS_InitFilesystem( void ) {$/;"	f
FS_InitFilesystemEx	fs.c	/^void FS_InitFilesystemEx( qbool guess_cwd ) {$/;"	f
FS_InitModuleFS	fs.c	/^void FS_InitModuleFS (void)$/;"	f
FS_IsArchive	fs.c	/^qbool FS_IsArchive (char *zip_path)$/;"	f
FS_IsArchive	fs.c	/^qbool FS_IsArchive(char *arch_path)$/;"	f
FS_LOAD_FILE_ALL	fs.h	/^	FS_LOAD_FILE_ALL = FS_LOAD_FILE_PAK | FS_LOAD_FILE_PK3 $/;"	e	enum:__anon152
FS_LOAD_FILE_DOOMWAD	fs.h	/^	FS_LOAD_FILE_DOOMWAD = 16,$/;"	e	enum:__anon152
FS_LOAD_FILE_PAK	fs.h	/^	FS_LOAD_FILE_PAK = 2,$/;"	e	enum:__anon152
FS_LOAD_FILE_PK3	fs.h	/^	FS_LOAD_FILE_PK3 = 4,$/;"	e	enum:__anon152
FS_LOAD_FILE_PK4	fs.h	/^	FS_LOAD_FILE_PK4 = 8,$/;"	e	enum:__anon152
FS_LOAD_FROM_PAKLST	fs.h	/^	FS_LOAD_FROM_PAKLST = 32,$/;"	e	enum:__anon152
FS_LOAD_NONE	fs.h	/^	FS_LOAD_NONE     = 1,$/;"	e	enum:__anon152
FS_LegacyDir	fs.c	/^char *FS_LegacyDir(char *media_dir)$/;"	f
FS_LoadFile	fs.c	/^static byte *FS_LoadFile (const char *path, int usehunk, int *file_length)$/;"	f	file:
FS_LoadHeapFile	fs.c	/^byte *FS_LoadHeapFile (const char *path, int *len)$/;"	f
FS_LoadHunkFile	fs.c	/^byte *FS_LoadHunkFile (char *path, int *len) {$/;"	f
FS_LoadPackFile	fs.c	/^pack_t *FS_LoadPackFile (char *packfile) {$/;"	f
FS_LoadTempFile	fs.c	/^byte *FS_LoadTempFile (char *path, int *len) {$/;"	f
FS_Load_File_Types	fs.h	/^} FS_Load_File_Types;$/;"	t	typeref:enum:__anon152
FS_Locate_f	fs.c	/^void FS_Locate_f (void)$/;"	f
FS_NONE_OS	fs.h	/^	FS_NONE_OS, \/\/ file name used as is, opened with OS functions (no paks)$/;"	e	enum:__anon151
FS_OpenTCP	vfs_tcp.c	/^vfsfile_t *FS_OpenTCP(char *name)$/;"	f
FS_OpenTemp	vfs_os.c	/^vfsfile_t *FS_OpenTemp(void)$/;"	f
FS_OpenVFS	fs.c	/^vfsfile_t *FS_OpenVFS(const char *filename, char *mode, relativeto_t relativeto)$/;"	f
FS_PAK	fs.h	/^	FS_PAK,$/;"	e	enum:__anon151
FS_PakAdd_f	fs.c	/^void FS_PakAdd_f(void) { FS_PakOper_Process(PAKOP_ADD); }$/;"	f
FS_PakOper_NoPath	fs.c	/^static qbool FS_PakOper_NoPath(char* pakfile, pak_operation_t op)$/;"	f	file:
FS_PakOper_Process	fs.c	/^static void FS_PakOper_Process(pak_operation_t op)$/;"	f	file:
FS_PakOperation	fs.c	/^static qbool FS_PakOperation(char* pakfile, pak_operation_t op)$/;"	f	file:
FS_PakRem_f	fs.c	/^void FS_PakRem_f(void) { FS_PakOper_Process(PAKOP_REM); }$/;"	f
FS_Path_f	fs.c	/^void FS_Path_f (void)$/;"	f
FS_RebuildFSHash	fs.c	/^void FS_RebuildFSHash(void)$/;"	f
FS_RefreshFSCache_f	fs.c	/^void FS_RefreshFSCache_f(void)$/;"	f
FS_ReloadPackFiles	fs.c	/^void FS_ReloadPackFiles(void)$/;"	f
FS_ReloadPackFilesFlags	fs.c	/^void FS_ReloadPackFilesFlags(FS_Load_File_Types reloadflags)$/;"	f
FS_ReloadPackFiles_f	fs.c	/^void FS_ReloadPackFiles_f(void)$/;"	f
FS_Remove	fs.c	/^int FS_Remove(char *fname, int relativeto)$/;"	f
FS_RemovePak	fs.c	/^static qbool FS_RemovePak (const char *pakfile) {$/;"	f	file:
FS_Rename	fs.c	/^int FS_Rename(char *oldf, char *newf, relativeto_t relativeto)$/;"	f
FS_Rename2	fs.c	/^int FS_Rename2(char *oldf, char *newf, relativeto_t oldrelativeto, relativeto_t newrelativeto)$/;"	f
FS_SetGamedir	fs.c	/^void FS_SetGamedir (char *dir)$/;"	f
FS_SetUserDirectory	fs.c	/^void FS_SetUserDirectory (char *dir, char *type) {$/;"	f
FS_ShutDown	fs.c	/^void FS_ShutDown( void ) {$/;"	f
FS_UnloadPackFiles	fs.c	/^void FS_UnloadPackFiles(void)$/;"	f
FS_WriteFile	fs.c	/^qbool FS_WriteFile (char *filename, void *data, int len)$/;"	f
FS_WriteFileRelative	fs.c	/^qbool FS_WriteFileRelative(char *filename, void *data, int len, int relativeto)$/;"	f
FS_WriteFile_2	fs.c	/^qbool FS_WriteFile_2 (char *filename, void *data, int len)$/;"	f
FS_ZipBreakupArchivePath	fs.c	/^int FS_ZipBreakupArchivePath (char *archive_extension,			\/\/ The extension of the archive type we're looking fore "zip" for example.$/;"	f
FS_ZipGetDetails	fs.c	/^static int FS_ZipGetDetails (unzFile zip_file, sys_dirent *ent)$/;"	f	file:
FS_ZipGetFirst	fs.c	/^int FS_ZipGetFirst (unzFile zip_file, sys_dirent *ent)$/;"	f
FS_ZipGetNextFile	fs.c	/^int FS_ZipGetNextFile (unzFile zip_file, sys_dirent *ent)$/;"	f
FS_ZipMakeDirent	fs.c	/^static void FS_ZipMakeDirent (sys_dirent *ent, char *filename_inzip, unz_file_info *unzip_fileinfo)$/;"	f	file:
FS_ZipUnpack	fs.c	/^int FS_ZipUnpack (unzFile zip_file,$/;"	f
FS_ZipUnpackCloseFile	fs.c	/^int FS_ZipUnpackCloseFile (unzFile zip_file)$/;"	f
FS_ZipUnpackCurrentFile	fs.c	/^int FS_ZipUnpackCurrentFile (unzFile zip_file,$/;"	f
FS_ZipUnpackOneFile	fs.c	/^int FS_ZipUnpackOneFile (unzFile zip_file,				\/\/ The zip file opened with FS_ZipUnpackOpenFile(..)$/;"	f
FS_ZipUnpackOneFileToTemp	fs.c	/^int FS_ZipUnpackOneFileToTemp (unzFile zip_file,$/;"	f
FS_ZipUnpackOpenFile	fs.c	/^unzFile FS_ZipUnpackOpenFile (const char *zip_path)$/;"	f
FS_ZipUnpackToTemp	fs.c	/^int FS_ZipUnpackToTemp (unzFile zip_file,$/;"	f
FS_ZlibInflate	fs.c	/^int FS_ZlibInflate(FILE *source, FILE *dest)$/;"	f
FS_ZlibUnpack	fs.c	/^int FS_ZlibUnpack (char *source_path,		\/\/ The path to the compressed source file.$/;"	f
FS_ZlibUnpackToTemp	fs.c	/^int FS_ZlibUnpackToTemp (char *source_path,		\/\/ The compressed source file.$/;"	f
FTE_PEXT_256PACKETENTITIES	protocol.h	41;"	d
FTE_PEXT_CHUNKEDDOWNLOADS	protocol.h	42;"	d
FTE_PEXT_ENTITYDBL	protocol.h	37;"	d
FTE_PEXT_ENTITYDBL2	protocol.h	38;"	d
FTE_PEXT_FLOATCOORDS	protocol.h	39;"	d
FTE_PEXT_HLBSP	protocol.h	35;"	d
FTE_PEXT_MODELDBL	protocol.h	36;"	d
FTE_PEXT_SPAWNSTATIC2	protocol.h	40;"	d
FUH_FRAGFILE_VERSION_1_00	fragstats.c	32;"	d	file:
FULLY_CLIPPED_CACHED	r_rast.c	36;"	d	file:
FUNCTIONS_NAME	lua.c	20;"	d	file:
FadeOut_f	mp3_player.h	/^	void  (*FadeOut_f)       (void);$/;"	m	struct:__anon236
FanLength	gl_mesh.c	/^int	FanLength (int starttri, int startv)$/;"	f
FastForward_f	mp3_player.h	/^	void  (*FastForward_f)   (void);$/;"	m	struct:__anon236
FillServerListPings	EX_browser_ping.c	/^static void FillServerListPings(server_data *servs[], int servsn, $/;"	f	file:
Filter_Servers	EX_browser.c	/^void Filter_Servers(void)$/;"	f
FindBestNick	keys.c	/^int FindBestNick (char *s,int use) {$/;"	f
FindChunk	snd_mem.c	/^static void FindChunk(char *name)$/;"	f	file:
FindCommonSubString	keys.c	/^static void FindCommonSubString (char *s) {$/;"	f	file:
FindFile	vfs.h	/^	qbool   (*FindFile)(void *handle, flocation_t *loc, const char *name, void *hashedresult);	$/;"	m	struct:__anon289
FindNearestItem	teamplay.c	/^static int FindNearestItem (int flags, item_t **pitem)$/;"	f	file:
FindNextChunk	snd_mem.c	/^static void FindNextChunk(char *name)$/;"	f	file:
FindSetting_AtPos	settings_page.c	/^static int FindSetting_AtPos(const settings_page *page, int top)$/;"	f	file:
FindTouchedLeafs_r	cmodel.c	/^static void FindTouchedLeafs_r (const cnode_t *node)$/;"	f	file:
Find_Lua_State	lua.c	/^struct L_lua_states *Find_Lua_State(char *name)$/;"	f
FireballTrail	gl_rpart.c	/^void FireballTrail (vec3_t start, vec3_t end, vec3_t *trail_origin, byte col[3], float size, float life)$/;"	f
FireballTrailWave	gl_rpart.c	/^void FireballTrailWave (vec3_t start, vec3_t end, vec3_t *trail_origin, byte col[3], float size, float life, vec3_t angle)$/;"	f
FixATIRect	vid_mac.c	/^void FixATIRect ()$/;"	f
FlagCommand	teamplay.c	/^static void FlagCommand (unsigned int *flags, unsigned int defaultflags)$/;"	f	file:
Flags	in_raw.h	/^	USHORT Flags;$/;"	m	struct:tagRAWKEYBOARD
FlipScreen	vid_win.c	/^void FlipScreen(vrect_t *rects) {$/;"	f
FloatInterpolate	mathlib.h	152;"	d
FloatSwap	q_shared.c	/^float FloatSwap (float f)$/;"	f
FloatSwapPDP2Big	q_shared.c	/^float FloatSwapPDP2Big (float f)$/;"	f
FloatSwapPDP2Lit	q_shared.c	/^float FloatSwapPDP2Lit (float f)$/;"	f
FloorDivMod	mathlib.c	/^void FloorDivMod (double numer, double denom, int *quotient, int *rem) {$/;"	f
Flush	fs.h	/^	void (*Flush) (struct vfsfile_s *file);$/;"	m	struct:vfsfile_s
FlushEntityPacket	cl_ents.c	/^void FlushEntityPacket (void) {$/;"	f
FlushString	cl_parse.c	/^static void FlushString (const wchar *s, int level, qbool team, int offset) $/;"	f	file:
Follows	parser.c	/^LOCAL int Follows(EParser p, const char *str)$/;"	f
Force_Centerview_f	cl_view.c	/^void Force_Centerview_f (void)$/;"	f
FpslimitRead	menu_options.c	/^const char* FpslimitRead(void) {$/;"	f
FpslimitToggle	menu_options.c	/^void FpslimitToggle(qbool back) {$/;"	f
Frags_DrawBackground	hud_common.c	/^void Frags_DrawBackground(int px, int py, int cell_width, int cell_height,$/;"	f
Frags_DrawColors	hud_common.c	/^void Frags_DrawColors(int x, int y, int width, int height,$/;"	f
Frags_DrawExtraSpecInfo	hud_common.c	/^int Frags_DrawExtraSpecInfo(player_info_t *info,$/;"	f
Frags_DrawHealthBar	hud_common.c	/^void Frags_DrawHealthBar(int original_health, int x, int y, int height, int width)$/;"	f
Frags_DrawText	hud_common.c	/^int Frags_DrawText(int px, int py,$/;"	f
Frags_OnChangeExtraSpecInfo	hud_common.c	/^void Frags_OnChangeExtraSpecInfo(cvar_t *var, char *s, qbool *cancel)$/;"	f
Framebuffer_Create	gl_framebuffer.c	/^void Framebuffer_Create (fb_t *fbs)$/;"	f
Framebuffer_Disable	gl_framebuffer.c	/^void Framebuffer_Disable (fb_t *fbs)$/;"	f
Framebuffer_Draw	gl_framebuffer.c	/^void Framebuffer_Draw (fb_t *fbs)$/;"	f
Framebuffer_Enable	gl_framebuffer.c	/^void Framebuffer_Enable (fb_t *fbs)$/;"	f
Framebuffer_Init	gl_framebuffer.c	/^void Framebuffer_Init (void)$/;"	f
Framebuffer_Main_Init	gl_framebuffer.c	/^void Framebuffer_Main_Init (void)$/;"	f
FreePage	Ctrl_PageViewer.c	/^static void FreePage(CPageViewer_page_t *page)$/;"	f	file:
FreePageRendered	Ctrl_PageViewer.c	/^static void FreePageRendered(CPageViewer_page_t *page)$/;"	f	file:
FreeSound	snd_win.c	/^static void FreeSound (void)$/;"	f	file:
FuelRodExplosion	gl_rpart.c	/^void FuelRodExplosion (vec3_t org)$/;"	f
FuelRodGunTrail	gl_rpart.c	/^void FuelRodGunTrail (vec3_t start, vec3_t end, vec3_t angle, vec3_t *trail_origin)$/;"	f
FullScreenRead	menu_options.c	/^const char* FullScreenRead(void) { return mvs_selected.fullscreen ? "on" : "off"; }$/;"	f
FullScreenToggle	menu_options.c	/^void FullScreenToggle(qbool back) { mvs_selected.fullscreen = mvs_selected.fullscreen ? 0 : 1; }$/;"	f
FunToSort	utils.c	/^void FunToSort(char *text)$/;"	f
Functions_Meta	lua.c	/^static const luaL_reg Functions_Meta[] = {$/;"	v	file:
Functions_Methods	lua.c	/^static const luaL_reg Functions_Methods[] = {$/;"	v	file:
G	md4.c	103;"	d	file:
GAME_COOP	common.h	136;"	d
GAME_DEATHMATCH	common.h	137;"	d
GA_INFO	mvd_utils_common.h	28;"	d
GENERATE_ENUM_MENU_FUNC	menu_multiplayer.c	82;"	d	file:
GENERATE_ENUM_READ_PROC	menu_multiplayer.c	72;"	d	file:
GENERATE_ENUM_TOGGLE_PROC	menu_multiplayer.c	61;"	d	file:
GET_HEADER	vfs_tar.h	/^	GET_HEADER = HEADER_SHORTNAME | HEADER_LONGNAME$/;"	e	enum:__anon293
GE_ClientCommand	pr_edict.c	/^func_t GE_ClientCommand;$/;"	v
GFXPreset	menu_options.c	/^static int GFXPreset(void) {$/;"	f	file:
GFXPresetRead	menu_options.c	/^const char* GFXPresetRead(void) {$/;"	f
GFXPresetToggle	menu_options.c	/^void GFXPresetToggle(qbool back) {$/;"	f
GFX_Init	cl_main.c	/^void GFX_Init (void) $/;"	f
GG	md4.c	113;"	d	file:
GLDRV_ICD	tr_types.h	/^	GLDRV_ICD,					\/\/ driver is integrated with window system$/;"	e	enum:__anon284
GLDRV_STANDALONE	tr_types.h	/^	GLDRV_STANDALONE,			\/\/ driver is a non-3Dfx standalone driver$/;"	e	enum:__anon284
GLDRV_VOODOO	tr_types.h	/^	GLDRV_VOODOO				\/\/ driver is a 3Dfx standalone driver$/;"	e	enum:__anon284
GLHW_3DFX_2D3D	tr_types.h	/^	GLHW_3DFX_2D3D,			\/\/ Voodoo Banshee or Voodoo3, relevant since if this is$/;"	e	enum:__anon285
GLHW_GENERIC	tr_types.h	/^	GLHW_GENERIC,			\/\/ where everthing works the way it should$/;"	e	enum:__anon285
GLHW_INTEL	tr_types.h	/^	GLHW_INTEL				\/\/ Causes flickering console if you write directly to the front $/;"	e	enum:__anon285
GLHW_PERMEDIA2	tr_types.h	/^	GLHW_PERMEDIA2,			\/\/ where you don't have src*dst$/;"	e	enum:__anon285
GLHW_RAGEPRO	tr_types.h	/^	GLHW_RAGEPRO,			\/\/ where you can't modulate alpha on alpha textures$/;"	e	enum:__anon285
GLHW_RIVA128	tr_types.h	/^	GLHW_RIVA128,			\/\/ where you can't interpolate alpha$/;"	e	enum:__anon285
GLMODE_NUMODES	gl_texture.c	116;"	d	file:
GLOBAL	parser.c	23;"	d	file:
GLOBAL	tp_msgs.c	14;"	d	file:
GLW_CheckNeedSetDeviceGammaRamp	linux_glimp.c	/^void GLW_CheckNeedSetDeviceGammaRamp(void) {$/;"	f
GLW_CheckOSVersion	win_glimp.c	/^static qbool GLW_CheckOSVersion( void )$/;"	f	file:
GLW_ChoosePFD	win_glimp.c	/^static int GLW_ChoosePFD( HDC hDC, PIXELFORMATDESCRIPTOR *pPFD )$/;"	f	file:
GLW_CreatePFD	win_glimp.c	/^static void GLW_CreatePFD( PIXELFORMATDESCRIPTOR *pPFD, int colorbits, int depthbits, int stencilbits, qbool stereo )$/;"	f	file:
GLW_CreateWindow	win_glimp.c	/^static qbool GLW_CreateWindow( const char *drivername, int width, int height, int colorbits, qbool cdsFullscreen )$/;"	f	file:
GLW_InitDriver	win_glimp.c	/^static qbool GLW_InitDriver( const char *drivername, int colorbits )$/;"	f	file:
GLW_InitExtensions	linux_glimp.c	/^static void GLW_InitExtensions( void )$/;"	f	file:
GLW_InitExtensions	win_glimp.c	/^static void GLW_InitExtensions( void )$/;"	f	file:
GLW_InitGamma	linux_glimp.c	/^void GLW_InitGamma (void)$/;"	f
GLW_LoadOpenGL	linux_glimp.c	/^static qbool GLW_LoadOpenGL( const char *name )$/;"	f	file:
GLW_LoadOpenGL	win_glimp.c	/^static qbool GLW_LoadOpenGL( const char *drivername )$/;"	f	file:
GLW_MakeContext	win_glimp.c	/^static int GLW_MakeContext( PIXELFORMATDESCRIPTOR *pPFD )$/;"	f	file:
GLW_RestoreGamma	linux_glimp.c	/^void GLW_RestoreGamma(void) {$/;"	f
GLW_SetMode	linux_glimp.c	/^int GLW_SetMode( const char *drivername, int mode, qbool fullscreen )$/;"	f
GLW_SetMode	win_glimp.c	/^static rserr_t GLW_SetMode( const char *drivername, $/;"	f	file:
GLW_StartDriverAndSetMode	linux_glimp.c	/^static qbool GLW_StartDriverAndSetMode( const char *drivername,$/;"	f	file:
GLW_StartDriverAndSetMode	win_glimp.c	/^static qbool GLW_StartDriverAndSetMode( const char *drivername, $/;"	f	file:
GLW_StartOpenGL	win_glimp.c	/^static void GLW_StartOpenGL( void )$/;"	f	file:
GL_BeginRendering	linux_glimp.c	/^void GL_BeginRendering (int *x, int *y, int *width, int *height) {$/;"	f
GL_BeginRendering	vid_glx.c	/^void GL_BeginRendering (int *x, int *y, int *width, int *height) {$/;"	f
GL_BeginRendering	vid_mac.c	/^void GL_BeginRendering (int *x, int *y, int *width, int *height)$/;"	f
GL_BeginRendering	vid_wgl.c	/^void GL_BeginRendering (int *x, int *y, int *width, int *height) {$/;"	f
GL_BeginRendering	win_glimp.c	/^void GL_BeginRendering (int *x, int *y, int *width, int *height) {$/;"	f
GL_Bind	gl_texture.c	/^void GL_Bind (int texnum)$/;"	f
GL_BuildLightmaps	gl_rsurf.c	/^void GL_BuildLightmaps (void) {$/;"	f
GL_BuildSkySurfacePolys	gl_warp.c	/^void GL_BuildSkySurfacePolys (msurface_t *fa)$/;"	f
GL_COMBINE_EXT	gl_local.h	329;"	d
GL_COMBINE_RGB_EXT	gl_local.h	330;"	d
GL_COMPRESSED_ALPHA_ARB	gl_local.h	316;"	d
GL_COMPRESSED_INTENSITY_ARB	gl_local.h	319;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	gl_local.h	318;"	d
GL_COMPRESSED_LUMINANCE_ARB	gl_local.h	317;"	d
GL_COMPRESSED_RGBA_ARB	gl_local.h	321;"	d
GL_COMPRESSED_RGB_ARB	gl_local.h	320;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	gl_local.h	326;"	d
GL_CheckErrors	tr_init.c	/^void GL_CheckErrors( void ) {$/;"	f
GL_CheckExtensions	vid_common_gl.c	/^void GL_CheckExtensions (void) {$/;"	f
GL_CreateSurfaceLightmap	gl_rsurf.c	/^void GL_CreateSurfaceLightmap (msurface_t *surf) {$/;"	f
GL_DescribeRenderer_f	vid_mac.c	/^void GL_DescribeRenderer_f (void)$/;"	f
GL_DisableMultitexture	gl_texture.c	/^void GL_DisableMultitexture (void) $/;"	f
GL_DisableTMU	gl_texture.c	/^void GL_DisableTMU(GLenum target) $/;"	f
GL_DrawAliasFrame	gl_rmain.c	/^void GL_DrawAliasFrame(aliashdr_t *paliashdr, int pose1, int pose2, qbool mtex) {$/;"	f
GL_DrawAliasShadow	gl_rmain.c	/^void GL_DrawAliasShadow (aliashdr_t *paliashdr, int posenum) {$/;"	f
GL_EXT_texture_filter_anisotropic	gl_local.h	303;"	d
GL_EnableMultitexture	gl_texture.c	/^void GL_EnableMultitexture (void) $/;"	f
GL_EnableTMU	gl_texture.c	/^void GL_EnableTMU (GLenum target) $/;"	f
GL_EndRendering	linux_glimp.c	/^void GL_EndRendering (void) {$/;"	f
GL_EndRendering	vid_glx.c	/^void GL_EndRendering (void) {$/;"	f
GL_EndRendering	vid_mac.c	/^void GL_EndRendering (void)$/;"	f
GL_EndRendering	vid_wgl.c	/^void GL_EndRendering (void) {$/;"	f
GL_EndRendering	win_glimp.c	/^void GL_EndRendering (void) {$/;"	f
GL_FindTexture	gl_texture.c	/^gltexture_t *GL_FindTexture (char *identifier) $/;"	f
GL_GenerateShellTexture	gl_rmain.c	/^int GL_GenerateShellTexture(void)$/;"	f
GL_GetProcAddress	vid_common_gl.c	/^void *GL_GetProcAddress (const char *ExtName)$/;"	f
GL_INFO	mvd_utils_common.h	34;"	d
GL_Init	vid_common_gl.c	/^void GL_Init (void) {$/;"	f
GL_Init_GLX	vid_glx.c	/^void GL_Init_GLX(void) {$/;"	f
GL_Init_Win	vid_wgl.c	/^void GL_Init_Win(void) {$/;"	f
GL_LoadCharsetImage	gl_texture.c	/^int GL_LoadCharsetImage (char *filename, char *identifier) $/;"	f
GL_LoadImagePixels	gl_texture.c	/^byte *GL_LoadImagePixels (const char *filename, int matchwidth, int matchheight, int mode, int *real_width, int *real_height) $/;"	f
GL_LoadPicImage	gl_texture.c	/^mpic_t *GL_LoadPicImage (const char *filename, char *id, int matchwidth, int matchheight, int mode) $/;"	f
GL_LoadPicTexture	gl_texture.c	/^int GL_LoadPicTexture (const char *name, mpic_t *pic, byte *data) $/;"	f
GL_LoadTexture	gl_texture.c	/^int GL_LoadTexture (char *identifier, int width, int height, byte *data, int mode, int bpp) $/;"	f
GL_LoadTextureImage	gl_texture.c	/^int GL_LoadTextureImage (char *filename, char *identifier, int matchwidth, int matchheight, int mode) $/;"	f
GL_LoadTexturePixels	gl_texture.c	/^int GL_LoadTexturePixels (byte *data, char *identifier, int width, int height, int mode) $/;"	f
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	gl_local.h	305;"	d
GL_MAX_TEXTURE_UNITS_ARB	gl_local.h	313;"	d
GL_MakeAliasModelDisplayLists	gl_mesh.c	/^void GL_MakeAliasModelDisplayLists (model_t *m, aliashdr_t *hdr)$/;"	f
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	gl_local.h	325;"	d
GL_PrintAvailableExtensions	vid_mac.c	/^void GL_PrintAvailableExtensions (void)$/;"	f
GL_RGB_SCALE	gl_rmain.c	1058;"	d	file:
GL_RGB_SCALE_EXT	gl_local.h	331;"	d
GL_SelectTexture	gl_texture.c	/^void GL_SelectTexture (GLenum target) $/;"	f
GL_Set2D	gl_draw.c	/^void GL_Set2D (void)$/;"	f
GL_SetDefaultState	tr_init.c	/^void GL_SetDefaultState( void )$/;"	f
GL_SubdivideSurface	gl_warp.c	/^void GL_SubdivideSurface (msurface_t *fa) {$/;"	f
GL_SwapInterval	vid_mac.c	/^void GL_SwapInterval ()$/;"	f
GL_TEXTURE0_ARB	gl_local.h	309;"	d
GL_TEXTURE1_ARB	gl_local.h	310;"	d
GL_TEXTURE2_ARB	gl_local.h	311;"	d
GL_TEXTURE3_ARB	gl_local.h	312;"	d
GL_TEXTURE_COMPRESSED_ARB	gl_local.h	324;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	gl_local.h	322;"	d
GL_TEXTURE_IMAGE_SIZE_ARB	gl_local.h	323;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	gl_local.h	304;"	d
GL_Texture_Init	gl_texture.c	/^void GL_Texture_Init(void) $/;"	f
GL_Upload32	gl_texture.c	/^void GL_Upload32 (unsigned *data, int width, int height, int mode) $/;"	f
GL_Upload8	gl_texture.c	/^void GL_Upload8 (byte *data, int width, int height, int mode) $/;"	f
GL_WGL_CheckExtensions	vid_wgl.c	/^void GL_WGL_CheckExtensions(void) {$/;"	f
GLimp_EndFrame	linux_glimp.c	/^void GLimp_EndFrame (void)$/;"	f
GLimp_EndFrame	win_glimp.c	/^void GLimp_EndFrame (void)$/;"	f
GLimp_Init	linux_glimp.c	/^void GLimp_Init( void )$/;"	f
GLimp_Init	win_glimp.c	/^void GLimp_Init( void )$/;"	f
GLimp_LogComment	linux_glimp.c	/^void GLimp_LogComment( char *comment )$/;"	f
GLimp_LogComment	win_glimp.c	/^void GLimp_LogComment( char *comment ) $/;"	f
GLimp_Shutdown	linux_glimp.c	/^void GLimp_Shutdown( void )$/;"	f
GLimp_Shutdown	win_glimp.c	/^void GLimp_Shutdown( void )$/;"	f
GMG_CUSTOM	menu_multiplayer.c	/^		GMG_CUSTOM,$/;"	e	enum:game_map_group_e	file:
GMG_EPISODE1	menu_multiplayer.c	/^		GMG_EPISODE1,	$/;"	e	enum:game_map_group_e	file:
GMG_EPISODE2	menu_multiplayer.c	/^		GMG_EPISODE2,$/;"	e	enum:game_map_group_e	file:
GMG_EPISODE3	menu_multiplayer.c	/^		GMG_EPISODE3,$/;"	e	enum:game_map_group_e	file:
GMG_EPISODE4	menu_multiplayer.c	/^		GMG_EPISODE4,$/;"	e	enum:game_map_group_e	file:
GNUTYPE_DUMPDIR	vfs_tar.h	38;"	d
GNUTYPE_LONGLINK	vfs_tar.h	39;"	d
GNUTYPE_LONGNAME	vfs_tar.h	40;"	d
GNUTYPE_MULTIVOL	vfs_tar.h	41;"	d
GNUTYPE_NAMES	vfs_tar.h	42;"	d
GNUTYPE_SPARSE	vfs_tar.h	43;"	d
GNUTYPE_VOLHDR	vfs_tar.h	44;"	d
GREEN	r_draw.c	1316;"	d	file:
GRENADE_TRAIL	render.h	/^	ROCKET_TRAIL, GRENADE_TRAIL, ALT_ROCKET_TRAIL, BLOOD_TRAIL, BIG_BLOOD_TRAIL,$/;"	e	enum:trail_type_s
GSKILL_EASY	menu_multiplayer.c	/^		GSKILL_EASY = 0,$/;"	e	enum:game_skill_e	file:
GSKILL_HARD	menu_multiplayer.c	/^		GSKILL_HARD,$/;"	e	enum:game_skill_e	file:
GSKILL_NIGHTMARE	menu_multiplayer.c	/^		GSKILL_NIGHTMARE,$/;"	e	enum:game_skill_e	file:
GSKILL_NORMAL	menu_multiplayer.c	/^		GSKILL_NORMAL,$/;"	e	enum:game_skill_e	file:
GUARDSIZE	d_surf.c	31;"	d	file:
GZ_FCOMMENT	fs.c	2885;"	d	file:
GZ_FEXTRA	fs.c	2883;"	d	file:
GZ_FHCRC	fs.c	2882;"	d	file:
GZ_FNAME	fs.c	2884;"	d	file:
GZ_FTEXT	fs.c	2881;"	d	file:
GZ_RESERVED	fs.c	2886;"	d	file:
G_EDICT	progs.h	114;"	d
G_EDICTNUM	progs.h	115;"	d
G_FLOAT	progs.h	112;"	d
G_FUNCTION	progs.h	118;"	d
G_INT	progs.h	113;"	d
G_STRING	progs.h	117;"	d
G_VECTOR	progs.h	116;"	d
GeneratePureCRC	vfs.h	/^	int		(*GeneratePureCRC) (void *handle, int seed, int usepure);$/;"	m	struct:__anon289
GetBestFreq	vid_wgl.c	/^int GetBestFreq (int w, int h, int bpp) {$/;"	f
GetCurrentFreq	vid_wgl.c	/^int GetCurrentFreq(void) {$/;"	f
GetCurrentProcessId	EX_browser_ping.c	45;"	d	file:
GetEvent	vid_glx.c	/^static void GetEvent(void) {$/;"	f	file:
GetEvent	vid_x11.c	/^static void GetEvent (void)$/;"	f	file:
GetFileLocalTime	localtime_linux.c	/^int  GetFileLocalTime(char *path, SYSTEMTIME *wintime)$/;"	f
GetFileLocalTime	localtime_win.c	/^int  GetFileLocalTime(char *path, SYSTEMTIME *wintime)$/;"	f
GetGroupWithMember	match_tools.c	/^static mapgroup_t *GetGroupWithMember(char *member) {$/;"	f	file:
GetGroupWithName	match_tools.c	/^static mapgroup_t *GetGroupWithName(char *groupname) {$/;"	f	file:
GetLast	xsd_document.c	/^static document_tag_t *GetLast(document_tag_t *tag)$/;"	f	file:
GetLen	fs.h	/^	unsigned long (*GetLen) (struct vfsfile_s *file);	\/\/ Could give some lag$/;"	m	struct:vfsfile_s
GetLittleLong	snd_mem.c	/^static int GetLittleLong(void)$/;"	f	file:
GetLittleShort	snd_mem.c	/^static short GetLittleShort(void)$/;"	f	file:
GetLocalTime	localtime.c	/^void GetLocalTime(SYSTEMTIME *wintime)$/;"	f
GetLocalTime	localtime_linux.c	/^void GetLocalTime(SYSTEMTIME *wintime)$/;"	f
GetOutputtime	mp3_player.h	/^	qbool (*GetOutputtime)   (int *elapsed, int *total);$/;"	m	struct:__anon236
GetPlaylistInfo	mp3_player.h	/^	void  (*GetPlaylistInfo) (int *current, int *length);$/;"	m	struct:__anon236
GetPolyCentroid	mathlib.c	/^int GetPolyCentroid(vec3_t *v, int n, float *xCentroid, float *yCentroid, float *area)$/;"	f
GetServerInfo	EX_browser_net.c	/^void GetServerInfo(server_data *serv)$/;"	f
GetServerInfosProc	EX_browser_net.c	/^DWORD WINAPI GetServerInfosProc(void * lpParameter)$/;"	f
GetServerPing	EX_browser_net.c	/^void GetServerPing(server_data *serv)$/;"	f
GetServerPingsAndInfos	EX_browser_net.c	/^void GetServerPingsAndInfos(void)$/;"	f
GetServerPingsAndInfosProc	EX_browser_net.c	/^DWORD WINAPI GetServerPingsAndInfosProc(void * lpParameter)$/;"	f
GetSkyGroupWithMember	match_tools.c	/^static skygroup_t *GetSkyGroupWithMember(char *member) {$/;"	f	file:
GetSkyGroupWithName	match_tools.c	/^static skygroup_t *GetSkyGroupWithName(char *groupname) {$/;"	f	file:
GetSongTitle	mp3_player.h	/^	void  (*GetSongTitle)    (int track_num, char *song, size_t song_len);$/;"	m	struct:__anon236
GetSoundtime	snd_dma.c	/^static void GetSoundtime (void)$/;"	f	file:
GetStatus	mp3_player.h	/^	int   (*GetStatus)       (void);$/;"	m	struct:__anon236
GetTag	gl_md3.c	/^int GetTag(model_t *mod, char *tagname, int frame, float **org, m3by3_t **ang)	\/\/if anyone is interested that is...$/;"	f
GetToggleState	mp3_player.h	/^	qbool (*GetToggleState)  (int *shuffle, int *repeat);$/;"	m	struct:__anon236
GetVolume	mp3_player.h	/^	double (*GetVolume)      (void);$/;"	m	struct:__anon236
GetWavinfo	snd_mem.c	/^static wavinfo_t GetWavinfo (char *name, unsigned char *wav, int wavlength)$/;"	f	file:
GetWeaponName	fragstats.c	/^char *GetWeaponName (int num)$/;"	f
Get_Bool	parser.c	/^LOCAL int Get_Bool(const expr_val e)$/;"	f
Get_Double	parser.c	/^LOCAL double Get_Double(const expr_val e)$/;"	f
Get_Expr_Double	parser.c	/^GLOBAL expr_val Get_Expr_Double(double v)$/;"	f
Get_Expr_Dummy	parser.c	/^GLOBAL expr_val Get_Expr_Dummy(void)$/;"	f
Get_Expr_Integer	parser.c	/^GLOBAL expr_val Get_Expr_Integer(int v)$/;"	f
Get_Integer	parser.c	/^LOCAL int Get_Integer(const expr_val e)$/;"	f
Get_MP3_HUD_style	hud_common.c	/^char *Get_MP3_HUD_style(float style, char *st)$/;"	f
GfxInfo_f	tr_init.c	/^void GfxInfo_f( void ) $/;"	f
GreatestCommonDivisor	mathlib.c	/^int GreatestCommonDivisor (int i1, int i2) {$/;"	f
H	md4.c	104;"	d	file:
HACK_FOR_STACK_ALIGNMENT_ON_16_BYTE_BOUNDARY	ffmpeg.c	208;"	d	file:
HARD_CODED	console.c	1130;"	d	file:
HASH_SIZE	auth.c	84;"	d	file:
HASPENT	mvd_autotrack.c	281;"	d	file:
HASQUAD	mvd_autotrack.c	282;"	d	file:
HASRL	mvd_autotrack.c	280;"	d	file:
HASWEAPON	mvd_autotrack.c	283;"	d	file:
HAVE_FLAG	tp_msgs.c	18;"	d	file:
HAVE_GA	tp_msgs.c	30;"	d	file:
HAVE_GL	tp_msgs.c	21;"	d	file:
HAVE_LG	tp_msgs.c	20;"	d	file:
HAVE_PENT	tp_msgs.c	28;"	d	file:
HAVE_POWERUP	tp_msgs.c	26;"	d	file:
HAVE_QUAD	tp_msgs.c	27;"	d	file:
HAVE_RA	tp_msgs.c	32;"	d	file:
HAVE_RING	tp_msgs.c	29;"	d	file:
HAVE_RL	tp_msgs.c	19;"	d	file:
HAVE_YA	tp_msgs.c	31;"	d	file:
HEADER_LONGNAME	vfs_tar.h	/^	HEADER_LONGNAME,$/;"	e	enum:__anon293
HEADER_LUMPS	bspfile.h	80;"	d
HEADER_NONE	vfs_tar.h	/^	HEADER_NONE,$/;"	e	enum:__anon293
HEADER_SHORTNAME	vfs_tar.h	/^	HEADER_SHORTNAME,$/;"	e	enum:__anon293
HEARTBEAT_SECONDS	sv_master.c	24;"	d	file:
HELPLINES	settings_page.c	49;"	d	file:
HELPM_BROWSER	help_files.c	/^    HELPM_BROWSER,$/;"	e	enum:__anon30	file:
HELPM_INDEX	help_files.c	/^	HELPM_INDEX,$/;"	e	enum:__anon30	file:
HELPM_TUTORIALS	help_files.c	/^    HELPM_TUTORIALS$/;"	e	enum:__anon30	file:
HH	md4.c	115;"	d	file:
HISTORY_FILE_NAME	keys.c	59;"	d	file:
HL_BSPVERSION	bspfile.h	57;"	d
HOLD_GL	tp_msgs.c	22;"	d	file:
HOLD_LG	tp_msgs.c	24;"	d	file:
HOLD_RL	tp_msgs.c	23;"	d	file:
HRAWINPUT	in_raw.h	/^DECLARE_HANDLE(HRAWINPUT);$/;"	v
HUD_ALIGN_AFTER	hud.h	46;"	d
HUD_ALIGN_BEFORE	hud.h	45;"	d
HUD_ALIGN_BOTTOM	hud.h	44;"	d
HUD_ALIGN_CENTER	hud.h	42;"	d
HUD_ALIGN_CONSOLE	hud.h	47;"	d
HUD_ALIGN_LEFT	hud.h	40;"	d
HUD_ALIGN_POLYCOUNT_CENTER	hud_editor.c	76;"	d	file:
HUD_ALIGN_POLYCOUNT_CONSOLE	hud_editor.c	77;"	d	file:
HUD_ALIGN_POLYCOUNT_CORNER	hud_editor.c	74;"	d	file:
HUD_ALIGN_POLYCOUNT_EDGE	hud_editor.c	75;"	d	file:
HUD_ALIGN_RIGHT	hud.h	43;"	d
HUD_ALIGN_TOP	hud.h	41;"	d
HUD_AfterDraw	hud_common.c	/^void HUD_AfterDraw()$/;"	f
HUD_Align_f	hud.c	/^void HUD_Align_f (void)$/;"	f
HUD_AmmoLow	hud_common.c	/^qbool HUD_AmmoLow(void)$/;"	f
HUD_AmmoLowByWeapon	hud_common.c	/^int HUD_AmmoLowByWeapon(int weapon)$/;"	f
HUD_ArmorLow	hud_common.c	/^qbool HUD_ArmorLow(void)$/;"	f
HUD_AutoLoad_MVD	hud_common.c	/^void HUD_AutoLoad_MVD(int autoload) {$/;"	f
HUD_BLINK_B	cl_screen.c	2299;"	d	file:
HUD_BLINK_F	cl_screen.c	2298;"	d	file:
HUD_BeforeDraw	hud_common.c	/^void HUD_BeforeDraw()$/;"	f
HUD_CENTER_X	hud_editor.c	68;"	d	file:
HUD_CENTER_Y	hud_editor.c	69;"	d	file:
HUD_COLOR_DEFAULT_TRANSPARENCY	hud_common.c	5119;"	d	file:
HUD_CVAR	cl_screen.c	2295;"	d	file:
HUD_CalcFrameExtents	hud.c	/^void HUD_CalcFrameExtents(hud_t *hud, int width, int height,									\/\/ In.$/;"	f
HUD_ComparePlayers	hud_common.c	/^static int HUD_ComparePlayers(const void *vp1, const void *vp2)$/;"	f	file:
HUD_CompareTeams	hud_common.c	/^static int HUD_CompareTeams(const void *vt1, const void *vt2)$/;"	f	file:
HUD_CreateVar	hud.c	/^cvar_t * HUD_CreateVar(char *hud_name, char *subvar, char *value)$/;"	f
HUD_Draw	hud.c	/^void HUD_Draw(void)$/;"	f
HUD_DrawFrame	hud.c	/^void HUD_DrawFrame(hud_t *hud, int x, int y, int width, int height)$/;"	f
HUD_DrawObject	hud.c	/^void HUD_DrawObject(hud_t *hud)$/;"	f
HUD_EDITOR_HELP_BORDER	hud_editor.c	2172;"	d	file:
HUD_EDITOR_HELP_HEIGHT	hud_editor.c	2174;"	d	file:
HUD_EDITOR_HELP_TITLE	hud_editor.c	2177;"	d	file:
HUD_EDITOR_HELP_WIDTH	hud_editor.c	2173;"	d	file:
HUD_EDITOR_HELP_X	hud_editor.c	2175;"	d	file:
HUD_EDITOR_HELP_Y	hud_editor.c	2176;"	d	file:
HUD_ENABLED	cl_screen.c	2301;"	d	file:
HUD_Editor	hud_editor.c	/^static void HUD_Editor(void)$/;"	f	file:
HUD_EditorScaleDelta	hud_editor.c	/^static void HUD_EditorScaleDelta(cvar_t *scale, float delta_scale, hud_alignmode_t alignment)$/;"	f	file:
HUD_Editor_AddHoverHud	hud_editor.c	/^static void HUD_Editor_AddHoverHud(hud_grephandle_t *hud_container)$/;"	f	file:
HUD_Editor_Aligning	hud_editor.c	/^static qbool HUD_Editor_Aligning(hud_t *hud_hover)$/;"	f	file:
HUD_Editor_ConfirmDraw	hud_editor.c	/^qbool HUD_Editor_ConfirmDraw(hud_t *hud)$/;"	f
HUD_Editor_CreateGrep	hud_editor.c	/^static hud_grephandle_t *HUD_Editor_CreateGrep(hud_t *hud_element)$/;"	f	file:
HUD_Editor_CreateHoverHud	hud_editor.c	/^static hud_grephandle_t *HUD_Editor_CreateHoverHud(hud_t *hud)$/;"	f	file:
HUD_Editor_DestroyGrep	hud_editor.c	/^static void HUD_Editor_DestroyGrep(hud_grephandle_t *grep)$/;"	f	file:
HUD_Editor_Draw	hud_editor.c	/^void HUD_Editor_Draw(void)$/;"	f
HUD_Editor_DrawAlignment	hud_editor.c	/^static void HUD_Editor_DrawAlignment(hud_t *hud_parent)$/;"	f	file:
HUD_Editor_DrawConnections	hud_editor.c	/^static void HUD_Editor_DrawConnections(hud_t *hud_hover)$/;"	f	file:
HUD_Editor_DrawGreps	hud_editor.c	/^static void HUD_Editor_DrawGreps()$/;"	f	file:
HUD_Editor_DrawHelp	hud_editor.c	/^static void HUD_Editor_DrawHelp()$/;"	f	file:
HUD_Editor_DrawHoverList	hud_editor.c	/^static qbool HUD_Editor_DrawHoverList(int x, int y, hud_grephandle_t *list)$/;"	f	file:
HUD_Editor_DrawOutlines	hud_editor.c	/^static void HUD_Editor_DrawOutlines(void)$/;"	f	file:
HUD_Editor_DrawTooltip	hud_editor.c	/^static void HUD_Editor_DrawTooltip(int x, int y, char *string, color_t color) \/\/float r, float g, float b, float a)$/;"	f	file:
HUD_Editor_DrawTooltips	hud_editor.c	/^static void HUD_Editor_DrawTooltips(hud_t *hud_hover)$/;"	f	file:
HUD_Editor_EvaluateState	hud_editor.c	/^static void HUD_Editor_EvaluateState(hud_t *hud_hover)$/;"	f	file:
HUD_Editor_FindGrep	hud_editor.c	/^static hud_grephandle_t *HUD_Editor_FindGrep(hud_t *hud_element)$/;"	f	file:
HUD_Editor_FindHoverListSelection	hud_editor.c	/^static hud_t *HUD_Editor_FindHoverListSelection(hud_grephandle_t *list)$/;"	f	file:
HUD_Editor_FindHudByGrep	hud_editor.c	/^static hud_t *HUD_Editor_FindHudByGrep()$/;"	f	file:
HUD_Editor_FindHudUnderCursor	hud_editor.c	/^static qbool HUD_Editor_FindHudUnderCursor(hud_t **hud)$/;"	f	file:
HUD_Editor_FindNextChild	hud_editor.c	/^static hud_t *HUD_Editor_FindNextChild(hud_t *hud_element)$/;"	f	file:
HUD_Editor_GetAlignment	hud_editor.c	/^static hud_alignmode_t HUD_Editor_GetAlignment(int x, int y, hud_t *hud_element)$/;"	f	file:
HUD_Editor_GetAlignmentFromString	hud_editor.c	/^static hud_alignmode_t HUD_Editor_GetAlignmentFromString(char *alignstr)$/;"	f	file:
HUD_Editor_GetAlignmentPoint	hud_editor.c	/^static void HUD_Editor_GetAlignmentPoint(hud_t *hud, int *x, int *y)$/;"	f	file:
HUD_Editor_GetAlignmentString	hud_editor.c	/^static char *HUD_Editor_GetAlignmentString(hud_alignmode_t align)$/;"	f	file:
HUD_Editor_GetGrepArrow	hud_editor.c	/^static char *HUD_Editor_GetGrepArrow(hud_grephandle_t *grep)$/;"	f	file:
HUD_Editor_GetHudGrepPosition	hud_editor.c	/^static hud_greppos_t HUD_Editor_GetHudGrepPosition(hud_t *hud)$/;"	f	file:
HUD_Editor_Init	hud_editor.c	/^void HUD_Editor_Init(void)$/;"	f
HUD_Editor_Key	hud_editor.c	/^void HUD_Editor_Key(int key, int unichar, qbool down)$/;"	f
HUD_Editor_MouseEvent	hud_editor.c	/^qbool HUD_Editor_MouseEvent(mouse_state_t *ms)$/;"	f
HUD_Editor_Move	hud_editor.c	/^static void HUD_Editor_Move(float dx, float dy, hud_t *hud_element)$/;"	f	file:
HUD_Editor_Moving	hud_editor.c	/^static qbool HUD_Editor_Moving(hud_t *hud_hover)$/;"	f	file:
HUD_Editor_Placing	hud_editor.c	/^static qbool HUD_Editor_Placing(hud_t *hud_hover)$/;"	f	file:
HUD_Editor_PositionGrep	hud_editor.c	/^static void HUD_Editor_PositionGrep(hud_t *hud_element, hud_grephandle_t *grep)$/;"	f	file:
HUD_Editor_ResizeDelta	hud_editor.c	/^static void HUD_Editor_ResizeDelta(cvar_t *size, float delta_size, hud_alignmode_t alignment)$/;"	f	file:
HUD_Editor_Resizing	hud_editor.c	/^static qbool HUD_Editor_Resizing(hud_t *hud_hover)$/;"	f	file:
HUD_Editor_SetMode	hud_editor.c	/^static void HUD_Editor_SetMode(hud_editor_mode_t newmode)$/;"	f	file:
HUD_Editor_Toggle_f	hud_editor.c	/^void HUD_Editor_Toggle_f(void)$/;"	f
HUD_FUNC	cl_screen.c	2296;"	d	file:
HUD_Find	hud.c	/^hud_t * HUD_Find(char *name)$/;"	f
HUD_FindAlignX	hud.c	/^int HUD_FindAlignX(hud_t *hud)$/;"	f
HUD_FindAlignY	hud.c	/^int HUD_FindAlignY(hud_t *hud)$/;"	f
HUD_FindMaxMinOrder	hud.c	/^void HUD_FindMaxMinOrder(int *max, int *min)$/;"	f
HUD_FindPlace	hud.c	/^int HUD_FindPlace(hud_t *hud)$/;"	f
HUD_FindVar	hud.c	/^cvar_t *HUD_FindVar(hud_t *hud, char *subvar)$/;"	f
HUD_Func_f	hud.c	/^void HUD_Func_f(void)$/;"	f
HUD_GROUP_PIC_BASEPATH	hud_common.c	2140;"	d	file:
HUD_GROUP_SCALEMODE_CENTER	hud_common.c	2043;"	d	file:
HUD_GROUP_SCALEMODE_GROW	hud_common.c	2042;"	d	file:
HUD_GROUP_SCALEMODE_STRETCH	hud_common.c	2041;"	d	file:
HUD_GROUP_SCALEMODE_TILE	hud_common.c	2040;"	d	file:
HUD_HealthLow	hud_common.c	/^qbool HUD_HealthLow(void)$/;"	f
HUD_Hide_f	hud.c	/^void HUD_Hide_f (void)$/;"	f
HUD_IMAGE	cl_screen.c	2300;"	d	file:
HUD_INVENTORY	hud.h	22;"	d
HUD_Init	hud.c	/^void HUD_Init(void)$/;"	f
HUD_List	hud.c	/^void HUD_List (void)$/;"	f
HUD_MAX_PARAMS	hud.h	24;"	d
HUD_Minus_f	hud.c	/^void HUD_Minus_f(void)$/;"	f
HUD_Move_f	hud.c	/^void HUD_Move_f (void)$/;"	f
HUD_NO_DRAW	hud.h	9;"	d
HUD_NO_FRAME	hud.h	13;"	d
HUD_NO_GROW	hud.h	18;"	d
HUD_NO_POS_X	hud.h	11;"	d
HUD_NO_POS_Y	hud.h	12;"	d
HUD_NO_SHOW	hud.h	10;"	d
HUD_NewMap	hud_common.c	/^void HUD_NewMap() {$/;"	f
HUD_NewRadarMap	hud_common.c	/^void HUD_NewRadarMap()$/;"	f
HUD_ON_DIALOG	hud.h	14;"	d
HUD_ON_FINALE	hud.h	16;"	d
HUD_ON_INTERMISSION	hud.h	15;"	d
HUD_ON_SCORES	hud.h	17;"	d
HUD_OPACITY	hud.h	20;"	d
HUD_OnChangeFrameColor	hud.c	/^void HUD_OnChangeFrameColor(cvar_t *var, char *newval, qbool *cancel)$/;"	f
HUD_OnChangeOrder	hud.c	/^void HUD_OnChangeOrder(cvar_t *var, char *val, qbool *cancel)$/;"	f
HUD_OrderFunc	hud.c	/^int HUD_OrderFunc(const void * p_h1, const void * p_h2)$/;"	f
HUD_Order_f	hud.c	/^void HUD_Order_f (void)$/;"	f
HUD_PLACE_HBAR	hud.h	34;"	d
HUD_PLACE_HFREE	hud.h	37;"	d
HUD_PLACE_IBAR	hud.h	33;"	d
HUD_PLACE_IFREE	hud.h	36;"	d
HUD_PLACE_SBAR	hud.h	32;"	d
HUD_PLACE_SCREEN	hud.h	29;"	d
HUD_PLACE_SFREE	hud.h	35;"	d
HUD_PLACE_TOP	hud.h	30;"	d
HUD_PLACE_VIEW	hud.h	31;"	d
HUD_PLUSMINUS	hud.h	19;"	d
HUD_ParamsCleanup	hud.c	/^void HUD_ParamsCleanup(void)$/;"	f
HUD_Place_f	hud.c	/^void HUD_Place_f (void)$/;"	f
HUD_Plus_f	hud.c	/^void HUD_Plus_f(void)$/;"	f
HUD_PrepareDraw	hud.c	/^qbool HUD_PrepareDraw(hud_t *hud, int width, int height, \/\/ In.$/;"	f
HUD_PrepareDrawByName	hud.c	/^qbool HUD_PrepareDrawByName(char *name, int width, int height,	\/\/ In.$/;"	f
HUD_RADAR_GA	hud_common.c	5038;"	d	file:
HUD_RADAR_HIGHLIGHT_ARROW_BOTTOM	hud_common.c	5675;"	d	file:
HUD_RADAR_HIGHLIGHT_ARROW_CENTER	hud_common.c	5676;"	d	file:
HUD_RADAR_HIGHLIGHT_ARROW_TOP	hud_common.c	5677;"	d	file:
HUD_RADAR_HIGHLIGHT_CIRCLE	hud_common.c	5673;"	d	file:
HUD_RADAR_HIGHLIGHT_CROSS_CORNERS	hud_common.c	5678;"	d	file:
HUD_RADAR_HIGHLIGHT_FIXED_CIRCLE	hud_common.c	5674;"	d	file:
HUD_RADAR_HIGHLIGHT_FIXED_OUTLINE	hud_common.c	5672;"	d	file:
HUD_RADAR_HIGHLIGHT_NONE	hud_common.c	5669;"	d	file:
HUD_RADAR_HIGHLIGHT_OUTLINE	hud_common.c	5671;"	d	file:
HUD_RADAR_HIGHLIGHT_TEXT_ONLY	hud_common.c	5670;"	d	file:
HUD_RADAR_RA	hud_common.c	5040;"	d	file:
HUD_RADAR_STATS_BOTH_TEAMS_DEATHS	hud_common.c	4922;"	d	file:
HUD_RADAR_STATS_BOTH_TEAMS_HOLD	hud_common.c	4919;"	d	file:
HUD_RADAR_STATS_NONE	hud_common.c	4918;"	d	file:
HUD_RADAR_STATS_TEAM1_DEATHS	hud_common.c	4923;"	d	file:
HUD_RADAR_STATS_TEAM1_HOLD	hud_common.c	4920;"	d	file:
HUD_RADAR_STATS_TEAM2_DEATHS	hud_common.c	4924;"	d	file:
HUD_RADAR_STATS_TEAM2_HOLD	hud_common.c	4921;"	d	file:
HUD_RADAR_YA	hud_common.c	5039;"	d	file:
HUD_REGEXP_OFFSET_COUNT	hud.h	26;"	d
HUD_RESIZEHANDLE_BOTTOM	hud_editor.c	886;"	d	file:
HUD_RESIZEHANDLE_BOTTOMLEFT	hud_editor.c	887;"	d	file:
HUD_RESIZEHANDLE_BOTTOMRIGHT	hud_editor.c	885;"	d	file:
HUD_RESIZEHANDLE_COUNT	hud_editor.c	877;"	d	file:
HUD_RESIZEHANDLE_LEFT	hud_editor.c	888;"	d	file:
HUD_RESIZEHANDLE_NONE	hud_editor.c	880;"	d	file:
HUD_RESIZEHANDLE_RIGHT	hud_editor.c	884;"	d	file:
HUD_RESIZEHANDLE_SIZEFACTOR	hud_editor.c	876;"	d	file:
HUD_RESIZEHANDLE_THICKNESS	hud_editor.c	875;"	d	file:
HUD_RESIZEHANDLE_TOP	hud_editor.c	882;"	d	file:
HUD_RESIZEHANDLE_TOPLEFT	hud_editor.c	881;"	d	file:
HUD_RESIZEHANDLE_TOPRIGHT	hud_editor.c	883;"	d	file:
HUD_RESIZE_MAGICSCALE	hud_editor.c	878;"	d	file:
HUD_Recalculate	hud.c	/^void HUD_Recalculate(void)$/;"	f
HUD_Recalculate_f	hud.c	/^void HUD_Recalculate_f(void)$/;"	f
HUD_Register	hud.c	/^hud_t * HUD_Register(char *name, char *var_alias, char *description,$/;"	f
HUD_ReorderChildren	hud.c	/^void HUD_ReorderChildren(void)$/;"	f
HUD_SCOREBOARD_ALL	hud_common.c	2557;"	d	file:
HUD_SCOREBOARD_AVG_PING	hud_common.c	2561;"	d	file:
HUD_SCOREBOARD_SORT_PLAYERS	hud_common.c	2559;"	d	file:
HUD_SCOREBOARD_SORT_TEAMS	hud_common.c	2558;"	d	file:
HUD_SCOREBOARD_UPDATE	hud_common.c	2560;"	d	file:
HUD_SHOW_ONLY_IN_DEMOPLAYBACK	hud_common.c	4311;"	d	file:
HUD_SHOW_ONLY_IN_TEAMPLAY	hud_common.c	4310;"	d	file:
HUD_SPEED2_ORIENTATION_DOWN	hud_common.c	839;"	d	file:
HUD_SPEED2_ORIENTATION_LEFT	hud_common.c	841;"	d	file:
HUD_SPEED2_ORIENTATION_RIGHT	hud_common.c	840;"	d	file:
HUD_SPEED2_ORIENTATION_UP	hud_common.c	838;"	d	file:
HUD_STRING	cl_screen.c	2297;"	d	file:
HUD_ShowInDemoplayback	hud_common.c	/^qbool HUD_ShowInDemoplayback(int val)$/;"	f
HUD_Show_f	hud.c	/^void HUD_Show_f (void)$/;"	f
HUD_Sort	hud.c	/^void HUD_Sort(void)$/;"	f
HUD_Sort_Scoreboard	hud_common.c	/^static void HUD_Sort_Scoreboard(int flags)$/;"	f	file:
HUD_Stats	hud_common.c	/^int HUD_Stats(int stat_num)$/;"	f
HUD_TEAMHOLDINFO_STYLE_PERCENT_BARS	hud_common.c	4680;"	d	file:
HUD_TEAMHOLDINFO_STYLE_PERCENT_BARS2	hud_common.c	4681;"	d	file:
HUD_TEAMHOLDINFO_STYLE_TEAM_NAMES	hud_common.c	4679;"	d	file:
HUD_Toggle_f	hud.c	/^void HUD_Toggle_f (void)$/;"	f
HUNK_SENTINEL	zone.c	30;"	d	file:
HandleEvents	linux_glimp.c	/^static void HandleEvents(void)$/;"	f	file:
HandleEvents	sys_mac.c	/^\/*static*\/ void HandleEvents (void)$/;"	f
HandleQuitApplicationEvent	sys_mac.c	/^OSErr HandleQuitApplicationEvent(const AppleEvent *theAppleEvent, AppleEvent *reply, UInt32 handlerRefcon)$/;"	f
HandlerRoutine	sys_win.c	/^BOOL WINAPI HandlerRoutine (DWORD dwCtrlType) $/;"	f
Hash_Add	hash.c	/^void *Hash_Add(hashtable_t *table, char *name, void *data) $/;"	f
Hash_AddInsensitive	hash.c	/^void *Hash_AddInsensitive(hashtable_t *table, char *name, void *data) $/;"	f
Hash_AddKey	hash.c	/^void *Hash_AddKey(hashtable_t *table, char *key, void *data, bucket_t *buck)$/;"	f
Hash_Flush	hash.c	/^void Hash_Flush(hashtable_t *table) $/;"	f
Hash_Get	hash.c	/^void *Hash_Get(hashtable_t *table, char *name)$/;"	f
Hash_GetInsensitive	hash.c	/^void *Hash_GetInsensitive(hashtable_t *table, const char *name)$/;"	f
Hash_GetKey	hash.c	/^void *Hash_GetKey(hashtable_t *table, char *key)$/;"	f
Hash_GetNext	hash.c	/^void *Hash_GetNext(hashtable_t *table, char *name, void *old)$/;"	f
Hash_GetNextInsensitive	hash.c	/^void *Hash_GetNextInsensitive(hashtable_t *table, char *name, void *old)$/;"	f
Hash_InitTable	hash.c	/^hashtable_t *Hash_InitTable(int numbucks)$/;"	f
Hash_Key	hash.c	/^int Hash_Key(char *name, int modulus) {$/;"	f
Hash_KeyInsensitive	hash.c	/^int Hash_KeyInsensitive(const char *name, int modulus) {$/;"	f
Hash_Remove	hash.c	/^void Hash_Remove(hashtable_t *table, char *name)$/;"	f
Hash_RemoveData	hash.c	/^void Hash_RemoveData(hashtable_t *table, char *name, void *data)$/;"	f
Hash_RemoveKey	hash.c	/^void Hash_RemoveKey(hashtable_t *table, char *key)$/;"	f
Help_Browser_Draw	help_files.c	/^void Help_Browser_Draw(int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page)$/;"	f
Help_Browser_Focus	help_files.c	/^void Help_Browser_Focus(void)$/;"	f
Help_Browser_Init	help_files.c	/^void Help_Browser_Init(void)$/;"	f
Help_Browser_Key	help_files.c	/^int Help_Browser_Key(int key, CTab_t *tab, CTabPage_t *page)$/;"	f
Help_Browser_Mouse_Event	help_files.c	/^static qbool Help_Browser_Mouse_Event(const mouse_state_t *ms)$/;"	f	file:
Help_DescribeCmd	help.c	/^void Help_DescribeCmd(xml_command_t *cmd)$/;"	f
Help_DescribeCvar	help.c	/^void Help_DescribeCvar (cvar_t *v)$/;"	f
Help_DescribeVar	help.c	/^void Help_DescribeVar(xml_variable_t *var)$/;"	f
Help_Describe_f	help.c	/^void Help_Describe_f(void)$/;"	f
Help_Index_Draw	help_files.c	/^static void Help_Index_Draw(int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page)$/;"	f	file:
Help_Index_Init	help_files.c	/^static void Help_Index_Init(void)$/;"	f	file:
Help_Index_Key	help_files.c	/^static int Help_Index_Key(int key, CTab_t *tab, CTabPage_t *page)$/;"	f	file:
Help_Index_Mouse_Event	help_files.c	/^static qbool Help_Index_Mouse_Event(const mouse_state_t *ms)$/;"	f	file:
Help_Init	help.c	/^void Help_Init(void)$/;"	f
Help_Tutorials_Draw	help_files.c	/^static void Help_Tutorials_Draw(int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page)$/;"	f	file:
Help_Tutorials_Init	help_files.c	/^static void Help_Tutorials_Init(void)$/;"	f	file:
Help_Tutorials_Key	help_files.c	/^static int Help_Tutorials_Key(int key, CTab_t *tab, CTabPage_t *page)$/;"	f	file:
Help_Tutorials_Mouse_Event	help_files.c	/^static qbool Help_Tutorials_Mouse_Event(const mouse_state_t *ms)$/;"	f	file:
Help_VarDescription	help.c	/^void Help_VarDescription (const char *varname, char* buf, size_t bufsize)$/;"	f
HexToInt	utils.c	/^int HexToInt(char c)$/;"	f
History_Init	keys.c	/^void History_Init (void)$/;"	f
History_Shutdown	keys.c	/^void History_Shutdown (void)$/;"	f
Host_Abort	host.c	/^void Host_Abort (void)$/;"	f
Host_ClearMemory	host.c	/^void Host_ClearMemory (void)$/;"	f
Host_EndGame	host.c	/^void Host_EndGame (void)$/;"	f
Host_Error	host.c	/^void Host_Error (char *error, ...)$/;"	f
Host_Frame	host.c	/^void Host_Frame (double time)$/;"	f
Host_Init	host.c	/^void Host_Init (int argc, char **argv, int default_memsize)$/;"	f
Host_InitMemory	host.c	/^void Host_InitMemory (int memsize)$/;"	f
Host_PrintBars	host.c	/^char *Host_PrintBars(char *s, int len)$/;"	f
Host_Quit	host.c	/^void Host_Quit (void)$/;"	f
Host_Shutdown	host.c	/^void Host_Shutdown (void)$/;"	f
Hud262_Move_f	cl_screen.c	/^void Hud262_Move_f(void)$/;"	f
Hud_262Init	cl_screen.c	/^void Hud_262Init (void)$/;"	f
Hud_Add_f	cl_screen.c	/^void Hud_Add_f(void)$/;"	f
Hud_Alpha_f	cl_screen.c	/^void Hud_Alpha_f(void)$/;"	f
Hud_Bg_f	cl_screen.c	/^void Hud_Bg_f(void)$/;"	f
Hud_Blink_f	cl_screen.c	/^void Hud_Blink_f(void)$/;"	f
Hud_BringToFront_f	cl_screen.c	/^void Hud_BringToFront_f(void)$/;"	f
Hud_CheckBounds	cl_screen.c	/^qbool Hud_CheckBounds (hud_element_t *elem, int x, int y)$/;"	f
Hud_DeleteElement	cl_screen.c	/^static void Hud_DeleteElement(hud_element_t *elem)$/;"	f	file:
Hud_Disable_f	cl_screen.c	/^void Hud_Disable_f(void)$/;"	f
Hud_Elem_Alpha	cl_screen.c	/^void Hud_Elem_Alpha(hud_element_t *elem)$/;"	f
Hud_Elem_Bg	cl_screen.c	/^void Hud_Elem_Bg(hud_element_t *elem)$/;"	f
Hud_Elem_Blink	cl_screen.c	/^void Hud_Elem_Blink(hud_element_t *elem)$/;"	f
Hud_Elem_Disable	cl_screen.c	/^void Hud_Elem_Disable(hud_element_t *elem)$/;"	f
Hud_Elem_Enable	cl_screen.c	/^void Hud_Elem_Enable(hud_element_t *elem)$/;"	f
Hud_Elem_Move	cl_screen.c	/^void Hud_Elem_Move(hud_element_t *elem)$/;"	f
Hud_Elem_Remove	cl_screen.c	/^void Hud_Elem_Remove(hud_element_t *elem)$/;"	f
Hud_Elem_Width	cl_screen.c	/^void Hud_Elem_Width(hud_element_t *elem)$/;"	f
Hud_Elem_func	cl_screen.c	/^typedef void Hud_Elem_func(hud_element_t*);$/;"	t	file:
Hud_ElementExists	cl_screen.c	/^qbool Hud_ElementExists(const char* name)$/;"	f
Hud_Enable_f	cl_screen.c	/^void Hud_Enable_f(void)$/;"	f
Hud_FindElement	cl_screen.c	/^hud_element_t *Hud_FindElement(const char *name)$/;"	f
Hud_Func	cl_screen.c	/^typedef char* (*Hud_Func)();$/;"	t	file:
Hud_HudCompare	hud.c	/^int Hud_HudCompare (const void *p1, const void *p2)$/;"	f
Hud_List_f	cl_screen.c	/^void Hud_List_f(void)$/;"	f
Hud_NewElement	cl_screen.c	/^static hud_element_t* Hud_NewElement(void)$/;"	f	file:
Hud_Position_f	cl_screen.c	/^void Hud_Position_f(void)$/;"	f
Hud_ReSearch_do	cl_screen.c	/^void Hud_ReSearch_do(Hud_Elem_func f)$/;"	f
Hud_Remove_f	cl_screen.c	/^void Hud_Remove_f(void)$/;"	f
Hud_TranslateCoords	cl_screen.c	/^qbool Hud_TranslateCoords (hud_element_t *elem, int *x, int *y)$/;"	f
Hud_Width_f	cl_screen.c	/^void Hud_Width_f(void)$/;"	f
Hunk_Alloc	zone.c	/^void *Hunk_Alloc (int size) {$/;"	f
Hunk_AllocName	zone.c	/^void *Hunk_AllocName (int size, char *name) {$/;"	f
Hunk_Check	zone.c	/^void Hunk_Check (void) {$/;"	f
Hunk_FreeToHighMark	zone.c	/^void Hunk_FreeToHighMark (int mark) {$/;"	f
Hunk_FreeToLowMark	zone.c	/^void Hunk_FreeToLowMark (int mark) {$/;"	f
Hunk_HighAllocName	zone.c	/^void *Hunk_HighAllocName (int size, char *name) {$/;"	f
Hunk_HighMark	zone.c	/^int	Hunk_HighMark (void) {$/;"	f
Hunk_LowMark	zone.c	/^int	Hunk_LowMark (void) {$/;"	f
Hunk_Print	zone.c	/^void Hunk_Print (qbool all) {$/;"	f
Hunk_TempAlloc	zone.c	/^void *Hunk_TempAlloc (int size) {$/;"	f
ICMP_Checksum	EX_browser_ping.c	/^static unsigned short ICMP_Checksum(ICMP_packet_t *packet, int size)$/;"	f	file:
ICMP_ECHO	EX_browser_ping.c	59;"	d	file:
ICMP_ECHOREPLY	EX_browser_ping.c	60;"	d	file:
ICMP_FillData	EX_browser_ping.c	/^static void ICMP_FillData(ICMP_packet_t *packet, int datasize)$/;"	f	file:
ICMP_GetEchoResponseTime	EX_browser_ping.c	/^static int ICMP_GetEchoResponseTime(ICMP_header_t *icmp_hdr)$/;"	f	file:
ICMP_MIN	EX_browser_ping.c	62;"	d	file:
ICMP_Packet_u	EX_browser_ping.c	/^typedef union ICMP_Packet_u {$/;"	u	file:
ICMP_header_s	EX_browser_ping.c	/^typedef struct ICMP_header_s$/;"	s	file:
ICMP_header_t	EX_browser_ping.c	/^} ICMP_header_t; $/;"	t	typeref:struct:ICMP_header_s	file:
ICMP_packet_t	EX_browser_ping.c	/^} ICMP_packet_t;$/;"	t	typeref:union:ICMP_Packet_u	file:
IDI_APPICON	resource.h	5;"	d
IDPOLYHEADER	modelgen.h	132;"	d
IDSPRITEHEADER	spritegn.h	108;"	d
IGNORE_NO_ADD	ignore.h	28;"	d
IMAGE_JPEG	cl_screen.c	/^typedef enum image_format_s {IMAGE_PCX, IMAGE_TGA, IMAGE_JPEG, IMAGE_PNG} image_format_t;$/;"	e	enum:image_format_s	file:
IMAGE_MAX_DIMENSIONS	image.c	48;"	d	file:
IMAGE_PCX	cl_screen.c	/^typedef enum image_format_s {IMAGE_PCX, IMAGE_TGA, IMAGE_JPEG, IMAGE_PNG} image_format_t;$/;"	e	enum:image_format_s	file:
IMAGE_PNG	cl_screen.c	/^typedef enum image_format_s {IMAGE_PCX, IMAGE_TGA, IMAGE_JPEG, IMAGE_PNG} image_format_t;$/;"	e	enum:image_format_s	file:
IMAGE_TGA	cl_screen.c	/^typedef enum image_format_s {IMAGE_PCX, IMAGE_TGA, IMAGE_JPEG, IMAGE_PNG} image_format_t;$/;"	e	enum:image_format_s	file:
INFINITE_DISTANCE	r_shared.h	39;"	d
INFO_PRINT_FIRST_COLUMN_WIDTH	common.c	804;"	d	file:
INIT_NEW_PARTICLE	gl_rpart.c	913;"	d	file:
INIT_RIBUFFER_SIZE	in_win.c	48;"	d	file:
INPOINT	tp_msgs.c	46;"	d	file:
INPOINTAMMO	tp_msgs.c	38;"	d	file:
INPOINTARMOR	tp_msgs.c	35;"	d	file:
INPOINTPOWERUP	tp_msgs.c	37;"	d	file:
INPOINTWEAPON	tp_msgs.c	36;"	d	file:
INPUTBOXHEIGHT	menu_options.c	680;"	d	file:
INPUTBOXWIDTH	menu_options.c	679;"	d	file:
INPUT_BUF_SIZE	image.c	2297;"	d	file:
INPUT_CASE_DIMOFS_BUTTON	in_win.c	277;"	d	file:
INPUT_CASE_DINPUT_MOUSE_BUTTONS	in_win.c	285;"	d	file:
INT	mathlib.h	206;"	d
INT	mathlib.h	209;"	d
INTERP_MAXDIST	gl_md3.c	8;"	d	file:
INTRIG_Disable	tp_triggers.c	/^static void INTRIG_Disable (const char *s)$/;"	f	file:
INTRIG_Lastip_port	tp_triggers.c	/^static void INTRIG_Lastip_port (const char *s)$/;"	f	file:
INVALID_SOCKET	net.h	61;"	d
IN_Accumulate	in_win.c	/^void IN_Accumulate (void) {$/;"	f
IN_ActivateMouse	in_win.c	/^void IN_ActivateMouse (void) {$/;"	f
IN_ActivateMouse	linux_glimp.c	/^void IN_ActivateMouse( void )$/;"	f
IN_Attack2Down	cl_input.c	/^void IN_Attack2Down (void) { KeyDown(&in_attack2);}$/;"	f
IN_Attack2Up	cl_input.c	/^void IN_Attack2Up (void) { KeyUp(&in_attack2);}$/;"	f
IN_AttackDown	cl_input.c	/^void IN_AttackDown(void) {$/;"	f
IN_AttackUp	cl_input.c	/^void IN_AttackUp(void) {$/;"	f
IN_BackDown	cl_input.c	/^void IN_BackDown(void) {KeyDown(&in_back);}$/;"	f
IN_BackUp	cl_input.c	/^void IN_BackUp(void) {KeyUp(&in_back);}$/;"	f
IN_BestWeapon	cl_input.c	/^int IN_BestWeapon (void) {$/;"	f
IN_CarbonMouseEvents	in_mac.c	/^static pascal OSStatus IN_CarbonMouseEvents (EventHandlerCallRef handlerChain, EventRef event, void *userData)$/;"	f	file:
IN_CenterMouse	in_mac.c	/^static void IN_CenterMouse (void)$/;"	f	file:
IN_ClearStates	in_win.c	/^void IN_ClearStates (void) {$/;"	f
IN_Commands	in_mac.c	/^void IN_Commands (void)$/;"	f
IN_Commands	in_win.c	/^void IN_Commands (void) {$/;"	f
IN_Commands	linux_glimp.c	/^void IN_Commands (void) { \/* empty *\/ }$/;"	f
IN_Commands	vid_glx.c	/^void IN_Commands (void) {}$/;"	f
IN_Commands	vid_svgalib.c	/^void IN_Commands (void) {}$/;"	f
IN_Commands	vid_x11.c	/^void IN_Commands (void)$/;"	f
IN_ConnectMouse	in_mac.c	/^void IN_ConnectMouse(void)$/;"	f
IN_DeactivateMouse	in_win.c	/^void IN_DeactivateMouse (void) {$/;"	f
IN_DeactivateMouse	linux_glimp.c	/^void IN_DeactivateMouse( void )$/;"	f
IN_DisconnectMouse	in_mac.c	/^void IN_DisconnectMouse(void)$/;"	f
IN_DownDown	cl_input.c	/^void IN_DownDown(void) {KeyDown(&in_down);}$/;"	f
IN_DownUp	cl_input.c	/^void IN_DownUp(void) {KeyUp(&in_down);}$/;"	f
IN_EvdevList_f	linux_glimp.c	/^void IN_EvdevList_f(void) {$/;"	f
IN_ForwardDown	cl_input.c	/^void IN_ForwardDown(void) {KeyDown(&in_forward);}$/;"	f
IN_ForwardUp	cl_input.c	/^void IN_ForwardUp(void) {KeyUp(&in_forward);}$/;"	f
IN_Frame	linux_glimp.c	/^void IN_Frame (void) {$/;"	f
IN_GetDelta	in_mac.c	/^void (*IN_GetDelta)(void);$/;"	v
IN_GetDelta_CG	in_mac.c	/^static void IN_GetDelta_CG (void)$/;"	f	file:
IN_GetMouseRate	in_win.c	/^int IN_GetMouseRate(void) {$/;"	f
IN_HideCursor	in_mac.c	/^void IN_HideCursor (void)$/;"	f
IN_HideMouse	in_win.c	/^void IN_HideMouse (void) {$/;"	f
IN_Impulse	cl_input.c	/^void IN_Impulse (void) {$/;"	f
IN_Init	in_linux.c	/^void IN_Init (void)$/;"	f
IN_Init	in_mac.c	/^void IN_Init (void)$/;"	f
IN_Init	in_win.c	/^void IN_Init (void) {$/;"	f
IN_InitDInput	in_win.c	/^qbool IN_InitDInput (void) {$/;"	f
IN_JoyMove	in_win.c	/^void IN_JoyMove (usercmd_t *cmd) {$/;"	f
IN_JumpDown	cl_input.c	/^void IN_JumpDown(void) {$/;"	f
IN_JumpUp	cl_input.c	/^void IN_JumpUp(void) {$/;"	f
IN_KLookDown	cl_input.c	/^void IN_KLookDown (void) {KeyDown(&in_klook);}$/;"	f
IN_KLookUp	cl_input.c	/^void IN_KLookUp (void) {KeyUp(&in_klook);}$/;"	f
IN_Keycode_Print_f	keymap.c	/^static void IN_Keycode_Print_f( int scancode, qbool ext, qbool down, int key ) {$/;"	f	file:
IN_Keycode_Print_f	keymap_x11.c	/^void IN_Keycode_Print_f ( XKeyEvent *ev, qbool ext, qbool down, int key ) {$/;"	f
IN_Keycode_Set_f	keymap.c	/^static void IN_Keycode_Set_f (qbool showerr, char *filename, unsigned int linecount) {$/;"	f	file:
IN_Keycode_f	keymap.c	/^void IN_Keycode_f (void) {$/;"	f
IN_Keycode_f	keymap_x11.c	/^void IN_Keycode_f (void) {$/;"	f
IN_Keymap_Init_f	keymap.c	/^void IN_Keymap_Init_f (void) {$/;"	f
IN_Keymap_Init_f	keymap_x11.c	/^void IN_Keymap_Init_f (void) {$/;"	f
IN_Keymap_Load_f	keymap.c	/^void IN_Keymap_Load_f (void)$/;"	f
IN_Keymap_Load_f	keymap_x11.c	/^void IN_Keymap_Load_f (void)$/;"	f
IN_Keymap_Print_f	keymap.c	/^static void IN_Keymap_Print_f( int scancode, qbool ext )$/;"	f	file:
IN_Keymap_Reset_f	keymap.c	/^void IN_Keymap_Reset_f (void) {$/;"	f
IN_Keymap_Reset_f	keymap_x11.c	/^void IN_Keymap_Reset_f (void) {$/;"	f
IN_Keymap_Save_f	keymap.c	/^void IN_Keymap_Save_f (void)$/;"	f
IN_Keymap_Save_f	keymap_x11.c	/^void IN_Keymap_Save_f (void)$/;"	f
IN_Keymap_WriteHeader_f	keymap.c	/^static void IN_Keymap_WriteHeader_f (FILE *f) {$/;"	f	file:
IN_Keymap_WriteKeycode_f	keymap.c	/^static void IN_Keymap_WriteKeycode_f (FILE *f, int scancode) {$/;"	f	file:
IN_Keymaplist_f	keymap.c	/^void IN_Keymaplist_f (void)$/;"	f
IN_Keymaplist_f	keymap_x11.c	/^void IN_Keymaplist_f (void)$/;"	f
IN_LeftDown	cl_input.c	/^void IN_LeftDown(void) {KeyDown(&in_left);}$/;"	f
IN_LeftUp	cl_input.c	/^void IN_LeftUp(void) {KeyUp(&in_left);}$/;"	f
IN_LookdownDown	cl_input.c	/^void IN_LookdownDown(void) {KeyDown(&in_lookdown);}$/;"	f
IN_LookdownUp	cl_input.c	/^void IN_LookdownUp(void) {KeyUp(&in_lookdown);}$/;"	f
IN_LookupDown	cl_input.c	/^void IN_LookupDown(void) {KeyDown(&in_lookup);}$/;"	f
IN_LookupUp	cl_input.c	/^void IN_LookupUp(void) {KeyUp(&in_lookup);}$/;"	f
IN_MLookDown	cl_input.c	/^void IN_MLookDown (void) {KeyDown(&in_mlook);}$/;"	f
IN_MLookUp	cl_input.c	/^void IN_MLookUp (void) {$/;"	f
IN_MapKey	in_win.c	/^int IN_MapKey (int key) {$/;"	f
IN_MouseEvent	in_win.c	/^void IN_MouseEvent (int mstate) $/;"	f
IN_MouseMove	in_linux.c	/^void IN_MouseMove (usercmd_t *cmd)$/;"	f
IN_MouseMove	in_win.c	/^void IN_MouseMove (usercmd_t *cmd) {$/;"	f
IN_Move	in_linux.c	/^void IN_Move (usercmd_t *cmd)$/;"	f
IN_Move	in_mac.c	/^void IN_Move (usercmd_t *cmd)$/;"	f
IN_Move	in_win.c	/^void IN_Move (usercmd_t *cmd) {$/;"	f
IN_MoveleftDown	cl_input.c	/^void IN_MoveleftDown(void) {KeyDown(&in_moveleft);}$/;"	f
IN_MoveleftUp	cl_input.c	/^void IN_MoveleftUp(void) {KeyUp(&in_moveleft);}$/;"	f
IN_MoverightDown	cl_input.c	/^void IN_MoverightDown(void) {KeyDown(&in_moveright);}$/;"	f
IN_MoverightUp	cl_input.c	/^void IN_MoverightUp(void) {KeyUp(&in_moveright);}$/;"	f
IN_OverrideSystemPrefs	in_mac.c	/^static void IN_OverrideSystemPrefs (qbool state)$/;"	f	file:
IN_RawInput_DeInit	in_win.c	/^void IN_RawInput_DeInit(void)$/;"	f
IN_RawInput_DeRegister	in_win.c	/^void IN_RawInput_DeRegister(void)$/;"	f
IN_RawInput_Init	in_win.c	/^void IN_RawInput_Init(void)$/;"	f
IN_RawInput_IsRDPMouse	in_win.c	/^int IN_RawInput_IsRDPMouse(char *cDeviceString)$/;"	f
IN_RawInput_MouseRead	in_win.c	/^void IN_RawInput_MouseRead(HANDLE in_device_handle)$/;"	f
IN_RawInput_Register	in_win.c	/^int IN_RawInput_Register(void)$/;"	f
IN_ReadJoystick	in_win.c	/^qbool IN_ReadJoystick (void) {$/;"	f
IN_RememberWpOrder	cl_input.c	/^void IN_RememberWpOrder (void) {$/;"	f
IN_Restart_f	in_win.c	/^void IN_Restart_f(void)$/;"	f
IN_Restart_f	linux_glimp.c	/^void IN_Restart_f(void)$/;"	f
IN_RestoreOriginalMouseState	in_win.c	/^void IN_RestoreOriginalMouseState (void) {$/;"	f
IN_ResumeMouse	in_mac.c	/^void IN_ResumeMouse(void)$/;"	f
IN_RightDown	cl_input.c	/^void IN_RightDown(void) {KeyDown(&in_right);}$/;"	f
IN_RightUp	cl_input.c	/^void IN_RightUp(void) {KeyUp(&in_right);}$/;"	f
IN_SMouseInit	in_win.c	/^void IN_SMouseInit(void) {$/;"	f
IN_SMouseProc	in_win.c	/^DWORD WINAPI IN_SMouseProc (void* lpParameter) {$/;"	f
IN_SMouseRead	in_win.c	/^void IN_SMouseRead (int *mx, int *my) {$/;"	f
IN_SMouseShutdown	in_win.c	/^void IN_SMouseShutdown(void)$/;"	f
IN_SetGlobals	in_win.c	/^void IN_SetGlobals(void) {$/;"	f
IN_SetQuakeMouseState	in_win.c	/^void IN_SetQuakeMouseState (void) {$/;"	f
IN_ShowCursor	in_mac.c	/^void IN_ShowCursor (void)$/;"	f
IN_ShowMouse	in_win.c	/^void IN_ShowMouse (void) {$/;"	f
IN_Shutdown	in_linux.c	/^void IN_Shutdown(void)$/;"	f
IN_Shutdown	in_mac.c	/^void IN_Shutdown (void)$/;"	f
IN_Shutdown	in_win.c	/^void IN_Shutdown (void) {$/;"	f
IN_SpeedDown	cl_input.c	/^void IN_SpeedDown(void) {KeyDown(&in_speed);}$/;"	f
IN_SpeedUp	cl_input.c	/^void IN_SpeedUp(void) {KeyUp(&in_speed);}$/;"	f
IN_StartupJoystick	in_win.c	/^void IN_StartupJoystick (void) { $/;"	f
IN_StartupKeymap	keymap.c	/^void	IN_StartupKeymap (void) {$/;"	f
IN_StartupKeymap	keymap_x11.c	/^void	IN_StartupKeymap (void) {$/;"	f
IN_StartupMouse	in_win.c	/^void IN_StartupMouse (void) {$/;"	f
IN_StartupMouse	linux_glimp.c	/^void IN_StartupMouse(void) {$/;"	f
IN_StartupMouse	vid_glx.c	/^void IN_StartupMouse (void)$/;"	f
IN_StartupMouse	vid_svgalib.c	/^void IN_StartupMouse (void)$/;"	f
IN_StartupMouse	vid_x11.c	/^void IN_StartupMouse (void)$/;"	f
IN_StrafeDown	cl_input.c	/^void IN_StrafeDown(void) {KeyDown(&in_strafe);}$/;"	f
IN_StrafeUp	cl_input.c	/^void IN_StrafeUp(void) {KeyUp(&in_strafe);}$/;"	f
IN_SuspendMouse	in_mac.c	/^void IN_SuspendMouse(void)$/;"	f
IN_TranslateKeyEvent	keymap.c	/^void IN_TranslateKeyEvent (int lParam, int wParam, qbool down) {$/;"	f
IN_UpDown	cl_input.c	/^void IN_UpDown(void) {KeyDown(&in_up);}$/;"	f
IN_UpUp	cl_input.c	/^void IN_UpUp(void) {KeyUp(&in_up);}$/;"	f
IN_UpdateClipCursor	in_win.c	/^void IN_UpdateClipCursor (void) {$/;"	f
IN_UseDown	cl_input.c	/^void IN_UseDown (void) {KeyDown(&in_use);}$/;"	f
IN_UseUp	cl_input.c	/^void IN_UseUp (void) {KeyUp(&in_use);}$/;"	f
IN_Weapon	cl_input.c	/^void IN_Weapon(void) {$/;"	f
IPC_ADDBOOKMARK	winamp.h	259;"	d
IPC_CHANGECURRENTFILE	winamp.h	295;"	d
IPC_CHDIR	winamp.h	381;"	d
IPC_DELETE	winamp.h	52;"	d
IPC_EXECPLUG	winamp.h	176;"	d
IPC_GETEQDATA	winamp.h	234;"	d
IPC_GETINFO	winamp.h	219;"	d
IPC_GETLISTLENGTH	winamp.h	141;"	d
IPC_GETLISTPOS	winamp.h	209;"	d
IPC_GETMBURL	winamp.h	302;"	d
IPC_GETOUTPUTTIME	winamp.h	81;"	d
IPC_GETPLAYLISTFILE	winamp.h	189;"	d
IPC_GETPLAYLISTTITLE	winamp.h	199;"	d
IPC_GETSKIN	winamp.h	163;"	d
IPC_GETVERSION	winamp.h	38;"	d
IPC_GET_REPEAT	winamp.h	339;"	d
IPC_GET_SHUFFLE	winamp.h	332;"	d
IPC_INETAVAILABLE	winamp.h	281;"	d
IPC_ISPLAYING	winamp.h	70;"	d
IPC_JUMPTOTIME	winamp.h	92;"	d
IPC_MBBLOCK	winamp.h	317;"	d
IPC_MBOPEN	winamp.h	273;"	d
IPC_MBOPENREAL	winamp.h	324;"	d
IPC_PLAYFILE	winamp.h	367;"	d
IPC_REFRESHPLCACHE	winamp.h	310;"	d
IPC_RESTARTWINAMP	winamp.h	266;"	d
IPC_SETEQDATA	winamp.h	250;"	d
IPC_SETPANNING	winamp.h	132;"	d
IPC_SETPLAYLISTPOS	winamp.h	114;"	d
IPC_SETSKIN	winamp.h	151;"	d
IPC_SETVOLUME	winamp.h	123;"	d
IPC_SET_REPEAT	winamp.h	353;"	d
IPC_SET_SHUFFLE	winamp.h	346;"	d
IPC_STARTPLAY	winamp.h	61;"	d
IPC_UPDTITLE	winamp.h	288;"	d
IPC_WRITEPLAYLIST	winamp.h	102;"	d
IP_DecodePacket	EX_browser_ping.c	/^static ICMP_header_t *IP_DecodePacket(IP_packet_t *ip_packet, int bytes,$/;"	f	file:
IP_Packet_u	EX_browser_ping.c	/^typedef union IP_Packet_u {$/;"	u	file:
IP_header_s	EX_browser_ping.c	/^typedef struct IP_header_s$/;"	s	file:
IP_header_t	EX_browser_ping.c	/^} IP_header_t;$/;"	t	typeref:struct:IP_header_s	file:
IP_packet_t	EX_browser_ping.c	/^} IP_packet_t;$/;"	t	typeref:union:IP_Packet_u	file:
ISALPHATEX	gl_model.c	295;"	d	file:
ISDEAD	cl_ents.c	39;"	d	file:
ISDEAD	cl_screen.c	984;"	d	file:
ISDEAD	teamplay.c	952;"	d	file:
ISPAUSED	client.h	42;"	d
ISP_AUX	in_mac.c	68;"	d	file:
ISP_BUTTONS	in_mac.c	67;"	d	file:
ISP_DELTA	in_mac.c	65;"	d	file:
ISP_DPAD	in_mac.c	69;"	d	file:
ISP_MWHEEL	in_mac.c	66;"	d	file:
ISSKYTEX	gl_model.c	293;"	d	file:
ISSKYTEX	r_model.c	240;"	d	file:
ISTURBTEX	gl_model.c	290;"	d	file:
ISTURBTEX	r_model.c	237;"	d	file:
ISUNDERWATER	gl_local.h	235;"	d
IS_NAN	mathlib.h	51;"	d
IS_SLASH	q_shared.h	65;"	d
IS_SLASH	q_shared.h	67;"	d
IT_ARMOR1	common.h	94;"	d
IT_ARMOR2	common.h	95;"	d
IT_ARMOR3	common.h	96;"	d
IT_AXE	common.h	92;"	d
IT_CELLS	common.h	90;"	d
IT_GRENADE_LAUNCHER	common.h	82;"	d
IT_INVISIBILITY	common.h	103;"	d
IT_INVULNERABILITY	common.h	105;"	d
IT_KEY1	common.h	100;"	d
IT_KEY2	common.h	101;"	d
IT_LIGHTNING	common.h	84;"	d
IT_NAILGUN	common.h	80;"	d
IT_NAILS	common.h	88;"	d
IT_QUAD	common.h	107;"	d
IT_ROCKETS	common.h	89;"	d
IT_ROCKET_LAUNCHER	common.h	83;"	d
IT_SHELLS	common.h	87;"	d
IT_SHOTGUN	common.h	78;"	d
IT_SIGIL1	common.h	109;"	d
IT_SIGIL2	common.h	111;"	d
IT_SIGIL3	common.h	112;"	d
IT_SIGIL4	common.h	113;"	d
IT_SUIT	common.h	106;"	d
IT_SUPERHEALTH	common.h	98;"	d
IT_SUPER_LIGHTNING	common.h	85;"	d
IT_SUPER_NAILGUN	common.h	81;"	d
IT_SUPER_SHOTGUN	common.h	79;"	d
IgnoreList_f	ignore.c	/^static void IgnoreList_f(void) {$/;"	f	file:
Ignore_Check_Flood	ignore.c	/^char Ignore_Check_Flood(char *s, int flags, int offset) {$/;"	f
Ignore_Flood_Add	ignore.c	/^void Ignore_Flood_Add(char *s) {$/;"	f
Ignore_ID_f	ignore.c	/^static void Ignore_ID_f(void) {$/;"	f	file:
Ignore_Init	ignore.c	/^void Ignore_Init(void) {$/;"	f
Ignore_Message	ignore.c	/^qbool Ignore_Message(char *s, int flags, int offset) {$/;"	f
Ignore_ResetFloodList	ignore.c	/^void Ignore_ResetFloodList(void) {$/;"	f
Ignore_f	ignore.c	/^static void Ignore_f(void) {$/;"	f	file:
Ignorelist_Add	ignore.c	/^static qbool Ignorelist_Add(int slot) {$/;"	f	file:
Ignorelist_Del	ignore.c	/^static qbool Ignorelist_Del(int slot) {$/;"	f	file:
Ignoreteam_f	ignore.c	/^static void Ignoreteam_f(void) {$/;"	f	file:
Image_Init	image.c	/^void Image_Init(void) $/;"	f
Image_LoadJPEG	image.c	/^byte *Image_LoadJPEG(FILE *fin, int filesize, const char *filename, int matchwidth, int matchheight, int *real_width, int *real_height)$/;"	f
Image_LoadPCX	image.c	/^byte *Image_LoadPCX (FILE *fin, int filesize, const char *filename, int matchwidth, int matchheight, int *real_width, int *real_height) $/;"	f
Image_LoadPCX_As32Bit	image.c	/^byte *Image_LoadPCX_As32Bit (FILE *fin, int filesize, char *filename, int matchwidth, int matchheight, int *real_width, int *real_height)$/;"	f
Image_LoadPNG	image.c	/^byte *Image_LoadPNG (FILE *fin, const char *filename, int matchwidth, int matchheight, int *real_width, *real_height) $/;"	f
Image_LoadPNG	image.c	/^byte *Image_LoadPNG (FILE *fin, const char *filename, int matchwidth, int matchheight, int *real_width, int *real_height) $/;"	f
Image_LoadPNG_All	image.c	/^png_data *Image_LoadPNG_All (FILE *fin, const char *filename, int matchwidth, int matchheight, int loadflag, int *real_width, int *real_height)$/;"	f
Image_LoadPNG_Comments	image.c	/^png_textp Image_LoadPNG_Comments (char *filename, int *text_count)$/;"	f
Image_LoadTGA	image.c	/^byte *Image_LoadTGA(FILE *fin, int filesize, const char *filename, int matchwidth, int matchheight, int *real_width, int *real_height) $/;"	f
Image_MipReduce	image.c	/^void Image_MipReduce (byte *in, byte *out, int *width, int *height, int bpp) $/;"	f
Image_Resample	image.c	/^void Image_Resample (void *indata, int inwidth, int inheight,$/;"	f
Image_Resample24	image.c	/^static void Image_Resample24 (void *indata, int inwidth, int inheight,$/;"	f	file:
Image_Resample24LerpLine	image.c	/^static void Image_Resample24LerpLine (byte *in, byte *out, int inwidth, int outwidth) $/;"	f	file:
Image_Resample32	image.c	/^static void Image_Resample32 (void *indata, int inwidth, int inheight,$/;"	f	file:
Image_Resample32LerpLine	image.c	/^static void Image_Resample32LerpLine (byte *in, byte *out, int inwidth, int outwidth) $/;"	f	file:
Image_WriteJPEG	image.c	/^int Image_WriteJPEG(char *filename, int quality, byte *pixels, int width, int height) $/;"	f
Image_WriteJPEG	image.c	/^int Image_WriteJPEG(char *filename, int quality, byte *pixels, int width, int height) {$/;"	f
Image_WritePCX	image.c	/^int Image_WritePCX (char *filename, byte *data, int width, int height, byte *palette)$/;"	f
Image_WritePNG	image.c	/^int Image_WritePNG (char *filename, int compression, byte *pixels, int width, int height) $/;"	f
Image_WritePNG	image.c	/^int Image_WritePNG (char *filename, int compression, byte *pixels, int width, int height) {$/;"	f
Image_WritePNGPLTE	image.c	/^int Image_WritePNGPLTE (char *filename, int compression,$/;"	f
Image_WriteTGA	image.c	/^int Image_WriteTGA (char *filename, byte *pixels, int width, int height) $/;"	f
Img_HasFullbrights	gl_model.c	/^qbool Img_HasFullbrights (byte *pixels, int size) {$/;"	f
InfernoFire_f	gl_rpart.c	/^void InfernoFire_f (void)$/;"	f
InfernoTrail	gl_rpart.c	/^void InfernoTrail (vec3_t start, vec3_t end, vec3_t vel)$/;"	f
Info_Print	common.c	/^void Info_Print (char *s) {$/;"	f
Info_RemoveKey	common.c	/^void Info_RemoveKey (char *s, char *key) {$/;"	f
Info_RemovePrefixedKeys	common.c	/^void Info_RemovePrefixedKeys (char *start, char prefix) {$/;"	f
Info_SetValueForKey	common.c	/^void Info_SetValueForKey (char *s, char *key, char *value, int maxsize) {$/;"	f
Info_SetValueForStarKey	common.c	/^void Info_SetValueForStarKey (char *s, char *key, char *value, int maxsize) {$/;"	f
Info_ValueForKey	common.c	/^char *Info_ValueForKey (char *s, char *key) {$/;"	f
Init	mp3_player.h	/^	void  (*Init)            (void);$/;"	m	struct:__anon236
InitCoronas	vx_coronas.c	/^void InitCoronas(void)$/;"	f
InitFlyby	cl_cam.c	/^static qbool InitFlyby(player_state_t *self, player_state_t *player, int checkvis) {$/;"	f	file:
InitFragDefs	fragstats.c	/^static void InitFragDefs(void) $/;"	f	file:
InitGel	d_polyse.c	/^void InitGel (byte *palette)$/;"	f
InitHWGamma	vid_glx.c	/^void InitHWGamma (void)$/;"	f
InitHWGamma	vid_mac.c	/^void InitHWGamma (void)$/;"	f
InitHWGamma	vid_wgl.c	/^void InitHWGamma (void) {$/;"	f
InitInternalTriggers	tp_triggers.c	/^static void InitInternalTriggers(void)$/;"	f	file:
InitOpenGL	tr_init.c	/^static void InitOpenGL( void )$/;"	f	file:
InitSig	linux_signals.c	/^void InitSig(void)$/;"	f
InitSig	vid_glx.c	/^void InitSig(void) {$/;"	f
InitTracker	vx_tracker.c	/^void InitTracker(void)$/;"	f
InitVXStuff	vx_stuff.c	/^void InitVXStuff(void)$/;"	f
Init_Parser	parser.c	/^LOCAL void Init_Parser(EParser p, const parser_extra* f, const char *str)$/;"	f
Init_VLights	vx_vertexlights.c	/^void Init_VLights(void)$/;"	f
Initialize	sys_mac.c	/^static void Initialize (void)$/;"	f	file:
InitializeAppleEvents	sys_mac.c	/^void InitializeAppleEvents (void)$/;"	f
InsertLinkBefore	sv_world.c	/^static void InsertLinkBefore (link_t *l, link_t *before) {$/;"	f	file:
InsertSndDoCommand	CarbonSndPlayDB.c	/^static void	InsertSndDoCommand (SndChannelPtr chan, SndCommand * newCmd) {$/;"	f	file:
Invert24To16	mathlib.c	/^fixed16_t Invert24To16(fixed16_t val) {$/;"	f
InvertMouse	menu_options.c	/^static qbool InvertMouse(void) { return m_pitch.value < 0; }$/;"	f	file:
InvertMouseRead	menu_options.c	/^const char* InvertMouseRead(void) { return InvertMouse() ? "on" : "off"; }$/;"	f
InvertMouseToggle	menu_options.c	/^void InvertMouseToggle(qbool back) { Cvar_SetValue(&m_pitch, -m_pitch.value); }$/;"	f
IsActive	mp3_player.h	/^	qbool (*IsActive)        (void);$/;"	m	struct:__anon236
IsBlockElement	document_rendering.c	/^static int IsBlockElement(document_tag_t *tag)$/;"	f	file:
IsIgnored	ignore.c	/^static qbool IsIgnored(int slot) {$/;"	f	file:
IsInSource	EX_browser.c	/^int IsInSource(source_data *source, server_data *serv)$/;"	f
IsPlayerRunning	mp3_player.h	/^	qbool (*IsPlayerRunning) (void);$/;"	m	struct:__anon236
IsPointInPolygon	mathlib.c	/^int IsPointInPolygon(int npol, vec3_t *v, float x, float y)$/;"	f
IsPressed	sys_mac.c	/^short IsPressed (unsigned short k)$/;"	f
IsRegexp	utils.c	/^qbool IsRegexp(const char *str)$/;"	f
IsRegexp	utils.h	116;"	d
JOY_ABSOLUTE_AXIS	in_win.c	121;"	d	file:
JOY_AXIS_R	in_win.c	127;"	d	file:
JOY_AXIS_U	in_win.c	128;"	d	file:
JOY_AXIS_V	in_win.c	129;"	d	file:
JOY_AXIS_X	in_win.c	124;"	d	file:
JOY_AXIS_Y	in_win.c	125;"	d	file:
JOY_AXIS_Z	in_win.c	126;"	d	file:
JOY_MAX_AXES	in_win.c	123;"	d	file:
JOY_RELATIVE_AXIS	in_win.c	122;"	d	file:
JPEG_FreeLibrary	image.c	/^static void JPEG_FreeLibrary(void) {$/;"	f	file:
JPEG_IO_empty_output_buffer	image.c	/^static boolean JPEG_IO_empty_output_buffer (j_compress_ptr cinfo) $/;"	f	file:
JPEG_IO_empty_output_buffer	image.c	/^static boolean JPEG_IO_empty_output_buffer (j_compress_ptr cinfo) {$/;"	f	file:
JPEG_IO_init_destination	image.c	/^static void JPEG_IO_init_destination(j_compress_ptr cinfo) {$/;"	f	file:
JPEG_IO_init_destination	image.c	/^static void JPEG_IO_init_destination(j_compress_ptr cinfo)$/;"	f	file:
JPEG_IO_set_dest	image.c	/^static void JPEG_IO_set_dest (j_compress_ptr cinfo, FILE *outfile) {$/;"	f	file:
JPEG_IO_set_dest	image.c	/^static void JPEG_IO_set_dest (j_compress_ptr cinfo, FILE *outfile)$/;"	f	file:
JPEG_IO_term_destination	image.c	/^static void JPEG_IO_term_destination (j_compress_ptr cinfo) {$/;"	f	file:
JPEG_IO_term_destination	image.c	/^static void JPEG_IO_term_destination (j_compress_ptr cinfo)$/;"	f	file:
JPEG_LoadLibrary	image.c	/^static qbool JPEG_LoadLibrary(void) {$/;"	f	file:
JPEG_OUTPUT_BUF_SIZE	image.c	1969;"	d	file:
JPEG_OUTPUT_BUF_SIZE	image.c	2102;"	d	file:
Join_Server	EX_browser.c	/^static void Join_Server (server_data *s)$/;"	f	file:
Joy_AdvancedUpdate_f	in_win.c	/^void Joy_AdvancedUpdate_f (void) {$/;"	f
KEYBOARD_OVERRUN_MAKE_CODE	in_raw.h	52;"	d
KEY_MASK	linux_glimp.c	128;"	d	file:
KEY_MASK	vid_glx.c	66;"	d	file:
KF_UP	winquake.h	40;"	d
KP_0	keys.h	/^	KP_0=KP_INS,$/;"	e	enum:__anon171
KP_1	keys.h	/^	KP_1=KP_END,$/;"	e	enum:__anon171
KP_2	keys.h	/^	KP_2=KP_DOWNARROW,$/;"	e	enum:__anon171
KP_3	keys.h	/^	KP_3=KP_PGDN,$/;"	e	enum:__anon171
KP_4	keys.h	/^	KP_4=KP_LEFTARROW,$/;"	e	enum:__anon171
KP_5	keys.h	/^	KP_5,$/;"	e	enum:__anon171
KP_6	keys.h	/^	KP_6=KP_RIGHTARROW,$/;"	e	enum:__anon171
KP_7	keys.h	/^	KP_7=KP_HOME,$/;"	e	enum:__anon171
KP_8	keys.h	/^	KP_8=KP_UPARROW,$/;"	e	enum:__anon171
KP_9	keys.h	/^	KP_9=KP_PGUP,$/;"	e	enum:__anon171
KP_DEL	keys.h	/^	KP_DEL,$/;"	e	enum:__anon171
KP_DOT	keys.h	/^	KP_DOT=KP_DEL,$/;"	e	enum:__anon171
KP_DOWNARROW	keys.h	/^	KP_DOWNARROW,	\/\/180$/;"	e	enum:__anon171
KP_END	keys.h	/^	KP_END,$/;"	e	enum:__anon171
KP_ENTER	keys.h	/^	KP_ENTER,$/;"	e	enum:__anon171
KP_EQUAL	keys.h	/^	KP_EQUAL,$/;"	e	enum:__anon171
KP_HOME	keys.h	/^	KP_HOME,$/;"	e	enum:__anon171
KP_INS	keys.h	/^	KP_INS,$/;"	e	enum:__anon171
KP_LEFTARROW	keys.h	/^	KP_LEFTARROW,$/;"	e	enum:__anon171
KP_MINUS	keys.h	/^	KP_MINUS,$/;"	e	enum:__anon171
KP_NUMLOCK	keys.h	/^	KP_NUMLOCK,$/;"	e	enum:__anon171
KP_PGDN	keys.h	/^	KP_PGDN,$/;"	e	enum:__anon171
KP_PGUP	keys.h	/^	KP_PGUP,$/;"	e	enum:__anon171
KP_PLUS	keys.h	/^	KP_PLUS,$/;"	e	enum:__anon171
KP_RIGHTARROW	keys.h	/^	KP_RIGHTARROW,$/;"	e	enum:__anon171
KP_SLASH	keys.h	/^	KP_SLASH,$/;"	e	enum:__anon171
KP_STAR	keys.h	/^	KP_STAR,		\/\/170$/;"	e	enum:__anon171
KP_UPARROW	keys.h	/^	KP_UPARROW,$/;"	e	enum:__anon171
K_ALT	keys.h	/^	K_ALT,$/;"	e	enum:__anon171
K_ALTGR	keys.h	/^	K_ALTGR,    \/\/ Right Alt-Key (=AltGr Key; this key must be used, if a third level of mappings is needed)$/;"	e	enum:__anon171
K_AUX1	keys.h	/^	K_AUX1,$/;"	e	enum:__anon171
K_AUX10	keys.h	/^	K_AUX10,$/;"	e	enum:__anon171
K_AUX11	keys.h	/^	K_AUX11,$/;"	e	enum:__anon171
K_AUX12	keys.h	/^	K_AUX12,$/;"	e	enum:__anon171
K_AUX13	keys.h	/^	K_AUX13,$/;"	e	enum:__anon171
K_AUX14	keys.h	/^	K_AUX14,$/;"	e	enum:__anon171
K_AUX15	keys.h	/^	K_AUX15,$/;"	e	enum:__anon171
K_AUX16	keys.h	/^	K_AUX16,$/;"	e	enum:__anon171
K_AUX17	keys.h	/^	K_AUX17,$/;"	e	enum:__anon171
K_AUX18	keys.h	/^	K_AUX18,$/;"	e	enum:__anon171
K_AUX19	keys.h	/^	K_AUX19,		\/\/230$/;"	e	enum:__anon171
K_AUX2	keys.h	/^	K_AUX2,$/;"	e	enum:__anon171
K_AUX20	keys.h	/^	K_AUX20,$/;"	e	enum:__anon171
K_AUX21	keys.h	/^	K_AUX21,$/;"	e	enum:__anon171
K_AUX22	keys.h	/^	K_AUX22,$/;"	e	enum:__anon171
K_AUX23	keys.h	/^	K_AUX23,$/;"	e	enum:__anon171
K_AUX24	keys.h	/^	K_AUX24,$/;"	e	enum:__anon171
K_AUX25	keys.h	/^	K_AUX25,$/;"	e	enum:__anon171
K_AUX26	keys.h	/^	K_AUX26,$/;"	e	enum:__anon171
K_AUX27	keys.h	/^	K_AUX27,$/;"	e	enum:__anon171
K_AUX28	keys.h	/^	K_AUX28,$/;"	e	enum:__anon171
K_AUX29	keys.h	/^	K_AUX29,		\/\/240$/;"	e	enum:__anon171
K_AUX3	keys.h	/^	K_AUX3,$/;"	e	enum:__anon171
K_AUX30	keys.h	/^	K_AUX30,$/;"	e	enum:__anon171
K_AUX31	keys.h	/^	K_AUX31,$/;"	e	enum:__anon171
K_AUX32	keys.h	/^	K_AUX32,$/;"	e	enum:__anon171
K_AUX4	keys.h	/^	K_AUX4,$/;"	e	enum:__anon171
K_AUX5	keys.h	/^	K_AUX5,$/;"	e	enum:__anon171
K_AUX6	keys.h	/^	K_AUX6,$/;"	e	enum:__anon171
K_AUX7	keys.h	/^	K_AUX7,$/;"	e	enum:__anon171
K_AUX8	keys.h	/^	K_AUX8,$/;"	e	enum:__anon171
K_AUX9	keys.h	/^	K_AUX9,			\/\/220$/;"	e	enum:__anon171
K_BACKSPACE	keys.h	/^	K_BACKSPACE = 127,$/;"	e	enum:__anon171
K_CAPSLOCK	keys.h	/^	K_CAPSLOCK,$/;"	e	enum:__anon171
K_CMD	keys.h	/^	K_CMD,$/;"	e	enum:__anon171
K_CTRL	keys.h	/^	K_CTRL,			\/\/140$/;"	e	enum:__anon171
K_DEL	keys.h	/^	K_DEL,$/;"	e	enum:__anon171
K_DOWNARROW	keys.h	/^	K_DOWNARROW,$/;"	e	enum:__anon171
K_END	keys.h	/^	K_END,$/;"	e	enum:__anon171
K_ENTER	keys.h	/^	K_ENTER = 13,$/;"	e	enum:__anon171
K_ESCAPE	keys.h	/^	K_ESCAPE = 27,$/;"	e	enum:__anon171
K_F1	keys.h	/^	K_F1,$/;"	e	enum:__anon171
K_F10	keys.h	/^	K_F10,$/;"	e	enum:__anon171
K_F11	keys.h	/^	K_F11,$/;"	e	enum:__anon171
K_F12	keys.h	/^	K_F12,$/;"	e	enum:__anon171
K_F13	keys.h	/^	K_F13,$/;"	e	enum:__anon171
K_F14	keys.h	/^	K_F14,$/;"	e	enum:__anon171
K_F15	keys.h	/^	K_F15,$/;"	e	enum:__anon171
K_F2	keys.h	/^	K_F2,$/;"	e	enum:__anon171
K_F3	keys.h	/^	K_F3,$/;"	e	enum:__anon171
K_F4	keys.h	/^	K_F4,$/;"	e	enum:__anon171
K_F5	keys.h	/^	K_F5,			\/\/150$/;"	e	enum:__anon171
K_F6	keys.h	/^	K_F6,$/;"	e	enum:__anon171
K_F7	keys.h	/^	K_F7,$/;"	e	enum:__anon171
K_F8	keys.h	/^	K_F8,$/;"	e	enum:__anon171
K_F9	keys.h	/^	K_F9,$/;"	e	enum:__anon171
K_HOME	keys.h	/^	K_HOME,$/;"	e	enum:__anon171
K_INS	keys.h	/^	K_INS,$/;"	e	enum:__anon171
K_JOY1	keys.h	/^	K_JOY1,$/;"	e	enum:__anon171
K_JOY2	keys.h	/^	K_JOY2,$/;"	e	enum:__anon171
K_JOY3	keys.h	/^	K_JOY3,			\/\/210$/;"	e	enum:__anon171
K_JOY4	keys.h	/^	K_JOY4,$/;"	e	enum:__anon171
K_LALT	keys.h	/^	K_LALT,$/;"	e	enum:__anon171
K_LCTRL	keys.h	/^	K_LCTRL,$/;"	e	enum:__anon171
K_LEFTARROW	keys.h	/^	K_LEFTARROW,$/;"	e	enum:__anon171
K_LSHIFT	keys.h	/^	K_LSHIFT,$/;"	e	enum:__anon171
K_LWIN	keys.h	/^	K_LWIN,$/;"	e	enum:__anon171
K_MENU	keys.h	/^	K_MENU,$/;"	e	enum:__anon171
K_MOUSE1	keys.h	/^	K_MOUSE1 = 200,$/;"	e	enum:__anon171
K_MOUSE2	keys.h	/^	K_MOUSE2,$/;"	e	enum:__anon171
K_MOUSE3	keys.h	/^	K_MOUSE3,$/;"	e	enum:__anon171
K_MOUSE4	keys.h	/^	K_MOUSE4,$/;"	e	enum:__anon171
K_MOUSE5	keys.h	/^	K_MOUSE5,$/;"	e	enum:__anon171
K_MOUSE6	keys.h	/^	K_MOUSE6,$/;"	e	enum:__anon171
K_MOUSE7	keys.h	/^	K_MOUSE7,$/;"	e	enum:__anon171
K_MOUSE8	keys.h	/^	K_MOUSE8,$/;"	e	enum:__anon171
K_MWHEELDOWN	keys.h	/^	K_MWHEELDOWN,	\/\/245$/;"	e	enum:__anon171
K_MWHEELUP	keys.h	/^	K_MWHEELUP,$/;"	e	enum:__anon171
K_PARA	keys.h	/^	K_PARA,$/;"	e	enum:__anon171
K_PAUSE	keys.h	/^	K_PAUSE,$/;"	e	enum:__anon171
K_PGDN	keys.h	/^	K_PGDN,			\/\/160$/;"	e	enum:__anon171
K_PGUP	keys.h	/^	K_PGUP,$/;"	e	enum:__anon171
K_PRINTSCR	keys.h	/^	K_PRINTSCR,$/;"	e	enum:__anon171
K_RALT	keys.h	/^	K_RALT,$/;"	e	enum:__anon171
K_RCTRL	keys.h	/^	K_RCTRL,$/;"	e	enum:__anon171
K_RIGHTARROW	keys.h	/^	K_RIGHTARROW,$/;"	e	enum:__anon171
K_RSHIFT	keys.h	/^	K_RSHIFT,$/;"	e	enum:__anon171
K_RWIN	keys.h	/^	K_RWIN,$/;"	e	enum:__anon171
K_SCRLCK	keys.h	/^	K_SCRLCK,		\/\/130$/;"	e	enum:__anon171
K_SHIFT	keys.h	/^	K_SHIFT,$/;"	e	enum:__anon171
K_SPACE	keys.h	/^	K_SPACE	= 32,$/;"	e	enum:__anon171
K_TAB	keys.h	/^	K_TAB = 9,$/;"	e	enum:__anon171
K_UPARROW	keys.h	/^	K_UPARROW,$/;"	e	enum:__anon171
K_WIN	keys.h	/^	K_WIN,$/;"	e	enum:__anon171
KeepNewVideoSettings	menu_options.c	/^static void KeepNewVideoSettings (void) { mvs_askmode = false; }$/;"	f	file:
KeyDown	cl_input.c	/^void KeyDown (kbutton_t *b) {$/;"	f
KeyUp	cl_input.c	/^void KeyUp (kbutton_t *b) {$/;"	f
Key_BindList_f	keys.c	/^void Key_BindList_f (void) {$/;"	f
Key_Bind_f	keys.c	/^void Key_Bind_f (void) {$/;"	f
Key_ClearStates	keys.c	/^void Key_ClearStates (void) $/;"	f
Key_ClearTyping	console.c	/^void Key_ClearTyping (void) {$/;"	f
Key_Console	keys.c	/^void Key_Console (int key, int unichar)$/;"	f
Key_ConsoleKey	keys.c	/^static qbool Key_ConsoleKey(int key)$/;"	f	file:
Key_Event	keys.c	/^void Key_Event (int key, qbool down)$/;"	f
Key_EventEx	keys.c	/^void Key_EventEx (int key, wchar unichar, qbool down)$/;"	f
Key_Init	keys.c	/^void Key_Init (void) {$/;"	f
Key_IsLeftRightSameBind	keys.c	/^qbool Key_IsLeftRightSameBind(int b) {$/;"	f
Key_KeynumToString	keys.c	/^char *Key_KeynumToString (int keynum) {$/;"	f
Key_KeynumToString	keys.c	/^char *Key_KeynumToString (int keynum, char *buffer)$/;"	f
Key_Message	keys.c	/^void Key_Message (int key, wchar unichar) {$/;"	f
Key_PrintBindInfo	keys.c	/^static void Key_PrintBindInfo(int keynum, char *keyname) {$/;"	f	file:
Key_SetBinding	keys.c	/^void Key_SetBinding (int keynum, const char *binding) {$/;"	f
Key_StringToKeynum	keys.c	/^int Key_StringToKeynum (char *str)$/;"	f
Key_Unbind	keys.c	/^void Key_Unbind (int keynum) {$/;"	f
Key_Unbind_f	keys.c	/^void Key_Unbind_f (void) {$/;"	f
Key_Unbindall_f	keys.c	/^void Key_Unbindall_f (void) {$/;"	f
Key_WriteBindings	keys.c	/^void Key_WriteBindings (FILE *f) {$/;"	f
L	lua.c	/^	lua_State *L;$/;"	m	struct:L_lua_states	file:
LABEL_DEFAULT_FLAGS	ez_label.h	41;"	d
LABEL_LINE_SIZE	ez_label.h	49;"	d
LABEL_MAX_WRAPS	ez_label.h	48;"	d
LABEL_TEXT_SELECTED	ez_label.h	52;"	d
LAVA_TRAIL	render.h	/^	LAVA_TRAIL,$/;"	e	enum:trail_type_s
LERPBYTE	image.c	115;"	d	file:
LETTERHEIGHT	Ctrl.h	10;"	d
LETTERWIDTH	Ctrl.h	9;"	d
LETW	settings_page.c	44;"	d	file:
LF_Com_Printf	lua.c	/^static int LF_Com_Printf(lua_State *L)$/;"	f	file:
LG_INFO	mvd_utils_common.h	32;"	d
LIB_Load	sys_lib_linux.c	/^int LIB_Load(char *name, struct lib_functions *functions, int debug)$/;"	f
LIB_Load	sys_lib_win.c	/^int LIB_Load(char *name, struct lib_functions *functions, int debug)$/;"	f
LIGHT_MIN	r_alias.c	33;"	d	file:
LINEAR16_driver	mgraph.h	1668;"	d
LINEAR24_driver	mgraph.h	1669;"	d
LINEAR32_driver	mgraph.h	1670;"	d
LINEAR8_driver	mgraph.h	1667;"	d
LINEGAP	hud_editor.c	239;"	d	file:
LINEHEIGHT	settings_page.c	45;"	d	file:
LINE_MAX_LEN	document_rendering.c	8;"	d	file:
LLKHF_UP	winquake.h	39;"	d
LLWinKeyHook	sys_win.c	/^LRESULT CALLBACK LLWinKeyHook(int Code, WPARAM wParam, LPARAM lParam) $/;"	f
LNKTYPE	vfs_tar.h	28;"	d
LOCAL	parser.c	24;"	d	file:
LOCAL	tp_msgs.c	15;"	d	file:
LOCALSTACK_SIZE	pr_exec.c	32;"	d	file:
LOG_FILENAME_MAXSIZE	logging.c	33;"	d	file:
LOG_FLUSH	sv_main.c	307;"	d	file:
LOG_HIGHWATER	sv_main.c	306;"	d	file:
LPRAWHID	in_raw.h	/^} RAWHID,*PRAWHID,*LPRAWHID;$/;"	t	typeref:struct:tagRAWHID
LPRAWINPUT	in_raw.h	/^} RAWINPUT,*PRAWINPUT,*LPRAWINPUT;$/;"	t	typeref:struct:tagRAWINPUT
LPRAWINPUTDEVICE	in_raw.h	/^} RAWINPUTDEVICE,*PRAWINPUTDEVICE,*LPRAWINPUTDEVICE;$/;"	t	typeref:struct:tagRAWINPUTDEVICE
LPRAWKEYBOARD	in_raw.h	/^} RAWKEYBOARD,*PRAWKEYBOARD,*LPRAWKEYBOARD;$/;"	t	typeref:struct:tagRAWKEYBOARD
LPRAWMOUSE	in_raw.h	/^} RAWMOUSE,*PRAWMOUSE,*LPRAWMOUSE;$/;"	t	typeref:struct:tagRAWMOUSE
LT_VAL	parser.c	439;"	d	file:
LT_VAL	parser.c	455;"	d	file:
LUA_Delete_f	lua.c	/^void LUA_Delete_f(void)$/;"	f
LUA_Frame	lua.c	/^void LUA_Frame(void)$/;"	f
LUA_Init	lua.c	/^void LUA_Init(void)$/;"	f
LUA_Init_f	lua.c	/^void LUA_Init_f(void)$/;"	f
LUA_Load_Libs	lua.c	/^int LUA_Load_Libs(void)$/;"	f
LUA_Load_Scripts	lua.c	/^void LUA_Load_Scripts(void)$/;"	f
LUMP_CLIPNODES	bspfile.h	73;"	d
LUMP_EDGES	bspfile.h	76;"	d
LUMP_ENTITIES	bspfile.h	64;"	d
LUMP_FACES	bspfile.h	71;"	d
LUMP_LEAFS	bspfile.h	74;"	d
LUMP_LIGHTING	bspfile.h	72;"	d
LUMP_MARKSURFACES	bspfile.h	75;"	d
LUMP_MODELS	bspfile.h	78;"	d
LUMP_NODES	bspfile.h	69;"	d
LUMP_PLANES	bspfile.h	65;"	d
LUMP_SURFEDGES	bspfile.h	77;"	d
LUMP_TEXINFO	bspfile.h	70;"	d
LUMP_TEXTURES	bspfile.h	66;"	d
LUMP_VERTEXES	bspfile.h	67;"	d
LUMP_VISIBILITY	bspfile.h	68;"	d
L_lua_states	lua.c	/^struct L_lua_states *L_lua_states;$/;"	v	typeref:struct:L_lua_states
L_lua_states	lua.c	/^struct L_lua_states$/;"	s	file:
LeaveNavigationMode	Ctrl_PageViewer.c	/^static void LeaveNavigationMode(CPageViewer_t *viewer)$/;"	f	file:
LineFeed	document_rendering.c	/^static void LineFeed(document_rendering_context_t *cx)$/;"	f	file:
List_Add	linked_list.c	/^struct linked_list *List_Add(int sorted, int (*compare)(void *data1, void *data2), void (*free_data)(void *data))$/;"	f
List_Add_Node	linked_list.c	/^int List_Add_Node(struct linked_list *list, void *input_node)$/;"	f
List_Cleanup	linked_list.c	/^void List_Cleanup(struct linked_list *list)$/;"	f
List_Delete_Node	linked_list.c	/^void *List_Delete_Node(struct linked_list *list, struct linked_list_node *node)$/;"	f
List_Find_Node	linked_list.c	/^void *List_Find_Node(struct linked_list *list, int (*compare_function)(void *match, void *against), void *match)$/;"	f
List_Get_Node	linked_list.c	/^void *List_Get_Node(struct linked_list *list, int num)$/;"	f
List_Get_Node_Ny_Number	linked_list.c	/^struct linked_list_node *List_Get_Node_Ny_Number(struct linked_list *list, int num)$/;"	f
List_Insert_Node	linked_list.c	/^int List_Insert_Node(struct linked_list *list, struct linked_list_node *anchor, struct linked_list_node *node, int before)$/;"	f
List_Node_Count	linked_list.c	/^int List_Node_Count(struct linked_list *list)$/;"	f
List_Remove	linked_list.c	/^void List_Remove(struct linked_list *list)$/;"	f
List_Remove_Node	linked_list.c	/^void *List_Remove_Node(struct linked_list *list, int num, int delete)$/;"	f
List_Resort	linked_list.c	/^void List_Resort(struct linked_list *list, int (*compare_function)(void *match, void *against))$/;"	f
LittleFloat	q_shared.h	179;"	d
LittleFloat	q_shared.h	187;"	d
LittleFloat	q_shared.h	195;"	d
LittleLong	q_shared.h	178;"	d
LittleLong	q_shared.h	186;"	d
LittleLong	q_shared.h	194;"	d
LittleShort	q_shared.h	177;"	d
LittleShort	q_shared.h	185;"	d
LittleShort	q_shared.h	193;"	d
LoadAlternateCharset	gl_draw.c	/^static int LoadAlternateCharset (char *name)$/;"	f	file:
LoadAlternateCharset	r_draw.c	/^static byte *LoadAlternateCharset (const char *name)$/;"	f	file:
LoadColoredLighting	gl_model.c	/^static byte *LoadColoredLighting(char *name, char **litfilename, int *filesize) {$/;"	f	file:
LoadConfig_f	config_manager.c	/^void LoadConfig_f(void)$/;"	f
LoadFragFile	fragstats.c	/^static void LoadFragFile(char *filename, qbool quiet) {$/;"	f	file:
LoadHomeCfg	config_manager.c	/^void LoadHomeCfg(const char *filename)$/;"	f
LoadPlaylist_f	mp3_player.h	/^	void  (*LoadPlaylist_f)  (void);$/;"	m	struct:__anon236
LoadPrefs	mac_prefs.c	/^LoadPrefs ()$/;"	f
Load_FragFile_f	fragstats.c	/^void Load_FragFile_f(void) {$/;"	f
Log_AutoLogging_CancelMatch	logging.c	/^void Log_AutoLogging_CancelMatch(void) {$/;"	f
Log_AutoLogging_SaveMatch	logging.c	/^void Log_AutoLogging_SaveMatch(void) {$/;"	f
Log_AutoLogging_StartMatch	logging.c	/^void Log_AutoLogging_StartMatch(char *logname) {$/;"	f
Log_AutoLogging_Status	logging.c	/^qbool Log_AutoLogging_Status(void) {$/;"	f
Log_AutoLogging_StopMatch	logging.c	/^void Log_AutoLogging_StopMatch(void) {$/;"	f
Log_Init	logging.c	/^void Log_Init(void) {$/;"	f
Log_IsLogging	logging.c	/^qbool Log_IsLogging(void) {$/;"	f
Log_LogDirectory	logging.c	/^static char *Log_LogDirectory(void) {$/;"	f	file:
Log_Shutdown	logging.c	/^void Log_Shutdown(void) {$/;"	f
Log_Stop	logging.c	/^static void Log_Stop(void) {$/;"	f	file:
Log_Write	logging.c	/^void Log_Write(char *s) {$/;"	f
Log_log_f	logging.c	/^static void Log_log_f(void) {$/;"	f	file:
LongSwap	q_shared.c	/^int LongSwap (int l)$/;"	f
LongSwapPDP2Big	q_shared.c	/^int LongSwapPDP2Big (int l)$/;"	f
LongSwapPDP2Lit	q_shared.c	/^int LongSwapPDP2Lit (int l)$/;"	f
Lua_Run_Function	lua.c	/^void Lua_Run_Function(char *state, char *function)$/;"	f
Lua_Run_Function_Arguments	lua.c	/^void Lua_Run_Function_Arguments(char *state, char *function, char *args, ... )$/;"	f
MACRO_ALLOWED	cmd.h	209;"	d
MACRO_DISALLOWED	cmd.h	210;"	d
MACRO_NORULES	cmd.h	208;"	d
MAC_GL_3DFX	mac.h	32;"	d
MAC_GL_ATI	mac.h	34;"	d
MAC_GL_FULLSCREEN	mac.h	36;"	d
MAC_GL_GENERIC	mac.h	31;"	d
MAC_GL_RADEON	mac.h	35;"	d
MAC_GL_V2_V3	mac.h	33;"	d
MAILSLOT_BUFFERSIZE	sys_win.c	1161;"	d	file:
MAIN_ITEMS	menu.c	424;"	d	file:
MAX	debug.h	223;"	d
MAXALIASFRAMES	gl_model.h	310;"	d
MAXALIASTRIS	gl_model.h	311;"	d
MAXALIASVERTS	gl_model.h	309;"	d
MAXALIASVERTS	r_local.h	184;"	d
MAXBLOCKS	cl_parse.c	759;"	d	file:
MAXCMDLINE	cmd.c	633;"	d	file:
MAXCMDLINE	console.c	96;"	d	file:
MAXCMDLINE	keys.c	62;"	d	file:
MAXHEIGHT	d_ifacea.h	41;"	d
MAXHEIGHT	r_shared.h	36;"	d
MAXHEIGHT	vid_wgl.c	34;"	d	file:
MAXIMUM_CONBUFSIZE	console.c	46;"	d	file:
MAXIMUM_WIN_MEMORY	sys_win.c	39;"	d	file:
MAXLEFTCLIPEDGES	r_rast.c	33;"	d	file:
MAXLIGHTMAPS	bspfile.h	177;"	d
MAXPRINTMSG	common.c	912;"	d	file:
MAXSPANS	r_shared.h	66;"	d
MAXVERTS	r_shared.h	31;"	d
MAXWEAPONS	cl_input.c	82;"	d	file:
MAXWIDTH	r_shared.h	37;"	d
MAXWIDTH	vid_wgl.c	33;"	d	file:
MAXWORKINGVERTS	r_shared.h	32;"	d
MAX_ALIAS_NAME	cmd.h	178;"	d
MAX_ALIGN_COL	config_manager.c	285;"	d	file:
MAX_ARGS	cmd.h	109;"	d
MAX_BACKUP	net_chan.c	160;"	d	file:
MAX_BACK_BUFFERS	server.h	131;"	d
MAX_BEAMS	cl_tent.c	37;"	d	file:
MAX_BIG_MSGLEN	cl_nqdemo.c	19;"	d	file:
MAX_BLURS	vx_motiontrail.c	8;"	d	file:
MAX_BMODEL_EDGES	r_bsp.c	47;"	d	file:
MAX_BMODEL_VERTS	r_bsp.c	46;"	d	file:
MAX_CACHED_SKINS	skin.c	47;"	d	file:
MAX_CHALLENGES	server.h	252;"	d
MAX_CHANNELS	qsound.h	116;"	d
MAX_CHARSETS	draw.h	31;"	d
MAX_CHARSETS	r_draw.c	49;"	d	file:
MAX_CHECK	pr_cmds.c	591;"	d	file:
MAX_CHECK_MODELS	fmod.c	155;"	d	file:
MAX_CITEX_COMPONENTS	cl_screen.c	1244;"	d	file:
MAX_CLIENTS	protocol.h	352;"	d
MAX_CLIP_PLANES	pmove.c	81;"	d	file:
MAX_CLIP_PLANES	sv_phys.c	167;"	d	file:
MAX_CLIP_VERTS	gl_warp.c	703;"	d	file:
MAX_CL_STATS	common.h	57;"	d
MAX_COLUMN_SIZE	vid_wgl.c	1950;"	d	file:
MAX_COLUMN_SIZE	vid_win.c	2495;"	d	file:
MAX_COM_TOKEN	common.h	146;"	d
MAX_CONPART	console.c	1104;"	d	file:
MAX_CORONAS	vx_coronas.c	29;"	d	file:
MAX_CPTEX_COMPONENTS	console.c	1131;"	d	file:
MAX_DATAGRAM	q_shared.h	292;"	d
MAX_DEMONAME	client.h	251;"	d
MAX_DEMOS	client.h	250;"	d
MAX_DEMO_FILES	menu_demo.c	48;"	d	file:
MAX_DEMO_NAME	menu_demo.c	47;"	d	file:
MAX_DISPLAYMODES	mac.h	27;"	d
MAX_DLIGHTS	client.h	217;"	d
MAX_DUMPED_CVARS	config_manager.c	118;"	d	file:
MAX_DYNAMIC_CHANNELS	qsound.h	117;"	d
MAX_EDITTEXT	Ctrl_EditBox.h	10;"	d
MAX_EFRAGS	client.h	248;"	d
MAX_ENT_LEAFS	progs.h	45;"	d
MAX_EXPLOSIONS	cl_tent.c	50;"	d	file:
MAX_EXTENSION_LENGTH	EX_FileList.h	32;"	d
MAX_FILELIST_DISPLAY	EX_FileList.h	31;"	d
MAX_FILELIST_ENTRIES	EX_FileList.h	29;"	d
MAX_FILELIST_TYPES	EX_FileList.h	30;"	d
MAX_FILES_IN_PACK	vfs_pak.c	69;"	d	file:
MAX_FILTER_LENGTH	teamplay.c	3263;"	d	file:
MAX_FRAGMSG_LENGTH	fragstats.c	37;"	d	file:
MAX_FRAG_DEFINITIONS	fragstats.c	36;"	d	file:
MAX_GLTEXTURES	gl_texture.h	35;"	d
MAX_GROUP_MEMBERS	match_tools.c	805;"	d	file:
MAX_HUD_ELEMENTS	hud.h	102;"	d
MAX_INFO_KEY	common.h	139;"	d
MAX_INFO_STRING	common.h	140;"	d
MAX_IPFILTERS	sv_main.c	714;"	d	file:
MAX_KEY	bspfile.h	49;"	d
MAX_KEYS	EX_browser.h	12;"	d
MAX_LATENT	net.h	113;"	d
MAX_LBM_HEIGHT	d_iface.h	25;"	d
MAX_LBM_HEIGHT	gl_local.h	77;"	d
MAX_LIGHTMAPS	gl_local.h	280;"	d
MAX_LIGHTMAP_SIZE	gl_rsurf.c	37;"	d	file:
MAX_LIGHTNINGBEAMS	cl_tent.c	711;"	d	file:
MAX_LIGHTSTYLES	common.h	47;"	d
MAX_LOCALINFO_STRING	common.h	142;"	d
MAX_LOC_NAME	teamplay.h	116;"	d
MAX_LOGFILES	sv_ccmds.c	46;"	d	file:
MAX_LOOPBACK	net.c	35;"	d	file:
MAX_MACROS	cmd.c	1271;"	d	file:
MAX_MACRO_NAME	cmd.h	207;"	d
MAX_MACRO_STRING	teamplay.h	117;"	d
MAX_MACRO_VALUE	teamplay.c	153;"	d	file:
MAX_MAP_BRUSHES	bspfile.h	29;"	d
MAX_MAP_CLIPNODES	bspfile.h	35;"	d
MAX_MAP_EDGES	bspfile.h	41;"	d
MAX_MAP_ENTITIES	bspfile.h	30;"	d
MAX_MAP_ENTSTRING	bspfile.h	31;"	d
MAX_MAP_FACES	bspfile.h	38;"	d
MAX_MAP_HULLS	bspfile.h	26;"	d
MAX_MAP_LEAFS	bspfile.h	36;"	d
MAX_MAP_LIGHTING	bspfile.h	44;"	d
MAX_MAP_MARKSURFACES	bspfile.h	39;"	d
MAX_MAP_MIPTEX	bspfile.h	43;"	d
MAX_MAP_MODELS	bspfile.h	28;"	d
MAX_MAP_NODES	bspfile.h	34;"	d
MAX_MAP_PLANES	bspfile.h	33;"	d
MAX_MAP_SURFEDGES	bspfile.h	42;"	d
MAX_MAP_TEXINFO	bspfile.h	40;"	d
MAX_MAP_VERTS	bspfile.h	37;"	d
MAX_MAP_VISIBILITY	bspfile.h	45;"	d
MAX_MASTERS	server.h	28;"	d
MAX_MODEDESCS	vid_wgl.c	1952;"	d	file:
MAX_MODEDESCS	vid_win.c	2497;"	d	file:
MAX_MODELS	common.h	48;"	d
MAX_MODE_LIST	vid_wgl.c	32;"	d	file:
MAX_MODE_LIST	vid_win.c	42;"	d	file:
MAX_MOD_KNOWN	gl_model.c	53;"	d	file:
MAX_MOD_KNOWN	r_model.c	45;"	d	file:
MAX_MSGLEN	q_shared.h	291;"	d
MAX_MVD_PACKET_ENTITIES	protocol.h	382;"	d
MAX_MVD_SIZE	qtv.h	38;"	d
MAX_NAILS	sv_ents.c	31;"	d	file:
MAX_NET_GRAPHHEIGHT	gl_local.h	291;"	d
MAX_NUMBER_LENGTH	parser.c	27;"	d	file:
MAX_NUM_ARGVS	common.c	56;"	d	file:
MAX_NUM_ARGVS	sys_win.c	730;"	d	file:
MAX_OSPATH	q_shared.h	96;"	d
MAX_PACKET	EX_browser_ping.c	66;"	d	file:
MAX_PACKET_ENTITIES	protocol.h	373;"	d
MAX_PACKET_ENTITIES	protocol.h	383;"	d
MAX_PARMS	pr_comp.h	136;"	d
MAX_PATH	sys.h	38;"	d
MAX_PATH_LENGTH	sys.h	50;"	d
MAX_PFDS	win_glimp.c	256;"	d	file:
MAX_PHYSENTS	pmove.h	25;"	d
MAX_PLAYERS	EX_browser.h	13;"	d
MAX_PROJECTILES	client.h	43;"	d
MAX_PRSTR	progs.h	154;"	d
MAX_PTEX_COMPONENTS	gl_rpart.c	147;"	d	file:
MAX_QPATH	q_shared.h	95;"	d
MAX_RI_DEVICE_SIZE	in_win.c	47;"	d	file:
MAX_RUNAWAYLOOP	cmd.c	192;"	d	file:
MAX_SAVEGAMES	menu.c	970;"	d	file:
MAX_SCOREBOARDNAME	client.h	88;"	d
MAX_SCRAPS	draw.h	29;"	d
MAX_SCREENSHOT_COUNT	cl_screen.c	3801;"	d	file:
MAX_SEARCH	EX_browser.c	34;"	d	file:
MAX_SEARCH_STRING	EX_FileList.h	33;"	d
MAX_SERVERINFO_STRING	common.h	141;"	d
MAX_SERVERS	EX_browser.h	10;"	d
MAX_SERVER_LIST	cl_slist.h	21;"	d
MAX_SFX	snd_dma.c	68;"	d	file:
MAX_SIGNON_BUFFERS	server.h	30;"	d
MAX_SKINS	gl_model.h	276;"	d
MAX_SKYGROUP_MEMBERS	match_tools.c	1073;"	d	file:
MAX_SORTED_ALIASES	cmd.c	598;"	d	file:
MAX_SORTED_CMDS	cmd.c	1225;"	d	file:
MAX_SORTED_CVARS	cvar.c	655;"	d	file:
MAX_SORTED_HUDS	hud.c	348;"	d	file:
MAX_SOUNDS	common.h	50;"	d
MAX_SOURCES	EX_browser.h	9;"	d
MAX_SOURCE_NAME	EX_browser.h	111;"	d
MAX_SPRITE_FRAMES	gl_model.h	211;"	d
MAX_STACK_DEPTH	pr_exec.c	28;"	d	file:
MAX_STATIC_ENTITIES	client.h	249;"	d
MAX_STATIC_SOUNDS	client.h	32;"	d
MAX_STATIC_STRING	match_tools.c	38;"	d	file:
MAX_STRING_CHARS	tr_types.h	42;"	d
MAX_STUFFTEXT	server.h	132;"	d
MAX_STYLESTRING	client.h	218;"	d
MAX_TEAMIGNORELIST	ignore.c	29;"	d	file:
MAX_TEMP_ENTITIES	protocol.h	420;"	d
MAX_THREADS	thread_win.c	4;"	d	file:
MAX_TIMINGS	r_misc.c	166;"	d	file:
MAX_TRACKERMESSAGES	vx_tracker.c	42;"	d	file:
MAX_TRACKER_MSG_LEN	vx_tracker.c	43;"	d	file:
MAX_TRACKING_STRING	hud_common.c	347;"	d	file:
MAX_UDP_PACKET	net.h	85;"	d
MAX_UNBOUND	EX_browser.h	7;"	d
MAX_VAL	cl_cam.c	627;"	d	file:
MAX_VALUE	bspfile.h	50;"	d
MAX_VARSTRING	pr_cmds.c	32;"	d	file:
MAX_VAR_NAME	parser.h	25;"	d
MAX_VIDEODEVICES	mac.h	26;"	d
MAX_VWEP_MODELS	common.h	49;"	d
MAX_WEAPON_CLASSES	fragstats.c	35;"	d	file:
MCHARSET_PATH	draw.h	56;"	d
MD3_IDENT	gl_md3.h	4;"	d
MD3_XYZ_SCALE	gl_md3.h	6;"	d
MD4Final	md4.c	/^void MD4Final (unsigned char digest[16], MD4_CTX *context)$/;"	f
MD4Init	md4.c	/^void MD4Init (MD4_CTX *context)$/;"	f
MD4Transform	md4.c	/^static void MD4Transform (UINT4 state[4], unsigned char block[64])$/;"	f	file:
MD4Update	md4.c	/^void MD4Update (MD4_CTX *context, unsigned char *input, unsigned int inputLen)$/;"	f
MD4_CTX	md4.c	/^} MD4_CTX;$/;"	t	typeref:struct:__anon43	file:
MEMBITINTS	zone2.h	39;"	d
MEMBITS	zone2.h	38;"	d
MEMCLUMPSIZE	zone2.h	35;"	d
MEMCLUMP_SENTINEL	zone2.h	40;"	d
MEMHEADER_SENTINEL1	zone2.h	43;"	d
MEMHEADER_SENTINEL2	zone2.h	44;"	d
MEMUNIT	zone2.h	37;"	d
MENU_ALIAS	menu_ingame.c	24;"	d	file:
METHODDEF	image.c	/^METHODDEF(boolean)$/;"	f
MGLAPI	mgraph.h	73;"	d
MGLAPI	mgraph.h	75;"	d
MGLDC	mgraph.h	/^typedef publicDevCtx_t			MGLDC;$/;"	t
MGLDC	mgraph.h	/^typedef struct internalDevCtx_t	MGLDC;$/;"	t	typeref:struct:internalDevCtx_t
MGLWIN	mglwin.h	27;"	d
MGL_3D	mgraph.h	46;"	d
MGL_ACCEL16NAME	mgraph.h	423;"	d
MGL_ACCEL24NAME	mgraph.h	424;"	d
MGL_ACCEL32NAME	mgraph.h	425;"	d
MGL_ACCEL8NAME	mgraph.h	422;"	d
MGL_AND_MODE	mgraph.h	/^	MGL_AND_MODE,					\/* AND mode							*\/$/;"	e	enum:__anon187
MGL_AUTO_POLYGON	mgraph.h	/^	MGL_AUTO_POLYGON,				\/* Auto detect the polygon type		*\/$/;"	e	enum:__anon190
MGL_BASELINE_TEXT	mgraph.h	/^	MGL_BASELINE_TEXT	=	3,		\/* Justify from the baseline		*\/$/;"	e	enum:__anon191
MGL_BDR_INSET	mgraph.h	/^	MGL_BDR_INSET,					\/* Interior is inset into screen	*\/$/;"	e	enum:__anon195
MGL_BDR_OUTLINE	mgraph.h	/^	MGL_BDR_OUTLINE,				\/* Border is 3d outline				*\/$/;"	e	enum:__anon195
MGL_BDR_OUTSET	mgraph.h	/^	MGL_BDR_OUTSET,					\/* Interior is outset from screen	*\/$/;"	e	enum:__anon195
MGL_BITMAP_OPAQUE	mgraph.h	/^	MGL_BITMAP_OPAQUE,$/;"	e	enum:__anon188
MGL_BITMAP_SOLID	mgraph.h	/^	MGL_BITMAP_SOLID,$/;"	e	enum:__anon188
MGL_BITMAP_TRANSPARENT	mgraph.h	/^	MGL_BITMAP_TRANSPARENT,$/;"	e	enum:__anon188
MGL_BLACK	mgraph.h	/^	MGL_BLACK,						\/* dark colors	*\/$/;"	e	enum:MGL_COLORS
MGL_BLUE	mgraph.h	/^	MGL_BLUE,$/;"	e	enum:MGL_COLORS
MGL_BOTTOM_TEXT	mgraph.h	/^	MGL_BOTTOM_TEXT		=	2,		\/* Justify from bottom				*\/$/;"	e	enum:__anon191
MGL_BROWN	mgraph.h	/^	MGL_BROWN,$/;"	e	enum:MGL_COLORS
MGL_CENTER_TEXT	mgraph.h	/^	MGL_CENTER_TEXT		=	1,		\/* Center the text					*\/$/;"	e	enum:__anon191
MGL_CLIPOFF	mgraph.h	270;"	d
MGL_CLIPON	mgraph.h	269;"	d
MGL_CMAP_MODE	mgraph.h	/^	MGL_CMAP_MODE,					\/* Normal Color mapped mode 	*\/$/;"	e	enum:__anon185
MGL_COLORS	mgraph.h	/^enum MGL_COLORS {$/;"	g
MGL_COMPLEX_POLYGON	mgraph.h	/^	MGL_COMPLEX_POLYGON,			\/* Non-Simple polygons				*\/$/;"	e	enum:__anon190
MGL_CONVEX_POLYGON	mgraph.h	/^	MGL_CONVEX_POLYGON,				\/* Monotone vertical polygon		*\/$/;"	e	enum:__anon190
MGL_CYAN	mgraph.h	/^	MGL_CYAN,$/;"	e	enum:MGL_COLORS
MGL_DARKGRAY	mgraph.h	/^	MGL_DARKGRAY,					\/* light colors	*\/$/;"	e	enum:MGL_COLORS
MGL_DDRAW16NAME	mgraph.h	428;"	d
MGL_DDRAW24NAME	mgraph.h	429;"	d
MGL_DDRAW32NAME	mgraph.h	430;"	d
MGL_DDRAW8NAME	mgraph.h	427;"	d
MGL_DEACTIVATE	mgraph.h	514;"	d
MGL_DEF_CURSOR	mgraph.h	723;"	d
MGL_DITHER_RGB_MODE	mgraph.h	/^	MGL_DITHER_RGB_MODE,			\/* 24 bit RGB halftone dithered	*\/$/;"	e	enum:__anon185
MGL_DOWN_DIR	mgraph.h	/^	MGL_DOWN_DIR		=	3,		\/* Text goes down					*\/$/;"	e	enum:__anon192
MGL_EMPTY_FILL	mgraph.h	443;"	d
MGL_FIX3D	mgraph.h	42;"	d
MGL_FIXEDFONT	mgraph.h	/^	MGL_FIXEDFONT,					\/* Fixed width bitmap font			*\/$/;"	e	enum:__anon193
MGL_FIXROUND	mgraph.h	632;"	d
MGL_FIXTOINT	mgraph.h	631;"	d
MGL_FIXTOZ	mgraph.h	636;"	d
MGL_FIX_1	mgraph.h	627;"	d
MGL_FIX_2	mgraph.h	628;"	d
MGL_FIX_HALF	mgraph.h	629;"	d
MGL_GRAY_FILL	mgraph.h	444;"	d
MGL_GREEN	mgraph.h	/^	MGL_GREEN,$/;"	e	enum:MGL_COLORS
MGL_HDC	mglwin.h	/^typedef	HDC			MGL_HDC;$/;"	t
MGL_HINSTANCE	mglwin.h	/^typedef	HINSTANCE	MGL_HINSTANCE;$/;"	t
MGL_HWND	mglwin.h	/^typedef HWND		MGL_HWND;$/;"	t
MGL_HW_CLIP	mgraph.h	929;"	d
MGL_HW_CLRPATT_RECT	mgraph.h	924;"	d
MGL_HW_DSTTRANS_BLT	mgraph.h	927;"	d
MGL_HW_FLAGS	mgraph.h	930;"	d
MGL_HW_LINE	mgraph.h	919;"	d
MGL_HW_MONO_BLT	mgraph.h	928;"	d
MGL_HW_NONE	mgraph.h	918;"	d
MGL_HW_PATT_RECT	mgraph.h	923;"	d
MGL_HW_POLY	mgraph.h	921;"	d
MGL_HW_RECT	mgraph.h	922;"	d
MGL_HW_SCR_BLT	mgraph.h	925;"	d
MGL_HW_SRCTRANS_BLT	mgraph.h	926;"	d
MGL_HW_STIPPLE_LINE	mgraph.h	920;"	d
MGL_LEFT_DIR	mgraph.h	/^	MGL_LEFT_DIR		=	0,		\/* Text goes to left				*\/$/;"	e	enum:__anon192
MGL_LEFT_TEXT	mgraph.h	/^	MGL_LEFT_TEXT		=	0,		\/* Justify from left				*\/$/;"	e	enum:__anon191
MGL_LIGHTBLUE	mgraph.h	/^	MGL_LIGHTBLUE,$/;"	e	enum:MGL_COLORS
MGL_LIGHTCYAN	mgraph.h	/^	MGL_LIGHTCYAN,$/;"	e	enum:MGL_COLORS
MGL_LIGHTGRAY	mgraph.h	/^	MGL_LIGHTGRAY,$/;"	e	enum:MGL_COLORS
MGL_LIGHTGREEN	mgraph.h	/^	MGL_LIGHTGREEN,$/;"	e	enum:MGL_COLORS
MGL_LIGHTMAGENTA	mgraph.h	/^	MGL_LIGHTMAGENTA,$/;"	e	enum:MGL_COLORS
MGL_LIGHTRED	mgraph.h	/^	MGL_LIGHTRED,$/;"	e	enum:MGL_COLORS
MGL_LINEAR16NAME	mgraph.h	418;"	d
MGL_LINEAR24NAME	mgraph.h	419;"	d
MGL_LINEAR32NAME	mgraph.h	420;"	d
MGL_LINEAR8NAME	mgraph.h	417;"	d
MGL_LINEAR_ACCESS	mgraph.h	892;"	d
MGL_LINEAR_ZACCESS	mgraph.h	899;"	d
MGL_LINE_PENSTYLE	mgraph.h	/^	MGL_LINE_PENSTYLE,				\/* Line drawn in current pen style	*\/$/;"	e	enum:__anon189
MGL_LINE_STIPPLE	mgraph.h	/^	MGL_LINE_STIPPLE,				\/* Line drawn with current stipple	*\/$/;"	e	enum:__anon189
MGL_MAGENTA	mgraph.h	/^	MGL_MAGENTA,$/;"	e	enum:MGL_COLORS
MGL_MARKER_CIRCLE	mgraph.h	/^	MGL_MARKER_CIRCLE,$/;"	e	enum:__anon186
MGL_MARKER_SQUARE	mgraph.h	/^	MGL_MARKER_SQUARE,$/;"	e	enum:__anon186
MGL_MARKER_X	mgraph.h	/^	MGL_MARKER_X,$/;"	e	enum:__anon186
MGL_NO_ACCESS	mgraph.h	890;"	d
MGL_NO_DEACTIVATE	mgraph.h	535;"	d
MGL_NO_SUSPEND_APP	mgraph.h	537;"	d
MGL_NO_ZACCESS	mgraph.h	897;"	d
MGL_OR_MODE	mgraph.h	/^	MGL_OR_MODE,					\/* OR mode							*\/$/;"	e	enum:__anon187
MGL_PACKED16NAME	mgraph.h	437;"	d
MGL_PACKED1NAME	mgraph.h	434;"	d
MGL_PACKED24NAME	mgraph.h	438;"	d
MGL_PACKED32NAME	mgraph.h	439;"	d
MGL_PACKED4NAME	mgraph.h	435;"	d
MGL_PACKED8NAME	mgraph.h	436;"	d
MGL_PIXMAP	mgraph.h	/^	MGL_PIXMAP,$/;"	e	enum:__anon188
MGL_PROPFONT	mgraph.h	/^	MGL_PROPFONT,					\/* Proportional width bitmap font	*\/$/;"	e	enum:__anon193
MGL_REACTIVATE	mgraph.h	515;"	d
MGL_RED	mgraph.h	/^	MGL_RED,$/;"	e	enum:MGL_COLORS
MGL_REPLACE_MODE	mgraph.h	/^	MGL_REPLACE_MODE,				\/* Replace mode						*\/$/;"	e	enum:__anon187
MGL_RIGHT_DIR	mgraph.h	/^	MGL_RIGHT_DIR		=	2,		\/* Text goes right					*\/$/;"	e	enum:__anon192
MGL_RIGHT_TEXT	mgraph.h	/^	MGL_RIGHT_TEXT		=	2,		\/* Justify from right				*\/$/;"	e	enum:__anon191
MGL_ROTATE_DOWN	mgraph.h	/^	MGL_ROTATE_DOWN,				\/* Rotate the palette values down	*\/$/;"	e	enum:__anon194
MGL_ROTATE_UP	mgraph.h	/^	MGL_ROTATE_UP,					\/* Rotate the palette values up		*\/$/;"	e	enum:__anon194
MGL_SOLID_FILL	mgraph.h	445;"	d
MGL_SURFACE_FLAGS	mgraph.h	893;"	d
MGL_SUSPEND_APP	mgraph.h	536;"	d
MGL_SVGA16NAME	mgraph.h	413;"	d
MGL_SVGA24NAME	mgraph.h	414;"	d
MGL_SVGA32NAME	mgraph.h	415;"	d
MGL_SVGA4NAME	mgraph.h	411;"	d
MGL_SVGA8NAME	mgraph.h	412;"	d
MGL_TOFIX	mgraph.h	630;"	d
MGL_TOP_TEXT	mgraph.h	/^	MGL_TOP_TEXT		=	0,		\/* Justify from top					*\/$/;"	e	enum:__anon191
MGL_TOZFIX	mgraph.h	638;"	d
MGL_UP_DIR	mgraph.h	/^	MGL_UP_DIR			=	1,		\/* Text goes up						*\/$/;"	e	enum:__anon192
MGL_VECTORFONT	mgraph.h	/^	MGL_VECTORFONT = 1,				\/* Vector font						*\/$/;"	e	enum:__anon193
MGL_VERSION_STR	mgraph.h	55;"	d
MGL_VGA4NAME	mgraph.h	407;"	d
MGL_VGA8NAME	mgraph.h	408;"	d
MGL_VGAXNAME	mgraph.h	409;"	d
MGL_VIRTUAL_ACCESS	mgraph.h	891;"	d
MGL_VIRTUAL_ZACCESS	mgraph.h	898;"	d
MGL_WHITE	mgraph.h	/^	MGL_WHITE,$/;"	e	enum:MGL_COLORS
MGL_WIN_BLACK	mgraph.h	/^	MGL_WIN_BLACK 			= 0,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_COLORS	mgraph.h	/^enum MGL_WIN_COLORS {$/;"	g
MGL_WIN_CREAM	mgraph.h	/^	MGL_WIN_CREAM			= 246,		\/* Reserved; dont count on this	*\/$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_DARKBLUE	mgraph.h	/^	MGL_WIN_DARKBLUE		= 4,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_DARKCYAN	mgraph.h	/^	MGL_WIN_DARKCYAN		= 6,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_DARKGRAY	mgraph.h	/^	MGL_WIN_DARKGRAY		= 248,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_DARKGREEN	mgraph.h	/^	MGL_WIN_DARKGREEN		= 2,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_DARKMAGENTA	mgraph.h	/^	MGL_WIN_DARKMAGENTA		= 5,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_DARKRED	mgraph.h	/^	MGL_WIN_DARKRED			= 1,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_DARKYELLOW	mgraph.h	/^	MGL_WIN_DARKYELLOW		= 3,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_LIGHTBLUE	mgraph.h	/^	MGL_WIN_LIGHTBLUE		= 252,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_LIGHTCYAN	mgraph.h	/^    MGL_WIN_LIGHTCYAN		= 254,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_LIGHTGRAY	mgraph.h	/^	MGL_WIN_LIGHTGRAY		= 7,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_LIGHTGREEN	mgraph.h	/^	MGL_WIN_LIGHTGREEN		= 250,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_LIGHTMAGENTA	mgraph.h	/^	MGL_WIN_LIGHTMAGENTA	= 253,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_LIGHTRED	mgraph.h	/^	MGL_WIN_LIGHTRED		= 249,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_LIGHTYELLOW	mgraph.h	/^	MGL_WIN_LIGHTYELLOW		= 251,$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_MEDIUMGRAY	mgraph.h	/^	MGL_WIN_MEDIUMGRAY		= 247,		\/* Reserved; dont count on this	*\/$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_SKYBLUE	mgraph.h	/^	MGL_WIN_SKYBLUE			= 9,		\/* Reserved; dont count on this	*\/$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_TURQUOISE	mgraph.h	/^	MGL_WIN_TURQUOISE		= 8,		\/* Reserved; dont count on this	*\/$/;"	e	enum:MGL_WIN_COLORS
MGL_WIN_WHITE	mgraph.h	/^	MGL_WIN_WHITE 			= 255,$/;"	e	enum:MGL_WIN_COLORS
MGL_XOR_MODE	mgraph.h	/^	MGL_XOR_MODE,					\/* XOR mode							*\/$/;"	e	enum:__anon187
MGL_YELLOW	mgraph.h	/^	MGL_YELLOW,$/;"	e	enum:MGL_COLORS
MGL_ZBUFFER_FLAGS	mgraph.h	900;"	d
MGL_ZCLEARVAL	mgraph.h	566;"	d
MGL_ZFIXROUND	mgraph.h	640;"	d
MGL_ZFIXTOINT	mgraph.h	639;"	d
MGL_ZFIX_1	mgraph.h	634;"	d
MGL_ZFIX_HALF	mgraph.h	635;"	d
MGL_ZTOFIX	mgraph.h	637;"	d
MGL_bdrStyleType	mgraph.h	/^	} MGL_bdrStyleType;$/;"	t	typeref:enum:__anon195
MGL_bitBlt	mgraph.h	1868;"	d
MGL_bitBltLin	mgraph.h	1870;"	d
MGL_cLineFast	mgraph.h	1847;"	d
MGL_colorModes	mgraph.h	/^	} MGL_colorModes;$/;"	t	typeref:enum:__anon185
MGL_czLineFast	mgraph.h	1850;"	d
MGL_disjointRect	mgraph.h	1772;"	d
MGL_divotSize	mgraph.h	1881;"	d
MGL_drawBorder	mgraph.h	1862;"	d
MGL_driverType	mgraph.h	/^	} MGL_driverType;$/;"	t	typeref:enum:__anon182
MGL_emptyRect	mgraph.h	1769;"	d
MGL_equalPoint	mgraph.h	1762;"	d
MGL_equalRect	mgraph.h	1764;"	d
MGL_errorType	mgraph.h	/^	} MGL_errorType;$/;"	t	typeref:enum:__anon184
MGL_fillRect	mgraph.h	1866;"	d
MGL_fillRectPt	mgraph.h	1864;"	d
MGL_fillStyleType	mgraph.h	/^	} MGL_fillStyleType;$/;"	t	typeref:enum:__anon188
MGL_fontType	mgraph.h	/^	} MGL_fontType;$/;"	t	typeref:enum:__anon193
MGL_getDivot	mgraph.h	1879;"	d
MGL_getPixel	mgraph.h	1838;"	d
MGL_getPixelFast	mgraph.h	1840;"	d
MGL_insetRect	mgraph.h	1819;"	d
MGL_isSimpleRegion	mgraph.h	1883;"	d
MGL_leftTop	mgraph.h	771;"	d
MGL_line	mgraph.h	1843;"	d
MGL_lineFX	mgraph.h	1845;"	d
MGL_lineFast	mgraph.h	1844;"	d
MGL_lineFastFX	mgraph.h	1846;"	d
MGL_lineRel	mgraph.h	1858;"	d
MGL_lineStyleType	mgraph.h	/^	} MGL_lineStyleType;$/;"	t	typeref:enum:__anon189
MGL_lineTo	mgraph.h	1857;"	d
MGL_markerStyleType	mgraph.h	/^	} MGL_markerStyleType;$/;"	t	typeref:enum:__anon186
MGL_modeType	mgraph.h	/^	} MGL_modeType;$/;"	t	typeref:enum:__anon183
MGL_moveRel	mgraph.h	1842;"	d
MGL_moveTo	mgraph.h	1841;"	d
MGL_offsetRect	mgraph.h	1815;"	d
MGL_packColorFast	mgraph.h	1893;"	d
MGL_packColorRGBFast	mgraph.h	1913;"	d
MGL_packColorRGBFast2	mgraph.h	1916;"	d
MGL_palRotateType	mgraph.h	/^	} MGL_palRotateType;$/;"	t	typeref:enum:__anon194
MGL_pixel	mgraph.h	1837;"	d
MGL_pixelFast	mgraph.h	1839;"	d
MGL_polygonType	mgraph.h	/^	} MGL_polygonType;$/;"	t	typeref:enum:__anon190
MGL_ptInRect	mgraph.h	1825;"	d
MGL_ptInRectCoord	mgraph.h	1830;"	d
MGL_ptInRegion	mgraph.h	1835;"	d
MGL_rect	mgraph.h	1860;"	d
MGL_rectPt	mgraph.h	1859;"	d
MGL_rgbBlue	mgraph.h	1909;"	d
MGL_rgbGreen	mgraph.h	1908;"	d
MGL_rgbLineFast	mgraph.h	1848;"	d
MGL_rgbRed	mgraph.h	1907;"	d
MGL_rgbzLineFast	mgraph.h	1851;"	d
MGL_rgnLine	mgraph.h	1884;"	d
MGL_rgnLineFX	mgraph.h	1885;"	d
MGL_rgnSolidRect	mgraph.h	1888;"	d
MGL_rgnSolidRectPt	mgraph.h	1886;"	d
MGL_rightBottom	mgraph.h	772;"	d
MGL_sectRect	mgraph.h	1777;"	d
MGL_sectRectCoord	mgraph.h	1790;"	d
MGL_sectRectFast	mgraph.h	1784;"	d
MGL_sectRectFastCoord	mgraph.h	1797;"	d
MGL_stretchBlt	mgraph.h	1872;"	d
MGL_suspend_cb_t	mgraph.h	/^typedef m_int (ASMAPI *MGL_suspend_cb_t)(MGLDC *dc,m_int flags);$/;"	t
MGL_textDirType	mgraph.h	/^	} MGL_textDirType;$/;"	t	typeref:enum:__anon192
MGL_textJustType	mgraph.h	/^	} MGL_textJustType;$/;"	t	typeref:enum:__anon191
MGL_transBlt	mgraph.h	1875;"	d
MGL_transBltLin	mgraph.h	1877;"	d
MGL_unionRect	mgraph.h	1803;"	d
MGL_unionRectCoord	mgraph.h	1809;"	d
MGL_unpackColorFast	mgraph.h	1898;"	d
MGL_unpackColorRGBFast	mgraph.h	1923;"	d
MGL_writeModeType	mgraph.h	/^	} MGL_writeModeType;$/;"	t	typeref:enum:__anon187
MGL_zClear	mgraph.h	1855;"	d
MGL_zClearPt	mgraph.h	1853;"	d
MGL_zLineFast	mgraph.h	1849;"	d
MH_INFO	mvd_utils_common.h	25;"	d
MIN	debug.h	226;"	d
MINCOLUMNWIDTH	keys.c	322;"	d	file:
MINEDGES	r_shared.h	63;"	d
MINIMUM_CONBUFSIZE	console.c	44;"	d	file:
MINIMUM_MEMORY	q_shared.h	93;"	d
MINIMUM_MEMORY	vid_win.c	40;"	d	file:
MINIMUM_WIN_MEMORY	sys_win.c	38;"	d	file:
MINSURFACES	r_shared.h	65;"	d
MIN_LEFT_SIZE	common.c	156;"	d	file:
MIN_STEP_NORMAL	pmove.c	36;"	d	file:
MIPLEVELS	bspfile.h	103;"	d
MIng_Back	menu_ingame.c	/^void MIng_Back(void)			{ M_LeaveMenus(); }$/;"	f
MIng_MainMenu	menu_ingame.c	/^void MIng_MainMenu(void)		{ M_Menu_Main_f(); }$/;"	f
MK_XBUTTON1	winquake.h	32;"	d
MK_XBUTTON2	winquake.h	33;"	d
MOCPM_CHOOSECONFIG	menu_options.c	/^enum { MOCPM_SETTINGS, MOCPM_CHOOSECONFIG, MOCPM_CHOOSESCRIPT, MOCPM_ENTERFILENAME } MOpt_configpage_mode = MOCPM_SETTINGS;$/;"	e	enum:__anon50	file:
MOCPM_CHOOSESCRIPT	menu_options.c	/^enum { MOCPM_SETTINGS, MOCPM_CHOOSECONFIG, MOCPM_CHOOSESCRIPT, MOCPM_ENTERFILENAME } MOpt_configpage_mode = MOCPM_SETTINGS;$/;"	e	enum:__anon50	file:
MOCPM_ENTERFILENAME	menu_options.c	/^enum { MOCPM_SETTINGS, MOCPM_CHOOSECONFIG, MOCPM_CHOOSESCRIPT, MOCPM_ENTERFILENAME } MOpt_configpage_mode = MOCPM_SETTINGS;$/;"	e	enum:__anon50	file:
MOCPM_SETTINGS	menu_options.c	/^enum { MOCPM_SETTINGS, MOCPM_CHOOSECONFIG, MOCPM_CHOOSESCRIPT, MOCPM_ENTERFILENAME } MOpt_configpage_mode = MOCPM_SETTINGS;$/;"	e	enum:__anon50	file:
MODE_AREA_HEIGHT	vid_wgl.c	1951;"	d	file:
MODE_AREA_HEIGHT	vid_win.c	2496;"	d	file:
MODE_FULLSCREEN_DEFAULT	vid_wgl.c	40;"	d	file:
MODE_FULLSCREEN_DEFAULT	vid_win.c	76;"	d	file:
MODE_SETTABLE_WINDOW	vid_win.c	74;"	d	file:
MODE_WINDOWED	vid_wgl.c	38;"	d	file:
MODE_WINDOWED	vid_win.c	73;"	d	file:
MOD_BACKPACK	gl_model.h	/^	MOD_BACKPACK,$/;"	e	enum:__anon164
MOD_BACKPACK	r_model.h	/^typedef enum {MOD_NORMAL, MOD_PLAYER, MOD_EYES, MOD_FLAME, MOD_THUNDERBOLT, MOD_BACKPACK} modhint_t;$/;"	e	enum:__anon261
MOD_BUILDINGGIBS	gl_model.h	/^	MOD_BUILDINGGIBS,$/;"	e	enum:__anon164
MOD_CLUSTER	gl_model.h	/^	MOD_CLUSTER,$/;"	e	enum:__anon164
MOD_DEMON	gl_model.h	/^	MOD_DEMON, $/;"	e	enum:__anon164
MOD_DETPACK	gl_model.h	/^	MOD_DETPACK,$/;"	e	enum:__anon164
MOD_ENFORCER	gl_model.h	/^	MOD_ENFORCER,$/;"	e	enum:__anon164
MOD_EYES	gl_model.h	/^	MOD_EYES, $/;"	e	enum:__anon164
MOD_EYES	r_model.h	/^typedef enum {MOD_NORMAL, MOD_PLAYER, MOD_EYES, MOD_FLAME, MOD_THUNDERBOLT, MOD_BACKPACK} modhint_t;$/;"	e	enum:__anon261
MOD_FLAG	gl_model.h	/^	MOD_FLAG,$/;"	e	enum:__anon164
MOD_FLAME	gl_model.h	/^	MOD_FLAME,$/;"	e	enum:__anon164
MOD_FLAME	r_model.h	/^typedef enum {MOD_NORMAL, MOD_PLAYER, MOD_EYES, MOD_FLAME, MOD_THUNDERBOLT, MOD_BACKPACK} modhint_t;$/;"	e	enum:__anon261
MOD_GRENADE	gl_model.h	/^	MOD_GRENADE, $/;"	e	enum:__anon164
MOD_LASER	gl_model.h	/^	MOD_LASER, $/;"	e	enum:__anon164
MOD_LAVABALL	gl_model.h	/^	MOD_LAVABALL,$/;"	e	enum:__anon164
MOD_NORMAL	gl_model.h	/^	MOD_NORMAL, $/;"	e	enum:__anon164
MOD_NORMAL	r_model.h	/^typedef enum {MOD_NORMAL, MOD_PLAYER, MOD_EYES, MOD_FLAME, MOD_THUNDERBOLT, MOD_BACKPACK} modhint_t;$/;"	e	enum:__anon261
MOD_OGRE	gl_model.h	/^	MOD_OGRE,$/;"	e	enum:__anon164
MOD_PLAYER	gl_model.h	/^	MOD_PLAYER, $/;"	e	enum:__anon164
MOD_PLAYER	r_model.h	/^typedef enum {MOD_NORMAL, MOD_PLAYER, MOD_EYES, MOD_FLAME, MOD_THUNDERBOLT, MOD_BACKPACK} modhint_t;$/;"	e	enum:__anon261
MOD_RAIL	gl_model.h	/^	MOD_RAIL, $/;"	e	enum:__anon164
MOD_RAIL2	gl_model.h	/^	MOD_RAIL2,$/;"	e	enum:__anon164
MOD_SENTRYGUN	gl_model.h	/^	MOD_SENTRYGUN, $/;"	e	enum:__anon164
MOD_SHAMBLER	gl_model.h	/^	MOD_SHAMBLER, $/;"	e	enum:__anon164
MOD_SOLDIER	gl_model.h	/^	MOD_SOLDIER,$/;"	e	enum:__anon164
MOD_SPIKE	gl_model.h	/^	MOD_SPIKE, $/;"	e	enum:__anon164
MOD_TELEPORTDESTINATION	gl_model.h	/^	MOD_TELEPORTDESTINATION$/;"	e	enum:__anon164
MOD_TESLA	gl_model.h	/^	MOD_TESLA, $/;"	e	enum:__anon164
MOD_TF_TRAIL	gl_model.h	/^	MOD_TF_TRAIL,$/;"	e	enum:__anon164
MOD_THUNDERBOLT	gl_model.h	/^	MOD_THUNDERBOLT,$/;"	e	enum:__anon164
MOD_THUNDERBOLT	r_model.h	/^typedef enum {MOD_NORMAL, MOD_PLAYER, MOD_EYES, MOD_FLAME, MOD_THUNDERBOLT, MOD_BACKPACK} modhint_t;$/;"	e	enum:__anon261
MOD_VOORSPIKE	gl_model.h	/^	MOD_VOORSPIKE,$/;"	e	enum:__anon164
MOSDM_Back	mosdm.c	/^void MOSDM_Back (void) {$/;"	f
MOSDM_Cam_ETrack_Set	mosdm.c	/^void MOSDM_Cam_ETrack_Set(void){$/;"	f
MOSDM_Cam_Track_Set	mosdm.c	/^void MOSDM_Cam_Track_Set(void){$/;"	f
MOSDM_Change_Active	mosdm.c	/^void MOSDM_Change_Active (int max,int low, int type){$/;"	f
MOSDM_Change_View	mosdm.c	/^void MOSDM_Change_View(void){$/;"	f
MOSDM_Check_Menus	mosdm.c	/^void MOSDM_Check_Menus(void){$/;"	f
MOSDM_Console_Add_Menu	mosdm.c	/^void MOSDM_Console_Add_Menu(void){$/;"	f
MOSDM_Console_Add_modify_Menu	mosdm.c	/^void MOSDM_Console_Add_modify_Menu(void){$/;"	f
MOSDM_Console_Add_select_Menu	mosdm.c	/^void MOSDM_Console_Add_select_Menu(void){$/;"	f
MOSDM_Console_Add_toggle_Menu	mosdm.c	/^void MOSDM_Console_Add_toggle_Menu(void){$/;"	f
MOSDM_Console_Delete_Menu	mosdm.c	/^void MOSDM_Console_Delete_Menu(void){$/;"	f
MOSDM_Down	mosdm.c	/^void MOSDM_Down (void) {$/;"	f
MOSDM_Draw_Info	mosdm.c	/^void MOSDM_Draw_Info(int sx,int sy){$/;"	f
MOSDM_Draw_Menu	mosdm.c	/^void MOSDM_Draw_Menu(int x,int y,mvd_menu_t *current){$/;"	f
MOSDM_Edit_Delete_Menu	mosdm.c	/^void MOSDM_Edit_Delete_Menu(void){$/;"	f
MOSDM_Get_Player_List	mosdm.c	/^void MOSDM_Get_Player_List(void){$/;"	f
MOSDM_Init	mosdm.c	/^void MOSDM_Init(void){$/;"	f
MOSDM_Main	mosdm.c	/^void MOSDM_Main(void){$/;"	f
MOSDM_NEW	mosdm.c	/^void MOSDM_NEW(void){$/;"	f
MOSDM_NEW_ADD_MENU	mosdm.c	/^void MOSDM_NEW_ADD_MENU(char *pname,char *childname,char *identifier,int type,int **intptr,double **floatptr,char **charptr,float min,float max,double restrict, void *function, cvar_t *variable, char *command, double **modifier, vec_t **vector){$/;"	f
MOSDM_NEW_Console_Link	mosdm.c	/^void MOSDM_NEW_Console_Link(void){$/;"	f
MOSDM_NEW_Console_Static	mosdm.c	/^void MOSDM_NEW_Console_Static(void){$/;"	f
MOSDM_NEW_DOWN	mosdm.c	/^void MOSDM_NEW_DOWN(void){$/;"	f
MOSDM_NEW_INIT	mosdm.c	/^void MOSDM_NEW_INIT(void){$/;"	f
MOSDM_NEW_LEFT	mosdm.c	/^void MOSDM_NEW_LEFT(void){$/;"	f
MOSDM_NEW_RIGHT	mosdm.c	/^void MOSDM_NEW_RIGHT(void){$/;"	f
MOSDM_NEW_UP	mosdm.c	/^void MOSDM_NEW_UP(void){$/;"	f
MOSDM_New_Delete_Menu	mosdm.c	/^void MOSDM_New_Delete_Menu(char *menu){$/;"	f
MOSDM_New_Move_Menu	mosdm.c	/^void MOSDM_New_Move_Menu(int dir){$/;"	f
MOSDM_New_Update_Track	mosdm.c	/^void MOSDM_New_Update_Track(void){$/;"	f
MOSDM_New_Update_cam_ptrack	mosdm.c	/^void MOSDM_New_Update_cam_ptrack(void){$/;"	f
MOSDM_Onchange_Modifier	mosdm.c	/^qbool MOSDM_Onchange_Modifier(cvar_t *current,char *string){$/;"	f
MOSDM_Screen_Hook	mosdm.c	/^void MOSDM_Screen_Hook (void){$/;"	f
MOSDM_TEST	mosdm.c	/^void MOSDM_TEST(void){$/;"	f
MOSDM_Toggle_Draw	mosdm.c	/^void MOSDM_Toggle_Draw (void){$/;"	f
MOSDM_Toggle_Info	mosdm.c	/^void MOSDM_Toggle_Info (void) {$/;"	f
MOSDM_Up	mosdm.c	/^void MOSDM_Up (void) {$/;"	f
MOUSEDOWN	hud_editor.c	56;"	d	file:
MOUSEDOWN_1_2	hud_editor.c	57;"	d	file:
MOUSEDOWN_1_2_3	hud_editor.c	59;"	d	file:
MOUSEDOWN_1_2_ONLY	hud_editor.c	63;"	d	file:
MOUSEDOWN_1_3	hud_editor.c	58;"	d	file:
MOUSEDOWN_1_3_ONLY	hud_editor.c	64;"	d	file:
MOUSEDOWN_1_ONLY	hud_editor.c	60;"	d	file:
MOUSEDOWN_2_3_ONLY	hud_editor.c	65;"	d	file:
MOUSEDOWN_2_ONLY	hud_editor.c	61;"	d	file:
MOUSEDOWN_3_ONLY	hud_editor.c	62;"	d	file:
MOUSEDOWN_NONE	hud_editor.c	66;"	d	file:
MOUSE_ATTRIBUTES_CHANGED	in_raw.h	34;"	d
MOUSE_MASK	linux_glimp.c	129;"	d	file:
MOUSE_MASK	vid_glx.c	67;"	d	file:
MOUSE_MOVE_ABSOLUTE	in_raw.h	32;"	d
MOUSE_MOVE_RELATIVE	in_raw.h	31;"	d
MOUSE_RESET_DELAY	linux_glimp.c	147;"	d	file:
MOUSE_VIRTUAL_DESKTOP	in_raw.h	33;"	d
MOVETYPE_ANGLECLIP	server.h	314;"	d
MOVETYPE_ANGLENOCLIP	server.h	313;"	d
MOVETYPE_BOUNCE	server.h	322;"	d
MOVETYPE_FLY	server.h	317;"	d
MOVETYPE_FLYMISSILE	server.h	321;"	d
MOVETYPE_NOCLIP	server.h	320;"	d
MOVETYPE_NONE	server.h	312;"	d
MOVETYPE_PUSH	server.h	319;"	d
MOVETYPE_STEP	server.h	316;"	d
MOVETYPE_TOSS	server.h	318;"	d
MOVETYPE_WALK	server.h	315;"	d
MOVE_MISSILE	sv_world.h	27;"	d
MOVE_NOMONSTERS	sv_world.h	26;"	d
MOVE_NORMAL	sv_world.h	25;"	d
MOpt_CfgSaveAllOn	menu_options.c	/^void MOpt_CfgSaveAllOn(void) {$/;"	f
MOpt_ExportConfig	menu_options.c	/^void MOpt_ExportConfig(void) {$/;"	f
MOpt_FileNameInputBoxGetText	menu_options.c	/^char *MOpt_FileNameInputBoxGetText(void)$/;"	f
MOpt_FileNameInputBoxKey	menu_options.c	/^qbool MOpt_FileNameInputBoxKey(int key)$/;"	f
MOpt_FilenameInputBoxDraw	menu_options.c	/^void MOpt_FilenameInputBoxDraw(int x, int y, int w, int h)$/;"	f
MOpt_ImportConfig	menu_options.c	/^void MOpt_ImportConfig(void) {$/;"	f
MOpt_LoadCfg	menu_options.c	/^void MOpt_LoadCfg(void) {$/;"	f
MOpt_LoadScript	menu_options.c	/^void MOpt_LoadScript(void) {$/;"	f
MOpt_SaveCfg	menu_options.c	/^void MOpt_SaveCfg(void) { $/;"	f
MOpt_configpage_mode	menu_options.c	/^enum { MOCPM_SETTINGS, MOCPM_CHOOSECONFIG, MOCPM_CHOOSESCRIPT, MOCPM_ENTERFILENAME } MOpt_configpage_mode = MOCPM_SETTINGS;$/;"	v	typeref:enum:__anon50
MOpt_legacywrite_enum	menu_options.c	/^const char* MOpt_legacywrite_enum[] = { "off", "non-qw dir frontend.cfg", "also config.cfg", "non-qw config.cfg" };$/;"	v
MOpt_userinfo_enum	menu_options.c	/^const char* MOpt_userinfo_enum[] = { "off", "all but player", "all" };$/;"	v
MP3_AUDACIOUS	mp3_player.h	/^	MP3_AUDACIOUS,$/;"	e	enum:__anon235
MP3_AUDACIOUS_CachePlaylist	mp3_audacious.c	/^int MP3_AUDACIOUS_CachePlaylist(void) {$/;"	f
MP3_AUDACIOUS_CachePlaylistFlush	mp3_audacious.c	/^void MP3_AUDACIOUS_CachePlaylistFlush(void) {$/;"	f
MP3_AUDACIOUS_Execute_f	mp3_audacious.c	/^void MP3_AUDACIOUS_Execute_f(void) {$/;"	f
MP3_AUDACIOUS_FastForward_f	mp3_audacious.c	/^void MP3_AUDACIOUS_FastForward_f(void) {$/;"	f
MP3_AUDACIOUS_GetOutputtime	mp3_audacious.c	/^qbool MP3_AUDACIOUS_GetOutputtime(int *elapsed, int *total) {$/;"	f
MP3_AUDACIOUS_GetPlaylistInfo	mp3_audacious.c	/^void MP3_AUDACIOUS_GetPlaylistInfo(int *current, int *length) {$/;"	f
MP3_AUDACIOUS_GetSongTitle	mp3_audacious.c	/^void MP3_AUDACIOUS_GetSongTitle(int track_num, char *song, size_t song_len) {$/;"	f
MP3_AUDACIOUS_GetStatus	mp3_audacious.c	/^int MP3_AUDACIOUS_GetStatus(void) {$/;"	f
MP3_AUDACIOUS_GetToggleState	mp3_audacious.c	/^qbool MP3_AUDACIOUS_GetToggleState(int *shuffle, int *repeat) {$/;"	f
MP3_AUDACIOUS_Init	mp3_audacious.c	/^void MP3_AUDACIOUS_Init(void) {$/;"	f
MP3_AUDACIOUS_IsActive	mp3_audacious.c	/^qbool MP3_AUDACIOUS_IsActive(void) {$/;"	f
MP3_AUDACIOUS_IsPlayerRunning	mp3_audacious.c	/^qbool MP3_AUDACIOUS_IsPlayerRunning(void) {$/;"	f
MP3_AUDACIOUS_LoadPlaylist_f	mp3_audacious.c	/^void MP3_AUDACIOUS_LoadPlaylist_f(void) {$/;"	f
MP3_AUDACIOUS_Macro_MP3Info	mp3_audacious.c	/^char *MP3_AUDACIOUS_Macro_MP3Info(void) {$/;"	f
MP3_AUDACIOUS_PlayTrackNum_f	mp3_audacious.c	/^void MP3_AUDACIOUS_PlayTrackNum_f(void) {$/;"	f
MP3_AUDACIOUS_PrintPlaylist_f	mp3_audacious.c	/^void MP3_AUDACIOUS_PrintPlaylist_f(void) {$/;"	f
MP3_AUDACIOUS_Repeat_f	mp3_audacious.c	/^void MP3_AUDACIOUS_Repeat_f(void) {$/;"	f
MP3_AUDACIOUS_Rewind_f	mp3_audacious.c	/^void MP3_AUDACIOUS_Rewind_f(void) {$/;"	f
MP3_AUDACIOUS_Shuffle_f	mp3_audacious.c	/^void MP3_AUDACIOUS_Shuffle_f(void) {$/;"	f
MP3_AUDACIOUS_Shutdown	mp3_audacious.c	/^void MP3_AUDACIOUS_Shutdown(void) {$/;"	f
MP3_AUDACIOUS_ToggleRepeat_f	mp3_audacious.c	/^void MP3_AUDACIOUS_ToggleRepeat_f(void) {$/;"	f
MP3_AUDACIOUS_ToggleShuffle_f	mp3_audacious.c	/^void MP3_AUDACIOUS_ToggleShuffle_f(void) {$/;"	f
MP3_CachePlaylist	mp3_player.c	/^int   MP3_CachePlaylist(void) {$/;"	f
MP3_CheckFunction	mp3_player.c	/^static int MP3_CheckFunction(qbool PrintWarning) {$/;"	f	file:
MP3_Execute_f	mp3_player.c	/^void MP3_Execute_f(void) {$/;"	f
MP3_FadeOut_f	mp3_player.c	/^void MP3_FadeOut_f(void) {$/;"	f
MP3_FastForward_f	mp3_player.c	/^void MP3_FastForward_f(void) {$/;"	f
MP3_GetOutputtime	mp3_player.c	/^qbool MP3_GetOutputtime (int *elapsed, int *total)  {$/;"	f
MP3_GetOutputtime	mp3_player.c	/^qbool MP3_GetOutputtime(int *elapsed, int *total) {$/;"	f
MP3_GetPlaylistInfo	mp3_player.c	/^void MP3_GetPlaylistInfo(int *current, int *length) {$/;"	f
MP3_GetSongTitle	mp3_player.c	/^void MP3_GetSongTitle(int track_num, char *song, size_t song_len) {$/;"	f
MP3_GetStatus	mp3_player.c	/^int MP3_GetStatus(void) {$/;"	f
MP3_GetToggleState	mp3_player.c	/^qbool MP3_GetToggleState(int *shuffle, int *repeat) {$/;"	f
MP3_Init	mp3_player.c	/^void MP3_Init(void) {$/;"	f
MP3_Init	mp3_player.c	/^void MP3_Init(void) {}$/;"	f
MP3_IsActive	mp3_player.c	/^qbool MP3_IsActive(void) {$/;"	f
MP3_IsPlayerRunning	mp3_player.c	/^qbool MP3_IsPlayerRunning(void) {$/;"	f
MP3_LoadPlaylist_f	mp3_player.c	/^void MP3_LoadPlaylist_f(void) {$/;"	f
MP3_MAXSONGTITLE	mp3_player.h	34;"	d
MP3_MPD	mp3_player.h	/^	MP3_MPD,$/;"	e	enum:__anon235
MP3_MPD_CachePlaylist	mp3_mpd.c	/^int MP3_MPD_CachePlaylist(void) {$/;"	f
MP3_MPD_Execute_f	mp3_mpd.c	/^void MP3_MPD_Execute_f(void) {$/;"	f
MP3_MPD_FastForward_f	mp3_mpd.c	/^void MP3_MPD_FastForward_f(void) {$/;"	f
MP3_MPD_GetOutputtime	mp3_mpd.c	/^qbool MP3_MPD_GetOutputtime(int *elapsed, int *total) {$/;"	f
MP3_MPD_GetPlaylistInfo	mp3_mpd.c	/^void MP3_MPD_GetPlaylistInfo(int *current, int *length) {$/;"	f
MP3_MPD_GetSongTitle	mp3_mpd.c	/^void MP3_MPD_GetSongTitle(int track_num, char *song, size_t song_len) {$/;"	f
MP3_MPD_GetStatus	mp3_mpd.c	/^int MP3_MPD_GetStatus(void) {$/;"	f
MP3_MPD_GetToggleState	mp3_mpd.c	/^qbool MP3_MPD_GetToggleState(int *shuffle, int *repeat) {$/;"	f
MP3_MPD_Init	mp3_mpd.c	/^void MP3_MPD_Init(void) {$/;"	f
MP3_MPD_IsActive	mp3_mpd.c	/^qbool MP3_MPD_IsActive(void) {$/;"	f
MP3_MPD_IsPlayerRunning	mp3_mpd.c	/^qbool MP3_MPD_IsPlayerRunning(void) {$/;"	f
MP3_MPD_LoadPlaylist_f	mp3_mpd.c	/^void MP3_MPD_LoadPlaylist_f(void) {$/;"	f
MP3_MPD_Macro_MP3Info	mp3_mpd.c	/^char *MP3_MPD_Macro_MP3Info(void) {$/;"	f
MP3_MPD_Pause_f	mp3_mpd.c	/^void MP3_MPD_Pause_f(void)$/;"	f
MP3_MPD_PlayTrackNum_f	mp3_mpd.c	/^void MP3_MPD_PlayTrackNum_f(void) {$/;"	f
MP3_MPD_Play_f	mp3_mpd.c	/^void MP3_MPD_Play_f(void)$/;"	f
MP3_MPD_PrintPlaylist_f	mp3_mpd.c	/^void MP3_MPD_PrintPlaylist_f(void) {$/;"	f
MP3_MPD_Repeat_f	mp3_mpd.c	/^void MP3_MPD_Repeat_f(void) {$/;"	f
MP3_MPD_Rewind_f	mp3_mpd.c	/^void MP3_MPD_Rewind_f(void) {$/;"	f
MP3_MPD_Shuffle_f	mp3_mpd.c	/^void MP3_MPD_Shuffle_f(void) {$/;"	f
MP3_MPD_Shutdown	mp3_mpd.c	/^void MP3_MPD_Shutdown(void) {$/;"	f
MP3_MPD_ToggleRepeat_f	mp3_mpd.c	/^void MP3_MPD_ToggleRepeat_f(void) {$/;"	f
MP3_MPD_ToggleShuffle_f	mp3_mpd.c	/^void MP3_MPD_ToggleShuffle_f(void) {$/;"	f
MP3_Macro_MP3Info	mp3_player.c	/^char *MP3_Macro_MP3Info(void) {$/;"	f
MP3_Menu_SongtTitle	mp3_player.c	/^char *MP3_Menu_SongtTitle(void) {$/;"	f
MP3_NONE	mp3_player.h	/^	MP3_NONE,$/;"	e	enum:__anon235
MP3_NOTRUNNING	mp3_player.h	/^	MP3_NOTRUNNING	= -1,$/;"	e	enum:__anon234
MP3_Next_f	mp3_player.c	/^void MP3_Next_f(void) {$/;"	f
MP3_PAUSED	mp3_player.h	/^	MP3_PAUSED		= 2,$/;"	e	enum:__anon234
MP3_PLAYING	mp3_player.h	/^	MP3_PLAYING		= 1,$/;"	e	enum:__anon234
MP3_Pause_f	mp3_player.c	/^void MP3_Pause_f(void) {$/;"	f
MP3_PlayTrackNum_f	mp3_player.c	/^void MP3_PlayTrackNum_f(void) {$/;"	f
MP3_Play_f	mp3_player.c	/^void MP3_Play_f(void) {$/;"	f
MP3_Prev_f	mp3_player.c	/^void MP3_Prev_f(void) {$/;"	f
MP3_PrintPlaylist_f	mp3_player.c	/^void MP3_PrintPlaylist_f(void) {$/;"	f
MP3_Repeat_f	mp3_player.c	/^void MP3_Repeat_f(void) {$/;"	f
MP3_Rewind_f	mp3_player.c	/^void MP3_Rewind_f(void) {$/;"	f
MP3_STOPPED	mp3_player.h	/^	MP3_STOPPED		= 3,$/;"	e	enum:__anon234
MP3_Shuffle_f	mp3_player.c	/^void MP3_Shuffle_f(void) {$/;"	f
MP3_Shutdown	mp3_player.c	/^void MP3_Shutdown(void) {$/;"	f
MP3_Shutdown	mp3_player.c	/^void MP3_Shutdown(void) {}$/;"	f
MP3_SongInfo_f	mp3_player.c	/^void MP3_SongInfo_f(void) {$/;"	f
MP3_Stop_f	mp3_player.c	/^void MP3_Stop_f(void) {$/;"	f
MP3_ToggleRepeat_f	mp3_player.c	/^void MP3_ToggleRepeat_f(void) {$/;"	f
MP3_ToggleShuffle_f	mp3_player.c	/^void MP3_ToggleShuffle_f(void) {$/;"	f
MP3_WINAMP	mp3_player.h	/^	MP3_WINAMP,$/;"	e	enum:__anon235
MP3_WINAMP_CachePlaylist	mp3_winamp.c	/^int MP3_WINAMP_CachePlaylist(void) {$/;"	f
MP3_WINAMP_CachePlaylistFlush	mp3_winamp.c	/^static void MP3_WINAMP_CachePlaylistFlush(void) {$/;"	f	file:
MP3_WINAMP_Execute_f	mp3_winamp.c	/^void MP3_WINAMP_Execute_f(void) $/;"	f
MP3_WINAMP_GetOutputtime	mp3_winamp.c	/^qbool MP3_WINAMP_GetOutputtime(int *elapsed, int *total) $/;"	f
MP3_WINAMP_GetPlaylistInfo	mp3_winamp.c	/^void MP3_WINAMP_GetPlaylistInfo(int *current, int *length) $/;"	f
MP3_WINAMP_GetSongTitle	mp3_winamp.c	/^void MP3_WINAMP_GetSongTitle(int track_num, char *song, size_t song_len) {$/;"	f
MP3_WINAMP_GetStatus	mp3_winamp.c	/^int MP3_WINAMP_GetStatus(void) $/;"	f
MP3_WINAMP_GetToggleState	mp3_winamp.c	/^qbool MP3_WINAMP_GetToggleState(int *shuffle, int *repeat) $/;"	f
MP3_WINAMP_Init	mp3_winamp.c	/^void MP3_WINAMP_Init(void)$/;"	f
MP3_WINAMP_IsActive	mp3_winamp.c	/^qbool MP3_WINAMP_IsActive(void) $/;"	f
MP3_WINAMP_IsPlayerRunning	mp3_winamp.c	/^static qbool MP3_WINAMP_IsPlayerRunning(void) $/;"	f	file:
MP3_WINAMP_LoadPlaylist_f	mp3_winamp.c	/^void MP3_WINAMP_LoadPlaylist_f(void)$/;"	f
MP3_WINAMP_Macro_MP3Info	mp3_winamp.c	/^char *MP3_WINAMP_Macro_MP3Info(void) $/;"	f
MP3_WINAMP_PlayTrackNum_f	mp3_winamp.c	/^void MP3_WINAMP_PlayTrackNum_f(void) $/;"	f
MP3_WINAMP_PrintPlaylist_f	mp3_winamp.c	/^void MP3_WINAMP_PrintPlaylist_f(void) $/;"	f
MP3_WINAMP_Repeat_f	mp3_winamp.c	/^void MP3_WINAMP_Repeat_f(void) $/;"	f
MP3_WINAMP_Shuffle_f	mp3_winamp.c	/^void MP3_WINAMP_Shuffle_f(void) $/;"	f
MP3_WINAMP_Shutdown	mp3_winamp.c	/^void MP3_WINAMP_Shutdown(void) $/;"	f
MP3_WINAMP_ToggleRepeat_f	mp3_winamp.c	/^void MP3_WINAMP_ToggleRepeat_f(void)$/;"	f
MP3_WINAMP_ToggleShuffle_f	mp3_winamp.c	/^void MP3_WINAMP_ToggleShuffle_f(void) $/;"	f
MP3_XMMS	mp3_player.h	/^	MP3_XMMS,$/;"	e	enum:__anon235
MP3_XMMS2	mp3_player.h	/^	MP3_XMMS2,$/;"	e	enum:__anon235
MP3_XMMS2_CachePlaylist	mp3_xmms2.c	/^int MP3_XMMS2_CachePlaylist(void) {$/;"	f
MP3_XMMS2_Execute_f	mp3_xmms2.c	/^void MP3_XMMS2_Execute_f(void) {$/;"	f
MP3_XMMS2_FastForward_f	mp3_xmms2.c	/^void MP3_XMMS2_FastForward_f(void) {$/;"	f
MP3_XMMS2_GetOutputtime	mp3_xmms2.c	/^qbool MP3_XMMS2_GetOutputtime(int *elapsed, int *total) {$/;"	f
MP3_XMMS2_GetPlaylistInfo	mp3_xmms2.c	/^void MP3_XMMS2_GetPlaylistInfo(int *current, int *length) {$/;"	f
MP3_XMMS2_GetSongTitle	mp3_xmms2.c	/^void MP3_XMMS2_GetSongTitle(int track_num, char *song, size_t song_len) {$/;"	f
MP3_XMMS2_GetStatus	mp3_xmms2.c	/^int MP3_XMMS2_GetStatus(void) {$/;"	f
MP3_XMMS2_GetToggleState	mp3_xmms2.c	/^qbool MP3_XMMS2_GetToggleState(int *shuffle, int *repeat) {$/;"	f
MP3_XMMS2_Init	mp3_xmms2.c	/^void MP3_XMMS2_Init(void) {$/;"	f
MP3_XMMS2_IsActive	mp3_xmms2.c	/^qbool MP3_XMMS2_IsActive(void) {$/;"	f
MP3_XMMS2_IsPlayerRunning	mp3_xmms2.c	/^qbool MP3_XMMS2_IsPlayerRunning(void) {$/;"	f
MP3_XMMS2_LoadPlaylist_f	mp3_xmms2.c	/^void MP3_XMMS2_LoadPlaylist_f(void) {$/;"	f
MP3_XMMS2_Macro_MP3Info	mp3_xmms2.c	/^char *MP3_XMMS2_Macro_MP3Info(void) {$/;"	f
MP3_XMMS2_Next_f	mp3_xmms2.c	/^void MP3_XMMS2_Next_f(void) {$/;"	f
MP3_XMMS2_PlayTrackNum_f	mp3_xmms2.c	/^void MP3_XMMS2_PlayTrackNum_f(void) {$/;"	f
MP3_XMMS2_Prev_f	mp3_xmms2.c	/^void MP3_XMMS2_Prev_f(void) {$/;"	f
MP3_XMMS2_PrintPlaylist_f	mp3_xmms2.c	/^void MP3_XMMS2_PrintPlaylist_f(void) {$/;"	f
MP3_XMMS2_Repeat_f	mp3_xmms2.c	/^void MP3_XMMS2_Repeat_f(void) {$/;"	f
MP3_XMMS2_Rewind_f	mp3_xmms2.c	/^void MP3_XMMS2_Rewind_f(void) {$/;"	f
MP3_XMMS2_Shuffle_f	mp3_xmms2.c	/^void MP3_XMMS2_Shuffle_f(void) {$/;"	f
MP3_XMMS2_Shutdown	mp3_xmms2.c	/^void MP3_XMMS2_Shutdown(void) {$/;"	f
MP3_XMMS2_ToggleRepeat_f	mp3_xmms2.c	/^void MP3_XMMS2_ToggleRepeat_f(void) {$/;"	f
MP3_XMMS2_ToggleShuffle_f	mp3_xmms2.c	/^void MP3_XMMS2_ToggleShuffle_f(void) {$/;"	f
MP3_XMMS_CachePlaylist	mp3_xmms.c	/^int MP3_XMMS_CachePlaylist(void) {$/;"	f
MP3_XMMS_CachePlaylistFlush	mp3_xmms.c	/^void MP3_XMMS_CachePlaylistFlush(void) {$/;"	f
MP3_XMMS_Execute_f	mp3_xmms.c	/^void MP3_XMMS_Execute_f(void) {$/;"	f
MP3_XMMS_FastForward_f	mp3_xmms.c	/^void MP3_XMMS_FastForward_f(void) {$/;"	f
MP3_XMMS_GetOutputtime	mp3_xmms.c	/^qbool MP3_XMMS_GetOutputtime(int *elapsed, int *total) {$/;"	f
MP3_XMMS_GetPlaylistInfo	mp3_xmms.c	/^void MP3_XMMS_GetPlaylistInfo(int *current, int *length) {$/;"	f
MP3_XMMS_GetSongTitle	mp3_xmms.c	/^void MP3_XMMS_GetSongTitle(int track_num, char *song, size_t song_len) {$/;"	f
MP3_XMMS_GetStatus	mp3_xmms.c	/^int MP3_XMMS_GetStatus(void) {$/;"	f
MP3_XMMS_GetToggleState	mp3_xmms.c	/^qbool MP3_XMMS_GetToggleState(int *shuffle, int *repeat) {$/;"	f
MP3_XMMS_Init	mp3_xmms.c	/^void MP3_XMMS_Init(void) {$/;"	f
MP3_XMMS_IsActive	mp3_xmms.c	/^qbool MP3_XMMS_IsActive(void) {$/;"	f
MP3_XMMS_IsPlayerRunning	mp3_xmms.c	/^qbool MP3_XMMS_IsPlayerRunning(void) {$/;"	f
MP3_XMMS_LoadPlaylist_f	mp3_xmms.c	/^void MP3_XMMS_LoadPlaylist_f(void) {$/;"	f
MP3_XMMS_Macro_MP3Info	mp3_xmms.c	/^char *MP3_XMMS_Macro_MP3Info(void) {$/;"	f
MP3_XMMS_PlayTrackNum_f	mp3_xmms.c	/^void MP3_XMMS_PlayTrackNum_f(void) {$/;"	f
MP3_XMMS_PrintPlaylist_f	mp3_xmms.c	/^void MP3_XMMS_PrintPlaylist_f(void) {$/;"	f
MP3_XMMS_Repeat_f	mp3_xmms.c	/^void MP3_XMMS_Repeat_f(void) {$/;"	f
MP3_XMMS_Rewind_f	mp3_xmms.c	/^void MP3_XMMS_Rewind_f(void) {$/;"	f
MP3_XMMS_Shuffle_f	mp3_xmms.c	/^void MP3_XMMS_Shuffle_f(void) {$/;"	f
MP3_XMMS_Shutdown	mp3_xmms.c	/^void MP3_XMMS_Shutdown(void) {$/;"	f
MP3_XMMS_ToggleRepeat_f	mp3_xmms.c	/^void MP3_XMMS_ToggleRepeat_f(void) {$/;"	f
MP3_XMMS_ToggleShuffle_f	mp3_xmms.c	/^void MP3_XMMS_ToggleShuffle_f(void) {$/;"	f
MP3_status_t	mp3_player.h	/^} MP3_status_t;$/;"	t	typeref:enum:__anon234
MPD_COMMAND	mp3_mpd.c	223;"	d	file:
MPD_Connect	mp3_mpd.c	/^static void MPD_Connect(void) {$/;"	f	file:
MPD_FreeLibrary	mp3_mpd.c	/^static void MPD_FreeLibrary(void) {$/;"	f	file:
MPD_LoadLibrary	mp3_mpd.c	/^static void MPD_LoadLibrary(void) {$/;"	f	file:
MPD_SeekRel	mp3_mpd.c	/^static void MPD_SeekRel(int offset) {$/;"	f	file:
MSCM_Copy_ce_starttime	cam_new_menu.c	/^void MSCM_Copy_ce_starttime(void)$/;"	f
MSCM_Copy_ce_stoptime	cam_new_menu.c	/^void MSCM_Copy_ce_stoptime(void)$/;"	f
MSCM_Copy_ve_starttime	cam_new_menu.c	/^void MSCM_Copy_ve_starttime(void)$/;"	f
MSCM_Copy_ve_stoptime	cam_new_menu.c	/^void MSCM_Copy_ve_stoptime(void)$/;"	f
MSCM_Duplicate_Spline_ce	cam_new_menu.c	/^void MSCM_Duplicate_Spline_ce(void)$/;"	f
MSCM_Duplicate_Spline_ve	cam_new_menu.c	/^void MSCM_Duplicate_Spline_ve(void)$/;"	f
MSCM_Paste_ce_starttime	cam_new_menu.c	/^void MSCM_Paste_ce_starttime(void)$/;"	f
MSCM_Paste_ce_stoptime	cam_new_menu.c	/^void MSCM_Paste_ce_stoptime(void)$/;"	f
MSCM_Paste_ve_starttime	cam_new_menu.c	/^void MSCM_Paste_ve_starttime(void)$/;"	f
MSCM_Paste_ve_stoptime	cam_new_menu.c	/^void MSCM_Paste_ve_stoptime(void)$/;"	f
MSCM_SS_Addpoint_after_selected_ce	cam_new_menu.c	/^void MSCM_SS_Addpoint_after_selected_ce(void)$/;"	f
MSCM_SS_Addpoint_after_selected_ve	cam_new_menu.c	/^void MSCM_SS_Addpoint_after_selected_ve(void)$/;"	f
MSCM_SS_Addpoint_before_selected_ce	cam_new_menu.c	/^void MSCM_SS_Addpoint_before_selected_ce(void)$/;"	f
MSCM_SS_Addpoint_before_selected_ve	cam_new_menu.c	/^void MSCM_SS_Addpoint_before_selected_ve(void)$/;"	f
MSCM_SS_Addpoint_ce	cam_new_menu.c	/^void MSCM_SS_Addpoint_ce(void)$/;"	f
MSCM_SS_Addpoint_ve	cam_new_menu.c	/^void MSCM_SS_Addpoint_ve(void)$/;"	f
MSCM_SS_Copypoint_ce	cam_new_menu.c	/^void MSCM_SS_Copypoint_ce(void)$/;"	f
MSCM_SS_Copypoint_ve	cam_new_menu.c	/^void MSCM_SS_Copypoint_ve(void)$/;"	f
MSCM_SS_Del_Point	cam_new_menu.c	/^void MSCM_SS_Del_Point(void)$/;"	f
MSCM_SS_Del_Point_ve	cam_new_menu.c	/^void MSCM_SS_Del_Point_ve(void)$/;"	f
MSCM_SS_Even_Out_ce	cam_new_menu.c	/^void MSCM_SS_Even_Out_ce(void)$/;"	f
MSCM_SS_Even_Out_ve	cam_new_menu.c	/^void MSCM_SS_Even_Out_ve(void)$/;"	f
MSCM_SS_Next_Point	cam_new_menu.c	/^void MSCM_SS_Next_Point(void)$/;"	f
MSCM_SS_Next_Point_ve	cam_new_menu.c	/^void MSCM_SS_Next_Point_ve(void)$/;"	f
MSCM_SS_Next_ce	cam_new_menu.c	/^void MSCM_SS_Next_ce(void)$/;"	f
MSCM_SS_Next_ve	cam_new_menu.c	/^void MSCM_SS_Next_ve(void)$/;"	f
MSCM_SS_Pastepoint_ce	cam_new_menu.c	/^void MSCM_SS_Pastepoint_ce(void)$/;"	f
MSCM_SS_Pastepoint_ve	cam_new_menu.c	/^void MSCM_SS_Pastepoint_ve(void)$/;"	f
MSCM_SS_Prev_Point	cam_new_menu.c	/^void MSCM_SS_Prev_Point(void)$/;"	f
MSCM_SS_Prev_Point_ve	cam_new_menu.c	/^void MSCM_SS_Prev_Point_ve(void)$/;"	f
MSCM_SS_Prev_ce	cam_new_menu.c	/^void MSCM_SS_Prev_ce(void)$/;"	f
MSCM_SS_Prev_ve	cam_new_menu.c	/^void MSCM_SS_Prev_ve(void)$/;"	f
MSCM_SS_Remove_Active_Spline_ce	cam_new_menu.c	/^void MSCM_SS_Remove_Active_Spline_ce(void)$/;"	f
MSCM_SS_Remove_Active_Spline_ve	cam_new_menu.c	/^void MSCM_SS_Remove_Active_Spline_ve(void)$/;"	f
MSCM_SS_Set_Starttime_ce	cam_new_menu.c	/^void MSCM_SS_Set_Starttime_ce(void)$/;"	f
MSCM_SS_Set_Starttime_ve	cam_new_menu.c	/^void MSCM_SS_Set_Starttime_ve(void)$/;"	f
MSCM_SS_Set_Stoptime_ce	cam_new_menu.c	/^void MSCM_SS_Set_Stoptime_ce(void)$/;"	f
MSCM_SS_Set_Stoptime_ve	cam_new_menu.c	/^void MSCM_SS_Set_Stoptime_ve(void)$/;"	f
MSCM_SS_Setpoint_ce	cam_new_menu.c	/^void MSCM_SS_Setpoint_ce(void)$/;"	f
MSCM_SS_Setpoint_ve	cam_new_menu.c	/^void MSCM_SS_Setpoint_ve(void)$/;"	f
MSCM_Update_ce_camenabletoggle	cam_new_menu.c	/^void MSCM_Update_ce_camenabletoggle(struct menu_ct *content)$/;"	f
MSCM_Update_ce_camenabletoggle_Function	cam_new_menu.c	/^void MSCM_Update_ce_camenabletoggle_Function(void)$/;"	f
MSCM_Update_ce_camnumtext	cam_new_menu.c	/^void MSCM_Update_ce_camnumtext(struct menu_ct *content)$/;"	f
MSCM_Update_ce_camshowtoggle	cam_new_menu.c	/^void MSCM_Update_ce_camshowtoggle(struct menu_ct *content)$/;"	f
MSCM_Update_ce_camshowtoggle_Function	cam_new_menu.c	/^void MSCM_Update_ce_camshowtoggle_Function(void)$/;"	f
MSCM_Update_ce_pointumtext	cam_new_menu.c	/^void MSCM_Update_ce_pointumtext(struct menu_ct *content)$/;"	f
MSCM_Update_ve_camenabletoggle	cam_new_menu.c	/^void MSCM_Update_ve_camenabletoggle(struct menu_ct *content)$/;"	f
MSCM_Update_ve_camenabletoggle_Function	cam_new_menu.c	/^void MSCM_Update_ve_camenabletoggle_Function(void)$/;"	f
MSCM_Update_ve_camnumtext	cam_new_menu.c	/^void MSCM_Update_ve_camnumtext(struct menu_ct *content)$/;"	f
MSCM_Update_ve_camshowtoggle	cam_new_menu.c	/^void MSCM_Update_ve_camshowtoggle(struct menu_ct *content)$/;"	f
MSCM_Update_ve_camshowtoggle_Function	cam_new_menu.c	/^void MSCM_Update_ve_camshowtoggle_Function(void)$/;"	f
MSCM_Update_ve_pointumtext	cam_new_menu.c	/^void MSCM_Update_ve_pointumtext(struct menu_ct *content)$/;"	f
MSGPART	tp_msgs.c	/^typedef const char * MSGPART;$/;"	t	file:
MSG_ALL	pr_cmds.c	66;"	d	file:
MSG_BROADCAST	pr_cmds.c	64;"	d	file:
MSG_BUF_SIZE	q_shared.h	293;"	d
MSG_BeginReading	com_msg.c	/^void MSG_BeginReading (void)$/;"	f
MSG_EmitPacketEntities	com_msg.c	/^void MSG_EmitPacketEntities (packet_entities_t *from,$/;"	f
MSG_GetReadCount	com_msg.c	/^int MSG_GetReadCount(void)$/;"	f
MSG_INIT	pr_cmds.c	67;"	d	file:
MSG_MULTICAST	pr_cmds.c	68;"	d	file:
MSG_ONE	pr_cmds.c	65;"	d	file:
MSG_ReadAngle	com_msg.c	/^float MSG_ReadAngle (void)$/;"	f
MSG_ReadAngle16	com_msg.c	/^float MSG_ReadAngle16 (void)$/;"	f
MSG_ReadByte	com_msg.c	/^int MSG_ReadByte (void)$/;"	f
MSG_ReadChar	com_msg.c	/^int MSG_ReadChar (void)$/;"	f
MSG_ReadCoord	com_msg.c	/^float MSG_ReadCoord (void)$/;"	f
MSG_ReadData	cl_parse.c	/^static void MSG_ReadData (void *data, int len)$/;"	f	file:
MSG_ReadDeltaUsercmd	com_msg.c	/^void MSG_ReadDeltaUsercmd (usercmd_t *from, usercmd_t *move, int protoversion)$/;"	f
MSG_ReadFloat	com_msg.c	/^float MSG_ReadFloat (void)$/;"	f
MSG_ReadLong	com_msg.c	/^int MSG_ReadLong (void)$/;"	f
MSG_ReadShort	com_msg.c	/^int MSG_ReadShort (void)$/;"	f
MSG_ReadString	com_msg.c	/^char *MSG_ReadString (void)$/;"	f
MSG_ReadStringLine	com_msg.c	/^char *MSG_ReadStringLine (void)$/;"	f
MSG_WriteAngle	com_msg.c	/^void MSG_WriteAngle (sizebuf_t *sb, float f)$/;"	f
MSG_WriteAngle16	com_msg.c	/^void MSG_WriteAngle16 (sizebuf_t *sb, float f)$/;"	f
MSG_WriteByte	com_msg.c	/^void MSG_WriteByte (sizebuf_t *sb, int c)$/;"	f
MSG_WriteChar	com_msg.c	/^void MSG_WriteChar (sizebuf_t *sb, int c)$/;"	f
MSG_WriteCoord	com_msg.c	/^void MSG_WriteCoord (sizebuf_t *sb, float f)$/;"	f
MSG_WriteDeltaEntity	com_msg.c	/^void MSG_WriteDeltaEntity (entity_state_t *from, entity_state_t *to, sizebuf_t *msg, qbool force)$/;"	f
MSG_WriteDeltaUsercmd	com_msg.c	/^void MSG_WriteDeltaUsercmd (sizebuf_t *buf, usercmd_t *from, usercmd_t *cmd)$/;"	f
MSG_WriteFloat	com_msg.c	/^void MSG_WriteFloat (sizebuf_t *sb, float f)$/;"	f
MSG_WriteLong	com_msg.c	/^void MSG_WriteLong (sizebuf_t *sb, int c)$/;"	f
MSG_WriteShort	com_msg.c	/^void MSG_WriteShort (sizebuf_t *sb, int c)$/;"	f
MSG_WriteString	com_msg.c	/^void MSG_WriteString (sizebuf_t *sb, char *s)$/;"	f
MSG_WriteUnterminatedString	com_msg.c	/^void MSG_WriteUnterminatedString (sizebuf_t *sb, char *s)$/;"	f
MSP_RADIUS	new_menu.c	1542;"	d	file:
MS_Activate_Menu	new_menu.c	/^void MS_Activate_Menu(void){$/;"	f
MS_Activate_Menu_Struct	new_menu.c	/^void MS_Activate_Menu_Struct(struct menu_s *menu)$/;"	f
MS_Add_Content	new_menu.c	/^struct menu_ct *MS_Add_Content(char *mid, char *pid, char *identifier, int type, int subtype, int align, char *text, char *tooltip, char *name, char *color, mpic_t *picture, cvar_t *variable, int width , float limmin, float limmax, char *ptype, void *vptr, void (*update_function)(struct menu_ct *self))$/;"	f
MS_Add_Content_Slider	new_menu.c	/^struct menu_ct *MS_Add_Content_Slider(char *mid, char *pid, char *id, int subtype, int align, char *ptype, void *vptr,float llim,float mlim){$/;"	f
MS_Add_Content_Slider_Width	new_menu.c	/^struct menu_ct *MS_Add_Content_Slider_Width(char *mid, char *pid, char *id, int subtype, int align, char *ptype, void *vptr,float llim,float mlim, int width)$/;"	f
MS_Add_Content_Text	new_menu.c	/^struct menu_ct *MS_Add_Content_Text(char *mid,char *pid,char *id,int align,char *text)$/;"	f
MS_Add_Menu	new_menu.c	/^struct menu_s *MS_Add_Menu(int lx, int ly, int rx, int ry, char *name, char *identifier, void (*function)(struct menu_s *self))$/;"	f
MS_CT_Change_Limits	new_menu.c	/^void MS_CT_Change_Limits(struct menu_ct *content, int lower, int upper)$/;"	f
MS_CT_Change_Text	new_menu.c	/^void MS_CT_Change_Text(struct menu_ct *content, char *text)$/;"	f
MS_Console_Add_Content_Slider	new_menu.c	/^void MS_Console_Add_Content_Slider(void)$/;"	f
MS_Console_Create_Menu	new_menu.c	/^void MS_Console_Create_Menu(void)$/;"	f
MS_Content	new_menu.c	/^void MS_Content(struct menu_s		*mm){$/;"	f
MS_Content_Update_Size	new_menu.c	/^void MS_Content_Update_Size(struct menu_ct *content)$/;"	f
MS_Disable_Selecting	new_menu.c	/^int MS_Disable_Selecting(void)$/;"	f
MS_Draw	new_menu.c	/^void MS_Draw(void)$/;"	f
MS_Draw_ActiveMenu	new_menu.c	/^void MS_Draw_ActiveMenu(struct menu_s	*mm)$/;"	f
MS_Draw_Content	new_menu.c	/^void MS_Draw_Content (struct menu_ct *content, int selected)$/;"	f
MS_Draw_Content_Button	new_menu.c	/^void MS_Draw_Content_Button(struct menu_ct *content){$/;"	f
MS_Draw_Content_Editbox	new_menu.c	/^void MS_Draw_Content_Editbox (struct menu_ct *content){$/;"	f
MS_Draw_Content_Picture	new_menu.c	/^void MS_Draw_Content_Picture (struct menu_ct *content){$/;"	f
MS_Draw_Content_Slider	new_menu.c	/^void MS_Draw_Content_Slider (struct menu_ct	*content){$/;"	f
MS_Draw_Content_Text	new_menu.c	/^void MS_Draw_Content_Text(struct menu_ct *content){$/;"	f
MS_Draw_Tooltip	new_menu.c	/^static void MS_Draw_Tooltip(int x, int y, char *string, float r, float g, float b,float alpha) $/;"	f	file:
MS_FULLDIB	winquake.h	/^typedef enum {MS_WINDOWED, MS_FULLSCREEN, MS_FULLDIB, MS_UNINIT} modestate_t;$/;"	e	enum:__anon301
MS_FULLSCREEN	winquake.h	/^typedef enum {MS_WINDOWED, MS_FULLSCREEN, MS_FULLDIB, MS_UNINIT} modestate_t;$/;"	e	enum:__anon301
MS_Get_Key	new_menu.c	/^int MS_Get_Key(int key, int down)$/;"	f
MS_Handle_Content	new_menu.c	/^void MS_Handle_Content(struct menu_ct *content)$/;"	f
MS_Handle_Content_Button	new_menu.c	/^void MS_Handle_Content_Button(struct menu_ct *content){$/;"	f
MS_Handle_Content_Editbox	new_menu.c	/^void MS_Handle_Content_Editbox(struct menu_ct *content){$/;"	f
MS_Handle_Content_Slider	new_menu.c	/^void MS_Handle_Content_Slider(struct menu_ct *content){$/;"	f
MS_Hovertime_Animation	new_menu.c	/^void MS_Hovertime_Animation(struct menu_ct *content)$/;"	f
MS_Is_Inside_Menu	new_menu.c	/^int MS_Is_Inside_Menu(struct menu_s *menu)$/;"	f
MS_Mouse	new_menu.c	/^void MS_Mouse(void)$/;"	f
MS_Popup_Add_Entry	new_menu.c	/^struct MS_Popup_Entry *MS_Popup_Add_Entry(struct MS_Popup_Menu_Menu *menu, struct MS_Popup_Entry *entry, char *name, void (*f)(void *data), void *data, char *command)$/;"	f
MS_Popup_Add_Menu	new_menu.c	/^struct MS_Popup_Menu_Menu *MS_Popup_Add_Menu(void)$/;"	f
MS_Popup_Cleanup_Entry	new_menu.c	/^void MS_Popup_Cleanup_Entry(struct MS_Popup_Entry *entry)$/;"	f
MS_Popup_Cleanup_Menu	new_menu.c	/^void MS_Popup_Cleanup_Menu(struct MS_Popup_Menu_Menu *menu)$/;"	f
MS_Popup_Delete_Helper	cam_new.c	/^void MS_Popup_Delete_Helper(void *data)$/;"	f
MS_Popup_Entry	cam_new_menu.c	/^struct MS_Popup_Entry$/;"	s	file:
MS_Popup_Entry	new_menu.c	/^struct MS_Popup_Entry$/;"	s	file:
MS_Popup_Entry	new_menu.h	/^struct MS_Popup_Entry$/;"	s
MS_Popup_Menu	new_menu.c	/^int MS_Popup_Menu(void)$/;"	f
MS_Popup_Menu_Draw	new_menu.c	/^void MS_Popup_Menu_Draw(void)$/;"	f
MS_Popup_Menu_Menu	cam_new_menu.c	/^struct MS_Popup_Menu_Menu$/;"	s	file:
MS_Popup_Menu_Menu	new_menu.c	/^struct MS_Popup_Menu_Menu$/;"	s	file:
MS_Popup_Menu_Menu	new_menu.h	/^struct MS_Popup_Menu_Menu$/;"	s
MS_Popup_Menu_Root	new_menu.c	/^struct MS_Popup_Menu_Menu MS_Popup_Menu_Root;$/;"	v	typeref:struct:MS_Popup_Menu_Menu
MS_Popup_Menu_Set	new_menu.c	/^void MS_Popup_Menu_Set(struct MS_Popup_Menu_Menu *menu, int x, int y)$/;"	f
MS_Popup_Menu_Set_Type	new_menu.c	/^void MS_Popup_Menu_Set_Type(struct MS_Popup_Menu_Menu *menu, int type)$/;"	f
MS_Popup_Remove_Menu	new_menu.c	/^void MS_Popup_Remove_Menu(struct MS_Popup_Menu_Menu *menu)$/;"	f
MS_Popup_Select_Helper	cam_new.c	/^void MS_Popup_Select_Helper(void *data)$/;"	f
MS_Popup_Track	nmenu_trackentity.c	/^void MS_Popup_Track(void *data)$/;"	f
MS_Popup_Valid	new_menu.c	/^int MS_Popup_Valid(struct MS_Popup_Menu_Menu *menu)$/;"	f
MS_Pressed_Animation	new_menu.c	/^void MS_Pressed_Animation(struct menu_ct *content)$/;"	f
MS_Selected_Animation	new_menu.c	/^void MS_Selected_Animation(struct menu_ct *content)$/;"	f
MS_UNINIT	winquake.h	/^typedef enum {MS_WINDOWED, MS_FULLSCREEN, MS_FULLDIB, MS_UNINIT} modestate_t;$/;"	e	enum:__anon301
MS_WINDOWED	winquake.h	/^typedef enum {MS_WINDOWED, MS_FULLSCREEN, MS_FULLDIB, MS_UNINIT} modestate_t;$/;"	e	enum:__anon301
MT_AddMapGroups	match_tools.c	/^void MT_AddMapGroups(void) {$/;"	f
MT_AddSkyGroups	match_tools.c	/^void MT_AddSkyGroups (void) {$/;"	f
MT_CancelMatch	match_tools.c	/^static void MT_CancelMatch(void) {$/;"	f	file:
MT_CleanString	match_tools.c	/^static char *MT_CleanString(char *string, qbool allow_spaces_and_slashes) {$/;"	f	file:
MT_ClearClientState	match_tools.c	/^static void MT_ClearClientState(void) {$/;"	f	file:
MT_CountPlayers	match_tools.c	/^static int MT_CountPlayers(void) {$/;"	f	file:
MT_CountTeamMembers	match_tools.c	/^static int MT_CountTeamMembers(char *team) {$/;"	f	file:
MT_Delayed_EndMatch	match_tools.c	/^static void MT_Delayed_EndMatch(void) {$/;"	f	file:
MT_Disconnect	match_tools.c	/^void MT_Disconnect(void) {$/;"	f
MT_EndMatch	match_tools.c	/^static void MT_EndMatch(void) {$/;"	f	file:
MT_EnemyName	match_tools.c	/^static char *MT_EnemyName(void) {$/;"	f	file:
MT_EnemyTeam	match_tools.c	/^static char *MT_EnemyTeam(void) {$/;"	f	file:
MT_Frame	match_tools.c	/^void MT_Frame(void) {$/;"	f
MT_GetMapGroupName	match_tools.c	/^char *MT_GetMapGroupName(char *mapname, qbool *system) {$/;"	f
MT_GetMatchInfo	match_tools.c	/^static matchinfo_t *MT_GetMatchInfo(void) {$/;"	f	file:
MT_GetMatchType	match_tools.c	/^static matchtype_t MT_GetMatchType(matchinfo_t *matchinfo) {$/;"	f	file:
MT_GetPlayerNames	match_tools.c	/^static void MT_GetPlayerNames(char *name1, char *name2) {$/;"	f	file:
MT_GetSkyGroupName	match_tools.c	/^char *MT_GetSkyGroupName(char *mapname, qbool *system) {$/;"	f
MT_GetTeamNames	match_tools.c	/^static int MT_GetTeamNames(char teams[][MAX_INFO_STRING], int max) {$/;"	f	file:
MT_Init	match_tools.c	/^void MT_Init(void) {$/;"	f
MT_Macrolist_f	match_tools.c	/^void MT_Macrolist_f(void) {$/;"	f
MT_MapGroup_f	match_tools.c	/^void MT_MapGroup_f(void) {$/;"	f
MT_MapName	match_tools.c	/^static char *MT_MapName(void) {$/;"	f	file:
MT_MatchName	match_tools.c	/^char *MT_MatchName(void) {$/;"	f
MT_Match_ForceStart_f	match_tools.c	/^void MT_Match_ForceStart_f(void) {$/;"	f
MT_NameAndClean_TeamMembers	match_tools.c	/^static char *MT_NameAndClean_TeamMembers(char *team) {$/;"	f	file:
MT_NameForMatchInfo	match_tools.c	/^static char *MT_NameForMatchInfo(matchinfo_t *matchinfo) {$/;"	f	file:
MT_NewMap	match_tools.c	/^void MT_NewMap(void) {$/;"	f
MT_ParseFormat	match_tools.c	/^static char *MT_ParseFormat(char *format, matchinfo_t *matchinfo) {$/;"	f	file:
MT_PlayerName	match_tools.c	/^static char *MT_PlayerName(void) {$/;"	f	file:
MT_PlayerTeam	match_tools.c	/^static char *MT_PlayerTeam(void) {$/;"	f	file:
MT_SCOREBOARD_SHOWIME	match_tools.c	599;"	d	file:
MT_SaveMatch_f	match_tools.c	/^void MT_SaveMatch_f(void) {$/;"	f
MT_Serverinfo_Race	match_tools.c	/^static char *MT_Serverinfo_Race(void) {$/;"	f	file:
MT_ShortStatus	match_tools.c	/^char *MT_ShortStatus(void)$/;"	f
MT_SkyGroup_f	match_tools.c	/^void MT_SkyGroup_f(void) {$/;"	f
MT_StartMatch	match_tools.c	/^static void MT_StartMatch(void) {$/;"	f	file:
MT_TakeScreenshot	match_tools.c	/^void MT_TakeScreenshot(void) {$/;"	f
MT_TempDirectory	match_tools.c	/^char *MT_TempDirectory(void) {$/;"	f
MULTICAST_ALL	server.h	359;"	d
MULTICAST_ALL_R	server.h	363;"	d
MULTICAST_PHS	server.h	360;"	d
MULTICAST_PHS_R	server.h	364;"	d
MULTICAST_PVS	server.h	361;"	d
MULTICAST_PVS_R	server.h	365;"	d
MULTIPLAYER_ITEMS	menu.c	1208;"	d	file:
MULTIVIEWTHISPOV	sbar.c	116;"	d	file:
MVD_AdjustAngle	cl_ents.c	/^static float MVD_AdjustAngle(float current, float ideal, float fraction) {$/;"	f	file:
MVD_AutoTrackBW_f	mvd_autotrack.c	/^static int MVD_AutoTrackBW_f(int i){$/;"	f	file:
MVD_AutoTrack_Init	mvd_autotrack.c	/^void MVD_AutoTrack_Init(void)$/;"	f
MVD_AutoTrack_f	mvd_autotrack.c	/^void MVD_AutoTrack_f(void) {$/;"	f
MVD_Autodist	mvd_cam.c	/^void MVD_Autodist(void){$/;"	f
MVD_BestAmmo	mvd_utils.c	/^char *MVD_BestAmmo (int i) {$/;"	f
MVD_BestWeapon	mvd_utils.c	/^int MVD_BestWeapon (int i) {$/;"	f
MVD_BestWeapon_strings	mvd_utils.c	/^char *MVD_BestWeapon_strings (int i) {$/;"	f
MVD_Calc_Bezier4	mvd_cam.c	/^void MVD_Calc_Bezier4 (vec3_t p1,vec3_t p2,vec3_t p3,vec3_t p4,double mu,vec3_t vec){$/;"	f
MVD_Calc_Bezier_new	mvd_cam.c	/^int MVD_Calc_Bezier_new(float *pointer,double time, vec3_t vec){$/;"	f
MVD_Calc_Catmull_Rom	mvd_cam.c	/^int MVD_Calc_Catmull_Rom(float *pointer,double time, vec3_t vec){$/;"	f
MVD_Calc_Length	mvd_cam.c	/^void MVD_Calc_Length (c_curve_t *current){$/;"	f
MVD_Cam_2D_Hook	mvd_cam.c	/^void MVD_Cam_2D_Hook(void){$/;"	f
MVD_Cam_Draw_Bezier	mvd_cam.c	/^void MVD_Cam_Draw_Bezier(c_curve_t *current,int cint, int type){$/;"	f
MVD_Cam_Draw_Number	mvd_cam.c	/^void MVD_Cam_Draw_Number(void){$/;"	f
MVD_Cam_ETL	mvd_cam.c	/^void MVD_Cam_ETL(void){$/;"	f
MVD_Cam_Event	mvd_cam.c	/^void MVD_Cam_Event(void){$/;"	f
MVD_Cam_Event_Check	mvd_cam.c	/^void MVD_Cam_Event_Check(c_curve_t *current){$/;"	f
MVD_Cam_Event_Exec	mvd_cam.c	/^void MVD_Cam_Event_Exec(c_event_t *current){$/;"	f
MVD_Cam_Events_Check_pointer	mvd_cam.c	/^void MVD_Cam_Events_Check_pointer(void){$/;"	f
MVD_Cam_Init	mvd_cam.c	/^void MVD_Cam_Init(void){$/;"	f
MVD_Cam_Main_Hook	mvd_cam.c	/^void MVD_Cam_Main_Hook (void){$/;"	f
MVD_Cam_PEL	mvd_cam.c	/^void MVD_Cam_PEL(void){$/;"	f
MVD_Cam_Render_Beziers	mvd_cam.c	/^void 	MVD_Cam_Render_Beziers(void){$/;"	f
MVD_Cam_Render_Hook	mvd_cam.c	/^void MVD_Cam_Render_Hook(void){$/;"	f
MVD_Cam_SVL	mvd_cam.c	/^void MVD_Cam_SVL(void){$/;"	f
MVD_Cam_Set_Testtime	mvd_cam.c	/^void MVD_Cam_Set_Testtime(void){$/;"	f
MVD_Cam_Test	mvd_cam.c	/^void MVD_Cam_Test(c_curve_t *current){$/;"	f
MVD_Create_Static_Cam	mvd_cam.c	/^void MVD_Create_Static_Cam(void){$/;"	f
MVD_Curve_Test	mvd_cam.c	/^void MVD_Curve_Test(void){$/;"	f
MVD_Demo_Track	mvd_utils.c	/^void MVD_Demo_Track (void){$/;"	f
MVD_Draw_LA	mvd_cam.c	/^void MVD_Draw_LA(void){$/;"	f
MVD_FindBestPlayerSimple	mvd_autotrack.c	/^static int MVD_FindBestPlayerSimple(void) {$/;"	f	file:
MVD_FindBestPlayer_f	mvd_autotrack.c	/^static int MVD_FindBestPlayer_f(void) {$/;"	f	file:
MVD_Find_Track_Entity	mvd_cam.c	/^void MVD_Find_Track_Entity (c_curve_t *current,int dontshow) {$/;"	f
MVD_Find_Track_Player	mvd_cam.c	/^void MVD_Find_Track_Player (c_curve_t *current) {$/;"	f
MVD_GetBestPlayer	mvd_autotrack.c	/^static int MVD_GetBestPlayer(void)$/;"	f	file:
MVD_GetBetterPlayerSimple	mvd_autotrack.c	/^int MVD_GetBetterPlayerSimple(int a, int b)$/;"	f
MVD_GetValuesAndEquation	mvd_autotrack.c	/^static void MVD_GetValuesAndEquation(const char** v, const char** e) {$/;"	f	file:
MVD_Info	mvd_utils.c	/^void MVD_Info (void){$/;"	f
MVD_InitInterpolation	cl_ents.c	/^static void MVD_InitInterpolation(void) {$/;"	f	file:
MVD_Init_Info_f	mvd_utils.c	/^void MVD_Init_Info_f (void) {$/;"	f
MVD_Interpolate	cl_ents.c	/^void MVD_Interpolate(void) {$/;"	f
MVD_Mainhook_f	mvd_utils.c	/^void MVD_Mainhook_f (void){$/;"	f
MVD_MatchStarted	mvd_utils.c	/^qbool MVD_MatchStarted(void) {$/;"	f
MVD_Mouse_Move_Points	mvd_cam.c	/^void MVD_Mouse_Move_Points(void){$/;"	f
MVD_Mouse_To_View_Frame	mvd_cam.c	/^void MVD_Mouse_To_View_Frame(void){$/;"	f
MVD_Move_Me	mvd_cam.c	/^void MVD_Move_Me (c_curve_t *current, int type){$/;"	f
MVD_PC_Get_Coords	mvd_utils.c	/^void MVD_PC_Get_Coords (void){$/;"	f
MVD_Powerup_Cams_f	mvd_utils.c	/^void MVD_Powerup_Cams_f (void){$/;"	f
MVD_Replace_Textures	mvd_cam.c	/^void MVD_Replace_Textures (void){$/;"	f
MVD_Reset_demotime	mvd_cam.c	/^void MVD_Reset_demotime (void){$/;"	f
MVD_Screen	mvd_utils.c	/^void MVD_Screen (void){$/;"	f
MVD_Set	mvd_cam.c	/^void MVD_Set (void) {$/;"	f
MVD_Set_Armor_Stats_f	mvd_utils.c	/^void MVD_Set_Armor_Stats_f (int z,int i){$/;"	f
MVD_Set_Tele_Plane_Points	mvd_cam.c	/^void MVD_Set_Tele_Plane_Points(void){$/;"	f
MVD_Show_Active_Event	mvd_cam.c	/^void MVD_Show_Active_Event(void){$/;"	f
MVD_Show_Textures	mvd_cam.c	/^void MVD_Show_Textures (void){$/;"	f
MVD_SomeoneHasPentWithRL	mvd_autotrack.c	/^static qbool MVD_SomeoneHasPentWithRL(void) {$/;"	f	file:
MVD_SomeoneHasPowerup	mvd_autotrack.c	/^static qbool MVD_SomeoneHasPowerup() {$/;"	f	file:
MVD_SomeoneHasWeapon	mvd_autotrack.c	/^static qbool MVD_SomeoneHasWeapon() {$/;"	f	file:
MVD_Start_Mouse_To_View	mvd_cam.c	/^void MVD_Start_Mouse_To_View(void){$/;"	f
MVD_Stats_CalcAvgRuns	mvd_utils.c	/^void MVD_Stats_CalcAvgRuns(void)$/;"	f
MVD_Stats_Cleanup_f	mvd_utils.c	/^void MVD_Stats_Cleanup_f (void){$/;"	f
MVD_Stats_Gather_f	mvd_utils.c	/^int MVD_Stats_Gather_f (void){$/;"	f
MVD_Status	mvd_utils.c	/^void MVD_Status (void){$/;"	f
MVD_Status_Announcer_f	mvd_utils.c	/^void MVD_Status_Announcer_f (int i, int z){$/;"	f
MVD_Status_WP_f	mvd_utils.c	/^void MVD_Status_WP_f (int i){$/;"	f
MVD_Status_Xml	mvd_xmlstats.c	/^static void MVD_Status_Xml (void){$/;"	f	file:
MVD_SwitchMoment	mvd_autotrack.c	/^static qbool MVD_SwitchMoment(void) {$/;"	f	file:
MVD_Testor_f	mvd_utils.c	/^void MVD_Testor_f (void) {$/;"	f
MVD_Testtime_Hack	mvd_cam.c	/^void MVD_Testtime_Hack(void){$/;"	f
MVD_TrackedHasNoPowerup	mvd_autotrack.c	/^static qbool MVD_TrackedHasNoPowerup() {$/;"	f	file:
MVD_TrackedHasNoWeapon	mvd_autotrack.c	/^static qbool MVD_TrackedHasNoWeapon() {$/;"	f	file:
MVD_TranslateFlags	cl_ents.c	/^static int MVD_TranslateFlags(int src) $/;"	f	file:
MVD_UpdatePlayerValues	mvd_autotrack.c	/^static void MVD_UpdatePlayerValues(void)$/;"	f	file:
MVD_Utils_Init	mvd_utils.c	/^void MVD_Utils_Init (void) {$/;"	f
MVD_Var_Vals	mvd_autotrack.c	/^static expr_val MVD_Var_Vals(const char *n)$/;"	f	file:
MVD_WeaponModelNumber	cl_ents.c	/^static int MVD_WeaponModelNumber (int cweapon)$/;"	f	file:
MVD_Weapon_LWF	mvd_utils.c	/^int MVD_Weapon_LWF (int i) {$/;"	f
MVD_Weapon_strings	mvd_utils.c	/^char *MVD_Weapon_strings (int i) {$/;"	f
MVD_Write_Cam_Config	mvd_cam.c	/^void MVD_Write_Cam_Config (void){$/;"	f
MVD_XMLStats_Init	mvd_xmlstats.c	/^void MVD_XMLStats_Init(void)$/;"	f
MV_FLIP	cl_screen.c	4892;"	d	file:
MV_HEALTH_OPACITY	cl_screen.c	4648;"	d	file:
MV_HUDPOS	cl_screen.c	4416;"	d	file:
MV_HUD_ARMOR_WIDTH	cl_screen.c	4558;"	d	file:
MV_HUD_CURRAMMO_WIDTH	cl_screen.c	4560;"	d	file:
MV_HUD_CURRWEAP_WIDTH	cl_screen.c	4561;"	d	file:
MV_HUD_HEALTH_WIDTH	cl_screen.c	4559;"	d	file:
MV_HUD_POS_BOTTOM_CENTER	cl_screen.c	4408;"	d	file:
MV_HUD_POS_BOTTOM_LEFT	cl_screen.c	4409;"	d	file:
MV_HUD_POS_BOTTOM_RIGHT	cl_screen.c	4410;"	d	file:
MV_HUD_POS_GATHERED_CENTER	cl_screen.c	4414;"	d	file:
MV_HUD_POS_TOP_CENTER	cl_screen.c	4411;"	d	file:
MV_HUD_POS_TOP_LEFT	cl_screen.c	4412;"	d	file:
MV_HUD_POS_TOP_RIGHT	cl_screen.c	4413;"	d	file:
MV_HUD_POWERUPS_HEIGHT	cl_screen.c	4563;"	d	file:
MV_HUD_POWERUPS_WIDTH	cl_screen.c	4562;"	d	file:
MV_HUD_STYLE_ALL	cl_screen.c	4566;"	d	file:
MV_HUD_STYLE_ALL_FILL	cl_screen.c	4568;"	d	file:
MV_HUD_STYLE_ALL_TEXT	cl_screen.c	4567;"	d	file:
MV_HUD_STYLE_ONLY_NAME	cl_screen.c	4565;"	d	file:
MV_HUD_VERTICAL_GAP	cl_screen.c	4840;"	d	file:
MV_UpdateSkins	teamplay.c	/^void MV_UpdateSkins()$/;"	f
MV_VIEW1	client.h	897;"	d
MV_VIEW2	client.h	898;"	d
MV_VIEW3	client.h	899;"	d
MV_VIEW4	client.h	900;"	d
MV_VIEWS	client.h	895;"	d
MWHEEL_DINPUT	winquake.h	/^typedef enum { MWHEEL_UNKNOWN, MWHEEL_DINPUT, MWHEEL_WINDOWMSG } mwheelmsg_t;$/;"	e	enum:__anon302
MWHEEL_UNKNOWN	winquake.h	/^typedef enum { MWHEEL_UNKNOWN, MWHEEL_DINPUT, MWHEEL_WINDOWMSG } mwheelmsg_t;$/;"	e	enum:__anon302
MWHEEL_WINDOWMSG	winquake.h	/^typedef enum { MWHEEL_UNKNOWN, MWHEEL_DINPUT, MWHEEL_WINDOWMSG } mwheelmsg_t;$/;"	e	enum:__anon302
MW_DllFunc1	in_win.c	/^typedef void (*MW_DllFunc1)(void);$/;"	t	file:
MW_DllFunc2	in_win.c	/^typedef int (*MW_DllFunc2)(HWND);$/;"	t	file:
MW_Hook_Message	in_win.c	/^void MW_Hook_Message (long buttons) {$/;"	f
MW_Hook_enabled	in_win.c	/^qbool MW_Hook_enabled = false;$/;"	v
MW_Remove_Hook	in_win.c	/^static void MW_Remove_Hook (void) {$/;"	f	file:
MW_Set_Hook	in_win.c	/^static void MW_Set_Hook (void) {$/;"	f	file:
MW_Shutdown	in_win.c	/^static void MW_Shutdown(void) {$/;"	f	file:
MYDATA	in_win.c	/^typedef struct MYDATA {$/;"	s	file:
MYDATA	in_win.c	/^} MYDATA;$/;"	t	typeref:struct:MYDATA	file:
MYISLOWER	fragstats.c	94;"	d	file:
MYTGA_MAPPED	image.c	1649;"	d	file:
MYTGA_MONO16	image.c	1654;"	d	file:
MYTGA_MONO8	image.c	1653;"	d	file:
MYTGA_RGB15	image.c	1650;"	d	file:
MYTGA_RGB24	image.c	1651;"	d	file:
MYTGA_RGB32	image.c	1652;"	d	file:
MYgluPerspective	gl_rmain.c	/^__inline void MYgluPerspective(GLdouble fovy, GLdouble aspect, GLdouble zNear, GLdouble zFar) {$/;"	f
M_BigMenu_DrawItems	menu.c	/^static void M_BigMenu_DrawItems(bigmenu_items_t *menuitems, const unsigned int items, int left_corner, int top_corner, int *width, int *height)$/;"	f	file:
M_CG_BotMatch_Start	menu_multiplayer.c	/^	static void M_CG_BotMatch_Start(void) {$/;"	f	file:
M_Demo_Playlist_Clear_f	menu_demo.c	/^void M_Demo_Playlist_Clear_f (void)$/;"	f
M_Demo_Playlist_Next_f	menu_demo.c	/^void M_Demo_Playlist_Next_f (void)$/;"	f
M_Demo_Playlist_Prev_f	menu_demo.c	/^void M_Demo_Playlist_Prev_f (void)$/;"	f
M_Demo_Playlist_Stop_f	menu_demo.c	/^void M_Demo_Playlist_Stop_f (void)$/;"	f
M_Demo_Playlist_stop_f	menu_demo.c	/^void M_Demo_Playlist_stop_f (void)$/;"	f
M_Draw	menu.c	/^void M_Draw (void) {$/;"	f
M_DrawCharacter	menu.c	/^void M_DrawCharacter (int cx, int line, int num) {$/;"	f
M_DrawPic	menu.c	/^void M_DrawPic (int x, int y, mpic_t *pic) {$/;"	f
M_DrawSlider	menu.c	/^void M_DrawSlider (int x, int y, float range) {$/;"	f
M_DrawTextBox	menu.c	/^void M_DrawTextBox (int x, int y, int width, int lines) {$/;"	f
M_DrawTransPic	menu.c	/^void M_DrawTransPic (int x, int y, mpic_t *pic) {$/;"	f
M_DrawTransPic_GetPoint	menu.c	/^static void M_DrawTransPic_GetPoint (int x, int y, int *rx, int *ry, mpic_t *pic)$/;"	f	file:
M_EnterMenu	menu.c	/^void M_EnterMenu (int state) {$/;"	f
M_EnterProxyMenu	menu.c	/^void M_EnterProxyMenu () {$/;"	f
M_FindKeysForCommand	menu.c	/^void M_FindKeysForCommand (const char *command, int *twokeys) {$/;"	f
M_HIST_MASK	in_win.c	259;"	d	file:
M_HIST_SIZE	in_win.c	258;"	d	file:
M_Help_Draw	menu.c	/^void M_Help_Draw (void) {$/;"	f
M_Ingame_Current	menu_ingame.c	/^static settings_page *M_Ingame_Current(void) {$/;"	f	file:
M_Ingame_Draw	menu_ingame.c	/^void M_Ingame_Draw(void) {$/;"	f
M_Ingame_Key	menu_ingame.c	/^void M_Ingame_Key(int key) {$/;"	f
M_Init	menu.c	/^void M_Init (void) {$/;"	f
M_Keydown	menu.c	/^void M_Keydown (int key, int unichar) {$/;"	f
M_LeaveMenu	menu.c	/^void M_LeaveMenu (int parent) {$/;"	f
M_LeaveMenus	menu.c	/^void M_LeaveMenus (void) {$/;"	f
M_Load_Draw	menu.c	/^void M_Load_Draw (void) {$/;"	f
M_Load_Key	menu.c	/^void M_Load_Key (int key) {$/;"	f
M_Load_Mouse_Event	menu.c	/^qbool M_Load_Mouse_Event(const mouse_state_t *ms)$/;"	f
M_MP3_CONTROL_BARHEIGHT	menu_mp3player.c	18;"	d	file:
M_MP3_CONTROL_COL	menu_mp3player.c	16;"	d	file:
M_MP3_CONTROL_HEADINGROW	menu_mp3player.c	14;"	d	file:
M_MP3_CONTROL_MENUROW	menu_mp3player.c	15;"	d	file:
M_MP3_CONTROL_NUMENTRIES	menu_mp3player.c	17;"	d	file:
M_Main_Draw	menu.c	/^void M_Main_Draw (void) {$/;"	f
M_Main_Enter	menu.c	/^static void M_Main_Enter(const unsigned int entry)$/;"	f	file:
M_Main_Key	menu.c	/^void M_Main_Key (int key) {$/;"	f
M_Main_Mouse_Event	menu.c	/^static qbool M_Main_Mouse_Event(const mouse_state_t* ms)$/;"	f	file:
M_Menu_Demos_f	menu.c	/^void M_Menu_Demos_f (void)$/;"	f
M_Menu_Help_f	menu.c	/^void M_Menu_Help_f (void) {$/;"	f
M_Menu_Load_f	menu.c	/^void M_Menu_Load_f (void) {$/;"	f
M_Menu_MP3_Control_Draw	menu_mp3player.c	/^void M_Menu_MP3_Control_Draw (void) {$/;"	f
M_Menu_MP3_Control_Key	menu_mp3player.c	/^void M_Menu_MP3_Control_Key(int key) {$/;"	f
M_Menu_MP3_Control_Mouse_Event	menu_mp3player.c	/^qbool M_Menu_MP3_Control_Mouse_Event(const mouse_state_t *ms)$/;"	f
M_Menu_MP3_Control_f	menu_mp3player.c	/^void M_Menu_MP3_Control_f (void){$/;"	f
M_Menu_MP3_Playlist_Draw	menu_mp3player.c	/^void M_Menu_MP3_Playlist_Draw(void) {$/;"	f
M_Menu_MP3_Playlist_Key	menu_mp3player.c	/^void M_Menu_MP3_Playlist_Key (int k) {$/;"	f
M_Menu_MP3_Playlist_Mouse_Event	menu_mp3player.c	/^qbool M_Menu_MP3_Playlist_Mouse_Event(const mouse_state_t *ms)$/;"	f
M_Menu_MP3_Playlist_MoveBase	menu_mp3player.c	/^void M_Menu_MP3_Playlist_MoveBase(int absolute) {$/;"	f
M_Menu_MP3_Playlist_MoveBaseRel	menu_mp3player.c	/^void M_Menu_MP3_Playlist_MoveBaseRel(int offset) {$/;"	f
M_Menu_MP3_Playlist_MoveCursor	menu_mp3player.c	/^void M_Menu_MP3_Playlist_MoveCursor(int absolute) {$/;"	f
M_Menu_MP3_Playlist_MoveCursorRel	menu_mp3player.c	/^void M_Menu_MP3_Playlist_MoveCursorRel(int offset) {$/;"	f
M_Menu_MP3_Playlist_Read	menu_mp3player.c	/^void M_Menu_MP3_Playlist_Read(void) {$/;"	f
M_Menu_MP3_Playlist_f	menu_mp3player.c	/^void M_Menu_MP3_Playlist_f (void){$/;"	f
M_Menu_Main_f	menu.c	/^void M_Menu_Main_f (void) {$/;"	f
M_Menu_MultiPlayer_f	menu.c	/^void M_Menu_MultiPlayer_f (void)$/;"	f
M_Menu_Options_f	menu.c	/^void M_Menu_Options_f (void) {$/;"	f
M_Menu_Quit_f	menu.c	/^void M_Menu_Quit_f (void) {$/;"	f
M_Menu_Save_f	menu.c	/^void M_Menu_Save_f (void) {$/;"	f
M_Menu_SinglePlayer_f	menu.c	/^void M_Menu_SinglePlayer_f (void) {$/;"	f
M_Mouse_Select	menu.c	/^static qbool M_Mouse_Select(const menu_window_t *uw, const mouse_state_t *m, int entries, int *newentry)$/;"	f	file:
M_MultiPlayerSub_Draw	menu.c	/^void M_MultiPlayerSub_Draw (void) {$/;"	f
M_MultiPlayerSub_Key	menu.c	/^void M_MultiPlayerSub_Key (int key) {$/;"	f
M_MultiPlayerSub_Mouse_Event	menu.c	/^qbool M_MultiPlayerSub_Mouse_Event(const mouse_state_t *ms)$/;"	f
M_Options_Draw	menu.c	/^void M_Options_Draw (void) {$/;"	f
M_Options_Key	menu.c	/^void M_Options_Key (int key, int unichar) {$/;"	f
M_PI	mathlib.h	44;"	d
M_Print	menu.c	/^void M_Print (int cx, int cy, char *str) {$/;"	f
M_PrintWhite	menu.c	/^void M_PrintWhite (int cx, int cy, char *str) {$/;"	f
M_Print_GetPoint	menu.c	/^void M_Print_GetPoint(int cx, int cy, int *rx, int *ry, const char *str, qbool red) {$/;"	f
M_Proxy_Key	menu.c	/^void M_Proxy_Key (int key) {$/;"	f
M_Quit_Draw	menu.c	/^void M_Quit_Draw (void) {$/;"	f
M_Quit_Key	menu.c	/^void M_Quit_Key (int key) {$/;"	f
M_Save_Draw	menu.c	/^void M_Save_Draw (void) {$/;"	f
M_Save_Key	menu.c	/^void M_Save_Key (int key) {$/;"	f
M_Save_Mouse_Event	menu.c	/^qbool M_Save_Mouse_Event(const mouse_state_t *ms)$/;"	f
M_ScanSaves	menu.c	/^void M_ScanSaves (char *sp_gamedir) {$/;"	f
M_SinglePlayer_Draw	menu.c	/^void M_SinglePlayer_Draw (void) {$/;"	f
M_SinglePlayer_Key	menu.c	/^void M_SinglePlayer_Key (int key) {$/;"	f
M_SinglePlayer_Key	menu.c	/^void M_SinglePlayer_Key (key) {$/;"	f
M_SinglePlayer_Mouse_Event	menu.c	/^qbool M_SinglePlayer_Mouse_Event(const mouse_state_t* ms)$/;"	f
M_ToggleHeadMenus	menu.c	/^static void M_ToggleHeadMenus(int type)$/;"	f	file:
M_ToggleMenu_f	menu.c	/^void M_ToggleMenu_f (void) {$/;"	f
M_ToggleProxyMenu_f	menu.c	/^void M_ToggleProxyMenu_f (void) {$/;"	f
M_UnbindCommand	settings_page.c	/^static void M_UnbindCommand (const char *command) {$/;"	f	file:
M_Unscale_Menu	menu.c	/^void M_Unscale_Menu(void)$/;"	f
M_Window_Adjust	menu.c	/^static void M_Window_Adjust(const menu_window_t *original, menu_window_t *scaled)$/;"	f	file:
MacSetupScreen	vid_mac.c	/^void MacSetupScreen ()$/;"	f
MacShutdownScreen	vid_mac.c	/^void MacShutdownScreen(void)$/;"	f
Mac_StartGL	vid_mac.c	/^void Mac_StartGL (void)$/;"	f
Mac_StopGL	vid_mac.c	/^void Mac_StopGL (void)$/;"	f
Macro_Ammo	teamplay.c	/^char *Macro_Ammo (void)$/;"	f
Macro_Armor	teamplay.c	/^char *Macro_Armor (void)$/;"	f
Macro_ArmorType	teamplay.c	/^char *Macro_ArmorType (void)$/;"	f
Macro_BestAmmo	teamplay.c	/^char *Macro_BestAmmo (void)$/;"	f
Macro_BestWeapon	teamplay.c	/^char *Macro_BestWeapon (void)$/;"	f
Macro_BestWeaponAndAmmo	teamplay.c	/^char *Macro_BestWeaponAndAmmo (void)$/;"	f
Macro_Cam_Angles	cl_cam.c	/^static char *Macro_Cam_Angles (void) { return va("\\"%s %s %s\\"", myftos(cl.viewangles[0]), myftos(cl.viewangles[1]), myftos(cl.viewangles[2])); }$/;"	f	file:
Macro_Cam_Angles_Pitch	cl_cam.c	/^static char *Macro_Cam_Angles_Pitch (void) { return myftos(cl.viewangles[0]); }$/;"	f	file:
Macro_Cam_Angles_Roll	cl_cam.c	/^static char *Macro_Cam_Angles_Roll (void) { return myftos(cl.viewangles[2]); }$/;"	f	file:
Macro_Cam_Angles_Yaw	cl_cam.c	/^static char *Macro_Cam_Angles_Yaw (void) { return myftos(cl.viewangles[1]); }$/;"	f	file:
Macro_Cam_Pos	cl_cam.c	/^static char *Macro_Cam_Pos (void) {	return va("\\"%s %s %s\\"", myftos(cl.simorg[0]), myftos(cl.simorg[1]), myftos(cl.simorg[2])); }$/;"	f	file:
Macro_Cam_Pos_X	cl_cam.c	/^static char *Macro_Cam_Pos_X (void) { return myftos(cl.simorg[0]); }$/;"	f	file:
Macro_Cam_Pos_Y	cl_cam.c	/^static char *Macro_Cam_Pos_Y (void) { return myftos(cl.simorg[1]); }$/;"	f	file:
Macro_Cam_Pos_Z	cl_cam.c	/^static char *Macro_Cam_Pos_Z (void) { return myftos(cl.simorg[2]); }$/;"	f	file:
Macro_Cells	teamplay.c	/^char *Macro_Cells (void)$/;"	f
Macro_Colored_Armor_f	teamplay.c	/^char *Macro_Colored_Armor_f (void)$/;"	f
Macro_Colored_Powerups_f	teamplay.c	/^char *Macro_Colored_Powerups_f (void)$/;"	f
Macro_Colored_Short_Powerups_f	teamplay.c	/^char *Macro_Colored_Short_Powerups_f (void) \/\/ same as above, but displays "qrp" instead of "quad ring pent"$/;"	f
Macro_CountNearbyEnemyPlayers	teamplay.c	/^char *Macro_CountNearbyEnemyPlayers (void)$/;"	f
Macro_CountNearbyFriendlyPlayers	teamplay.c	/^char *Macro_CountNearbyFriendlyPlayers (void)$/;"	f
Macro_Count_Last_NearbyEnemyPlayers	teamplay.c	/^char *Macro_Count_Last_NearbyEnemyPlayers (void)$/;"	f
Macro_Count_Last_NearbyFriendlyPlayers	teamplay.c	/^char *Macro_Count_Last_NearbyFriendlyPlayers (void)$/;"	f
Macro_Date	teamplay.c	/^char *Macro_Date (void)$/;"	f
Macro_EnemyStatus_LED	teamplay.c	/^char *Macro_EnemyStatus_LED(void)$/;"	f
Macro_GameDir	teamplay.c	/^char *Macro_GameDir(void)$/;"	f
Macro_Health	teamplay.c	/^char *Macro_Health (void)$/;"	f
Macro_LastDeath	teamplay.c	/^char *Macro_LastDeath (void)$/;"	f
Macro_LastDrop	teamplay.c	/^char *Macro_LastDrop (void)$/;"	f
Macro_LastDropTime	teamplay.c	/^char *Macro_LastDropTime (void)$/;"	f
Macro_LastPointAtLoc	teamplay.c	/^char *Macro_LastPointAtLoc (void)$/;"	f
Macro_LastReportedLoc	teamplay.c	/^char *Macro_LastReportedLoc(void)$/;"	f
Macro_LastSeenPowerup	teamplay.c	/^char *Macro_LastSeenPowerup(void)$/;"	f
Macro_LastTookOrPointed	teamplay.c	/^char *Macro_LastTookOrPointed (void)$/;"	f
Macro_LastTrigger_Match	teamplay.c	/^char *Macro_LastTrigger_Match(void)$/;"	f
Macro_Last_Location	teamplay.c	/^char *Macro_Last_Location (void)$/;"	f
Macro_Lastip_f	teamplay.c	/^char *Macro_Lastip_f (void)$/;"	f
Macro_Latency	teamplay.c	/^char *Macro_Latency (void)$/;"	f
Macro_Location	teamplay.c	/^char *Macro_Location (void)$/;"	f
Macro_MP3Info	mp3_player.h	/^	char *(*Macro_MP3Info)   (void);$/;"	m	struct:__anon236
Macro_MatchName	match_tools.c	/^char *Macro_MatchName(void) {$/;"	f
Macro_MatchType	match_tools.c	/^char *Macro_MatchType(void) {$/;"	f
Macro_MyStatus_LED	teamplay.c	/^char *Macro_MyStatus_LED(void)$/;"	f
Macro_Nails	teamplay.c	/^char *Macro_Nails (void)$/;"	f
Macro_Need	teamplay.c	/^char *Macro_Need (void)$/;"	f
Macro_PointLocation	teamplay.c	/^char *Macro_PointLocation (void)$/;"	f
Macro_PointName	teamplay.c	/^char *Macro_PointName (void)$/;"	f
Macro_PointNameAtLocation	teamplay.c	/^char *Macro_PointNameAtLocation (void)$/;"	f
Macro_Point_LED	teamplay.c	/^char *Macro_Point_LED(void)$/;"	f
Macro_Powerups	teamplay.c	/^char *Macro_Powerups (void)$/;"	f
Macro_Quote_f	teamplay.c	/^char *Macro_Quote_f (void)$/;"	f
Macro_Rockets	teamplay.c	/^char *Macro_Rockets (void)$/;"	f
Macro_Shells	teamplay.c	/^char *Macro_Shells (void)$/;"	f
Macro_TF_Skin	teamplay.c	/^char *Macro_TF_Skin (void)$/;"	f
Macro_Time	teamplay.c	/^char *Macro_Time (void)$/;"	f
Macro_TimeS	teamplay.c	/^char *Macro_TimeS (void)$/;"	f
Macro_Took	teamplay.c	/^char *Macro_Took (void)$/;"	f
Macro_TookAtLoc	teamplay.c	/^char *Macro_TookAtLoc (void)$/;"	f
Macro_TookLoc	teamplay.c	/^char *Macro_TookLoc (void)$/;"	f
Macro_Weapon	teamplay.c	/^char *Macro_Weapon (void)$/;"	f
Macro_WeaponAndAmmo	teamplay.c	/^char *Macro_WeaponAndAmmo (void)$/;"	f
Macro_WeaponNum	teamplay.c	/^char *Macro_WeaponNum (void)$/;"	f
Macro_Weapons	teamplay.c	/^char *Macro_Weapons (void)$/;"	f
MainWndProc	vid_wgl.c	/^LONG WINAPI MainWndProc (HWND    hWnd, UINT    uMsg, WPARAM  wParam, LPARAM  lParam) {$/;"	f
MainWndProc	vid_win.c	/^LONG WINAPI MainWndProc (HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {$/;"	f
MainWndProc	win_wndproc.c	/^LONG WINAPI MainWndProc (HWND    hWnd, UINT    uMsg, WPARAM  wParam, LPARAM  lParam) {$/;"	f
MakeChar	cl_input.c	/^int MakeChar (int i) {$/;"	f
MakeCode	in_raw.h	/^	USHORT MakeCode;$/;"	m	struct:tagRAWKEYBOARD
MakeDirent	sys_win.c	/^void MakeDirent(sys_dirent *ent, WIN32_FIND_DATA *data)$/;"	f
MakeNormalVectors	mathlib.c	/^void MakeNormalVectors (\/* in *\/ vec3_t forward, \/* out *\/ vec3_t right, vec3_t up)$/;"	f
MakeSkyVec	gl_warp.c	/^void MakeSkyVec (float s, float t, int axis) {$/;"	f
MakeSkyVec2	gl_warp.c	/^static void MakeSkyVec2 (float s, float t, int axis, vec3_t v)$/;"	f	file:
MakeString	Ctrl_PageViewer.c	/^static void MakeString(char *buf, byte *mem, int len)$/;"	f	file:
MakeStringRed	console.c	/^void MakeStringRed(char *s)$/;"	f
MakeStringYellow	console.c	/^void MakeStringYellow(char *s)$/;"	f
Make_Red	mvd_utils.c	/^char *Make_Red (char *s,int i){$/;"	f
MarkDefaultSources	EX_browser.c	/^void MarkDefaultSources(void) {$/;"	f
Mark_Source	EX_browser_sources.c	/^void Mark_Source(source_data *s)$/;"	f
MaskExceptions	sys_win.c	/^void MaskExceptions(void) {}$/;"	f
MaskForNum	d_surf.c	/^int     MaskForNum (int num)$/;"	f
Master_Heartbeat	sv_master.c	/^void Master_Heartbeat (void) {$/;"	f
Master_Shutdown	sv_master.c	/^void Master_Shutdown (void) {$/;"	f
Match	parser.c	/^LOCAL expr_val Match(EParser p, int token)$/;"	f
Match_Running	match_tools.c	/^qbool Match_Running ;$/;"	v
Match_String	parser.c	/^LOCAL expr_val Match_String(EParser p)$/;"	f
Match_Var	parser.c	/^LOCAL expr_val Match_Var(EParser p)$/;"	f
MaxD	mathlib.h	214;"	d
MaxI	mathlib.h	213;"	d
Media_AUDACIOUS_GetVolume	mp3_audacious.c	/^double Media_AUDACIOUS_GetVolume(void) {$/;"	f
Media_AUDACIOUS_SetVolume	mp3_audacious.c	/^void Media_AUDACIOUS_SetVolume(double vol) {$/;"	f
Media_GetVolume	mp3_player.c	/^double Media_GetVolume(void) {$/;"	f
Media_GetVolume_f	mp3_player.c	/^char* Media_GetVolume_f(void) {$/;"	f
Media_MPD_GetVolume	mp3_mpd.c	/^double Media_MPD_GetVolume(void) {$/;"	f
Media_MPD_SetVolume	mp3_mpd.c	/^void Media_MPD_SetVolume(double vol) {$/;"	f
Media_SetVolume	mp3_player.c	/^void Media_SetVolume(double vol) {$/;"	f
Media_SetVolume_f	mp3_player.c	/^void Media_SetVolume_f(void) {$/;"	f
Media_WINAMP_GetVolume	mp3_winamp.c	/^double Media_WINAMP_GetVolume(void) $/;"	f
Media_WINAMP_SetVolume	mp3_winamp.c	/^void Media_WINAMP_SetVolume(double vol) $/;"	f
Media_XMMS2_GetVolume	mp3_xmms2.c	/^double Media_XMMS2_GetVolume(void) {$/;"	f
Media_XMMS2_SetVolume	mp3_xmms2.c	/^void Media_XMMS2_SetVolume(double vol) {$/;"	f
Media_XMMS_GetVolume	mp3_xmms.c	/^double Media_XMMS_GetVolume(void) {$/;"	f
Media_XMMS_SetVolume	mp3_xmms.c	/^void Media_XMMS_SetVolume(double vol) {$/;"	f
MemList_f	zone2.c	/^void MemList_f(void)$/;"	f
MemStats_f	zone2.c	/^void MemStats_f(void)$/;"	f
Mem_Alloc	zone2.h	120;"	d
Mem_AllocPool	zone2.h	124;"	d
Mem_CheckSentinels	zone2.h	122;"	d
Mem_CheckSentinelsGlobal	zone2.h	123;"	d
Mem_EmptyPool	zone2.h	126;"	d
Mem_ExpandableArray_AllocRecord	zone2.c	/^void *Mem_ExpandableArray_AllocRecord(memexpandablearray_t *l)$/;"	f
Mem_ExpandableArray_FreeArray	zone2.c	/^void Mem_ExpandableArray_FreeArray(memexpandablearray_t *l)$/;"	f
Mem_ExpandableArray_FreeRecord	zone2.c	/^void Mem_ExpandableArray_FreeRecord(memexpandablearray_t *l, void *record)$/;"	f
Mem_ExpandableArray_IndexRange	zone2.c	/^size_t Mem_ExpandableArray_IndexRange(memexpandablearray_t *l)$/;"	f
Mem_ExpandableArray_NewArray	zone2.c	/^void Mem_ExpandableArray_NewArray(memexpandablearray_t *l, mempool_t *mempool, size_t recordsize, int numrecordsperarray)$/;"	f
Mem_ExpandableArray_RecordAtIndex	zone2.c	/^void *Mem_ExpandableArray_RecordAtIndex(memexpandablearray_t *l, size_t index)$/;"	f
Mem_Free	zone2.h	121;"	d
Mem_FreePool	zone2.h	125;"	d
Mem_IsAllocated	zone2.c	/^qbool Mem_IsAllocated(mempool_t *pool, void *data)$/;"	f
Mem_PrintList	zone2.c	/^void Mem_PrintList(size_t minallocationsize)$/;"	f
Mem_PrintStats	zone2.c	/^void Mem_PrintStats(void)$/;"	f
Memory2_Init	zone2.c	/^void Memory2_Init (void)$/;"	f
Memory2_Init_Commands	zone2.c	/^void Memory2_Init_Commands (void)$/;"	f
Memory2_Shutdown	zone2.c	/^void Memory2_Shutdown (void)$/;"	f
Memory_Init	zone.c	/^void Memory_Init (void *buf, int size) {$/;"	f
Menu_CG_Coop_StartGame	menu_multiplayer.c	/^void Menu_CG_Coop_StartGame(void)$/;"	f
Menu_CG_DM_StartGame	menu_multiplayer.c	/^void Menu_CG_DM_StartGame(void)$/;"	f
Menu_Demo_Draw	menu_demo.c	/^void Menu_Demo_Draw (void)$/;"	f
Menu_Demo_Init	menu_demo.c	/^void Menu_Demo_Init(void)$/;"	f
Menu_Demo_Key	menu_demo.c	/^void Menu_Demo_Key(int key)$/;"	f
Menu_Demo_Mouse_Event	menu_demo.c	/^qbool Menu_Demo_Mouse_Event(const mouse_state_t *ms)$/;"	f
Menu_Demo_NewHome	menu_demo.c	/^void Menu_Demo_NewHome(const char *homedir)$/;"	f
Menu_Help_Draw	help_files.c	/^void Menu_Help_Draw(int x, int y, int w, int h)$/;"	f
Menu_Help_Init	help_files.c	/^void Menu_Help_Init(void)$/;"	f
Menu_Help_Key	help_files.c	/^void Menu_Help_Key(int key)$/;"	f
Menu_Help_Mouse_Event	help_files.c	/^qbool Menu_Help_Mouse_Event(const mouse_state_t *ms)$/;"	f
Menu_Ingame_Init	menu_ingame.c	/^void Menu_Ingame_Init(void)$/;"	f
Menu_Ingame_Mouse_Event	menu_ingame.c	/^qbool Menu_Ingame_Mouse_Event(const mouse_state_t *ms) {$/;"	f
Menu_Init	new_menu.c	/^void Menu_Init(void){$/;"	f
Menu_Input_Restart	menu_options.c	/^void Menu_Input_Restart(void) { Cbuf_AddText("in_restart\\n"); }$/;"	f
Menu_Mainhook	new_menu.c	/^void Menu_Mainhook(void){$/;"	f
Menu_Mouse_Event	menu.c	/^qbool Menu_Mouse_Event(const mouse_state_t* ms)$/;"	f
Menu_MultiPlayer_Draw	menu_multiplayer.c	/^void Menu_MultiPlayer_Draw (void)$/;"	f
Menu_MultiPlayer_Init	menu_multiplayer.c	/^void Menu_MultiPlayer_Init()$/;"	f
Menu_MultiPlayer_Key	menu_multiplayer.c	/^void Menu_MultiPlayer_Key(int key)$/;"	f
Menu_MultiPlayer_Mouse_Event	menu_multiplayer.c	/^qbool Menu_MultiPlayer_Mouse_Event(const mouse_state_t *ms)$/;"	f
Menu_MultiPlayer_SwitchToServersTab	menu_multiplayer.c	/^void Menu_MultiPlayer_SwitchToServersTab(void)$/;"	f
Menu_Options_Draw	menu_options.c	/^void Menu_Options_Draw(void) {$/;"	f
Menu_Options_Init	menu_options.c	/^void Menu_Options_Init(void) {$/;"	f
Menu_Options_Key	menu_options.c	/^void Menu_Options_Key(int key, int unichar) {$/;"	f
Menu_Options_Mouse_Event	menu_options.c	/^qbool Menu_Options_Mouse_Event(const mouse_state_t *ms)$/;"	f
Menu_Proxy_Draw	menu_proxy.c	/^void Menu_Proxy_Draw() { $/;"	f
Menu_Proxy_Key	menu_proxy.c	/^void Menu_Proxy_Key(int key)$/;"	f
Menu_Proxy_Toggle	menu_proxy.c	/^void Menu_Proxy_Toggle(void)$/;"	f
Message	in_raw.h	/^	UINT Message;$/;"	m	struct:tagRAWKEYBOARD
MinD	mathlib.h	212;"	d
MinI	mathlib.h	211;"	d
MinPhysFrameTime	cl_main.c	/^static double MinPhysFrameTime (void)$/;"	f	file:
Minimized	sys_win.c	/^qbool		ActiveApp, Minimized;$/;"	v
Mod_AddModelFlags	gl_model.c	/^void Mod_AddModelFlags(model_t *mod)$/;"	f
Mod_ClearAll	gl_model.c	/^void Mod_ClearAll (void) {$/;"	f
Mod_ClearAll	r_model.c	/^void Mod_ClearAll (void) {$/;"	f
Mod_DecompressVis	gl_model.c	/^byte *Mod_DecompressVis (byte *in, model_t *model) {$/;"	f
Mod_DecompressVis	r_model.c	/^byte *Mod_DecompressVis (byte *in, model_t *model) {$/;"	f
Mod_Extradata	gl_model.c	/^void *Mod_Extradata (model_t *mod) {$/;"	f
Mod_Extradata	r_model.c	/^void *Mod_Extradata (model_t *mod) {$/;"	f
Mod_FindName	gl_model.c	/^model_t *Mod_FindName (char *name) {$/;"	f
Mod_FindName	r_model.c	/^model_t *Mod_FindName (char *name) {$/;"	f
Mod_FloodFillSkin	gl_model.c	/^void Mod_FloodFillSkin( byte *skin, int skinwidth, int skinheight ) {$/;"	f
Mod_ForName	gl_model.c	/^model_t *Mod_ForName (char *name, qbool crash) {$/;"	f
Mod_ForName	r_model.c	/^model_t *Mod_ForName (char *name, qbool crash) {$/;"	f
Mod_Init	gl_model.c	/^void Mod_Init (void) {$/;"	f
Mod_Init	r_model.c	/^void Mod_Init (void) {$/;"	f
Mod_IsLumaAllowed	gl_model.c	/^static qbool Mod_IsLumaAllowed(model_t *mod)$/;"	f	file:
Mod_LeafPVS	gl_model.c	/^byte *Mod_LeafPVS (mleaf_t *leaf, model_t *model) {$/;"	f
Mod_LeafPVS	r_model.c	/^byte *Mod_LeafPVS (mleaf_t *leaf, model_t *model) {$/;"	f
Mod_LoadAlias3Model	gl_md3.c	/^void Mod_LoadAlias3Model (model_t *mod, void *buffer, int filesize)$/;"	f
Mod_LoadAliasFrame	gl_model.c	/^void *Mod_LoadAliasFrame (void * pin, maliasframedesc_t *frame) {$/;"	f
Mod_LoadAliasFrame	r_model.c	/^void * Mod_LoadAliasFrame (void * pin, int *pframeindex, int numv,$/;"	f
Mod_LoadAliasGroup	gl_model.c	/^void *Mod_LoadAliasGroup (void * pin,  maliasframedesc_t *frame) {$/;"	f
Mod_LoadAliasGroup	r_model.c	/^void * Mod_LoadAliasGroup (void * pin, int *pframeindex, int numv,$/;"	f
Mod_LoadAliasModel	gl_model.c	/^void Mod_LoadAliasModel (model_t *mod, void *buffer, int filesize) {$/;"	f
Mod_LoadAliasModel	r_model.c	/^void Mod_LoadAliasModel (model_t *mod, void *buffer, int filesize) {$/;"	f
Mod_LoadAliasSkin	r_model.c	/^void * Mod_LoadAliasSkin (void * pin, int *pskinindex, int skinsize, aliashdr_t *pheader) {$/;"	f
Mod_LoadAliasSkinGroup	r_model.c	/^void * Mod_LoadAliasSkinGroup (void * pin, int *pskinindex, int skinsize, aliashdr_t *pheader) {$/;"	f
Mod_LoadAllSkins	gl_model.c	/^static void *Mod_LoadAllSkins (int numskins, daliasskintype_t *pskintype) {$/;"	f	file:
Mod_LoadBrushModel	gl_model.c	/^void Mod_LoadBrushModel (model_t *mod, void *buffer) {$/;"	f
Mod_LoadBrushModel	r_model.c	/^void Mod_LoadBrushModel (model_t *mod, void *buffer) {$/;"	f
Mod_LoadEdges	gl_model.c	/^void Mod_LoadEdges (lump_t *l) {$/;"	f
Mod_LoadEdges	r_model.c	/^void Mod_LoadEdges (lump_t *l) {$/;"	f
Mod_LoadExternalSkin	gl_model.c	/^static int Mod_LoadExternalSkin(char *identifier, int *fb_texnum)$/;"	f	file:
Mod_LoadExternalSkyTexture	gl_model.c	/^static qbool Mod_LoadExternalSkyTexture (texture_t *tx)$/;"	f	file:
Mod_LoadExternalSpriteSkin	gl_model.c	/^int Mod_LoadExternalSpriteSkin(char *identifier, int framenum) {$/;"	f
Mod_LoadExternalTexture	gl_model.c	/^int Mod_LoadExternalTexture(texture_t *tx, int mode, int brighten_flag) {$/;"	f
Mod_LoadFaces	gl_model.c	/^void Mod_LoadFaces (lump_t *l) {$/;"	f
Mod_LoadFaces	r_model.c	/^void Mod_LoadFaces (lump_t *l) {$/;"	f
Mod_LoadLeafs	gl_model.c	/^void Mod_LoadLeafs (lump_t *l) {$/;"	f
Mod_LoadLeafs	r_model.c	/^void Mod_LoadLeafs (lump_t *l) {$/;"	f
Mod_LoadLighting	gl_model.c	/^void Mod_LoadLighting (lump_t *l) {$/;"	f
Mod_LoadLighting	r_model.c	/^void Mod_LoadLighting (lump_t *l) {$/;"	f
Mod_LoadMarksurfaces	gl_model.c	/^void Mod_LoadMarksurfaces (lump_t *l) {$/;"	f
Mod_LoadMarksurfaces	r_model.c	/^void Mod_LoadMarksurfaces (lump_t *l) {	$/;"	f
Mod_LoadModel	gl_model.c	/^model_t *Mod_LoadModel (model_t *mod, qbool crash) {$/;"	f
Mod_LoadModel	r_model.c	/^model_t *Mod_LoadModel (model_t *mod, qbool crash) {$/;"	f
Mod_LoadModelTextures	gl_model.c	/^void Mod_LoadModelTextures (model_t *m)$/;"	f
Mod_LoadNodes	gl_model.c	/^void Mod_LoadNodes (lump_t *l) {$/;"	f
Mod_LoadNodes	r_model.c	/^void Mod_LoadNodes (lump_t *l) {$/;"	f
Mod_LoadPlanes	gl_model.c	/^void Mod_LoadPlanes (lump_t *l) {$/;"	f
Mod_LoadPlanes	r_model.c	/^void Mod_LoadPlanes (lump_t *l) {$/;"	f
Mod_LoadSpriteFrame	gl_model.c	/^void *Mod_LoadSpriteFrame (void * pin, mspriteframe_t **ppframe, int framenum) {$/;"	f
Mod_LoadSpriteFrame	r_model.c	/^void * Mod_LoadSpriteFrame (void * pin, mspriteframe_t **ppframe) {$/;"	f
Mod_LoadSpriteGroup	gl_model.c	/^void *Mod_LoadSpriteGroup (void * pin, mspriteframe_t **ppframe, int framenum) {$/;"	f
Mod_LoadSpriteGroup	r_model.c	/^void * Mod_LoadSpriteGroup (void * pin, mspriteframe_t **ppframe) {$/;"	f
Mod_LoadSpriteModel	gl_model.c	/^void Mod_LoadSpriteModel (model_t *mod, void *buffer) {$/;"	f
Mod_LoadSpriteModel	r_model.c	/^void Mod_LoadSpriteModel (model_t *mod, void *buffer) {$/;"	f
Mod_LoadSubmodels	gl_model.c	/^void Mod_LoadSubmodels (lump_t *l) {$/;"	f
Mod_LoadSubmodels	r_model.c	/^void Mod_LoadSubmodels (lump_t *l) {$/;"	f
Mod_LoadSurfedges	gl_model.c	/^void Mod_LoadSurfedges (lump_t *l) {$/;"	f
Mod_LoadSurfedges	r_model.c	/^void Mod_LoadSurfedges (lump_t *l) {	$/;"	f
Mod_LoadTexinfo	gl_model.c	/^void Mod_LoadTexinfo (lump_t *l) {$/;"	f
Mod_LoadTexinfo	r_model.c	/^void Mod_LoadTexinfo (lump_t *l) {$/;"	f
Mod_LoadTextures	gl_model.c	/^void Mod_LoadTextures (lump_t *l) {$/;"	f
Mod_LoadTextures	r_model.c	/^void Mod_LoadTextures (lump_t *l) {$/;"	f
Mod_LoadVertexes	gl_model.c	/^void Mod_LoadVertexes (lump_t *l) {$/;"	f
Mod_LoadVertexes	r_model.c	/^void Mod_LoadVertexes (lump_t *l) {$/;"	f
Mod_LoadVisibility	gl_model.c	/^void Mod_LoadVisibility (lump_t *l) {$/;"	f
Mod_LoadVisibility	r_model.c	/^void Mod_LoadVisibility (lump_t *l) {$/;"	f
Mod_ParseWadsFromEntityLump	gl_model.c	/^static void Mod_ParseWadsFromEntityLump (lump_t *l)$/;"	f	file:
Mod_PointInLeaf	gl_model.c	/^mleaf_t *Mod_PointInLeaf (vec3_t p, model_t *model) {$/;"	f
Mod_PointInLeaf	r_model.c	/^mleaf_t *Mod_PointInLeaf (vec3_t p, model_t *model) {$/;"	f
Mod_ReadFlagsFromMD1	gl_md3.c	/^int Mod_ReadFlagsFromMD1(char *name, int md3version)$/;"	f
Mod_ReloadModelsTextures	gl_model.c	/^void Mod_ReloadModelsTextures (void)$/;"	f
Mod_SetParent	gl_model.c	/^void Mod_SetParent (mnode_t *node, mnode_t *parent) {$/;"	f
Mod_SetParent	r_model.c	/^void Mod_SetParent (mnode_t *node, mnode_t *parent) {$/;"	f
Mod_TouchModel	gl_model.c	/^void Mod_TouchModel (char *name) {$/;"	f
Mod_TouchModel	r_model.c	/^void Mod_TouchModel (char *name) {$/;"	f
Mod_TouchModels	gl_model.c	/^void Mod_TouchModels (void)$/;"	f
Model_NextDownload	cl_parse.c	/^void Model_NextDownload (void) $/;"	f
Modules_Init	modules.c	/^void Modules_Init (void)$/;"	f
Modules_SecurityLoaded	modules.c	/^qbool Modules_SecurityLoaded (void)$/;"	f
Modules_Shutdown	modules.c	/^void Modules_Shutdown(void)$/;"	f
MotionBlurCount	vx_stuff.h	/^int ParticleCount, ParticleCountHigh, CoronaCount, CoronaCountHigh, MotionBlurCount, MotionBlurCountHigh;$/;"	v
MotionBlurCountHigh	vx_stuff.h	/^int ParticleCount, ParticleCountHigh, CoronaCount, CoronaCountHigh, MotionBlurCount, MotionBlurCountHigh;$/;"	v
Mouse_ButtonEvent	keys.c	/^qbool Mouse_ButtonEvent(int key, qbool down)$/;"	f
Mouse_EventDispatch	keys.c	/^static qbool Mouse_EventDispatch(void)$/;"	f	file:
Mouse_MoveEvent	keys.c	/^void Mouse_MoveEvent(void)$/;"	f
Movie_Demo_Capture_f	movie.c	/^void Movie_Demo_Capture_f(void) {$/;"	f
Movie_FinishFrame	movie.c	/^void Movie_FinishFrame(void) $/;"	f
Movie_GetSoundtime	movie.c	/^qbool Movie_GetSoundtime(void) {$/;"	f
Movie_Init	movie.c	/^void Movie_Init(void) {$/;"	f
Movie_IsCapturing	movie.c	/^qbool Movie_IsCapturing(void) {$/;"	f
Movie_Start	movie.c	/^static void Movie_Start(double _time) $/;"	f	file:
Movie_StartFrame	movie.c	/^double Movie_StartFrame(void) $/;"	f
Movie_Stop	movie.c	/^void Movie_Stop (void) {$/;"	f
Movie_TransferStereo16	movie.c	/^void Movie_TransferStereo16(void) {$/;"	f
MsgBoxEx	sys_win.c	/^int MsgBoxEx(HWND hwnd, TCHAR *szText, TCHAR *szCaption, HOOKPROC hookproc, UINT uType)$/;"	f
MySndDoImmediate	CarbonSndPlayDB.c	/^OSErr	MySndDoImmediate (SndChannelPtr chan, SndCommand * cmd) {$/;"	f
NANMASK	mathlib.h	50;"	d
NA_INVALID	net.h	/^typedef enum {NA_INVALID, NA_LOOPBACK, NA_IP} netadrtype_t;$/;"	e	enum:__anon237
NA_IP	net.h	/^typedef enum {NA_INVALID, NA_LOOPBACK, NA_IP} netadrtype_t;$/;"	e	enum:__anon237
NA_LOOPBACK	net.h	/^typedef enum {NA_INVALID, NA_LOOPBACK, NA_IP} netadrtype_t;$/;"	e	enum:__anon237
NEAR_CLIP	asm_draw.h	32;"	d
NEAR_CLIP	r_local.h	170;"	d
NEED	tp_msgs.c	51;"	d	file:
NEED_WEAPON	tp_msgs.c	17;"	d	file:
NETWORK_STATS_MASK	client.h	692;"	d
NETWORK_STATS_SIZE	client.h	691;"	d
NET_AdrToString	net.c	/^char *NET_AdrToString (netadr_t a)$/;"	f
NET_BaseAdrToString	net.c	/^char *NET_BaseAdrToString (netadr_t a)$/;"	f
NET_ClearLoopback	net.c	/^void NET_ClearLoopback (void)$/;"	f
NET_CloseServer	net.c	/^void NET_CloseServer (void)$/;"	f
NET_CompareAdr	net.c	/^qbool NET_CompareAdr (netadr_t a, netadr_t b)$/;"	f
NET_CompareBaseAdr	net.c	/^qbool NET_CompareBaseAdr (netadr_t a, netadr_t b)$/;"	f
NET_GetLocalAddress	net.c	/^void NET_GetLocalAddress (int socket, netadr_t *out)$/;"	f
NET_GetLoopPacket	net.c	/^qbool NET_GetLoopPacket (netsrc_t sock, netadr_t *from, sizebuf_t *message)$/;"	f
NET_GetPacket	net.c	/^qbool NET_GetPacket (netsrc_t netsrc)$/;"	f
NET_Init	net.c	/^void NET_Init (void)$/;"	f
NET_InitClient	net.c	/^void NET_InitClient(void)$/;"	f
NET_InitServer	net.c	/^void NET_InitServer (void)$/;"	f
NET_SendLoopPacket	net.c	/^void NET_SendLoopPacket (netsrc_t sock, int length, void *data, netadr_t to)$/;"	f
NET_SendPacket	net.c	/^void NET_SendPacket (netsrc_t netsrc, int length, void *data, netadr_t to)$/;"	f
NET_Shutdown	net.c	/^void NET_Shutdown (void)$/;"	f
NET_Sleep	net.c	/^qbool NET_Sleep (int msec)$/;"	f
NET_StringToAdr	net.c	/^qbool NET_StringToAdr (char *s, netadr_t *a)$/;"	f
NET_StringToSockaddr	net.c	/^qbool NET_StringToSockaddr (char *s, struct sockaddr_storage *sadr)$/;"	f
NET_TIMINGS	client.h	685;"	d
NET_TIMINGSMASK	client.h	686;"	d
NEXT_EDICT	progs.h	105;"	d
NG_INFO	mvd_utils_common.h	36;"	d
NMENU_Add_Bookmark	nmenu_demo.c	/^void NMENU_Add_Bookmark(void)$/;"	f
NMENU_Autosave_Init	nmenu_autosave.c	/^void NMENU_Autosave_Init(void)$/;"	f
NMENU_Bookmark_Del	nmenu_demo.c	/^void NMENU_Bookmark_Del(void)$/;"	f
NMENU_Bookmark_Jump	nmenu_demo.c	/^void NMENU_Bookmark_Jump(void)$/;"	f
NMENU_Bookmark_Jump_Update	nmenu_demo.c	/^void NMENU_Bookmark_Jump_Update(struct menu_ct *self)$/;"	f
NMENU_Bookmark_Move_To	nmenu_demo.c	/^void NMENU_Bookmark_Move_To(void)$/;"	f
NMENU_Bookmark_Next	nmenu_demo.c	/^void NMENU_Bookmark_Next(void)$/;"	f
NMENU_Bookmark_Prev	nmenu_demo.c	/^void NMENU_Bookmark_Prev(void)$/;"	f
NMENU_Bookmark_Text_Update	nmenu_demo.c	/^void NMENU_Bookmark_Text_Update(struct menu_ct *self)$/;"	f
NMENU_Demo_Init	nmenu_demo.c	/^void NMENU_Demo_Init(void)$/;"	f
NMENU_Play_Button	nmenu_demo.c	/^void NMENU_Play_Button(void)$/;"	f
NMENU_Play_Button_Update	nmenu_demo.c	/^void NMENU_Play_Button_Update(struct menu_ct *self)$/;"	f
NMENU_Position_Text	nmenu_trackentity.c	/^char *NMENU_Position_Text(void)$/;"	f
NMENU_Start_Button_Function	nmenu_autosave.c	/^void NMENU_Start_Button_Function(void)$/;"	f
NMENU_Start_Button_Update_Function	nmenu_autosave.c	/^void NMENU_Start_Button_Update_Function(struct menu_ct *self)$/;"	f
NMENU_Trackentity_Frame	nmenu_trackentity.c	/^void NMENU_Trackentity_Frame(void)$/;"	f
NMENU_Trackentity_Init	nmenu_trackentity.c	/^void NMENU_Trackentity_Init(void)$/;"	f
NMENU_Trackentity_Start	nmenu_trackentity.c	/^void NMENU_Trackentity_Start(void)$/;"	f
NMENU_Trackentity_Stop	nmenu_trackentity.c	/^void NMENU_Trackentity_Stop(void)$/;"	f
NMENU_VC_Togglebutton	nmenu_trackentity.c	/^void NMENU_VC_Togglebutton(void)$/;"	f
NMENU_VC_Togglebutton1	nmenu_trackentity.c	/^void NMENU_VC_Togglebutton1(void)$/;"	f
NMENU_VC_Togglebutton2	nmenu_trackentity.c	/^void NMENU_VC_Togglebutton2(void)$/;"	f
NMENU_VC_Togglebutton_Update	nmenu_trackentity.c	/^void NMENU_VC_Togglebutton_Update(struct menu_ct *self)$/;"	f
NMENU_VC_Togglebutton_Update1	nmenu_trackentity.c	/^void NMENU_VC_Togglebutton_Update1(struct menu_ct *self)$/;"	f
NMENU_VC_Togglebutton_Update2	nmenu_trackentity.c	/^void NMENU_VC_Togglebutton_Update2(struct menu_ct *self)$/;"	f
NMResponseProc	CarbonSndPlayDB.c	/^static pascal void NMResponseProc (NMRecPtr nmReqPtr) {$/;"	f	file:
NO	debug.h	269;"	d
NO	debug.h	277;"	d
NO	debug.h	284;"	d
NOLERPBYTE	image.c	116;"	d	file:
NOT_FOCUS_SLEEP	sys_win.c	42;"	d	file:
NO_BUTTON_WIDTH	sys_win.c	808;"	d	file:
NO_IGNORE_ADD	ignore.h	27;"	d
NO_IGNORE_NO_ADD	ignore.h	26;"	d
NO_MODE	vid_wgl.c	39;"	d	file:
NO_MODE	vid_win.c	75;"	d	file:
NQD_BumpEntityCount	cl_nqdemo.c	/^static void NQD_BumpEntityCount (int num)$/;"	f	file:
NQD_LerpPlayerinfo	cl_nqdemo.c	/^static void NQD_LerpPlayerinfo (float f)$/;"	f	file:
NQD_LerpPoint	cl_nqdemo.c	/^static float NQD_LerpPoint (void)$/;"	f	file:
NQD_LinkEntities	cl_nqdemo.c	/^void NQD_LinkEntities (void)$/;"	f
NQD_ParseClientdata	cl_nqdemo.c	/^static void NQD_ParseClientdata (int bits)$/;"	f	file:
NQD_ParsePrint	cl_nqdemo.c	/^static void NQD_ParsePrint (void)$/;"	f	file:
NQD_ParseServerData	cl_nqdemo.c	/^static void NQD_ParseServerData (void)$/;"	f	file:
NQD_ParseServerMessage	cl_nqdemo.c	/^static void NQD_ParseServerMessage (void)$/;"	f	file:
NQD_ParseStartSoundPacket	cl_nqdemo.c	/^static void NQD_ParseStartSoundPacket(void)$/;"	f	file:
NQD_ParseStufftext	cl_nqdemo.c	/^static void NQD_ParseStufftext (void)$/;"	f	file:
NQD_ParseUpdate	cl_nqdemo.c	/^static void NQD_ParseUpdate (int bits)$/;"	f	file:
NQD_ParseUpdatecolors	cl_nqdemo.c	/^static void NQD_ParseUpdatecolors (void)$/;"	f	file:
NQD_ReadPackets	cl_nqdemo.c	/^void NQD_ReadPackets (void)$/;"	f
NQD_StartPlayback	cl_nqdemo.c	/^void NQD_StartPlayback (void)$/;"	f
NQ_MAX_CLIENTS	cl_nqdemo.c	37;"	d	file:
NQ_MAX_EDICTS	cl_nqdemo.c	40;"	d	file:
NQ_PROTOCOL_VERSION	cl_nqdemo.c	35;"	d	file:
NQ_SIGNONS	cl_nqdemo.c	38;"	d	file:
NQ_SND_ATTENUATION	cl_nqdemo.c	77;"	d	file:
NQ_SND_LOOPING	cl_nqdemo.c	78;"	d	file:
NQ_SND_VOLUME	cl_nqdemo.c	76;"	d	file:
NQ_U_ANGLE1	cl_nqdemo.c	51;"	d	file:
NQ_U_ANGLE2	cl_nqdemo.c	47;"	d	file:
NQ_U_ANGLE3	cl_nqdemo.c	52;"	d	file:
NQ_U_COLORMAP	cl_nqdemo.c	54;"	d	file:
NQ_U_EFFECTS	cl_nqdemo.c	56;"	d	file:
NQ_U_FRAME	cl_nqdemo.c	49;"	d	file:
NQ_U_LONGENTITY	cl_nqdemo.c	57;"	d	file:
NQ_U_MODEL	cl_nqdemo.c	53;"	d	file:
NQ_U_MOREBITS	cl_nqdemo.c	43;"	d	file:
NQ_U_NOLERP	cl_nqdemo.c	48;"	d	file:
NQ_U_ORIGIN1	cl_nqdemo.c	44;"	d	file:
NQ_U_ORIGIN2	cl_nqdemo.c	45;"	d	file:
NQ_U_ORIGIN3	cl_nqdemo.c	46;"	d	file:
NQ_U_SIGNAL	cl_nqdemo.c	50;"	d	file:
NQ_U_SKIN	cl_nqdemo.c	55;"	d	file:
NS_CLIENT	net.h	/^typedef enum {NS_CLIENT, NS_SERVER} netsrc_t;$/;"	e	enum:__anon238
NS_SERVER	net.h	/^typedef enum {NS_CLIENT, NS_SERVER} netsrc_t;$/;"	e	enum:__anon238
NULL	debug.h	219;"	d
NULL	q_shared.h	60;"	d
NUMCHECKMODELS	vx_stuff.c	152;"	d	file:
NUMCROSSHAIRS	gl_draw.c	66;"	d	file:
NUMCROSSHAIRS	r_draw.c	691;"	d	file:
NUMITEMS	teamplay.c	2661;"	d	file:
NUMMSG	cl_parse.c	149;"	d	file:
NUMSTACKEDGES	r_shared.h	62;"	d
NUMSTACKSURFACES	r_shared.h	64;"	d
NUMSTREAK	vx_tracker.c	386;"	d	file:
NUMTIMINGS	cl_main.c	1979;"	d	file:
NUMVERTEXNORMALS	gl_md3.c	11;"	d	file:
NUMVERTEXNORMALS	gl_rmain.c	324;"	d	file:
NUMVERTEXNORMALS	gl_rmain.c	331;"	d	file:
NUMVERTEXNORMALS	r_alias.c	77;"	d	file:
NUM_AMBIENTS	bspfile.h	199;"	d
NUM_AUDPROCS	mp3_audacious.c	75;"	d	file:
NUM_CON_TIMES	console.c	89;"	d	file:
NUM_CSHIFTS	client.h	212;"	d
NUM_DLIGHTTYPES	client.h	/^	lt_white, lt_custom, NUM_DLIGHTTYPES } dlighttype_t;$/;"	e	enum:__anon117
NUM_FOR_EDICT	pr_edict.c	/^int NUM_FOR_EDICT(edict_t *e) {$/;"	f
NUM_HELP_PAGES	menu.c	606;"	d	file:
NUM_ITEMFLAGS	teamplay.h	159;"	d
NUM_JPEGPROCS	image.c	1910;"	d	file:
NUM_LOCMACROS	teamplay.c	2075;"	d	file:
NUM_MIPS	d_init.c	25;"	d	file:
NUM_MPDPROCS	mp3_mpd.c	65;"	d	file:
NUM_OBJECTS	in_win.c	219;"	d	file:
NUM_PNGPROCS	image.c	562;"	d	file:
NUM_SPAWN_PARMS	server.h	112;"	d
NUM_VORBISPROCS	snd_ov.c	47;"	d	file:
NUM_XMMS2PROCS	mp3_xmms2.c	78;"	d	file:
NUM_XMMSPROCS	mp3_xmms.c	70;"	d	file:
NetadrToSockadr	net.c	/^void NetadrToSockadr (netadr_t *a, struct sockaddr_storage *s)$/;"	f
Netchan_CanPacket	net_chan.c	/^qbool Netchan_CanPacket (netchan_t *chan)$/;"	f
Netchan_CanReliable	net_chan.c	/^qbool Netchan_CanReliable (netchan_t *chan)$/;"	f
Netchan_Init	net_chan.c	/^void Netchan_Init (void)$/;"	f
Netchan_OutOfBand	net_chan.c	/^void Netchan_OutOfBand (netsrc_t sock, netadr_t adr, int length, byte *data)$/;"	f
Netchan_OutOfBandPrint	net_chan.c	/^void Netchan_OutOfBandPrint (netsrc_t sock, netadr_t adr, char *format, ...)$/;"	f
Netchan_Process	net_chan.c	/^qbool Netchan_Process (netchan_t *chan)$/;"	f
Netchan_Setup	net_chan.c	/^void Netchan_Setup (netsrc_t sock, netchan_t *chan, netadr_t adr, int qport)$/;"	f
Netchan_Transmit	net_chan.c	/^void Netchan_Transmit (netchan_t *chan, int length, byte *data)$/;"	f
NewCorona	vx_coronas.c	/^void NewCorona (coronatype_t type, vec3_t origin)$/;"	f
NewLerp_AbleModel	cl_ents.c	/^qbool NewLerp_AbleModel(int idx)$/;"	f
NewStaticLightCorona	vx_coronas.c	/^void NewStaticLightCorona (coronatype_t type, vec3_t origin, entity_t *hint)$/;"	f
New_Lua_State	lua.c	/^int New_Lua_State(char *name, char *script)$/;"	f
Next_Token	parser.c	/^LOCAL void Next_Token(EParser p)$/;"	f
Next_f	mp3_player.h	/^	void  (*Next_f)          (void);$/;"	m	struct:__anon236
OFS_NULL	pr_comp.h	29;"	d
OFS_PARM0	pr_comp.h	31;"	d
OFS_PARM1	pr_comp.h	32;"	d
OFS_PARM2	pr_comp.h	33;"	d
OFS_PARM3	pr_comp.h	34;"	d
OFS_PARM4	pr_comp.h	35;"	d
OFS_PARM5	pr_comp.h	36;"	d
OFS_PARM6	pr_comp.h	37;"	d
OFS_PARM7	pr_comp.h	38;"	d
OFS_RETURN	pr_comp.h	30;"	d
OLD_AVG	net.h	111;"	d
ONE_FRAME_ONLY	gl_rpart.c	1286;"	d	file:
ON_Change_Cam	mvd_cam.c	/^qbool ON_Change_Cam (cvar_t *var, char *string){$/;"	f
ON_Change_Test_Time	mvd_cam.c	/^qbool ON_Change_Test_Time(cvar_t *var, char *string){$/;"	f
ON_EPSILON	q_shared.h	98;"	d
OPENGL_DRIVER_NAME	tr_types.h	153;"	d
OPENGL_DRIVER_NAME	tr_types.h	159;"	d
OPTPADDING	menu.h	28;"	d
OPTPG_BINDS	menu_options.c	/^	OPTPG_BINDS,$/;"	e	enum:__anon47	file:
OPTPG_CONFIG	menu_options.c	/^	OPTPG_CONFIG,$/;"	e	enum:__anon47	file:
OPTPG_DEMO_SPEC	menu_options.c	/^	OPTPG_DEMO_SPEC,$/;"	e	enum:__anon47	file:
OPTPG_FPS	menu_options.c	/^	OPTPG_FPS,$/;"	e	enum:__anon47	file:
OPTPG_HUD	menu_options.c	/^	OPTPG_HUD,$/;"	e	enum:__anon47	file:
OPTPG_PLAYER	menu_options.c	/^	OPTPG_PLAYER,$/;"	e	enum:__anon47	file:
OPTPG_SETTINGS	menu_options.c	/^	OPTPG_SETTINGS,$/;"	e	enum:__anon47	file:
OPTPG_VIDEO	menu_options.c	/^	OPTPG_VIDEO,$/;"	e	enum:__anon47	file:
OP_ADDRESS	pr_comp.h	/^	OP_ADDRESS,$/;"	e	enum:__anon248
OP_ADD_F	pr_comp.h	/^	OP_ADD_F,$/;"	e	enum:__anon248
OP_ADD_V	pr_comp.h	/^	OP_ADD_V,$/;"	e	enum:__anon248
OP_AND	pr_comp.h	/^	OP_AND,$/;"	e	enum:__anon248
OP_BITAND	pr_comp.h	/^	OP_BITAND,$/;"	e	enum:__anon248
OP_BITOR	pr_comp.h	/^	OP_BITOR$/;"	e	enum:__anon248
OP_CALL0	pr_comp.h	/^	OP_CALL0,$/;"	e	enum:__anon248
OP_CALL1	pr_comp.h	/^	OP_CALL1,$/;"	e	enum:__anon248
OP_CALL2	pr_comp.h	/^	OP_CALL2,$/;"	e	enum:__anon248
OP_CALL3	pr_comp.h	/^	OP_CALL3,$/;"	e	enum:__anon248
OP_CALL4	pr_comp.h	/^	OP_CALL4,$/;"	e	enum:__anon248
OP_CALL5	pr_comp.h	/^	OP_CALL5,$/;"	e	enum:__anon248
OP_CALL6	pr_comp.h	/^	OP_CALL6,$/;"	e	enum:__anon248
OP_CALL7	pr_comp.h	/^	OP_CALL7,$/;"	e	enum:__anon248
OP_CALL8	pr_comp.h	/^	OP_CALL8,$/;"	e	enum:__anon248
OP_DIV_F	pr_comp.h	/^	OP_DIV_F,$/;"	e	enum:__anon248
OP_DONE	pr_comp.h	/^	OP_DONE,$/;"	e	enum:__anon248
OP_EQ_E	pr_comp.h	/^	OP_EQ_E,$/;"	e	enum:__anon248
OP_EQ_F	pr_comp.h	/^	OP_EQ_F,$/;"	e	enum:__anon248
OP_EQ_FNC	pr_comp.h	/^	OP_EQ_FNC,$/;"	e	enum:__anon248
OP_EQ_S	pr_comp.h	/^	OP_EQ_S,$/;"	e	enum:__anon248
OP_EQ_V	pr_comp.h	/^	OP_EQ_V,$/;"	e	enum:__anon248
OP_GE	pr_comp.h	/^	OP_GE,$/;"	e	enum:__anon248
OP_GOTO	pr_comp.h	/^	OP_GOTO,$/;"	e	enum:__anon248
OP_GT	pr_comp.h	/^	OP_GT,$/;"	e	enum:__anon248
OP_IF	pr_comp.h	/^	OP_IF,$/;"	e	enum:__anon248
OP_IFNOT	pr_comp.h	/^	OP_IFNOT,$/;"	e	enum:__anon248
OP_LE	pr_comp.h	/^	OP_LE,$/;"	e	enum:__anon248
OP_LOAD_ENT	pr_comp.h	/^	OP_LOAD_ENT,$/;"	e	enum:__anon248
OP_LOAD_F	pr_comp.h	/^	OP_LOAD_F,$/;"	e	enum:__anon248
OP_LOAD_FLD	pr_comp.h	/^	OP_LOAD_FLD,$/;"	e	enum:__anon248
OP_LOAD_FNC	pr_comp.h	/^	OP_LOAD_FNC,$/;"	e	enum:__anon248
OP_LOAD_S	pr_comp.h	/^	OP_LOAD_S,$/;"	e	enum:__anon248
OP_LOAD_V	pr_comp.h	/^	OP_LOAD_V,$/;"	e	enum:__anon248
OP_LT	pr_comp.h	/^	OP_LT,$/;"	e	enum:__anon248
OP_MUL_F	pr_comp.h	/^	OP_MUL_F,$/;"	e	enum:__anon248
OP_MUL_FV	pr_comp.h	/^	OP_MUL_FV,$/;"	e	enum:__anon248
OP_MUL_V	pr_comp.h	/^	OP_MUL_V,$/;"	e	enum:__anon248
OP_MUL_VF	pr_comp.h	/^	OP_MUL_VF,$/;"	e	enum:__anon248
OP_NE_E	pr_comp.h	/^	OP_NE_E,$/;"	e	enum:__anon248
OP_NE_F	pr_comp.h	/^	OP_NE_F,$/;"	e	enum:__anon248
OP_NE_FNC	pr_comp.h	/^	OP_NE_FNC,$/;"	e	enum:__anon248
OP_NE_S	pr_comp.h	/^	OP_NE_S,$/;"	e	enum:__anon248
OP_NE_V	pr_comp.h	/^	OP_NE_V,$/;"	e	enum:__anon248
OP_NOT_ENT	pr_comp.h	/^	OP_NOT_ENT,$/;"	e	enum:__anon248
OP_NOT_F	pr_comp.h	/^	OP_NOT_F,$/;"	e	enum:__anon248
OP_NOT_FNC	pr_comp.h	/^	OP_NOT_FNC,$/;"	e	enum:__anon248
OP_NOT_S	pr_comp.h	/^	OP_NOT_S,$/;"	e	enum:__anon248
OP_NOT_V	pr_comp.h	/^	OP_NOT_V,$/;"	e	enum:__anon248
OP_OR	pr_comp.h	/^	OP_OR,$/;"	e	enum:__anon248
OP_RETURN	pr_comp.h	/^	OP_RETURN,$/;"	e	enum:__anon248
OP_STATE	pr_comp.h	/^	OP_STATE,$/;"	e	enum:__anon248
OP_STOREP_ENT	pr_comp.h	/^	OP_STOREP_ENT,$/;"	e	enum:__anon248
OP_STOREP_F	pr_comp.h	/^	OP_STOREP_F,$/;"	e	enum:__anon248
OP_STOREP_FLD	pr_comp.h	/^	OP_STOREP_FLD,$/;"	e	enum:__anon248
OP_STOREP_FNC	pr_comp.h	/^	OP_STOREP_FNC,$/;"	e	enum:__anon248
OP_STOREP_S	pr_comp.h	/^	OP_STOREP_S,$/;"	e	enum:__anon248
OP_STOREP_V	pr_comp.h	/^	OP_STOREP_V,$/;"	e	enum:__anon248
OP_STORE_ENT	pr_comp.h	/^	OP_STORE_ENT,$/;"	e	enum:__anon248
OP_STORE_F	pr_comp.h	/^	OP_STORE_F,$/;"	e	enum:__anon248
OP_STORE_FLD	pr_comp.h	/^	OP_STORE_FLD,$/;"	e	enum:__anon248
OP_STORE_FNC	pr_comp.h	/^	OP_STORE_FNC,$/;"	e	enum:__anon248
OP_STORE_S	pr_comp.h	/^	OP_STORE_S,$/;"	e	enum:__anon248
OP_STORE_V	pr_comp.h	/^	OP_STORE_V,$/;"	e	enum:__anon248
OP_SUB_F	pr_comp.h	/^	OP_SUB_F,$/;"	e	enum:__anon248
OP_SUB_V	pr_comp.h	/^	OP_SUB_V,$/;"	e	enum:__anon248
OSD_buffer	mvd_cam.c	/^byte *OSD_buffer;$/;"	v
OSR2_BUILD_NUMBER	win_glimp.c	1173;"	d	file:
OS_HAVE_SSE	cpu.h	37;"	d
OWNFRAGPREFIX	vx_tracker.c	165;"	d	file:
O_NDELAY	sys_linux.c	55;"	d	file:
Observe_Server	EX_browser.c	/^static void Observe_Server (server_data *s)$/;"	f	file:
OddFragColor	vx_tracker.c	/^static char *OddFragColor(int killer)$/;"	f	file:
OnAction	ez_button.h	/^	ez_event_fp	OnAction;				\/\/ The event that's raised when the button is clicked \/ activated via a button.$/;"	m	struct:ez_button_events_s
OnAction	ez_button.h	/^	ez_eventhandler_t		*OnAction;$/;"	m	struct:ez_button_eventhandlers_s
OnAction	ez_button.h	/^	int	OnAction;$/;"	m	struct:ez_button_eventcount_s
OnAnchorChanged	ez_controls.h	/^	ez_event_fp					OnAnchorChanged;$/;"	m	struct:ez_control_events_s
OnAnchorChanged	ez_controls.h	/^	ez_eventhandler_t	*OnAnchorChanged;$/;"	m	struct:ez_control_eventhandlers_s
OnAnchorChanged	ez_controls.h	/^	int OnAnchorChanged;$/;"	m	struct:ez_control_eventcount_s
OnAutoHudChange	hud_common.c	/^void OnAutoHudChange(cvar_t *var, char *value, qbool *cancel) {$/;"	f
OnCaretMoved	ez_label.h	/^	ez_event_fp	OnCaretMoved;			\/\/ The caret was moved.$/;"	m	struct:ez_label_events_s
OnCaretMoved	ez_label.h	/^	ez_eventhandler_t		*OnCaretMoved;$/;"	m	struct:ez_label_eventhandlers_s
OnCaretMoved	ez_label.h	/^	int	OnCaretMoved;$/;"	m	struct:ez_label_eventcount_s
OnChange	cvar.h	/^	void	(*OnChange)(struct cvar_s *var, char *value, qbool *cancel);$/;"	m	struct:cvar_s
OnChangeColorForcing	teamplay.c	/^void OnChangeColorForcing(cvar_t *var, char *string, qbool *cancel)$/;"	f
OnChangeSkinForcing	teamplay.c	/^void OnChangeSkinForcing(cvar_t *var, char *string, qbool *cancel)$/;"	f
OnChange_MP3_player	mp3_player.c	/^void OnChange_MP3_player(cvar_t *var, char *value, qbool *cancel) {$/;"	f
OnChange_demo_dir	cl_demo.c	/^static void OnChange_demo_dir(cvar_t *var, char *string, qbool *cancel)$/;"	f	file:
OnChange_demo_format	cl_demo.c	/^static void OnChange_demo_format(cvar_t *var, char *string, qbool *cancel)$/;"	f	file:
OnChange_gl_anisotropy	gl_texture.c	/^void OnChange_gl_anisotropy (cvar_t *var, char *string, qbool *cancel) $/;"	f
OnChange_gl_clearColor	gl_rmain.c	/^void OnChange_gl_clearColor(cvar_t *v, char *s, qbool *cancel) {$/;"	f
OnChange_gl_consolefont	gl_draw.c	/^void OnChange_gl_consolefont(cvar_t *var, char *string, qbool *cancel)$/;"	f
OnChange_gl_crosshairimage	gl_draw.c	/^void OnChange_gl_crosshairimage(cvar_t *v, char *s, qbool *cancel)$/;"	f
OnChange_gl_ext_texture_compression	vid_common_gl.c	/^void OnChange_gl_ext_texture_compression(cvar_t *var, char *string, qbool *cancel) {$/;"	f
OnChange_gl_max_size	gl_texture.c	/^void OnChange_gl_max_size (cvar_t *var, char *string, qbool *cancel) $/;"	f
OnChange_gl_miptexLevel	gl_texture.c	/^void OnChange_gl_miptexLevel (cvar_t *var, char *string, qbool *cancel)$/;"	f
OnChange_gl_smoothfont	gl_draw.c	/^void OnChange_gl_smoothfont (cvar_t *var, char *string, qbool *cancel)$/;"	f
OnChange_gl_texturemode	gl_texture.c	/^void OnChange_gl_texturemode (cvar_t *var, char *string, qbool *cancel) $/;"	f
OnChange_log_dir	logging.c	/^static void OnChange_log_dir(cvar_t *var, char *string, qbool *cancel) {$/;"	f	file:
OnChange_maxclients	sv_main.c	/^void OnChange_maxclients (cvar_t *var, char *str, qbool *cancel) {$/;"	f
OnChange_movie_dir	movie.c	/^static void OnChange_movie_dir(cvar_t *var, char *string, qbool *cancel) {$/;"	f	file:
OnChange_r_con_xxx	tr_init.c	/^void OnChange_r_con_xxx (cvar_t *var, char *string, qbool *cancel) {$/;"	f
OnChange_r_drawflat	d_init.c	/^void OnChange_r_drawflat (cvar_t *var, char *val, qbool *cancel) {$/;"	f
OnChange_r_drawflat	gl_rsurf.c	/^void OnChange_r_drawflat (cvar_t *var, char *value, qbool *cancel) {$/;"	f
OnChange_r_skyname	gl_warp.c	/^qbool OnChange_r_skyname (cvar_t *v, char *skyname) {$/;"	f
OnChange_s_khz	snd_dma.c	/^static void OnChange_s_khz (cvar_t *var, char *string, qbool *cancel) {$/;"	f	file:
OnChange_scr_allowsnap	cl_screen.c	/^void OnChange_scr_allowsnap(cvar_t *var, char *s, qbool *cancel) {$/;"	f
OnChange_scr_clock_format	cl_screen.c	/^void OnChange_scr_clock_format (cvar_t *var, char *value, qbool *cancel) {$/;"	f
OnChange_sv_maxpitch	sv_user.c	/^void OnChange_sv_maxpitch (cvar_t *var, char *value, qbool *cancel) {$/;"	f
OnChange_sv_minpitch	sv_user.c	/^void OnChange_sv_minpitch (cvar_t *var, char *value, qbool *cancel) {$/;"	f
OnChange_sys_disableWinKeys	sys_win.c	/^void OnChange_sys_disableWinKeys(cvar_t *var, char *string, qbool *cancel) $/;"	f
OnChange_sys_highpriority	sys_win.c	/^void OnChange_sys_highpriority (cvar_t *var, char *s, qbool *cancel) $/;"	f
OnChange_vid_con_xxx	vid_wgl.c	/^qbool OnChange_vid_con_xxx (cvar_t *var, char *string) {$/;"	f
OnChange_vid_displayfrequency	vid_wgl.c	/^qbool OnChange_vid_displayfrequency (cvar_t *var, char *string) {$/;"	f
OnChange_vid_mode	vid_wgl.c	/^qbool OnChange_vid_mode(cvar_t *var, char *string) {$/;"	f
OnChange_vid_vsync	vid_wgl.c	/^qbool OnChange_vid_vsync(cvar_t *var, char *string) {$/;"	f
OnChangeffmaudio	ffmpeg.c	/^void OnChangeffmaudio (cvar_t *var, char *value, qbool *cancel)$/;"	f
OnChangeffmfps	ffmpeg.c	/^void OnChangeffmfps (cvar_t *var, char *value, qbool *cancel)$/;"	f
OnChangeffmoutputformat	ffmpeg.c	/^void OnChangeffmoutputformat (struct cvar_s *var, char *value, qbool *cancel)$/;"	f
OnChangeffmrd	ffmpeg.c	/^void OnChangeffmrd(struct cvar_s *var, char *value, qbool *cancel)$/;"	f
OnChangeffmres	ffmpeg.c	/^void OnChangeffmres (cvar_t *var, char *value, qbool *cancel)$/;"	f
OnChangeffmvideo	ffmpeg.c	/^void OnChangeffmvideo (cvar_t *var, char *value, qbool *cancel)$/;"	f
OnCharacterData	xsd_command.c	/^static void OnCharacterData(void *userData, const XML_Char *s, int len)$/;"	f	file:
OnCharacterData	xsd_document.c	/^static void OnCharacterData(void *userData, const XML_Char *s, int len)$/;"	f	file:
OnCharacterData	xsd_variable.c	/^static void OnCharacterData(void *userData, const XML_Char *s, int len)$/;"	f	file:
OnCharacterData_Blocks	xsd_document.c	/^static void OnCharacterData_Blocks(void *userData, const XML_Char *s, int len)$/;"	f	file:
OnDefaultFovChange	cl_screen.c	/^void OnDefaultFovChange (cvar_t *var, char *value, qbool *cancel)$/;"	f
OnDestroy	ez_controls.h	/^	ez_destroy_event_fp			OnDestroy;$/;"	m	struct:ez_control_events_s
OnDestroy	ez_controls.h	/^	ez_eventhandler_t	*OnDestroy;$/;"	m	struct:ez_control_eventhandlers_s
OnDestroy	ez_controls.h	/^	int	OnDestroy;$/;"	m	struct:ez_control_eventcount_s
OnDraw	ez_controls.h	/^	ez_event_fp					OnDraw;$/;"	m	struct:ez_control_events_s
OnDraw	ez_controls.h	/^	ez_eventhandler_t	*OnDraw;$/;"	m	struct:ez_control_eventhandlers_s
OnDraw	ez_controls.h	/^	int	OnDraw;$/;"	m	struct:ez_control_eventcount_s
OnEndElement	xsd_command.c	/^static void OnEndElement(void *userData, const XML_Char *name)$/;"	f	file:
OnEndElement	xsd_document.c	/^static void OnEndElement(void *userData, const XML_Char *name)$/;"	f	file:
OnEndElement	xsd_variable.c	/^static void OnEndElement(void *userData, const XML_Char *name)$/;"	f	file:
OnEndElement_Blocks	xsd_document.c	/^static void OnEndElement_Blocks(void *userData, const XML_Char *name)$/;"	f	file:
OnEventHandlerChanged	ez_controls.h	/^	ez_event_fp					OnEventHandlerChanged;$/;"	m	struct:ez_control_events_s
OnEventHandlerChanged	ez_controls.h	/^	ez_eventhandler_t	*OnEventHandlerChanged;$/;"	m	struct:ez_control_eventhandlers_s
OnEventHandlerChanged	ez_controls.h	/^	int OnEventHandlerChanged;$/;"	m	struct:ez_control_eventcount_s
OnFlagsChanged	ez_controls.h	/^	ez_event_fp					OnFlagsChanged;$/;"	m	struct:ez_control_events_s
OnFlagsChanged	ez_controls.h	/^	ez_eventhandler_t	*OnFlagsChanged;$/;"	m	struct:ez_control_eventhandlers_s
OnFlagsChanged	ez_controls.h	/^	int	OnFlagsChanged;$/;"	m	struct:ez_control_eventcount_s
OnFovChange	cl_screen.c	/^void OnFovChange (cvar_t *var, char *value, qbool *cancel)$/;"	f
OnGotFocus	ez_controls.h	/^	ez_event_fp					OnGotFocus;$/;"	m	struct:ez_control_events_s
OnGotFocus	ez_controls.h	/^	ez_eventhandler_t	*OnGotFocus;$/;"	m	struct:ez_control_eventhandlers_s
OnGotFocus	ez_controls.h	/^	int	OnGotFocus;$/;"	m	struct:ez_control_eventcount_s
OnKeyDown	ez_controls.h	/^	ez_eventhandler_t	*OnKeyDown;$/;"	m	struct:ez_control_eventhandlers_s
OnKeyDown	ez_controls.h	/^	ez_keyspecific_event_fp		OnKeyDown;$/;"	m	struct:ez_control_events_s
OnKeyDown	ez_controls.h	/^	int	OnKeyDown;$/;"	m	struct:ez_control_eventcount_s
OnKeyEvent	ez_controls.h	/^	ez_eventhandler_t	*OnKeyEvent;$/;"	m	struct:ez_control_eventhandlers_s
OnKeyEvent	ez_controls.h	/^	ez_key_event_fp				OnKeyEvent;$/;"	m	struct:ez_control_events_s
OnKeyEvent	ez_controls.h	/^	int	OnKeyEvent;$/;"	m	struct:ez_control_eventcount_s
OnKeyUp	ez_controls.h	/^	ez_eventhandler_t	*OnKeyUp;$/;"	m	struct:ez_control_eventhandlers_s
OnKeyUp	ez_controls.h	/^	ez_keyspecific_event_fp		OnKeyUp;$/;"	m	struct:ez_control_events_s
OnKeyUp	ez_controls.h	/^	int	OnKeyUp;$/;"	m	struct:ez_control_eventcount_s
OnLayoutChildren	ez_controls.h	/^	ez_event_fp					OnLayoutChildren;$/;"	m	struct:ez_control_events_s
OnLayoutChildren	ez_controls.h	/^	ez_eventhandler_t	*OnLayoutChildren;$/;"	m	struct:ez_control_eventhandlers_s
OnLayoutChildren	ez_controls.h	/^	int	OnLayoutChildren;$/;"	m	struct:ez_control_eventcount_s
OnLostFocus	ez_controls.h	/^	ez_event_fp					OnLostFocus;$/;"	m	struct:ez_control_events_s
OnLostFocus	ez_controls.h	/^	ez_eventhandler_t	*OnLostFocus;$/;"	m	struct:ez_control_eventhandlers_s
OnLostFocus	ez_controls.h	/^	int	OnLostFocus;$/;"	m	struct:ez_control_eventcount_s
OnMaxValueChanged	ez_slider.h	/^	ez_event_fp	OnMaxValueChanged;$/;"	m	struct:ez_slider_events_s
OnMaxValueChanged	ez_slider.h	/^	ez_eventhandler_t		*OnMaxValueChanged;$/;"	m	struct:ez_slider_eventhandlers_s
OnMaxValueChanged	ez_slider.h	/^	int	OnMaxValueChanged;$/;"	m	struct:ez_slider_eventcount_s
OnMinValueChanged	ez_slider.h	/^	ez_event_fp	OnMinValueChanged;$/;"	m	struct:ez_slider_events_s
OnMinValueChanged	ez_slider.h	/^	ez_eventhandler_t		*OnMinValueChanged;$/;"	m	struct:ez_slider_eventhandlers_s
OnMinValueChanged	ez_slider.h	/^	int	OnMinValueChanged;$/;"	m	struct:ez_slider_eventcount_s
OnMinVirtualResize	ez_controls.h	/^	ez_event_fp					OnMinVirtualResize;$/;"	m	struct:ez_control_events_s
OnMinVirtualResize	ez_controls.h	/^	ez_eventhandler_t	*OnMinVirtualResize;$/;"	m	struct:ez_control_eventhandlers_s
OnMinVirtualResize	ez_controls.h	/^	int	OnMinVirtualResize;$/;"	m	struct:ez_control_eventcount_s
OnMouseButton	sys_mac.c	/^void OnMouseButton (EventRecord *myEvent, qbool down)$/;"	f
OnMouseClick	ez_controls.h	/^	ez_eventhandler_t	*OnMouseClick;$/;"	m	struct:ez_control_eventhandlers_s
OnMouseClick	ez_controls.h	/^	ez_mouse_event_fp			OnMouseClick;$/;"	m	struct:ez_control_events_s
OnMouseClick	ez_controls.h	/^	int	OnMouseClick;$/;"	m	struct:ez_control_eventcount_s
OnMouseDown	ez_controls.h	/^	ez_eventhandler_t	*OnMouseDown;$/;"	m	struct:ez_control_eventhandlers_s
OnMouseDown	ez_controls.h	/^	ez_mouse_event_fp			OnMouseDown;$/;"	m	struct:ez_control_events_s
OnMouseDown	ez_controls.h	/^	int	OnMouseDown;$/;"	m	struct:ez_control_eventcount_s
OnMouseEnter	ez_controls.h	/^	ez_eventhandler_t	*OnMouseEnter;$/;"	m	struct:ez_control_eventhandlers_s
OnMouseEnter	ez_controls.h	/^	ez_mouse_event_fp			OnMouseEnter;$/;"	m	struct:ez_control_events_s
OnMouseEnter	ez_controls.h	/^	int	OnMouseEnter;$/;"	m	struct:ez_control_eventcount_s
OnMouseEvent	ez_controls.h	/^	ez_eventhandler_t	*OnMouseEvent;$/;"	m	struct:ez_control_eventhandlers_s
OnMouseEvent	ez_controls.h	/^	ez_mouse_event_fp			OnMouseEvent;$/;"	m	struct:ez_control_events_s
OnMouseEvent	ez_controls.h	/^	int	OnMouseEvent;$/;"	m	struct:ez_control_eventcount_s
OnMouseHover	ez_controls.h	/^	ez_eventhandler_t	*OnMouseHover;$/;"	m	struct:ez_control_eventhandlers_s
OnMouseHover	ez_controls.h	/^	ez_mouse_event_fp			OnMouseHover;$/;"	m	struct:ez_control_events_s
OnMouseHover	ez_controls.h	/^	int	OnMouseHover;$/;"	m	struct:ez_control_eventcount_s
OnMouseLeave	ez_controls.h	/^	ez_eventhandler_t	*OnMouseLeave;$/;"	m	struct:ez_control_eventhandlers_s
OnMouseLeave	ez_controls.h	/^	ez_mouse_event_fp			OnMouseLeave;$/;"	m	struct:ez_control_events_s
OnMouseLeave	ez_controls.h	/^	int	OnMouseLeave;$/;"	m	struct:ez_control_eventcount_s
OnMouseUp	ez_controls.h	/^	ez_eventhandler_t	*OnMouseUp;$/;"	m	struct:ez_control_eventhandlers_s
OnMouseUp	ez_controls.h	/^	ez_mouse_event_fp			OnMouseUp;$/;"	m	struct:ez_control_events_s
OnMouseUp	ez_controls.h	/^	int	OnMouseUp;$/;"	m	struct:ez_control_eventcount_s
OnMouseUpOutside	ez_controls.h	/^	ez_eventhandler_t	*OnMouseUpOutside;$/;"	m	struct:ez_control_eventhandlers_s
OnMouseUpOutside	ez_controls.h	/^	ez_mouse_event_fp			OnMouseUpOutside;$/;"	m	struct:ez_control_events_s
OnMouseUpOutside	ez_controls.h	/^	int	OnMouseUpOutside;$/;"	m	struct:ez_control_eventcount_s
OnMove	ez_controls.h	/^	ez_event_fp					OnMove;$/;"	m	struct:ez_control_events_s
OnMove	ez_controls.h	/^	ez_eventhandler_t	*OnMove;$/;"	m	struct:ez_control_eventhandlers_s
OnMove	ez_controls.h	/^	int	OnMove;$/;"	m	struct:ez_control_eventcount_s
OnParentResize	ez_controls.h	/^	ez_event_fp					OnParentResize;$/;"	m	struct:ez_control_events_s
OnParentResize	ez_controls.h	/^	ez_eventhandler_t	*OnParentResize;$/;"	m	struct:ez_control_eventhandlers_s
OnParentResize	ez_controls.h	/^	int	OnParentResize;$/;"	m	struct:ez_control_eventcount_s
OnParentScroll	ez_controls.h	/^	ez_event_fp					OnParentScroll;$/;"	m	struct:ez_control_events_s
OnParentScroll	ez_controls.h	/^	ez_eventhandler_t	*OnParentScroll;$/;"	m	struct:ez_control_eventhandlers_s
OnParentScroll	ez_controls.h	/^	int	OnParentScroll;$/;"	m	struct:ez_control_eventcount_s
OnResize	ez_controls.h	/^	ez_event_fp					OnResize;$/;"	m	struct:ez_control_events_s
OnResize	ez_controls.h	/^	ez_eventhandler_t	*OnResize;$/;"	m	struct:ez_control_eventhandlers_s
OnResize	ez_controls.h	/^	int	OnResize;$/;"	m	struct:ez_control_eventcount_s
OnResizeHandleThicknessChanged	ez_controls.h	/^	ez_event_fp					OnResizeHandleThicknessChanged;$/;"	m	struct:ez_control_events_s
OnResizeHandleThicknessChanged	ez_controls.h	/^	ez_eventhandler_t	*OnResizeHandleThicknessChanged;$/;"	m	struct:ez_control_eventhandlers_s
OnResizeHandleThicknessChanged	ez_controls.h	/^	int OnResizeHandleThicknessChanged;$/;"	m	struct:ez_control_eventcount_s
OnScaleChanged	ez_slider.h	/^	ez_event_fp	OnScaleChanged;$/;"	m	struct:ez_slider_events_s
OnScaleChanged	ez_slider.h	/^	ez_eventhandler_t		*OnScaleChanged;$/;"	m	struct:ez_slider_eventhandlers_s
OnScaleChanged	ez_slider.h	/^	int	OnScaleChanged;$/;"	m	struct:ez_slider_eventcount_s
OnScroll	ez_controls.h	/^	ez_event_fp					OnScroll;$/;"	m	struct:ez_control_events_s
OnScroll	ez_controls.h	/^	ez_eventhandler_t	*OnScroll;$/;"	m	struct:ez_control_eventhandlers_s
OnScroll	ez_controls.h	/^	int	OnScroll;$/;"	m	struct:ez_control_eventcount_s
OnScrollbarThicknessChanged	ez_scrollpane.h	/^	ez_event_fp	OnScrollbarThicknessChanged;$/;"	m	struct:ez_scrollpane_events_s
OnScrollbarThicknessChanged	ez_scrollpane.h	/^	ez_eventhandler_t		*OnScrollbarThicknessChanged;$/;"	m	struct:ez_scrollpane_eventhandlers_s
OnScrollbarThicknessChanged	ez_scrollpane.h	/^	int OnScrollbarThicknessChanged;$/;"	m	struct:ez_scrollpane_eventcount_s
OnShow_SettBinds	menu_options.c	/^void OnShow_SettBinds(void) { Settings_OnShow(&settbinds); }$/;"	f
OnShow_SettConfig	menu_options.c	/^void OnShow_SettConfig(void) { Settings_OnShow(&settconfig); }$/;"	f
OnShow_SettDemo_Spec	menu_options.c	/^void OnShow_SettDemo_Spec(void) { Settings_OnShow(&settdemo_spec); }$/;"	f
OnShow_SettFPS	menu_options.c	/^void OnShow_SettFPS(void) { Settings_OnShow(&settfps); }$/;"	f
OnShow_SettHUD	menu_options.c	/^void OnShow_SettHUD(void) { Settings_OnShow(&setthud); }$/;"	f
OnShow_SettMain	menu_options.c	/^void OnShow_SettMain(void) { Settings_OnShow(&settgeneral); }$/;"	f
OnShow_SettPlayer	menu_options.c	/^void OnShow_SettPlayer(void) { Settings_OnShow(&settplayer); }$/;"	f
OnShow_SettVideo	menu_options.c	/^void OnShow_SettVideo(void) {$/;"	f
OnSliderPositionChanged	ez_slider.h	/^	ez_event_fp	OnSliderPositionChanged;$/;"	m	struct:ez_slider_events_s
OnSliderPositionChanged	ez_slider.h	/^	ez_eventhandler_t		*OnSliderPositionChanged;$/;"	m	struct:ez_slider_eventhandlers_s
OnSliderPositionChanged	ez_slider.h	/^	int	OnSliderPositionChanged;$/;"	m	struct:ez_slider_eventcount_s
OnStartElement	xsd_command.c	/^static void OnStartElement(void *userData, const XML_Char *name, const XML_Char **atts)$/;"	f	file:
OnStartElement	xsd_document.c	/^static void OnStartElement(void *userData, const XML_Char *name, const XML_Char **atts)$/;"	f	file:
OnStartElement	xsd_variable.c	/^static void OnStartElement(void *userData, const XML_Char *name, const XML_Char **atts)$/;"	f	file:
OnStartElement_Blocks	xsd_document.c	/^static void OnStartElement_Blocks(void *userData, const XML_Char *name, const XML_Char **atts)$/;"	f	file:
OnTargetChanged	ez_scrollbar.h	/^	ez_event_fp	OnTargetChanged;$/;"	m	struct:ez_scrollbar_events_s
OnTargetChanged	ez_scrollbar.h	/^	ez_eventhandler_t		*OnTargetChanged;$/;"	m	struct:ez_scrollbar_eventhandlers_s
OnTargetChanged	ez_scrollbar.h	/^	int OnTargetChanged;$/;"	m	struct:ez_scrollbar_eventcount_s
OnTargetChanged	ez_scrollpane.h	/^	ez_event_fp	OnTargetChanged;$/;"	m	struct:ez_scrollpane_events_s
OnTargetChanged	ez_scrollpane.h	/^	ez_eventhandler_t		*OnTargetChanged;$/;"	m	struct:ez_scrollpane_eventhandlers_s
OnTargetChanged	ez_scrollpane.h	/^	int OnTargetChanged;$/;"	m	struct:ez_scrollpane_eventcount_s
OnTargetResize	ez_scrollpane.h	/^	ez_event_fp	OnTargetResize;$/;"	m	struct:ez_scrollpane_events_s
OnTargetResize	ez_scrollpane.h	/^	ez_eventhandler_t		*OnTargetResize;$/;"	m	struct:ez_scrollpane_eventhandlers_s
OnTargetScroll	ez_scrollpane.h	/^	ez_event_fp	OnTargetScroll;$/;"	m	struct:ez_scrollpane_events_s
OnTargetScroll	ez_scrollpane.h	/^	ez_eventhandler_t		*OnTargetScroll;$/;"	m	struct:ez_scrollpane_eventhandlers_s
OnTextAlignmentChanged	ez_button.h	/^	ez_event_fp	OnTextAlignmentChanged;	\/\/ Text alignment changed.$/;"	m	struct:ez_button_events_s
OnTextAlignmentChanged	ez_button.h	/^	ez_eventhandler_t		*OnTextAlignmentChanged;$/;"	m	struct:ez_button_eventhandlers_s
OnTextAlignmentChanged	ez_button.h	/^	int	OnTextAlignmentChanged;$/;"	m	struct:ez_button_eventcount_s
OnTextChanged	ez_label.h	/^	ez_event_fp	OnTextChanged;			\/\/ Event raised when the text in the label is changed.$/;"	m	struct:ez_label_events_s
OnTextChanged	ez_label.h	/^	ez_eventhandler_t		*OnTextChanged;$/;"	m	struct:ez_label_eventhandlers_s
OnTextChanged	ez_label.h	/^	int	OnTextChanged;$/;"	m	struct:ez_label_eventcount_s
OnTextFlagsChanged	ez_label.h	/^	ez_event_fp	OnTextFlagsChanged;		\/\/ The text flags changed.$/;"	m	struct:ez_label_events_s
OnTextFlagsChanged	ez_label.h	/^	ez_eventhandler_t		*OnTextFlagsChanged;$/;"	m	struct:ez_label_eventhandlers_s
OnTextFlagsChanged	ez_label.h	/^	int	OnTextFlagsChanged;$/;"	m	struct:ez_label_eventcount_s
OnTextScaleChanged	ez_label.h	/^	ez_event_fp	OnTextScaleChanged;		\/\/ The scale of the text changed.$/;"	m	struct:ez_label_events_s
OnTextScaleChanged	ez_label.h	/^	ez_eventhandler_t		*OnTextScaleChanged;$/;"	m	struct:ez_label_eventhandlers_s
OnTextScaleChanged	ez_label.h	/^	int	OnTextScaleChanged;$/;"	m	struct:ez_label_eventcount_s
OnTextureBitsChange	vid_mac.c	/^qbool OnTextureBitsChange (cvar_t *var, char *value)$/;"	f
OnVirtualResize	ez_controls.h	/^	ez_event_fp					OnVirtualResize;$/;"	m	struct:ez_control_events_s
OnVirtualResize	ez_controls.h	/^	ez_eventhandler_t	*OnVirtualResize;$/;"	m	struct:ez_control_eventhandlers_s
OnVirtualResize	ez_controls.h	/^	int	OnVirtualResize;$/;"	m	struct:ez_control_eventcount_s
OnVisibilityChanged	ez_controls.h	/^	ez_event_fp					OnVisibilityChanged;$/;"	m	struct:ez_control_events_s
OnVisibilityChanged	ez_controls.h	/^	ez_eventhandler_t	*OnVisibilityChanged;$/;"	m	struct:ez_control_eventhandlers_s
OnVisibilityChanged	ez_controls.h	/^	int OnVisibilityChanged;$/;"	m	struct:ez_control_eventcount_s
On_Change_JMS	new_menu.c	/^void On_Change_JMS(cvar_t *var, char *string, qbool *cancel)$/;"	f
On_Change_man	nmenu_autosave.c	/^qbool On_Change_man(cvar_t *var, char string, qbool *cancel)$/;"	f
OpenGLLib	tr_types.h	/^  void *OpenGLLib; \/\/ instance of OpenGL library$/;"	m	struct:__anon287
OpenNew	vfs.h	/^	void	*(*OpenNew)(vfsfile_t *file, const char *desc);	$/;"	m	struct:__anon289
OpenVFS	vfs.h	/^	vfsfile_t *(*OpenVFS)(void *handle, flocation_t *loc, char *mode);$/;"	m	struct:__anon289
OptionsHandler	sys_mac.c	/^OptionsHandler( EventHandlerCallRef inHandler, EventRef inEvent, void* userData )$/;"	f	file:
Options_Draw	menu_multiplayer.c	/^static void Options_Draw(int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page)$/;"	f	file:
Options_Key	menu_multiplayer.c	/^static int Options_Key(int key, CTab_t *tab, CTabPage_t *page)$/;"	f	file:
Options_Mouse_Event	menu_multiplayer.c	/^static qbool Options_Mouse_Event(const mouse_state_t *ms)$/;"	f	file:
Options_pos	EX_browser.c	/^int Options_pos;$/;"	v
OutofBandPrintf	sv_user.c	/^void OutofBandPrintf (netadr_t where, char *fmt, ...) {$/;"	f
PACKED16_driver	mgraph.h	1685;"	d
PACKED1_driver	mgraph.h	1682;"	d
PACKED24_driver	mgraph.h	1686;"	d
PACKED32_driver	mgraph.h	1687;"	d
PACKED4_driver	mgraph.h	1683;"	d
PACKED8_driver	mgraph.h	1684;"	d
PACKET_HEADER	net_chan.c	27;"	d	file:
PADDING	hud_editor.c	238;"	d	file:
PADDING	md4.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
PADDING	settings_page.c	46;"	d	file:
PAINTBUFFER_SIZE	snd_mix.c	32;"	d	file:
PAKOP_ADD	fs.c	/^typedef enum { PAKOP_ADD, PAKOP_REM } pak_operation_t;$/;"	e	enum:__anon19	file:
PAKOP_REM	fs.c	/^typedef enum { PAKOP_ADD, PAKOP_REM } pak_operation_t;$/;"	e	enum:__anon19	file:
PALETTE_SIZE	r_draw.c	83;"	d	file:
PALMAX	mgraph.h	667;"	d
PARSER_STACK_PATH_SIZE	xsd.h	24;"	d
PARSE_AS_MVD	cl_demo.c	2506;"	d	file:
PARTICLE_Z_CLIP	d_iface.h	51;"	d
PARTICLE_Z_CLIP	d_ifacea.h	59;"	d
PATH_SEPARATOR	sys.h	23;"	d
PATH_SEPARATOR	sys.h	25;"	d
PAUSED_DEMO	client.h	414;"	d
PAUSED_SERVER	client.h	413;"	d
PAUSE_SLEEP	sys_win.c	41;"	d	file:
PBUFFER_MAX_ATTRIBS	vid_wgl.c	732;"	d	file:
PBUFFER_MAX_PFORMATS	vid_wgl.c	733;"	d	file:
PCRAWINPUTDEVICE	in_raw.h	/^typedef const RAWINPUTDEVICE *PCRAWINPUTDEVICE;$/;"	t
PENT_INFO	mvd_utils_common.h	29;"	d
PF_COMMAND	protocol.h	201;"	d
PF_DEAD	protocol.h	209;"	d
PF_EFFECTS	protocol.h	207;"	d
PF_Find	pr_cmds.c	/^void PF_Find (void) {$/;"	f
PF_FindFloat	pr_cmds.c	/^void PF_FindFloat (void) {$/;"	f
PF_GIB	protocol.h	210;"	d
PF_MODEL	protocol.h	205;"	d
PF_MSEC	protocol.h	200;"	d
PF_ONGROUND	protocol.h	214;"	d
PF_PMC_MASK	protocol.h	213;"	d
PF_PMC_SHIFT	protocol.h	212;"	d
PF_Remove	pr_cmds.c	/^void PF_Remove (void) {$/;"	f
PF_SKINNUM	protocol.h	206;"	d
PF_Spawn	pr_cmds.c	/^void PF_Spawn (void) {$/;"	f
PF_VELOCITY1	protocol.h	202;"	d
PF_VELOCITY2	protocol.h	203;"	d
PF_VELOCITY3	protocol.h	204;"	d
PF_VarString	pr_cmds.c	/^char *PF_VarString (int first) {$/;"	f
PF_WEAPONFRAME	protocol.h	208;"	d
PF_WriteAngle	pr_cmds.c	/^void PF_WriteAngle (void) {$/;"	f
PF_WriteByte	pr_cmds.c	/^static void PF_WriteByte (void)$/;"	f	file:
PF_WriteChar	pr_cmds.c	/^void PF_WriteChar (void) {$/;"	f
PF_WriteCoord	pr_cmds.c	/^static void PF_WriteCoord (void)$/;"	f	file:
PF_WriteEntity	pr_cmds.c	/^void PF_WriteEntity (void) {$/;"	f
PF_WriteLong	pr_cmds.c	/^void PF_WriteLong (void) {$/;"	f
PF_WriteShort	pr_cmds.c	/^void PF_WriteShort (void) {$/;"	f
PF_WriteString	pr_cmds.c	/^void PF_WriteString (void) {$/;"	f
PF_WriteUnterminatedString	pr_cmds.c	/^void PF_WriteUnterminatedString (void) {$/;"	f
PF_aim	pr_cmds.c	/^void PF_aim (void) {$/;"	f
PF_ambientsound	pr_cmds.c	/^void PF_ambientsound (void) {$/;"	f
PF_argc	pr_cmds.c	/^void PF_argc (void)$/;"	f
PF_argv	pr_cmds.c	/^void PF_argv (void) {$/;"	f
PF_bound	pr_cmds.c	/^void PF_bound (void) {$/;"	f
PF_bprint	pr_cmds.c	/^void PF_bprint (void) {$/;"	f
PF_break	pr_cmds.c	/^void PF_break (void) {$/;"	f
PF_ceil	pr_cmds.c	/^void PF_ceil (void) {$/;"	f
PF_centerprint	pr_cmds.c	/^void PF_centerprint (void) {$/;"	f
PF_changelevel	pr_cmds.c	/^void PF_changelevel (void) {$/;"	f
PF_changeyaw	pr_cmds.c	/^void PF_changeyaw (void) {$/;"	f
PF_checkbottom	pr_cmds.c	/^void PF_checkbottom (void) {$/;"	f
PF_checkclient	pr_cmds.c	/^static void PF_checkclient (void)$/;"	f	file:
PF_checkextension	pr_cmds.c	/^void PF_checkextension (void) {$/;"	f
PF_clientcommand	pr_cmds.c	/^void PF_clientcommand (void) {$/;"	f
PF_copyentity	pr_cmds.c	/^void PF_copyentity (void) {$/;"	f
PF_coredump	pr_cmds.c	/^void PF_coredump (void) {$/;"	f
PF_cos	pr_cmds.c	/^void PF_cos (void) {$/;"	f
PF_cvar	pr_cmds.c	/^void PF_cvar (void) {$/;"	f
PF_cvar_set	pr_cmds.c	/^void PF_cvar_set (void) {$/;"	f
PF_dprint	pr_cmds.c	/^void PF_dprint (void) {$/;"	f
PF_droptofloor	pr_cmds.c	/^void PF_droptofloor (void) {$/;"	f
PF_eprint	pr_cmds.c	/^void PF_eprint (void) {$/;"	f
PF_error	pr_cmds.c	/^void PF_error (void) {$/;"	f
PF_etos	pr_cmds.c	/^void PF_etos (void) {$/;"	f
PF_fabs	pr_cmds.c	/^void PF_fabs (void) {$/;"	f
PF_findchain	pr_cmds.c	/^void PF_findchain (void) {$/;"	f
PF_findchainfloat	pr_cmds.c	/^void PF_findchainfloat (void) {$/;"	f
PF_findradius	pr_cmds.c	/^static void PF_findradius (void)$/;"	f	file:
PF_floor	pr_cmds.c	/^void PF_floor (void) {$/;"	f
PF_ftos	pr_cmds.c	/^void PF_ftos (void) {$/;"	f
PF_infokey	pr_cmds.c	/^void PF_infokey (void) {$/;"	f
PF_lightstyle	pr_cmds.c	/^void PF_lightstyle (void) {$/;"	f
PF_localcmd	pr_cmds.c	/^static void PF_localcmd (void)$/;"	f	file:
PF_logfrag	pr_cmds.c	/^void PF_logfrag (void) {$/;"	f
PF_makestatic	pr_cmds.c	/^void PF_makestatic (void) {$/;"	f
PF_makevectors	pr_cmds.c	/^void PF_makevectors (void) {$/;"	f
PF_max	pr_cmds.c	/^void PF_max (void) {$/;"	f
PF_min	pr_cmds.c	/^void PF_min (void) {$/;"	f
PF_multicast	pr_cmds.c	/^void PF_multicast (void) {$/;"	f
PF_newcheckclient	pr_cmds.c	/^static int PF_newcheckclient (int check)$/;"	f	file:
PF_nextent	pr_cmds.c	/^void PF_nextent (void) {$/;"	f
PF_normalize	pr_cmds.c	/^void PF_normalize (void) {$/;"	f
PF_objerror	pr_cmds.c	/^void PF_objerror (void) {$/;"	f
PF_pointcontents	pr_cmds.c	/^void PF_pointcontents (void) {$/;"	f
PF_pow	pr_cmds.c	/^void PF_pow (void) {$/;"	f
PF_precache_file	pr_cmds.c	/^static void PF_precache_file (void)$/;"	f	file:
PF_precache_model	pr_cmds.c	/^static void PF_precache_model (void)$/;"	f	file:
PF_precache_sound	pr_cmds.c	/^static void PF_precache_sound (void)$/;"	f	file:
PF_random	pr_cmds.c	/^void PF_random (void) {$/;"	f
PF_randomvec	pr_cmds.c	/^void PF_randomvec (void) {$/;"	f
PF_rint	pr_cmds.c	/^void PF_rint (void) {$/;"	f
PF_setmodel	pr_cmds.c	/^static void PF_setmodel (void)$/;"	f	file:
PF_setorigin	pr_cmds.c	/^void PF_setorigin (void) {$/;"	f
PF_setsize	pr_cmds.c	/^void PF_setsize (void) {$/;"	f
PF_setspawnparms	pr_cmds.c	/^void PF_setspawnparms (void) {$/;"	f
PF_sin	pr_cmds.c	/^void PF_sin (void) {$/;"	f
PF_sound	pr_cmds.c	/^void PF_sound (void) {$/;"	f
PF_sprint	pr_cmds.c	/^void PF_sprint (void) {$/;"	f
PF_sqrt	pr_cmds.c	/^void PF_sqrt (void) {$/;"	f
PF_stof	pr_cmds.c	/^void PF_stof (void) {$/;"	f
PF_stov	pr_cmds.c	/^void PF_stov(void) {$/;"	f
PF_strcat	pr_cmds.c	/^void PF_strcat(void) {$/;"	f
PF_strlen	pr_cmds.c	/^void PF_strlen(void) {$/;"	f
PF_stuffcmd	pr_cmds.c	/^static void PF_stuffcmd (void)$/;"	f	file:
PF_substring	pr_cmds.c	/^void PF_substring(void) {$/;"	f
PF_tokenize	pr_cmds.c	/^void PF_tokenize (void) {$/;"	f
PF_tokenize_impl	pr_cmds.c	/^int PF_tokenize_impl (char *str) {$/;"	f
PF_traceline	pr_cmds.c	/^void PF_traceline (void) {$/;"	f
PF_traceoff	pr_cmds.c	/^void PF_traceoff (void) {$/;"	f
PF_traceon	pr_cmds.c	/^void PF_traceon (void) {$/;"	f
PF_vectoangles	pr_cmds.c	/^void PF_vectoangles (void) {$/;"	f
PF_vectorvectors	pr_cmds.c	/^void PF_vectorvectors (void) {$/;"	f
PF_vectoyaw	pr_cmds.c	/^void PF_vectoyaw (void) {$/;"	f
PF_vlen	pr_cmds.c	/^void PF_vlen (void) {$/;"	f
PF_vtos	pr_cmds.c	/^void PF_vtos (void) {$/;"	f
PF_walkmove	pr_cmds.c	/^void PF_walkmove (void) {$/;"	f
PIPE_BUFFERSIZE	sys_linux.c	593;"	d	file:
PITCH	mathlib.h	39;"	d
PIXEL16	vid_x11.c	/^typedef unsigned short	PIXEL16;$/;"	t	file:
PIXEL24	vid_x11.c	/^typedef unsigned int	PIXEL24;$/;"	t	file:
PKBDLLHOOKSTRUCT	winquake.h	/^} *PKBDLLHOOKSTRUCT;$/;"	t	typeref:struct:__anon300
PLANE_ANYX	bspfile.h	124;"	d
PLANE_ANYY	bspfile.h	125;"	d
PLANE_ANYZ	bspfile.h	126;"	d
PLANE_X	bspfile.h	119;"	d
PLANE_Y	bspfile.h	120;"	d
PLANE_Z	bspfile.h	121;"	d
PLAYER_ID_NOMATCH	utils.h	27;"	d
PLAYER_NAME_NOMATCH	utils.h	28;"	d
PLAYER_NUM_NOMATCH	utils.h	29;"	d
PLAYLIST_HEADING_ROW	menu_mp3player.c	283;"	d	file:
PLAYLIST_MAXENTRIES	menu_mp3player.c	281;"	d	file:
PLAYLIST_MAXLINES	menu_mp3player.c	282;"	d	file:
PLAYLIST_MAXTITLE	menu_mp3player.c	285;"	d	file:
PL_VALUES_COUNT	mvd_autotrack.c	52;"	d	file:
PMC_EXTRA3	protocol.h	224;"	d
PMC_FLY	protocol.h	221;"	d
PMC_FREEZE	protocol.h	223;"	d
PMC_NONE	protocol.h	222;"	d
PMC_NORMAL	protocol.h	217;"	d
PMC_NORMAL_JUMP_HELD	protocol.h	218;"	d
PMC_OLD_SPECTATOR	protocol.h	219;"	d
PMC_SPECTATOR	protocol.h	220;"	d
PM_Accelerate	pmove.c	/^void PM_Accelerate (vec3_t wishdir, float wishspeed, float accel) {$/;"	f
PM_AddTouchedEnt	pmove.c	/^static void PM_AddTouchedEnt (int num) {$/;"	f	file:
PM_AirAccelerate	pmove.c	/^void PM_AirAccelerate (vec3_t wishdir, float wishspeed, float accel) {$/;"	f
PM_AirMove	pmove.c	/^void PM_AirMove (void) {$/;"	f
PM_CategorizePosition	pmove.c	/^void PM_CategorizePosition (void) {$/;"	f
PM_CheckJump	pmove.c	/^void PM_CheckJump (void) {$/;"	f
PM_CheckWaterJump	pmove.c	/^void PM_CheckWaterJump (void) {$/;"	f
PM_ClipVelocity	pmove.c	/^void PM_ClipVelocity (vec3_t in, vec3_t normal, vec3_t out, float overbounce) {$/;"	f
PM_CullTraceBox	pmovetst.c	/^static qbool PM_CullTraceBox(vec3_t mins, vec3_t maxs, vec3_t offset, vec3_t emins, vec3_t emaxs, vec3_t hullmins, vec3_t hullmaxs) {$/;"	f	file:
PM_DEAD	pmove.h	/^	PM_DEAD,				\/\/ no acceleration$/;"	e	enum:__anon244
PM_FLY	pmove.h	/^	PM_FLY,					\/\/ fly, bump into walls$/;"	e	enum:__anon244
PM_FREEZE	pmove.h	/^	PM_FREEZE				\/\/ can't move or look around (TODO)$/;"	e	enum:__anon244
PM_FlyMove	pmove.c	/^void PM_FlyMove (void) {$/;"	f
PM_Friction	pmove.c	/^void PM_Friction (void) {$/;"	f
PM_Init	pmove.c	/^void PM_Init (void) { }$/;"	f
PM_NONE	pmove.h	/^	PM_NONE,				\/\/ can't move$/;"	e	enum:__anon244
PM_NORMAL	pmove.h	/^	PM_NORMAL,				\/\/ normal ground movement$/;"	e	enum:__anon244
PM_NudgePosition	pmove.c	/^void PM_NudgePosition (void) {$/;"	f
PM_OLD_SPECTATOR	pmove.h	/^	PM_OLD_SPECTATOR,		\/\/ fly, no clip to world (QW bug)$/;"	e	enum:__anon244
PM_PlayerMove	pmove.c	/^void PM_PlayerMove (void) $/;"	f
PM_PlayerTrace	pmovetst.c	/^trace_t PM_PlayerTrace (vec3_t start, vec3_t end)$/;"	f
PM_PointContents	pmovetst.c	/^int PM_PointContents (vec3_t p)$/;"	f
PM_PointContents_AllBSPs	pmovetst.c	/^int PM_PointContents_AllBSPs (vec3_t p)$/;"	f
PM_SPECTATOR	pmove.h	/^	PM_SPECTATOR,			\/\/ fly, no clip to world$/;"	e	enum:__anon244
PM_SlideMove	pmove.c	/^int PM_SlideMove (void) {$/;"	f
PM_SpectatorMove	pmove.c	/^void PM_SpectatorMove (void) {$/;"	f
PM_StepSlideMove	pmove.c	/^int PM_StepSlideMove (qbool in_air) {$/;"	f
PM_TestPlayerPosition	pmovetst.c	/^qbool PM_TestPlayerPosition (vec3_t pos)$/;"	f
PM_TraceBounds	pmovetst.c	/^static void PM_TraceBounds (vec3_t start, vec3_t end, vec3_t boxmins, vec3_t boxmaxs)$/;"	f	file:
PM_TraceLine	pmovetst.c	/^trace_t PM_TraceLine (vec3_t start, vec3_t end)$/;"	f
PM_WaterMove	pmove.c	/^void PM_WaterMove (void) {$/;"	f
PNG_FreeLibrary	image.c	/^static void PNG_FreeLibrary(void) {$/;"	f	file:
PNG_HEADER_LENGTH	image.c	1060;"	d	file:
PNG_HasHeader	image.c	/^static qbool PNG_HasHeader (FILE *fin)$/;"	f	file:
PNG_HasHeader	image.c	/^static qbool PNG_HasHeader (vfsfile_t *fin)$/;"	f	file:
PNG_IO_user_flush_data	image.c	/^static void PNG_IO_user_flush_data(png_structp png_ptr) $/;"	f	file:
PNG_IO_user_flush_data	image.c	/^static void PNG_IO_user_flush_data(png_structp png_ptr) {$/;"	f	file:
PNG_IO_user_read_data	image.c	/^static void PNG_IO_user_read_data(png_structp png_ptr, png_bytep data, png_size_t length) $/;"	f	file:
PNG_IO_user_read_data	image.c	/^static void PNG_IO_user_read_data(png_structp png_ptr, png_bytep data, png_size_t length) {$/;"	f	file:
PNG_IO_user_write_data	image.c	/^static void PNG_IO_user_write_data(png_structp png_ptr, png_bytep data, png_size_t length) $/;"	f	file:
PNG_IO_user_write_data	image.c	/^static void PNG_IO_user_write_data(png_structp png_ptr, png_bytep data, png_size_t length) {$/;"	f	file:
PNG_LOAD_DATA	image.c	1062;"	d	file:
PNG_LOAD_TEXT	image.c	1061;"	d	file:
PNG_LoadLibrary	image.c	/^static qbool PNG_LoadLibrary(void) {$/;"	f	file:
POINTER	md4.c	/^typedef unsigned char *POINTER;$/;"	t	file:
POINT_EMPTY	tp_msgs.c	45;"	d	file:
POINT_IN_BOUNDS	ez_controls.h	158;"	d
POINT_IN_CONTROL_DRAWBOUNDS	ez_controls.h	162;"	d
POINT_IN_CONTROL_RECT	ez_controls.h	163;"	d
POINT_IN_RECTANGLE	ez_controls.h	155;"	d
POINT_TYPE_ENEMY	teamplay.c	145;"	d	file:
POINT_TYPE_ITEM	teamplay.c	142;"	d	file:
POINT_TYPE_POWERUP	teamplay.c	143;"	d	file:
POINT_TYPE_TEAMMATE	teamplay.c	144;"	d	file:
POINT_X_IN_BOUNDS	ez_controls.h	156;"	d
POINT_X_IN_CONTROL_DRAWBOUNDS	ez_controls.h	160;"	d
POINT_Y_IN_BOUNDS	ez_controls.h	157;"	d
POINT_Y_IN_CONTROL_DRAWBOUNDS	ez_controls.h	161;"	d
POOLFLAG_TEMP	zone2.h	32;"	d
POOLNAMESIZE	zone2.h	30;"	d
PORT_ANY	net.h	64;"	d
PORT_CLIENT	protocol.h	71;"	d
PORT_MASTER	protocol.h	72;"	d
PORT_QUAKETV	protocol.h	74;"	d
PORT_SERVER	protocol.h	73;"	d
PRAWHID	in_raw.h	/^} RAWHID,*PRAWHID,*LPRAWHID;$/;"	t	typeref:struct:tagRAWHID
PRAWINPUT	in_raw.h	/^} RAWINPUT,*PRAWINPUT,*LPRAWINPUT;$/;"	t	typeref:struct:tagRAWINPUT
PRAWINPUTDEVICE	in_raw.h	/^} RAWINPUTDEVICE,*PRAWINPUTDEVICE,*LPRAWINPUTDEVICE;$/;"	t	typeref:struct:tagRAWINPUTDEVICE
PRAWINPUTDEVICELIST	in_raw.h	/^} RAWINPUTDEVICELIST,*PRAWINPUTDEVICELIST;$/;"	t	typeref:struct:tagRAWINPUTDEVICELIST
PRAWINPUTHEADER	in_raw.h	/^} RAWINPUTHEADER,*PRAWINPUTHEADER;$/;"	t	typeref:struct:tagRAWINPUTHEADER
PRAWKEYBOARD	in_raw.h	/^} RAWKEYBOARD,*PRAWKEYBOARD,*LPRAWKEYBOARD;$/;"	t	typeref:struct:tagRAWKEYBOARD
PRAWMOUSE	in_raw.h	/^} RAWMOUSE,*PRAWMOUSE,*LPRAWMOUSE;$/;"	t	typeref:struct:tagRAWMOUSE
PREF_CMDLINE_LEN	mac_prefs.h	24;"	d
PRINT_ALL	common.h	249;"	d
PRINT_CHAT	common.h	132;"	d
PRINT_CHAT	protocol.h	325;"	d
PRINT_DBG	common.h	251;"	d
PRINT_ERR_FATAL	common.h	250;"	d
PRINT_FAIL	common.h	247;"	d
PRINT_HIGH	common.h	131;"	d
PRINT_HIGH	protocol.h	324;"	d
PRINT_INFO	common.h	246;"	d
PRINT_LOW	common.h	129;"	d
PRINT_LOW	protocol.h	322;"	d
PRINT_MEDIUM	common.h	130;"	d
PRINT_MEDIUM	protocol.h	323;"	d
PRINT_OK	common.h	245;"	d
PRINT_R_VERBOSE	tr_types.h	30;"	d
PRINT_SCREEN	keys.h	/^	PRINT_SCREEN,$/;"	e	enum:__anon171
PRINT_WARNING	common.h	248;"	d
PRIORITYLEVEL	sys_linux.c	233;"	d	file:
PRIVATE	debug.h	209;"	d
PROGHEADER_CRC	progdefs.h	159;"	d
PROG_TO_EDICT	progs.h	108;"	d
PROG_VERSION	pr_comp.h	154;"	d
PROTOCOL_VERSION	protocol.h	22;"	d
PROTOCOL_VERSION_FTE	protocol.h	27;"	d
PROXYACCESS	menu_proxy.c	20;"	d	file:
PR_CheckEmptyString	pr_cmds.c	/^static void PR_CheckEmptyString (char *s)$/;"	f	file:
PR_EnterFunction	pr_exec.c	/^int PR_EnterFunction (dfunction_t *f) {$/;"	f
PR_ExecuteProgram	pr_exec.c	/^void PR_ExecuteProgram (func_t fnum) {$/;"	f
PR_GetString	pr_exec.c	/^char *PR_GetString(int num) {$/;"	f
PR_GetTempString	pr_cmds.c	/^static char *PR_GetTempString(void){$/;"	f	file:
PR_GlobalString	pr_edict.c	/^char *PR_GlobalString (int ofs) {$/;"	f
PR_GlobalStringNoContents	pr_edict.c	/^char *PR_GlobalStringNoContents (int ofs) {$/;"	f
PR_IS_CHAT	common.h	263;"	d
PR_Init	pr_edict.c	/^void PR_Init (void) {$/;"	f
PR_LOG_SKIP	common.h	261;"	d
PR_LeaveFunction	pr_exec.c	/^int PR_LeaveFunction (void) {$/;"	f
PR_LoadProgs	pr_edict.c	/^void PR_LoadProgs (void) {$/;"	f
PR_PrintStatement	pr_exec.c	/^void PR_PrintStatement (dstatement_t *s) {$/;"	f
PR_Profile_f	pr_exec.c	/^void PR_Profile_f (void) {$/;"	f
PR_RunError	pr_exec.c	/^void PR_RunError (char *error, ...) {$/;"	f
PR_SKIP	common.h	260;"	d
PR_SetString	pr_exec.c	/^int PR_SetString(char *s) {$/;"	f
PR_StackTrace	pr_exec.c	/^void PR_StackTrace (void) {$/;"	f
PR_TR_SKIP	common.h	262;"	d
PR_UglyValueString	pr_edict.c	/^char *PR_UglyValueString (etype_t type, eval_t *val) {$/;"	f
PR_ValueString	pr_edict.c	/^char *PR_ValueString (etype_t type, eval_t *val) {$/;"	f
PScrollBar	Ctrl.h	/^} ScrollBar, *PScrollBar;$/;"	t	typeref:struct:ScrollBar_s
PUBLIC	debug.h	210;"	d
PVOID	ez_controls.c	/^typedef void * PVOID;$/;"	t	file:
PaddedPrint	keys.c	/^void PaddedPrint (char *s) {$/;"	f
ParseCommandLine	sys_win.c	/^void ParseCommandLine (char *lpCmdLine) $/;"	f
ParseFloats	utils.c	/^int ParseFloats(char *s, float *f, int *f_size) {$/;"	f
ParseServerIp	EX_browser_ping.c	/^static int ParseServerIp(char *server_port, int *addr, int *port) $/;"	f	file:
ParseServerList	EX_browser_ping.c	/^static pinghost_t *ParseServerList(server_data *servs[], int servsn, int *host_nelms) $/;"	f	file:
Parse_QtvUserList	qtv.c	/^void Parse_QtvUserList(char *s)$/;"	f
Parse_Serverinfo	EX_browser_net.c	/^void Parse_Serverinfo(server_data *s, char *info)$/;"	f
Parse_Shownick	cl_screen.c	/^void Parse_Shownick(char *s)$/;"	f
Parse_TeamInfo	cl_screen.c	/^void Parse_TeamInfo(char *s)$/;"	f
Parse_WeaponStats	cl_screen.c	/^void Parse_WeaponStats(char *s)$/;"	f
Parser_Error_Description	parser.c	/^GLOBAL const char* Parser_Error_Description(int error)$/;"	f
ParticleAlphaTrail	gl_rpart.c	/^void ParticleAlphaTrail (vec3_t start, vec3_t end, vec3_t *trail_origin, float size, float life)$/;"	f
ParticleBloodPool	gl_rpart.c	/^void ParticleBloodPool (vec3_t org) $/;"	f
ParticleCount	vx_stuff.h	/^int ParticleCount, ParticleCountHigh, CoronaCount, CoronaCountHigh, MotionBlurCount, MotionBlurCountHigh;$/;"	v
ParticleCountHigh	vx_stuff.h	/^int ParticleCount, ParticleCountHigh, CoronaCount, CoronaCountHigh, MotionBlurCount, MotionBlurCountHigh;$/;"	v
ParticleFire	gl_rpart.c	/^void ParticleFire (vec3_t org)$/;"	f
ParticleFirePool	gl_rpart.c	/^void ParticleFirePool (vec3_t org) $/;"	f
ParticleFunction	r_part.c	914;"	d	file:
ParticleFunction	r_part.c	922;"	d	file:
ParticleSlime	gl_rpart.c	/^void ParticleSlime (vec3_t org) $/;"	f
ParticleSlimeHarcore	gl_rpart.c	/^void ParticleSlimeHarcore (vec3_t org) $/;"	f
ParticleStats	gl_rpart.c	/^void ParticleStats (int change)$/;"	f
PasteServerToConsole	EX_browser.c	/^static void PasteServerToConsole (server_data *s)$/;"	f	file:
Pause_f	mp3_player.h	/^	void  (*Pause_f)         (void);$/;"	m	struct:__anon236
PerChanInfo	CarbonSndPlayDB.c	/^struct PerChanInfo {$/;"	s	file:
PerChanInfo	CarbonSndPlayDB.c	/^typedef struct PerChanInfo			PerChanInfo;$/;"	t	typeref:struct:PerChanInfo	file:
PerChanInfoPtr	CarbonSndPlayDB.c	/^typedef struct PerChanInfo *		PerChanInfoPtr;$/;"	t	typeref:struct:PerChanInfo	file:
PerpendicularVector	mathlib.c	/^void PerpendicularVector(vec3_t dst, const vec3_t src) {$/;"	f
PingHost	EX_browser_ping.c	/^int PingHost(char *host_to_ping, short port, int count, int time_out)$/;"	f
PingHosts	EX_browser_ping.c	/^int PingHosts(server_data *servs[], int servsn, int count, int time_out)$/;"	f
PingPhase_Draw	EX_browser.c	/^void PingPhase_Draw(void)$/;"	f
PingRecvProc	EX_browser_ping.c	/^DWORD WINAPI PingRecvProc(void *lpParameter)$/;"	f
PingSendParrallelMultiHosts	EX_browser_ping.c	/^void PingSendParrallelMultiHosts(pinghost_t *phosts, int nelms, int count) {$/;"	f
PlaneDiff	mathlib.h	160;"	d
PlaneDist	mathlib.h	156;"	d
PlayQWZDemo	cl_demo.c	/^static void PlayQWZDemo (void)$/;"	f	file:
PlayTrackNum_f	mp3_player.h	/^	void  (*PlayTrackNum_f)  (void);$/;"	m	struct:__anon236
Play_f	mp3_player.h	/^	void  (*Play_f)          (void);$/;"	m	struct:__anon236
PlayerName_AllCaps	mp3_player.h	/^	const char *PlayerName_AllCaps;$/;"	m	struct:__anon236
PlayerName_LeadingCaps	mp3_player.h	/^	const char *PlayerName_LeadingCaps;$/;"	m	struct:__anon236
PlayerName_NoCaps	mp3_player.h	/^	const char *PlayerName_NoCaps;$/;"	m	struct:__anon236
PlayerPostThink	progdefs.h	/^	func_t	PlayerPostThink;$/;"	m	struct:__anon252
PlayerPreThink	progdefs.h	/^	func_t	PlayerPreThink;$/;"	m	struct:__anon252
Player_Compare	utils.c	/^static int Player_Compare (const void *p1, const void *p2) {$/;"	f	file:
Player_GetSlot	utils.c	/^int Player_GetSlot(char *arg) $/;"	f
Player_IdtoSlot	utils.c	/^int Player_IdtoSlot (int id) {$/;"	f
Player_MyName	utils.c	/^char *Player_MyName (void) {$/;"	f
Player_NametoSlot	utils.c	/^int Player_NametoSlot(char *name) {$/;"	f
Player_NumtoSlot	utils.c	/^int Player_NumtoSlot (int num) $/;"	f
Player_SlottoId	utils.c	/^int Player_SlottoId (int slot) {	$/;"	f
Player_StringtoSlot	utils.c	/^int Player_StringtoSlot(char *arg) $/;"	f
Player_StripNameColor	utils.c	/^char *Player_StripNameColor(const char *name)$/;"	f
Players_Draw	menu_multiplayer.c	/^static void Players_Draw(int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page)$/;"	f	file:
Players_Key	menu_multiplayer.c	/^static int Players_Key(int key, CTab_t *tab, CTabPage_t *page)$/;"	f	file:
Players_Mouse_Event	menu_multiplayer.c	/^static qbool Players_Mouse_Event(const mouse_state_t *ms)$/;"	f	file:
Players_disp	EX_browser.c	/^int Players_disp;   \/\/ player# at the top of the list$/;"	v
Players_pos	EX_browser.c	/^int Players_pos;$/;"	v
PowerOff_isDisabled	sys_win.c	/^static qbool PowerOff_isDisabled = false;$/;"	v	file:
Precache_Source	EX_browser_sources.c	/^void Precache_Source(source_data *s)$/;"	f
PrefGetInt	mac_prefs.c	/^PrefGetInt (CFStringRef key, int *value)$/;"	f
PrefGetStr	mac_prefs.c	/^PrefGetStr (CFStringRef key, char *value, size_t size)$/;"	f
PrefSetInt	mac_prefs.c	/^PrefSetInt (CFStringRef key, int value)$/;"	f
PrefSetStr	mac_prefs.c	/^PrefSetStr (CFStringRef key, const char *value)$/;"	f
Prev_f	mp3_player.h	/^	void  (*Prev_f)          (void);$/;"	m	struct:__anon236
PrintCDSError	win_glimp.c	/^static void PrintCDSError( int value )$/;"	f	file:
PrintPath	vfs.h	/^	void	(*PrintPath)(void *handle);$/;"	m	struct:__anon289
PrintPlaylist_f	mp3_player.h	/^	void  (*PrintPlaylist_f) (void);$/;"	m	struct:__anon236
Print_current	common.c	/^int Print_current = 0;$/;"	v
Print_flags	common.c	/^unsigned Print_flags[16];$/;"	v
ProjectPointOnPlane	mathlib.c	/^void ProjectPointOnPlane(vec3_t dst, const vec3_t p, const vec3_t normal) {$/;"	f
ProxyMenuCmd	menu_proxy.c	22;"	d	file:
ProxyMenuToggle	menu_proxy.c	21;"	d	file:
PtFuncCompare	ez_controls.h	/^typedef int (* PtFuncCompare)(const void *, const void *);$/;"	t
PutClientInServer	progdefs.h	/^	func_t	PutClientInServer;$/;"	m	struct:__anon252
Q1_BSPVERSION	bspfile.h	56;"	d
QGL_EnableLogging	linux_glimp.c	/^void	 QGL_EnableLogging( qbool enable ) { \/* TODO *\/ };$/;"	f
QGL_EnableLogging	win_glimp.c	/^void	 QGL_EnableLogging( qbool enable ) { \/* TODO *\/ };$/;"	f
QGL_Init	linux_glimp.c	/^qbool QGL_Init( const char *dllname ) {$/;"	f
QGL_Init	win_glimp.c	/^qbool QGL_Init( const char *dllname ) {$/;"	f
QGL_Shutdown	linux_glimp.c	/^void QGL_Shutdown( void ) {$/;"	f
QGL_Shutdown	win_glimp.c	/^void QGL_Shutdown( void ) {$/;"	f
QLIB_ERROR_MODULE_MISSING_PROC	modules.h	62;"	d
QLIB_ERROR_MODULE_NOT_FOUND	modules.h	61;"	d
QLIB_FREELIBRARY	modules.h	44;"	d
QLIB_FREELIBRARY	modules.h	58;"	d
QLIB_GETPROCADDRESS	modules.h	43;"	d
QLIB_GETPROCADDRESS	modules.h	57;"	d
QLIB_HANDLETYPE_T	modules.h	36;"	d
QLIB_HANDLETYPE_T	modules.h	46;"	d
QLIB_LIBRARY_EXTENSION	modules.h	37;"	d
QLIB_LIBRARY_EXTENSION	modules.h	48;"	d
QLIB_LIBRARY_EXTENSION	modules.h	50;"	d
QLIB_LOADLIBRARY	modules.h	38;"	d
QLIB_LOADLIBRARY	modules.h	52;"	d
QLib_Init	modules.c	/^void QLib_Init(void)$/;"	f
QLib_MissingModuleError	modules.c	/^void QLib_MissingModuleError(int errortype, char *libname, char *cmdline, char *features)$/;"	f
QLib_ProcessProcdef	modules.c	/^qbool QLib_ProcessProcdef(QLIB_HANDLETYPE_T handle, qlib_dllfunction_t *procdefs, int size)$/;"	f
QLib_RegisterModule	modules.c	/^void QLib_RegisterModule (qlib_id_t module, qlib_shutdown_fn shutdown)$/;"	f
QLib_Shutdown	modules.c	/^void QLib_Shutdown(void)$/;"	f
QLib_isModuleLoaded	modules.c	/^qbool QLib_isModuleLoaded(qlib_id_t module)$/;"	f
QMB_AllocParticles	gl_rpart.c	/^void QMB_AllocParticles (void) {$/;"	f
QMB_BlobExplosion	gl_rpart.c	/^void QMB_BlobExplosion (vec3_t org) {$/;"	f
QMB_ClearParticles	gl_rpart.c	/^void QMB_ClearParticles (void) {$/;"	f
QMB_DetpackExplosion	gl_rpart.c	/^void QMB_DetpackExplosion (vec3_t org) {$/;"	f
QMB_DrawParticles	gl_rpart.c	/^void QMB_DrawParticles (void) {$/;"	f
QMB_InfernoFlame	gl_rpart.c	/^void QMB_InfernoFlame (vec3_t org) {$/;"	f
QMB_InitParticles	gl_rpart.c	/^void QMB_InitParticles (void) {$/;"	f
QMB_LavaSplash	gl_rpart.c	/^void QMB_LavaSplash (vec3_t org) {$/;"	f
QMB_ParticleExplosion	gl_rpart.c	/^void QMB_ParticleExplosion (vec3_t org) {$/;"	f
QMB_ParticleRailTrail	gl_rpart.c	/^void QMB_ParticleRailTrail (vec3_t start, vec3_t end, int color_num) {$/;"	f
QMB_ParticleTrail	gl_rpart.c	/^void QMB_ParticleTrail (vec3_t start, vec3_t end, vec3_t *trail_origin, trail_type_t type) {$/;"	f
QMB_RunParticleEffect	gl_rpart.c	/^void QMB_RunParticleEffect (vec3_t org, vec3_t dir, int col, int count) {$/;"	f
QMB_StaticBubble	gl_rpart.c	/^void QMB_StaticBubble (entity_t *ent) {$/;"	f
QMB_TeleportSplash	gl_rpart.c	/^void QMB_TeleportSplash (vec3_t org) {$/;"	f
QMB_UpdateParticles	gl_rpart.c	/^static void QMB_UpdateParticles(void) {$/;"	f	file:
QS_INPUT	in_raw.h	22;"	d
QS_INPUT	in_raw.h	24;"	d
QS_RAWINPUT	in_raw.h	23;"	d
QTVBUFFERTIME	qtv.h	9;"	d
QTV_CL_HEADER	qtv.c	/^char *QTV_CL_HEADER(float qtv_ver, int qtv_ezquake_ext)$/;"	f
QTV_ChangeEvent	qtv.c	/^void QTV_ChangeEvent(qtvuser_t *user)$/;"	f
QTV_Cl_ForwardToServer_f	qtv.c	/^void QTV_Cl_ForwardToServer_f (void)$/;"	f
QTV_CloseRequest	cl_demo.c	/^void QTV_CloseRequest(qbool warn)$/;"	f
QTV_Cmd_ForwardToServer	qtv.c	/^void QTV_Cmd_ForwardToServer (void)$/;"	f
QTV_Cmd_Printf	qtv.c	/^void QTV_Cmd_Printf(int qtv_ext, char *fmt, ...)$/;"	f
QTV_EVENT_PREFIX	qtv.c	346;"	d	file:
QTV_EZQUAKE_EXT	qtv.h	19;"	d
QTV_EZQUAKE_EXT_DOWNLOAD	qtv.h	21;"	d
QTV_EZQUAKE_EXT_NUM	qtv.h	25;"	d
QTV_EZQUAKE_EXT_QTVUSERLIST	qtv.h	23;"	d
QTV_EZQUAKE_EXT_SETINFO	qtv.h	22;"	d
QTV_FILE_JOIN	cl_demo.c	3413;"	d	file:
QTV_FILE_OBSERVE	cl_demo.c	3414;"	d	file:
QTV_FILE_STREAM	cl_demo.c	3412;"	d	file:
QTV_ForwardToServerEx	qtv.c	/^void QTV_ForwardToServerEx (qbool skip_if_no_params, qbool use_first_argument)$/;"	f
QTV_FreeUser	qtv.c	/^static void QTV_FreeUser(qtvuser_t *user, qbool unlink)$/;"	f	file:
QTV_FreeUserList	qtv.c	/^void QTV_FreeUserList(void)$/;"	f
QTV_Init	qtv.c	/^void QTV_Init(void)$/;"	f
QTV_JoinEvent	qtv.c	/^void QTV_JoinEvent(qtvuser_t *user)$/;"	f
QTV_LeaveEvent	qtv.c	/^void QTV_LeaveEvent(qtvuser_t *user)$/;"	f
QTV_NewUser	qtv.c	/^static qtvuser_t *QTV_NewUser(qtvuser_t *user)$/;"	f	file:
QTV_PLAYBACK	qtv.h	11;"	d
QTV_Say_f	qtv.c	/^void QTV_Say_f (void)$/;"	f
QTV_SetUser	qtv.c	/^static void QTV_SetUser(qtvuser_t *to, qtvuser_t *from)$/;"	f	file:
QTV_UserById	qtv.c	/^static qtvuser_t *QTV_UserById(int id)$/;"	f	file:
QTV_VERSION	qtv.h	15;"	d
QUAD_INFO	mvd_utils_common.h	30;"	d
QUAKE_ID_PLAQUE_PATH	menu.c	105;"	d	file:
QUIT	sys_mac.c	/^static enum { QUIT, START, FAILED } action = START;$/;"	e	enum:__anon67	file:
QUL_ADD	qtv.h	/^	QUL_ADD,		\/\/ user joined$/;"	e	enum:__anon255
QUL_CHANGE	qtv.h	/^	QUL_CHANGE,		\/\/ user changed something like name or something$/;"	e	enum:__anon255
QUL_DEL	qtv.h	/^	QUL_DEL			\/\/ user dropped$/;"	e	enum:__anon255
QUL_NONE	qtv.h	/^	QUL_NONE = 0,	\/\/$/;"	e	enum:__anon255
QWDIRLEN	settings_page.c	555;"	d	file:
QWDIRLEN	settings_page.c	584;"	d	file:
QWURLProtocolButtonsHookProc	sys_win.c	/^LRESULT CALLBACK QWURLProtocolButtonsHookProc(int nCode, WPARAM wParam, LPARAM lParam)$/;"	f
QWZ_DECOMPRESSION_TIMEOUT_MS	cl_demo.c	60;"	d	file:
QW_CONFIGURATION	version.h	64;"	d
QW_CONFIGURATION	version.h	66;"	d
QW_PLATFORM	version.h	28;"	d
QW_PLATFORM	version.h	31;"	d
QW_PLATFORM	version.h	34;"	d
QW_PLATFORM	version.h	37;"	d
QW_PLATFORM	version.h	40;"	d
QW_PLATFORM	version.h	43;"	d
QW_PLATFORM	version.h	46;"	d
QW_PLATFORM	version.h	49;"	d
QW_PLATFORM	version.h	52;"	d
QW_RENDERER	version.h	57;"	d
QW_RENDERER	version.h	59;"	d
QW_URL_DEFAULTICON_REGKEY	cl_main.c	250;"	d	file:
QW_URL_OPEN_CMD_REGKEY	cl_main.c	249;"	d	file:
QW_VERSION	version.h	25;"	d
QW_strncmp	vx_stuff.c	/^int QW_strncmp (char *s1, char *s2)$/;"	f
Q_ROUND_POWER2	ffmpeg.c	45;"	d	file:
Q_ROUND_POWER2	mathlib.h	194;"	d
Q_atof	q_shared.c	/^float Q_atof (const char *str)$/;"	f
Q_atoi	q_shared.c	/^int Q_atoi (const char *str)$/;"	f
Q_calloc	q_shared.c	/^void *Q_calloc (size_t n, size_t size)$/;"	f
Q_free	q_shared.h	277;"	d
Q_ftos	q_shared.c	/^char *Q_ftos (float value)$/;"	f
Q_glob_match	q_shared.c	/^qbool Q_glob_match (const char *pattern, const char *text)$/;"	f
Q_glob_match_after_star	q_shared.c	/^static qbool Q_glob_match_after_star (const char *pattern, const char *text)$/;"	f	file:
Q_malloc	q_shared.c	/^void *Q_malloc (size_t size)$/;"	f
Q_realloc	q_shared.c	/^void *Q_realloc (void *p, size_t newsize)$/;"	f
Q_rint	mathlib.h	205;"	d
Q_rint	mathlib.h	208;"	d
Q_strdup	q_shared.c	/^char *Q_strdup (const char *src)$/;"	f
Q_stristr	linux_glimp.c	/^static const char *Q_stristr( const char *s, const char *find)$/;"	f	file:
Q_strlwr	q_shared.c	/^char *Q_strlwr( char *s1 ) {$/;"	f
Q_wcsdup	q_shared.c	/^wchar *Q_wcsdup (const wchar *src)$/;"	f
Qtvusers_f	qtv.c	/^void Qtvusers_f (void)$/;"	f
R0	sha1.h	51;"	d
R1	sha1.h	52;"	d
R2	sha1.h	53;"	d
R3	sha1.h	54;"	d
R4	sha1.h	55;"	d
RAD2DEG	mathlib.h	48;"	d
RADAR_BASE_PATH_FORMAT	hud_common.c	4108;"	d	file:
RADAR_SHOW_ITEMS	hud_common.c	5051;"	d	file:
RADAR_SHOW_OTHER	hud_common.c	5067;"	d	file:
RADAR_SHOW_WEAPONS	hud_common.c	5043;"	d	file:
RAIL_TRAIL	render.h	/^	RAIL_TRAIL,$/;"	e	enum:trail_type_s
RAIL_TRAIL2	render.h	/^	RAIL_TRAIL2,$/;"	e	enum:trail_type_s
RANK_WIDTH_BASICSTATS	sbar.c	1073;"	d	file:
RANK_WIDTH_CAPSTATS	sbar.c	1076;"	d	file:
RANK_WIDTH_DM	sbar.c	1078;"	d	file:
RANK_WIDTH_TCHSTATS	sbar.c	1075;"	d	file:
RANK_WIDTH_TEAM	sbar.c	1079;"	d	file:
RANK_WIDTH_TEAMSTATS	sbar.c	1074;"	d	file:
RAWHID	in_raw.h	/^} RAWHID,*PRAWHID,*LPRAWHID;$/;"	t	typeref:struct:tagRAWHID
RAWINPUT	in_raw.h	/^} RAWINPUT,*PRAWINPUT,*LPRAWINPUT;$/;"	t	typeref:struct:tagRAWINPUT
RAWINPUTDEVICE	in_raw.h	/^} RAWINPUTDEVICE,*PRAWINPUTDEVICE,*LPRAWINPUTDEVICE;$/;"	t	typeref:struct:tagRAWINPUTDEVICE
RAWINPUTDEVICELIST	in_raw.h	/^} RAWINPUTDEVICELIST,*PRAWINPUTDEVICELIST;$/;"	t	typeref:struct:tagRAWINPUTDEVICELIST
RAWINPUTHEADER	in_raw.h	/^} RAWINPUTHEADER,*PRAWINPUTHEADER;$/;"	t	typeref:struct:tagRAWINPUTHEADER
RAWKEYBOARD	in_raw.h	/^} RAWKEYBOARD,*PRAWKEYBOARD,*LPRAWKEYBOARD;$/;"	t	typeref:struct:tagRAWKEYBOARD
RAWMOUSE	in_raw.h	/^} RAWMOUSE,*PRAWMOUSE,*LPRAWMOUSE;$/;"	t	typeref:struct:tagRAWMOUSE
RA_INFO	mvd_utils_common.h	26;"	d
RD_CLIENT	server.h	/^typedef enum {RD_NONE, RD_CLIENT, RD_PACKET} redirect_t;$/;"	e	enum:__anon270
RD_NONE	server.h	/^typedef enum {RD_NONE, RD_CLIENT, RD_PACKET} redirect_t;$/;"	e	enum:__anon270
RD_PACKET	server.h	/^typedef enum {RD_NONE, RD_CLIENT, RD_PACKET} redirect_t;$/;"	e	enum:__anon270
READ_MVD_TIME	cl_demo.c	/^	READ_MVD_TIME	= 1,$/;"	e	enum:demoprobe_parse_type_e	file:
READ_QWD_TIME	cl_demo.c	/^	READ_QWD_TIME	= 2,$/;"	e	enum:demoprobe_parse_type_e	file:
REAL_COMPARE_EPSILON	parser.c	26;"	d	file:
RED	r_draw.c	1315;"	d	file:
REGARD_AS_MVD_COUNT	cl_demo.c	2507;"	d	file:
REGTYPE	vfs_tar.h	26;"	d
RESERVED_OFS	pr_comp.h	39;"	d
RESIZE_DOWN	ez_controls.c	/^	RESIZE_DOWN		= (1 << 3)$/;"	e	enum:__anon15	file:
RESIZE_LEFT	ez_controls.c	/^	RESIZE_LEFT		= (1 << 0),$/;"	e	enum:__anon15	file:
RESIZE_RIGHT	ez_controls.c	/^	RESIZE_RIGHT	= (1 << 1),$/;"	e	enum:__anon15	file:
RESIZE_UP	ez_controls.c	/^	RESIZE_UP		= (1 << 2),$/;"	e	enum:__anon15	file:
RET	mvd_autotrack.c	204;"	d	file:
RET	mvd_autotrack.c	215;"	d	file:
RETURN_EDICT	pr_cmds.c	25;"	d	file:
RETURN_STRING	pr_cmds.c	26;"	d	file:
RE_ENABLED	tp_triggers.h	31;"	d
RE_FINAL	tp_triggers.h	28;"	d
RE_Init	tr_init.c	/^void RE_Init( void ) {	$/;"	f
RE_NOACTION	tp_triggers.h	32;"	d
RE_NOLOG	tp_triggers.h	30;"	d
RE_PRINT_ALL	tp_triggers.h	27;"	d
RE_PRINT_CENTER	tp_triggers.h	24;"	d
RE_PRINT_CHAT	tp_triggers.h	23;"	d
RE_PRINT_ECHO	tp_triggers.h	25;"	d
RE_PRINT_HIGH	tp_triggers.h	22;"	d
RE_PRINT_INTERNAL	tp_triggers.h	26;"	d
RE_PRINT_LOW	tp_triggers.h	20;"	d
RE_PRINT_NEDIUM	tp_triggers.h	21;"	d
RE_REMOVESTR	tp_triggers.h	29;"	d
RE_Shutdown	tr_init.c	/^void RE_Shutdown( qbool destroyWindow ) {$/;"	f
RF_LIMITLERP	render.h	37;"	d
RF_NOSHADOW	render.h	36;"	d
RF_PLAYERMODEL	render.h	38;"	d
RF_WEAPONMODEL	render.h	35;"	d
RGBAVECT_TO_COLOR	common_draw.c	/^color_t RGBAVECT_TO_COLOR(byte rgba[4])$/;"	f
RGBA_TO_COLOR	common_draw.c	/^color_t RGBA_TO_COLOR(byte r, byte g, byte b, byte a) $/;"	f
RGB_COLOR_BLACK	utils.c	73;"	d	file:
RGB_COLOR_BLUE	utils.c	72;"	d	file:
RGB_COLOR_GREEN	utils.c	71;"	d	file:
RGB_COLOR_PINK	utils.c	76;"	d	file:
RGB_COLOR_RED	utils.c	70;"	d	file:
RGB_COLOR_WHITE	utils.c	74;"	d	file:
RGB_COLOR_YELLOW	utils.c	75;"	d	file:
RIDEV_APPKEYS	in_raw.h	71;"	d
RIDEV_CAPTUREMOUSE	in_raw.h	69;"	d
RIDEV_EXCLUDE	in_raw.h	65;"	d
RIDEV_INPUTSINK	in_raw.h	68;"	d
RIDEV_NOHOTKEYS	in_raw.h	70;"	d
RIDEV_NOLEGACY	in_raw.h	67;"	d
RIDEV_PAGEONLY	in_raw.h	66;"	d
RIDEV_REMOVE	in_raw.h	64;"	d
RIDI_DEVICEINFO	in_raw.h	63;"	d
RIDI_DEVICENAME	in_raw.h	62;"	d
RIDI_PREPARSEDDATA	in_raw.h	61;"	d
RID_HEADER	in_raw.h	60;"	d
RID_INPUT	in_raw.h	59;"	d
RIM_INPUT	in_raw.h	26;"	d
RIM_INPUTSINK	in_raw.h	27;"	d
RIM_TYPEHID	in_raw.h	30;"	d
RIM_TYPEKEYBOARD	in_raw.h	29;"	d
RIM_TYPEMOUSE	in_raw.h	28;"	d
RING_INFO	mvd_utils_common.h	31;"	d
RI_INVALID_POS	in_win.c	51;"	d	file:
RI_KEY_BREAK	in_raw.h	54;"	d
RI_KEY_E0	in_raw.h	55;"	d
RI_KEY_E1	in_raw.h	56;"	d
RI_KEY_MAKE	in_raw.h	53;"	d
RI_KEY_TERMSRV_SET_LED	in_raw.h	57;"	d
RI_KEY_TERMSRV_SHADOW	in_raw.h	58;"	d
RI_MOUSE_BUTTON_1_DOWN	in_raw.h	41;"	d
RI_MOUSE_BUTTON_1_UP	in_raw.h	42;"	d
RI_MOUSE_BUTTON_2_DOWN	in_raw.h	43;"	d
RI_MOUSE_BUTTON_2_UP	in_raw.h	44;"	d
RI_MOUSE_BUTTON_3_DOWN	in_raw.h	45;"	d
RI_MOUSE_BUTTON_3_UP	in_raw.h	46;"	d
RI_MOUSE_BUTTON_4_DOWN	in_raw.h	47;"	d
RI_MOUSE_BUTTON_4_UP	in_raw.h	48;"	d
RI_MOUSE_BUTTON_5_DOWN	in_raw.h	49;"	d
RI_MOUSE_BUTTON_5_UP	in_raw.h	50;"	d
RI_MOUSE_LEFT_BUTTON_DOWN	in_raw.h	35;"	d
RI_MOUSE_LEFT_BUTTON_UP	in_raw.h	36;"	d
RI_MOUSE_MIDDLE_BUTTON_DOWN	in_raw.h	39;"	d
RI_MOUSE_MIDDLE_BUTTON_UP	in_raw.h	40;"	d
RI_MOUSE_RIGHT_BUTTON_DOWN	in_raw.h	37;"	d
RI_MOUSE_RIGHT_BUTTON_UP	in_raw.h	38;"	d
RI_MOUSE_WHEEL	in_raw.h	51;"	d
RI_RAWBUTTON_MASK	in_win.c	50;"	d	file:
RL_INFO	mvd_utils_common.h	33;"	d
ROCKET_TRAIL	render.h	/^	ROCKET_TRAIL, GRENADE_TRAIL, ALT_ROCKET_TRAIL, BLOOD_TRAIL, BIG_BLOOD_TRAIL,$/;"	e	enum:trail_type_s
ROLL	mathlib.h	41;"	d
ROTATE_LEFT	md4.c	107;"	d	file:
RSERR_INVALID_FULLSCREEN	linux_glimp.c	/^  RSERR_INVALID_FULLSCREEN,$/;"	e	enum:__anon41	file:
RSERR_INVALID_FULLSCREEN	win_glimp.c	/^	RSERR_INVALID_FULLSCREEN,$/;"	e	enum:__anon96	file:
RSERR_INVALID_MODE	linux_glimp.c	/^  RSERR_INVALID_MODE,$/;"	e	enum:__anon41	file:
RSERR_INVALID_MODE	win_glimp.c	/^	RSERR_INVALID_MODE,$/;"	e	enum:__anon96	file:
RSERR_OK	linux_glimp.c	/^  RSERR_OK,$/;"	e	enum:__anon41	file:
RSERR_OK	win_glimp.c	/^	RSERR_OK,$/;"	e	enum:__anon96	file:
RSERR_UNKNOWN	linux_glimp.c	/^  RSERR_UNKNOWN$/;"	e	enum:__anon41	file:
RSERR_UNKNOWN	win_glimp.c	/^	RSERR_UNKNOWN$/;"	e	enum:__anon96	file:
RSSHOT_HEIGHT	client.h	887;"	d
RSSHOT_WIDTH	client.h	886;"	d
RTC_RATE	sys_linux.c	60;"	d	file:
R_AddDynamicLights	gl_rsurf.c	/^void R_AddDynamicLights (msurface_t *surf) {$/;"	f
R_AddDynamicLights	r_surf.c	/^void R_AddDynamicLights (void) {$/;"	f
R_AddEfrags	gl_refrag.c	/^void R_AddEfrags (entity_t *ent) {$/;"	f
R_AddEfrags	r_efrag.c	/^void R_AddEfrags (entity_t *ent) {$/;"	f
R_AddSkyBoxSurface	gl_warp.c	/^void R_AddSkyBoxSurface (msurface_t *fa) {$/;"	f
R_AliasCheckBBox	r_alias.c	/^qbool R_AliasCheckBBox (entity_t *ent) {$/;"	f
R_AliasCheckBBoxFrame	r_alias.c	/^void R_AliasCheckBBoxFrame (int frame, trivertx_t **mins, trivertx_t **maxs) {$/;"	f
R_AliasClip	r_aclip.c	/^int R_AliasClip (finalvert_t *in, finalvert_t *out, int flag, int count,$/;"	f
R_AliasClipTriangle	r_aclip.c	/^void R_AliasClipTriangle (mtriangle_t *ptri)$/;"	f
R_AliasDrawModel	r_alias.c	/^void R_AliasDrawModel (entity_t *ent) {$/;"	f
R_AliasPreparePoints	r_alias.c	/^void R_AliasPreparePoints (void) {$/;"	f
R_AliasPrepareUnclippedPoints	r_alias.c	/^void R_AliasPrepareUnclippedPoints (void) {$/;"	f
R_AliasProjectFinalVert	r_alias.c	/^void R_AliasProjectFinalVert (finalvert_t *fv, auxvert_t *av) {$/;"	f
R_AliasSetUpTransform	r_alias.c	/^void R_AliasSetUpTransform (int trivial_accept) {$/;"	f
R_AliasSetupFrame	r_alias.c	/^void R_AliasSetupFrame (entity_t *ent) {$/;"	f
R_AliasSetupFrameVerts	r_alias.c	/^void R_AliasSetupFrameVerts (int frame, trivertx_t **verts) {$/;"	f
R_AliasSetupLighting	gl_rmain.c	/^void R_AliasSetupLighting(entity_t *ent) {$/;"	f
R_AliasSetupLighting	r_alias.c	/^void R_AliasSetupLighting (entity_t *ent) {$/;"	f
R_AliasSetupSkin	r_alias.c	/^void R_AliasSetupSkin (entity_t *ent) {$/;"	f
R_AliasTransformAndProjectFinalVerts	r_alias.c	/^void R_AliasTransformAndProjectFinalVerts (finalvert_t *fv, stvert_t *pstverts) {$/;"	f
R_AliasTransformFinalVert	r_alias.c	/^void R_AliasTransformFinalVert (finalvert_t *fv, auxvert_t *av, trivertx_t *pverts1, trivertx_t *pverts2, stvert_t *pstverts) {$/;"	f
R_AliasTransformVector	r_alias.c	83;"	d	file:
R_Alias_clip_bottom	r_aclip.c	/^void R_Alias_clip_bottom (finalvert_t *pfv0, finalvert_t *pfv1,$/;"	f
R_Alias_clip_left	r_aclip.c	/^void R_Alias_clip_left (finalvert_t *pfv0, finalvert_t *pfv1, finalvert_t *out)$/;"	f
R_Alias_clip_right	r_aclip.c	/^void R_Alias_clip_right (finalvert_t *pfv0, finalvert_t *pfv1,$/;"	f
R_Alias_clip_top	r_aclip.c	/^void R_Alias_clip_top (finalvert_t *pfv0, finalvert_t *pfv1, finalvert_t *out)$/;"	f
R_Alias_clip_z	r_aclip.c	/^void R_Alias_clip_z (finalvert_t *pfv0, finalvert_t *pfv1, finalvert_t *out)$/;"	f
R_AnimateLight	gl_rlight.c	/^void R_AnimateLight (void) {$/;"	f
R_AnimateLight	r_light.c	/^void R_AnimateLight (void)$/;"	f
R_BeginEdgeFrame	r_edge.c	/^void R_BeginEdgeFrame (void)$/;"	f
R_BlendLightmaps	gl_rsurf.c	/^void R_BlendLightmaps (void) {$/;"	f
R_BloomBlend	gl_bloom.c	/^void R_BloomBlend (void)$/;"	f
R_Bloom_DownsampleView	gl_bloom.c	/^void R_Bloom_DownsampleView( void )$/;"	f
R_Bloom_DrawEffect	gl_bloom.c	/^void R_Bloom_DrawEffect( void )$/;"	f
R_Bloom_GeneratexDiamonds	gl_bloom.c	/^void R_Bloom_GeneratexDiamonds( void )$/;"	f
R_Bloom_InitBackUpTexture	gl_bloom.c	/^void R_Bloom_InitBackUpTexture( int width, int height )$/;"	f
R_Bloom_InitEffectTexture	gl_bloom.c	/^void R_Bloom_InitEffectTexture (void)$/;"	f
R_Bloom_InitTextures	gl_bloom.c	/^void R_Bloom_InitTextures( void )$/;"	f
R_Bloom_Quad	gl_bloom.c	120;"	d	file:
R_Bloom_SamplePass	gl_bloom.c	108;"	d	file:
R_BmodelCheckBBox	r_main.c	/^int R_BmodelCheckBBox (model_t *clmodel, float *minmaxs) {$/;"	f
R_BrightenScreen	gl_rmain.c	/^void R_BrightenScreen (void) {$/;"	f
R_BuildDLightList	r_surf.c	/^void R_BuildDLightList (void) {$/;"	f
R_BuildDlightList	gl_rsurf.c	/^void R_BuildDlightList (msurface_t *surf) {$/;"	f
R_BuildLightMap	gl_rsurf.c	/^void R_BuildLightMap (msurface_t *surf, byte *dest, int stride) {$/;"	f
R_BuildLightMap	r_surf.c	/^void R_BuildLightMap (void) {$/;"	f
R_CalcBeamVerts	gl_rpart.c	/^void R_CalcBeamVerts (float *vert, vec3_t org1, vec3_t org2, float width)$/;"	f
R_CharAvailable	gl_draw.c	/^qbool R_CharAvailable (wchar num)$/;"	f
R_CharAvailable	r_draw.c	/^qbool R_CharAvailable (wchar num)$/;"	f
R_CheckVariables	r_misc.c	/^void R_CheckVariables (void) {$/;"	f
R_CleanupSpan	r_edge.c	/^void R_CleanupSpan ()$/;"	f
R_Clear	gl_rmain.c	/^void R_Clear (void) {$/;"	f
R_ClearParticles	r_part.c	/^void R_ClearParticles(void) {$/;"	f
R_ClearTextureChains	gl_rsurf.c	/^static void R_ClearTextureChains(model_t *clmodel) {$/;"	f	file:
R_ClipEdge	r_rast.c	/^void R_ClipEdge (mvertex_t *pv0, mvertex_t *pv1, clipplane_t *clip) {$/;"	f
R_ClipSpriteFace	r_sprite.c	/^int R_ClipSpriteFace (int nump, clipplane_t *pclipplane) {$/;"	f
R_ConcatRotations	mathlib.c	/^void R_ConcatRotations (float in1[3][3], float in2[3][3], float out[3][3]) {$/;"	f
R_ConcatTransforms	mathlib.c	/^void R_ConcatTransforms (float in1[3][4], float in2[3][4], float out[3][4]) {$/;"	f
R_CullBox	gl_rmain.c	/^qbool R_CullBox (vec3_t mins, vec3_t maxs) {$/;"	f
R_CullSphere	gl_rmain.c	/^qbool R_CullSphere (vec3_t centre, float radius) {$/;"	f
R_DrawAlias3Model	gl_md3.c	/^void R_DrawAlias3Model (entity_t *ent)$/;"	f
R_DrawAliasModel	gl_rmain.c	/^void R_DrawAliasModel (entity_t *ent) {$/;"	f
R_DrawAlphaChain	gl_rsurf.c	/^void R_DrawAlphaChain (void) {$/;"	f
R_DrawBEntitiesOnList	r_main.c	/^void R_DrawBEntitiesOnList (visentlist_t *vislist) {$/;"	f
R_DrawBrushModel	gl_rsurf.c	/^void R_DrawBrushModel (entity_t *e) {$/;"	f
R_DrawCoronas	vx_coronas.c	/^void R_DrawCoronas(void)$/;"	f
R_DrawEntitiesOnList	gl_rmain.c	/^void R_DrawEntitiesOnList (visentlist_t *vislist) {$/;"	f
R_DrawEntitiesOnList	r_main.c	/^void R_DrawEntitiesOnList (visentlist_t *vislist) {$/;"	f
R_DrawFlat	gl_rsurf.c	/^void R_DrawFlat (model_t *model) {$/;"	f
R_DrawParticles	r_part.c	/^void R_DrawParticles(void) {$/;"	f
R_DrawRect8	r_draw.c	/^void R_DrawRect8 (vrect_t *prect, int rowbytes, byte *psrc, int transparent)$/;"	f
R_DrawSky	gl_warp.c	/^void R_DrawSky (void)$/;"	f
R_DrawSkyBox	gl_warp.c	/^static void R_DrawSkyBox (void)$/;"	f	file:
R_DrawSkyChain	gl_warp.c	/^void R_DrawSkyChain (void) {$/;"	f
R_DrawSkyDome	gl_warp.c	/^static void R_DrawSkyDome (void)$/;"	f	file:
R_DrawSolidClippedSubmodelPolygons	r_bsp.c	/^void R_DrawSolidClippedSubmodelPolygons (model_t *pmodel) {$/;"	f
R_DrawSprite	r_sprite.c	/^void R_DrawSprite (void) {$/;"	f
R_DrawSpriteModel	gl_rmain.c	/^void R_DrawSpriteModel (entity_t *e) {$/;"	f
R_DrawSubmodelPolygons	r_bsp.c	/^void R_DrawSubmodelPolygons (model_t *pmodel, int clipflags) {$/;"	f
R_DrawSurface	r_surf.c	/^qbool R_DrawSurface (void) {$/;"	f
R_DrawSurfaceBlock8_mip0	r_surf.c	/^void R_DrawSurfaceBlock8_mip0 (void) {$/;"	f
R_DrawSurfaceBlock8_mip1	r_surf.c	/^void R_DrawSurfaceBlock8_mip1 (void) {$/;"	f
R_DrawSurfaceBlock8_mip2	r_surf.c	/^void R_DrawSurfaceBlock8_mip2 (void) {$/;"	f
R_DrawSurfaceBlock8_mip3	r_surf.c	/^void R_DrawSurfaceBlock8_mip3 (void) {$/;"	f
R_DrawViewModel	gl_rmain.c	/^void R_DrawViewModel (void) {$/;"	f
R_DrawViewModel	r_main.c	/^void R_DrawViewModel (void) {$/;"	f
R_DrawWaterSurfaces	gl_rsurf.c	/^void R_DrawWaterSurfaces (void) {$/;"	f
R_DrawWorld	gl_rsurf.c	/^void R_DrawWorld (void) {$/;"	f
R_EdgeDrawing	r_main.c	/^void R_EdgeDrawing (void) {$/;"	f
R_EmitCachedEdge	r_rast.c	/^void R_EmitCachedEdge (void) {$/;"	f
R_EmitEdge	r_rast.c	/^void R_EmitEdge (mvertex_t *pv0, mvertex_t *pv1) {$/;"	f
R_EntityRotate	r_bsp.c	/^void R_EntityRotate (vec3_t vec) {$/;"	f
R_FindTopNode	r_main.c	/^mnode_t *R_FindTopNode (vec3_t mins, vec3_t maxs) {$/;"	f
R_GenSkyTile	r_sky.c	/^void R_GenSkyTile (void *pdest) {$/;"	f
R_GenerateSpans	r_edge.c	/^void R_GenerateSpans (void)$/;"	f
R_GenerateSpansBackward	r_edge.c	/^void R_GenerateSpansBackward (void)$/;"	f
R_GetModeInfo	tr_init.c	/^qbool R_GetModeInfo( int *width, int *height, float *windowAspect, int mode ) {$/;"	f
R_GetSpriteFrame	gl_rmain.c	/^mspriteframe_t *R_GetSpriteFrame (entity_t *e, msprite2_t *psprite) {$/;"	f
R_GetSpriteframe	r_sprite.c	/^mspriteframe_t *R_GetSpriteframe (msprite_t *psprite) {$/;"	f
R_Init	gl_rmain.c	/^void R_Init (void) {$/;"	f
R_Init	r_main.c	/^void R_Init (void) {$/;"	f
R_InitBloomTextures	gl_bloom.c	/^void R_InitBloomTextures( void )$/;"	f
R_InitBubble	gl_rlight.c	/^void R_InitBubble(void) {$/;"	f
R_InitOtherTextures	gl_rmisc.c	/^void R_InitOtherTextures (void) {$/;"	f
R_InitParticles	r_part.c	/^void R_InitParticles(void) {$/;"	f
R_InitSky	gl_warp.c	/^void R_InitSky (texture_t *mt) {$/;"	f
R_InitSky	r_sky.c	/^void R_InitSky (miptex_t *mt) {$/;"	f
R_InitTextures	gl_rmisc.c	/^void R_InitTextures (void) {$/;"	f
R_InitTextures	r_main.c	/^void R_InitTextures (void) {$/;"	f
R_InitTurb	r_main.c	/^void R_InitTurb (void) {$/;"	f
R_InsertNewEdges	r_edge.c	/^void R_InsertNewEdges (edge_t *edgestoadd, edge_t *edgelist)$/;"	f
R_LeadingEdge	r_edge.c	/^void R_LeadingEdge (edge_t *edge)$/;"	f
R_LeadingEdgeBackwards	r_edge.c	/^void R_LeadingEdgeBackwards (edge_t *edge)$/;"	f
R_LightPoint	gl_rlight.c	/^int R_LightPoint (vec3_t p)$/;"	f
R_LightPoint	r_light.c	/^int R_LightPoint (vec3_t p)$/;"	f
R_LineGraph	r_misc.c	/^void R_LineGraph (int x, int y, int h) {$/;"	f
R_LoadBrushModelTextures	gl_model.c	/^void R_LoadBrushModelTextures (model_t *m)$/;"	f
R_LoadSky_f	gl_warp.c	/^void R_LoadSky_f(void) {$/;"	f
R_MQW_LineGraph	r_misc.c	/^void R_MQW_LineGraph (int x, int y, int h, int graphheight,$/;"	f
R_MQW_NetGraph	gl_ngraph.c	/^void R_MQW_NetGraph(int outgoing_sequence, int incoming_sequence, int *packet_latency,$/;"	f
R_MQW_NetGraph	r_misc.c	/^void R_MQW_NetGraph(int outgoing_sequence, int incoming_sequence, int *packet_latency,$/;"	f
R_MakeSky	r_sky.c	/^void R_MakeSky (void) {$/;"	f
R_MarkLeaves	gl_rsurf.c	/^void R_MarkLeaves (void) {$/;"	f
R_MarkLeaves	r_main.c	/^void R_MarkLeaves (void) {$/;"	f
R_MarkLights	gl_rlight.c	/^void R_MarkLights (dlight_t *light, int bit, mnode_t *node)$/;"	f
R_MarkLights	r_light.c	/^void R_MarkLights (dlight_t *light, int bit, mnode_t *node)$/;"	f
R_MatchMode	tr_init.c	/^int R_MatchMode( int width, int height )$/;"	f
R_ModeList_f	tr_init.c	/^static void R_ModeList_f( void )$/;"	f	file:
R_ModelFlags	cl_nqdemo.c	26;"	d	file:
R_NewMap	gl_rmisc.c	/^void R_NewMap (qbool vid_restart) {$/;"	f
R_NewMap	r_main.c	/^void R_NewMap (void) {$/;"	f
R_ParticleTrail	r_part.c	/^void R_ParticleTrail (vec3_t start, vec3_t end, vec3_t *trail_origin, trail_type_t type) {$/;"	f
R_PolyBlend	gl_rmain.c	/^void R_PolyBlend (void) {$/;"	f
R_PreMapLoad	gl_rmisc.c	/^void R_PreMapLoad(char *name)$/;"	f
R_PreMapLoad	r_main.c	/^void R_PreMapLoad(char *name) { }$/;"	f
R_PrintAliasStats	r_misc.c	/^void R_PrintAliasStats (void) {$/;"	f
R_PrintDSpeeds	r_misc.c	/^void R_PrintDSpeeds (void) {$/;"	f
R_PrintTimes	r_misc.c	/^void R_PrintTimes (void) {$/;"	f
R_PushDlights	gl_rlight.c	/^void R_PushDlights (void)$/;"	f
R_PushDlights	r_light.c	/^void R_PushDlights (void)$/;"	f
R_ReadPointFile_f	r_part.c	/^void R_ReadPointFile_f (void) {$/;"	f
R_RecursiveClipBPoly	r_bsp.c	/^void R_RecursiveClipBPoly (bedge_t *pedges, mnode_t *pnode, msurface_t *psurf) {$/;"	f
R_RecursiveWorldNode	gl_rsurf.c	/^void R_RecursiveWorldNode (mnode_t *node, int clipflags) {$/;"	f
R_RecursiveWorldNode	r_bsp.c	/^void R_RecursiveWorldNode (mnode_t *node, int clipflags) {$/;"	f
R_Register	tr_init.c	/^void R_Register( void ) $/;"	f
R_RemoveEdges	r_edge.c	/^void R_RemoveEdges (edge_t *pedge)$/;"	f
R_RemoveEfrags	gl_refrag.c	/^void R_RemoveEfrags (entity_t *ent) {$/;"	f
R_RemoveEfrags	r_efrag.c	/^void R_RemoveEfrags (entity_t *ent) {$/;"	f
R_RenderBmodelFace	r_rast.c	/^void R_RenderBmodelFace (bedge_t *pedges, msurface_t *psurf) {$/;"	f
R_RenderDlight	gl_rlight.c	/^void R_RenderDlight (dlight_t *light) {$/;"	f
R_RenderDlights	gl_rlight.c	/^void R_RenderDlights (void) {$/;"	f
R_RenderDynamicLightmaps	gl_rsurf.c	/^void R_RenderDynamicLightmaps (msurface_t *fa) {$/;"	f
R_RenderFace	r_rast.c	/^void R_RenderFace (msurface_t *fa, int clipflags) {$/;"	f
R_RenderFullbrights	gl_rsurf.c	/^void R_RenderFullbrights (void) {$/;"	f
R_RenderLumas	gl_rsurf.c	/^void R_RenderLumas (void) {$/;"	f
R_RenderScene	gl_rmain.c	/^void R_RenderScene (void) {$/;"	f
R_RenderView	gl_rmain.c	/^void R_RenderView (void) {$/;"	f
R_RenderView	r_main.c	/^void R_RenderView (void) {$/;"	f
R_RenderView_	r_main.c	/^void R_RenderView_ (void) {$/;"	f
R_RenderWorld	r_bsp.c	/^void R_RenderWorld (void) {$/;"	f
R_RotateBmodel	r_bsp.c	/^void R_RotateBmodel (void) {$/;"	f
R_RotateForEntity	gl_rmain.c	/^void R_RotateForEntity (entity_t *e) {$/;"	f
R_RotateSprite	r_sprite.c	/^void R_RotateSprite (float beamlength) {$/;"	f
R_RunParticleEffect	r_part.c	/^void R_RunParticleEffect (vec3_t org, vec3_t dir, int color, int count) {$/;"	f
R_SKY_SMASK	d_local.h	31;"	d
R_SKY_TMASK	d_local.h	32;"	d
R_ScanEdges	r_edge.c	/^void R_ScanEdges (void)$/;"	f
R_SetFrustum	gl_rmain.c	/^void R_SetFrustum (void) {$/;"	f
R_SetSky	gl_warp.c	/^int R_SetSky(char *skyname)$/;"	f
R_SetSkyFrame	r_sky.c	/^void R_SetSkyFrame (void) {$/;"	f
R_SetUpFrustumIndexes	r_misc.c	/^void R_SetUpFrustumIndexes (void) {$/;"	f
R_SetViewports	gl_rmain.c	/^void R_SetViewports(int glx, int x, int gly, int y2, int w, int h, float max) $/;"	f
R_SetVrect	r_main.c	/^void R_SetVrect (vrect_t *pvrectin, vrect_t *pvrect, int lineadj) {$/;"	f
R_SetupAliasFrame	gl_rmain.c	/^void R_SetupAliasFrame (maliasframedesc_t *oldframe, maliasframedesc_t *frame, aliashdr_t *paliashdr, qbool mtex) {$/;"	f
R_SetupAndDrawSprite	r_sprite.c	/^void R_SetupAndDrawSprite (void) {$/;"	f
R_SetupFrame	gl_rmain.c	/^void R_SetupFrame (void) {$/;"	f
R_SetupFrame	r_misc.c	/^void R_SetupFrame (void) {$/;"	f
R_SetupGL	gl_rmain.c	/^void R_SetupGL (void) {$/;"	f
R_SplitEntityOnNode	gl_refrag.c	/^void R_SplitEntityOnNode (mnode_t *node) {$/;"	f
R_SplitEntityOnNode	r_efrag.c	/^void R_SplitEntityOnNode (mnode_t *node) {$/;"	f
R_StepActiveU	r_edge.c	/^void R_StepActiveU (edge_t *pedge)$/;"	f
R_StoreEfrags	gl_refrag.c	/^void R_StoreEfrags (efrag_t **ppefrag) {$/;"	f
R_StoreEfrags	r_efrag.c	/^void R_StoreEfrags (efrag_t **ppefrag) {$/;"	f
R_TextureAnimation	gl_rsurf.c	/^texture_t *R_TextureAnimation (texture_t *base) {$/;"	f
R_TextureAnimation	r_surf.c	/^texture_t *R_TextureAnimation (texture_t *base) {$/;"	f
R_TimeGraph	r_misc.c	/^void R_TimeGraph (void) {$/;"	f
R_TimeRefresh_f	gl_rmisc.c	/^void R_TimeRefresh_f (void) {$/;"	f
R_TimeRefresh_f	r_misc.c	/^void R_TimeRefresh_f (void) {$/;"	f
R_TrailingEdge	r_edge.c	/^void R_TrailingEdge (surf_t *surf, edge_t *edge)$/;"	f
R_TransformFrustum	r_misc.c	/^void R_TransformFrustum (void) {$/;"	f
R_TransformPlane	r_misc.c	/^void R_TransformPlane (mplane_t *p, float *normal, float *dist) {	$/;"	f
R_TranslatePlayerSkin	gl_rmisc.c	/^void R_TranslatePlayerSkin (int playernum) {$/;"	f
R_TranslatePlayerSkin	r_misc.c	/^void R_TranslatePlayerSkin (int playernum) {$/;"	f
R_UpdateCoronas	vx_coronas.c	/^void R_UpdateCoronas(void)$/;"	f
R_UploadLightMap	gl_rsurf.c	/^void R_UploadLightMap (int lightmapnum) {$/;"	f
R_ViewChanged	r_main.c	/^void R_ViewChanged (vrect_t *pvrect, int lineadj, float aspect) {$/;"	f
R_ZGraph	r_misc.c	/^void R_ZGraph (void) {$/;"	f
Radar_DrawEntities	hud_common.c	/^void Radar_DrawEntities(int x, int y, float scale, float player_size, int show_hold_areas)$/;"	f
Radar_DrawGrid	hud_common.c	/^void Radar_DrawGrid(stats_weight_grid_t *grid, int x, int y, float scale, int pic_width, int pic_height, int style)$/;"	f
Radar_DrawPlayers	hud_common.c	/^void Radar_DrawPlayers(int x, int y, int width, int height, float scale,$/;"	f
Radar_OnChangeHighlightColor	hud_common.c	/^void Radar_OnChangeHighlightColor(cvar_t *var, char *newval, qbool *cancel)$/;"	f
Radar_OnChangeItemFilter	hud_common.c	/^void Radar_OnChangeItemFilter(cvar_t *var, char *newval, qbool *cancel)$/;"	f
Radar_OnChangeOtherFilter	hud_common.c	/^void Radar_OnChangeOtherFilter(cvar_t *var, char *newval, qbool *cancel)$/;"	f
Radar_OnChangeWeaponFilter	hud_common.c	/^void Radar_OnChangeWeaponFilter(cvar_t *var, char *newval, qbool *cancel)$/;"	f
RadiusFromBounds	gl_model.c	/^float RadiusFromBounds (vec3_t mins, vec3_t maxs) {$/;"	f
RadiusFromBounds	r_model.c	/^float RadiusFromBounds (vec3_t mins, vec3_t maxs) {$/;"	f
RainSplash	gl_rpart.c	/^void RainSplash (vec3_t org)$/;"	f
RawValuePointer	in_win.c	/^PDWORD RawValuePointer (int axis) {$/;"	f
Rcon_Validate	sv_main.c	/^int Rcon_Validate (void) {$/;"	f
ReSearchDone	utils.c	/^void ReSearchDone (void)$/;"	f
ReSearchDone	utils.h	119;"	d
ReSearchInit	utils.c	/^qbool ReSearchInit (const char *wildcard)$/;"	f
ReSearchInit	utils.h	117;"	d
ReSearchMatch	utils.c	/^qbool ReSearchMatch (const char *str)$/;"	f
ReSearchMatch	utils.h	118;"	d
ReTrigger_func	tp_triggers.c	/^typedef void ReTrigger_func (pcre_trigger_t *);$/;"	t	file:
Re_Trigger_Copy_Subpatterns	tp_triggers.c	/^void Re_Trigger_Copy_Subpatterns (const char *s, int* offsets, int num, cvar_t *re_sub)$/;"	f
ReadBytes	fs.h	/^	int (*ReadBytes) (struct vfsfile_s *file, void *buffer, int bytestoread, vfserrno_t *err);$/;"	m	struct:vfsfile_s
ReadFile	vfs.h	/^	void	(*ReadFile)(void *handle, flocation_t *loc, char *buffer);	$/;"	m	struct:__anon289
ReadFromClipboard	utils.c	/^char *ReadFromClipboard(void)$/;"	f
ReadInt	EX_browser_net.c	/^int ReadInt (char *playerinfo, int *i)$/;"	f
ReadPQByte	cl_nqdemo.c	/^static int ReadPQByte (void) {$/;"	f	file:
ReadPQShort	cl_nqdemo.c	/^static int ReadPQShort (void) {$/;"	f	file:
ReadString	EX_browser_net.c	/^int ReadString (char *playerinfo, char *str)$/;"	f
Rebuild_All_Players	EX_browser.c	/^void Rebuild_All_Players(void)$/;"	f
Rebuild_Servers_List	EX_browser_sources.c	/^void Rebuild_Servers_List(void)$/;"	f
RecalcPositions	settings_page.c	/^static void RecalcPositions(settings_page* page)$/;"	f	file:
RecursiveHullTrace	cmodel.c	/^int RecursiveHullTrace (hulltrace_local_t *htl, int num, float p1f, float p2f, const vec3_t p1, const vec3_t p2)$/;"	f
RecursiveLightPoint	gl_rlight.c	/^int RecursiveLightPoint (vec3_t color, mnode_t *node, vec3_t start, vec3_t end)$/;"	f
RecursiveLightPoint	r_light.c	/^int RecursiveLightPoint (mnode_t *node, vec3_t start, vec3_t end)$/;"	f
Register_Functions	lua.c	/^static void Register_Functions(char *libname, lua_State *L, luaL_reg *methods, luaL_reg *meta)$/;"	f	file:
Reinsert_Node	linked_list.c	/^void Reinsert_Node(struct linked_list *list, struct linked_list_node *node, int (*compare_function)(void *match, void *against))$/;"	f
Release_Cursor_f	in_mac.c	/^void Release_Cursor_f (void)$/;"	f
ReloadPaletteAndColormap	cl_main.c	/^void ReloadPaletteAndColormap(void)$/;"	f
Reload_Sources	EX_browser_sources.c	/^void Reload_Sources(void)$/;"	f
RemoveColors	keys.c	/^static void RemoveColors (char *name, size_t len)$/;"	f	file:
RemoveFromFileSource	EX_browser_sources.c	/^void RemoveFromFileSource(source_data *source, server_data *serv)$/;"	f
RemoveLink	sv_world.c	/^static void RemoveLink (link_t *l) {$/;"	f	file:
RemoveReTrigger	tp_triggers.c	/^static void RemoveReTrigger (pcre_trigger_t *t)$/;"	f	file:
RemoveSourceProc	EX_browser.c	/^void RemoveSourceProc(void)$/;"	f
Remove_Lua_State	lua.c	/^void Remove_Lua_State(char *name)$/;"	f
RenderBlockChain	document_rendering.c	/^static void RenderBlockChain(document_rendering_context_t *cx, document_tag_t *tag)$/;"	f	file:
RenderDocument	Ctrl_PageViewer.c	/^static void RenderDocument(CPageViewer_t *viewer, int width)$/;"	f	file:
RenderFreeSection	document_rendering.c	/^void RenderFreeSection(document_rendered_section_t *section)$/;"	f
RenderInlineChain	document_rendering.c	/^static document_tag_t * RenderInlineChain(document_rendering_context_t *cx, document_tag_t *tag)$/;"	f	file:
Render_Dict	document_rendering.c	/^static void Render_Dict(document_rendering_context_t *cx, document_tag_dict_t *dict)$/;"	f	file:
Render_H	document_rendering.c	/^static void Render_H(document_rendering_context_t *cx, document_tag_h_t *h)$/;"	f	file:
Render_Hr	document_rendering.c	/^static void Render_Hr(document_rendering_context_t *cx, document_tag_hr_t *hr)$/;"	f	file:
Render_List	document_rendering.c	/^static void Render_List(document_rendering_context_t *cx, document_tag_list_t *list)$/;"	f	file:
Render_P	document_rendering.c	/^static void Render_P(document_rendering_context_t *cx, document_tag_p_t *p)$/;"	f	file:
Render_Pre	document_rendering.c	/^static void Render_Pre(document_rendering_context_t *cx, document_tag_pre_t *pre)$/;"	f	file:
Render_Section	document_rendering.c	/^static void Render_Section(document_rendering_context_t *cx, document_tag_section_t *p)$/;"	f	file:
Render_String	document_rendering.c	/^static void Render_String(document_rendering_context_t *cx, char *text)$/;"	f	file:
Repeat_f	mp3_player.h	/^	void  (*Repeat_f)        (void);$/;"	m	struct:__anon236
ReplaceChar	cl_parse.c	/^static void ReplaceChar(char *s, char from, char to)$/;"	f	file:
Replace_In_String	utils.c	/^void Replace_In_String (char *src, int n, char delim, int num_args, ...)$/;"	f
Request_Pings	sbar.c	/^void Request_Pings (void)$/;"	f
ResampleSfx	snd_mem.c	/^static void ResampleSfx (sfx_t *sfx, unsigned char *in_data, size_t in_length, const snd_format_t* in_format, unsigned char *out_data)$/;"	f	file:
Reserved	in_raw.h	/^	USHORT Reserved;$/;"	m	struct:tagRAWKEYBOARD
ResetBinds	config_manager.c	/^static void ResetBinds(void)$/;"	f	file:
ResetConfigs	config_manager.c	/^static void ResetConfigs(qbool resetall, qbool read_legacy_configs)$/;"	f	file:
ResetConfigs_f	config_manager.c	/^void ResetConfigs_f(void)$/;"	f
ResetFrameBuffer	vid_x11.c	/^static void ResetFrameBuffer (void)$/;"	f	file:
ResetGroupMembers	match_tools.c	/^static void ResetGroupMembers(mapgroup_t *group) {$/;"	f	file:
ResetMiscCommands	config_manager.c	/^static void ResetMiscCommands(void)$/;"	f	file:
ResetPlusCommands	config_manager.c	/^static void ResetPlusCommands(void)$/;"	f	file:
ResetSharedFrameBuffers	vid_x11.c	/^static void ResetSharedFrameBuffers (void)$/;"	f	file:
ResetSkyGroupMembers	match_tools.c	/^static void ResetSkyGroupMembers(skygroup_t *group) {$/;"	f	file:
ResetTeamplayCommands	config_manager.c	/^static void ResetTeamplayCommands(void)$/;"	f	file:
ResetVariables	config_manager.c	/^static void ResetVariables(int cvar_flags, qbool userinfo)$/;"	f	file:
Reset_Server	EX_browser.c	/^void Reset_Server (server_data *s)$/;"	f
Reset_Source	EX_browser_sources.c	/^void Reset_Source(source_data *s)$/;"	f
ResolutionRead	menu_options.c	/^const char* ResolutionRead(void) { return glmodes[bound(0, mvs_selected.res, glmodes_size-1)]; }$/;"	f
ResolutionToggle	menu_options.c	/^void ResolutionToggle(qbool back) {$/;"	f
RestoreHWGamma	vid_glx.c	/^void RestoreHWGamma (void) {$/;"	f
RestoreHWGamma	vid_mac.c	/^void RestoreHWGamma (void)$/;"	f
RestoreHWGamma	vid_wgl.c	/^static void RestoreHWGamma(void) {$/;"	f	file:
Rewind_f	mp3_player.h	/^	void  (*Rewind_f)        (void);$/;"	m	struct:__anon236
RotatePointAroundVector	mathlib.c	/^void RotatePointAroundVector(vec3_t dst, const vec3_t dir, const vec3_t point, float degrees) {$/;"	f
RuleSets_DisallowExternalTexture	rulesets.c	/^qbool RuleSets_DisallowExternalTexture (model_t *mod)$/;"	f
Rulesets_AllowNoShadows	rulesets.c	/^qbool Rulesets_AllowNoShadows (void)$/;"	f
Rulesets_AllowTimerefresh	rulesets.c	/^qbool Rulesets_AllowTimerefresh (void)$/;"	f
Rulesets_Default	rulesets.c	/^static void Rulesets_Default (void)$/;"	f	file:
Rulesets_Init	rulesets.c	/^void Rulesets_Init (void)$/;"	f
Rulesets_MTFL	rulesets.c	/^static void Rulesets_MTFL (qbool enable)$/;"	f	file:
Rulesets_MaxFPS	rulesets.c	/^float Rulesets_MaxFPS (void)$/;"	f
Rulesets_OnChange_allow_scripts	rulesets.c	/^void Rulesets_OnChange_allow_scripts (cvar_t *var, char *value, qbool *cancel)$/;"	f
Rulesets_OnChange_cl_fakeshaft	rulesets.c	/^void Rulesets_OnChange_cl_fakeshaft (cvar_t *var, char *value, qbool *cancel)$/;"	f
Rulesets_OnChange_indphys	rulesets.c	/^void Rulesets_OnChange_indphys (cvar_t *var, char *value, qbool *cancel)$/;"	f
Rulesets_OnChange_r_fullbrightSkins	rulesets.c	/^void Rulesets_OnChange_r_fullbrightSkins (cvar_t *var, char *value, qbool *cancel)$/;"	f
Rulesets_OnChange_ruleset	rulesets.c	/^static void Rulesets_OnChange_ruleset (cvar_t *var, char *value, qbool *cancel)$/;"	f	file:
Rulesets_RestrictPacket	rulesets.c	/^qbool Rulesets_RestrictPacket (void)$/;"	f
Rulesets_RestrictParticles	rulesets.c	/^qbool Rulesets_RestrictParticles (void)$/;"	f
Rulesets_RestrictTriggers	rulesets.c	/^qbool Rulesets_RestrictTriggers (void)$/;"	f
Rulesets_Ruleset	rulesets.c	/^char *Rulesets_Ruleset (void)$/;"	f
Rulesets_Smackdown	rulesets.c	/^static void Rulesets_Smackdown (qbool enable)$/;"	f	file:
RunParticleEffect	r_part.c	873;"	d	file:
Run_Script_In_Lua_State	lua.c	/^void Run_Script_In_Lua_State(char *name, char *script)$/;"	f
S	parser.c	/^LOCAL expr_val S(EParser p) { return C(p); }$/;"	f
S11	md4.c	80;"	d	file:
S12	md4.c	81;"	d	file:
S13	md4.c	82;"	d	file:
S14	md4.c	83;"	d	file:
S21	md4.c	84;"	d	file:
S22	md4.c	85;"	d	file:
S23	md4.c	86;"	d	file:
S24	md4.c	87;"	d	file:
S2C_CHALLENGE	protocol.h	83;"	d
S2C_CONNECTION	protocol.h	84;"	d
S2M_HEARTBEAT	protocol.h	91;"	d
S2M_SHUTDOWN	protocol.h	93;"	d
S31	md4.c	88;"	d	file:
S32	md4.c	89;"	d	file:
S33	md4.c	90;"	d	file:
S34	md4.c	91;"	d	file:
SAVEGAME_COMMENT_LENGTH	common.h	52;"	d
SAVEGAME_COMMENT_LENGTH	sv_save.c	30;"	d	file:
SAVEGAME_VERSION	sv_save.c	31;"	d	file:
SAYSTRING_COLORED_FILTERMARK	cl_cmd.c	60;"	d	file:
SAYSTRING_UNCOLORED_FILTERMARK	cl_cmd.c	59;"	d	file:
SBAR_HEIGHT	sbar.h	24;"	d
SBPG_CREATEGAME	menu_multiplayer.h	/^	SBPG_CREATEGAME   \/\/ Host Game page$/;"	e	enum:__anon181
SBPG_OPTIONS	menu_multiplayer.h	/^	SBPG_OPTIONS,	\/\/ Options page$/;"	e	enum:__anon181
SBPG_PLAYERS	menu_multiplayer.h	/^	SBPG_PLAYERS,	\/\/ Players page$/;"	e	enum:__anon181
SBPG_SERVERS	menu_multiplayer.h	/^	SBPG_SERVERS,	\/\/ Servers page$/;"	e	enum:__anon181
SBPG_SOURCES	menu_multiplayer.h	/^	SBPG_SOURCES,	\/\/ Sources page$/;"	e	enum:__anon181
SB_Confirmation	EX_browser.c	/^void SB_Confirmation (const char *text, void (*func)(void))$/;"	f
SB_Confirmation_Draw	EX_browser.c	/^void SB_Confirmation_Draw (void)$/;"	f
SB_Confirmation_Key	EX_browser.c	/^void SB_Confirmation_Key (int key)$/;"	f
SB_Players_Draw	EX_browser.c	/^void SB_Players_Draw (int x, int y, int w, int h)$/;"	f
SB_Players_Key	EX_browser.c	/^int SB_Players_Key(int key)$/;"	f
SB_Players_Mouse_Event	EX_browser.c	/^qbool SB_Players_Mouse_Event(const mouse_state_t *ms)$/;"	f
SB_RootInit	EX_browser_ping.c	/^void SB_RootInit(void)$/;"	f
SB_Servers_Draw	EX_browser.c	/^void SB_Servers_Draw (int x, int y, int w, int h)$/;"	f
SB_Servers_Key	EX_browser.c	/^int SB_Servers_Key(int key)$/;"	f
SB_Servers_Mouse_Event	EX_browser.c	/^qbool SB_Servers_Mouse_Event(const mouse_state_t *ms)$/;"	f
SB_Servers_OnShow	EX_browser.c	/^void SB_Servers_OnShow (void)$/;"	f
SB_SourceMark	EX_browser.c	/^void SB_SourceMark(void)$/;"	f
SB_SourceUnmarkAll	EX_browser.c	/^void SB_SourceUnmarkAll(void)$/;"	f
SB_Sources_Draw	EX_browser.c	/^void SB_Sources_Draw (int x, int y, int w, int h)$/;"	f
SB_Sources_Key	EX_browser.c	/^int SB_Sources_Key(int key)$/;"	f
SB_Sources_Mouse_Event	EX_browser.c	/^qbool SB_Sources_Mouse_Event(const mouse_state_t *ms)$/;"	f
SB_Specials_Draw	EX_browser.c	/^void SB_Specials_Draw(void)$/;"	f
SB_Specials_Key	EX_browser.c	/^qbool SB_Specials_Key(int key)$/;"	f
SB_Test_CalcNet	EX_browser_ping.c	/^void SB_Test_CalcNet(void)$/;"	f
SB_Test_Change	EX_browser_ping.c	/^void SB_Test_Change(char *address)$/;"	f
SB_Test_Draw	EX_browser_ping.c	/^void SB_Test_Draw(void)$/;"	f
SB_Test_Frame	EX_browser_ping.c	/^void SB_Test_Frame(void)$/;"	f
SB_Test_GetPackets	EX_browser_ping.c	/^void SB_Test_GetPackets(void)$/;"	f
SB_Test_Init	EX_browser_ping.c	/^void SB_Test_Init(char *address)$/;"	f
SB_Test_SendPacket	EX_browser_ping.c	/^void SB_Test_SendPacket(void)$/;"	f
SCANBUFFERPAD	d_local.h	29;"	d
SCOREBOARD_ALPHA	sbar.c	1082;"	d	file:
SCOREBOARD_HEADINGALPHA	sbar.c	1083;"	d	file:
SCOREBOARD_LASTROW	sbar.c	1071;"	d	file:
SCRBARSCALE	Ctrl_ScrollBar.c	18;"	d	file:
SCRB_DrawNoPics	Ctrl_ScrollBar.c	/^static void SCRB_DrawNoPics(PScrollBar scrbar, int x, int y, int h)$/;"	f	file:
SCRB_DrawPics	Ctrl_ScrollBar.c	/^static void SCRB_DrawPics(PScrollBar scrbar, int x, int y, int h)$/;"	f	file:
SCROLLBAR_BUTTON_QCOLOR	Ctrl_ScrollBar.c	120;"	d	file:
SCROLLBAR_QCOLOR	Ctrl_ScrollBar.c	119;"	d	file:
SCROLLBAR_SLIDER_QCOLOR	Ctrl_ScrollBar.c	121;"	d	file:
SCROLL_LEFT	EX_FileList.c	1718;"	d	file:
SCROLL_RIGHT	EX_FileList.c	1717;"	d	file:
SCR_AutoScreenshot	cl_screen.c	/^void SCR_AutoScreenshot(char *matchname)$/;"	f
SCR_BeginLoadingPlaque	cl_screen.c	/^void SCR_BeginLoadingPlaque (void) {$/;"	f
SCR_BlinkNow	common_draw.c	/^static qbool SCR_BlinkNow(void)$/;"	f	file:
SCR_CalcRefdef	cl_screen.c	/^static void SCR_CalcRefdef (void) {$/;"	f	file:
SCR_CenterPrint	cl_screen.c	/^void SCR_CenterPrint (char *str)$/;"	f
SCR_CheckAutoScreenshot	cl_screen.c	/^static void SCR_CheckAutoScreenshot(void) {$/;"	f	file:
SCR_CheckDrawCenterString	cl_screen.c	/^void SCR_CheckDrawCenterString (void) {$/;"	f
SCR_CheckMVScreenshot	cl_screen.c	/^static void SCR_CheckMVScreenshot(void)$/;"	f	file:
SCR_ClearShownick	cl_screen.c	/^void SCR_ClearShownick(void)$/;"	f
SCR_ClearTeamInfo	cl_screen.c	/^void SCR_ClearTeamInfo(void)$/;"	f
SCR_ClearWeaponStats	cl_screen.c	/^void SCR_ClearWeaponStats(void)$/;"	f
SCR_DrawAMFstats	vx_stuff.c	/^void SCR_DrawAMFstats (void)$/;"	f
SCR_DrawAutoID	cl_screen.c	/^void SCR_DrawAutoID (void)$/;"	f
SCR_DrawAutoIDStatus	cl_screen.c	/^void SCR_DrawAutoIDStatus (autoid_player_t *autoid_p, int x, int y)$/;"	f
SCR_DrawBigClock	common_draw.c	/^void SCR_DrawBigClock(int x, int y, int style, int blink, float scale, const char *t)$/;"	f
SCR_DrawCenterString	cl_screen.c	/^void SCR_DrawCenterString (void)$/;"	f
SCR_DrawClock	cl_screen.c	/^void SCR_DrawClock (void) {$/;"	f
SCR_DrawConsole	cl_screen.c	/^void SCR_DrawConsole (void) {$/;"	f
SCR_DrawCursor	cl_screen.c	/^static void SCR_DrawCursor(void) {$/;"	f	file:
SCR_DrawDemoClock	cl_screen.c	/^void SCR_DrawDemoClock (void) {$/;"	f
SCR_DrawElements	cl_screen.c	/^void SCR_DrawElements(void) {$/;"	f
SCR_DrawFPS	cl_screen.c	/^void SCR_DrawFPS (void) {$/;"	f
SCR_DrawFill	common_draw.c	/^void SCR_DrawFill(int x, int y, int w, int h, int c, float opacity)$/;"	f
SCR_DrawGameClock	cl_screen.c	/^void SCR_DrawGameClock (void) {$/;"	f
SCR_DrawHUDSpeed	common_draw.c	/^void SCR_DrawHUDSpeed (int x, int y, int width, int height,$/;"	f
SCR_DrawHud	cl_screen.c	/^void SCR_DrawHud (void)$/;"	f
SCR_DrawLoading	cl_screen.c	/^void SCR_DrawLoading (void) {$/;"	f
SCR_DrawMVStatus	cl_screen.c	/^void SCR_DrawMVStatus(void)$/;"	f
SCR_DrawMVStatusStrings	cl_screen.c	/^void SCR_DrawMVStatusStrings(void)$/;"	f
SCR_DrawMVStatusView	cl_screen.c	/^void SCR_DrawMVStatusView(mv_viewrect_t *view, int style, int position, qbool flip, qbool vertical)$/;"	f
SCR_DrawMultiviewBorders	cl_screen.c	/^void SCR_DrawMultiviewBorders()$/;"	f
SCR_DrawNet	cl_screen.c	/^void SCR_DrawNet (void) {$/;"	f
SCR_DrawNotify	console.c	/^void SCR_DrawNotify(int posX, int posY, float scale, int notifyTime, int notifyLines, int notifyCols)$/;"	f
SCR_DrawPause	cl_screen.c	/^void SCR_DrawPause (void) {$/;"	f
SCR_DrawQTVBuffer	cl_screen.c	/^void SCR_DrawQTVBuffer (void)$/;"	f
SCR_DrawRam	cl_screen.c	/^void SCR_DrawRam (void) {$/;"	f
SCR_DrawSmallClock	common_draw.c	/^void SCR_DrawSmallClock(int x, int y, int style, int blink, float scale, const char *t)$/;"	f
SCR_DrawSpeed	cl_screen.c	/^void SCR_DrawSpeed (void) {$/;"	f
SCR_DrawTurtle	cl_screen.c	/^void SCR_DrawTurtle (void) {$/;"	f
SCR_DrawWordWrapString	common_draw.c	/^void SCR_DrawWordWrapString(int x, int y, int y_spacing, int width, int height, int wordwrap, int scroll, double scroll_delay, char *txt)$/;"	f
SCR_Draw_ShowNick	cl_screen.c	/^static void SCR_Draw_ShowNick(void)$/;"	f	file:
SCR_Draw_TeamInfo	cl_screen.c	/^static void SCR_Draw_TeamInfo(void)$/;"	f	file:
SCR_Draw_TeamInfoPlayer	cl_screen.c	/^static int SCR_Draw_TeamInfoPlayer(ti_player_t *ti_cl, int x, int y, int maxname, int maxloc, qbool width_only, qbool its_shownick)$/;"	f	file:
SCR_Draw_WeaponStats	cl_screen.c	/^static void SCR_Draw_WeaponStats(void)$/;"	f	file:
SCR_Draw_WeaponStatsPlayer	cl_screen.c	/^static int SCR_Draw_WeaponStatsPlayer(ws_player_t *ws_cl, int x, int y, qbool width_only)$/;"	f	file:
SCR_EndLoadingPlaque	cl_nqdemo.c	21;"	d	file:
SCR_EndLoadingPlaque	cl_screen.c	/^void SCR_EndLoadingPlaque (void) {$/;"	f
SCR_EraseCenterString	cl_screen.c	/^void SCR_EraseCenterString (void) {$/;"	f
SCR_GetActiveWeaponIcon	cl_screen.c	/^mpic_t *SCR_GetActiveWeaponIcon()$/;"	f
SCR_GetClockStringHeight	common_draw.c	/^int SCR_GetClockStringHeight(qbool big, float scale)$/;"	f
SCR_GetClockStringWidth	common_draw.c	/^int SCR_GetClockStringWidth(const char *s, qbool big, float scale)$/;"	f
SCR_GetCursorScale	cl_screen.c	/^static double SCR_GetCursorScale(void) {$/;"	f	file:
SCR_GetDemoTime	common_draw.c	/^char* SCR_GetDemoTime()$/;"	f
SCR_GetGameTime	common_draw.c	/^char* SCR_GetGameTime(int t)$/;"	f
SCR_GetScreenShotName	cl_screen.c	/^int SCR_GetScreenShotName (char *name, int name_size, char *sshot_dir)$/;"	f
SCR_GetTime	common_draw.c	/^const char* SCR_GetTime (const char *format)$/;"	f
SCR_GetTimeString	common_draw.c	/^const char* SCR_GetTimeString(int timetype, const char *format)$/;"	f
SCR_GetWeaponIconByFlag	cl_screen.c	/^mpic_t * SCR_GetWeaponIconByFlag (int flag)$/;"	f
SCR_GetWeaponIconByWeaponNumber	cl_screen.c	/^mpic_t *SCR_GetWeaponIconByWeaponNumber (int num)$/;"	f
SCR_GetWeaponShortNameByFlag	cl_screen.c	/^char *SCR_GetWeaponShortNameByFlag (int flag)$/;"	f
SCR_HUD_ClockFormat	hud_common.c	/^static const char *SCR_HUD_ClockFormat(int format)$/;"	f	file:
SCR_HUD_DrawAmmo	hud_common.c	/^void SCR_HUD_DrawAmmo(hud_t *hud, int num,$/;"	f
SCR_HUD_DrawAmmo1	hud_common.c	/^void SCR_HUD_DrawAmmo1(hud_t *hud)$/;"	f
SCR_HUD_DrawAmmo2	hud_common.c	/^void SCR_HUD_DrawAmmo2(hud_t *hud)$/;"	f
SCR_HUD_DrawAmmo3	hud_common.c	/^void SCR_HUD_DrawAmmo3(hud_t *hud)$/;"	f
SCR_HUD_DrawAmmo4	hud_common.c	/^void SCR_HUD_DrawAmmo4(hud_t *hud)$/;"	f
SCR_HUD_DrawAmmoCurrent	hud_common.c	/^void SCR_HUD_DrawAmmoCurrent(hud_t *hud)$/;"	f
SCR_HUD_DrawAmmoIcon	hud_common.c	/^void SCR_HUD_DrawAmmoIcon(hud_t *hud, int num, float scale, int style)$/;"	f
SCR_HUD_DrawAmmoIcon1	hud_common.c	/^void SCR_HUD_DrawAmmoIcon1 (hud_t *hud)$/;"	f
SCR_HUD_DrawAmmoIcon2	hud_common.c	/^void SCR_HUD_DrawAmmoIcon2 (hud_t *hud)$/;"	f
SCR_HUD_DrawAmmoIcon3	hud_common.c	/^void SCR_HUD_DrawAmmoIcon3 (hud_t *hud)$/;"	f
SCR_HUD_DrawAmmoIcon4	hud_common.c	/^void SCR_HUD_DrawAmmoIcon4 (hud_t *hud)$/;"	f
SCR_HUD_DrawAmmoIconCurrent	hud_common.c	/^void SCR_HUD_DrawAmmoIconCurrent (hud_t *hud)$/;"	f
SCR_HUD_DrawArmor	hud_common.c	/^void SCR_HUD_DrawArmor(hud_t *hud)$/;"	f
SCR_HUD_DrawArmorDamage	hud_common.c	/^void SCR_HUD_DrawArmorDamage(hud_t *hud)$/;"	f
SCR_HUD_DrawArmorIcon	hud_common.c	/^void SCR_HUD_DrawArmorIcon(hud_t *hud)$/;"	f
SCR_HUD_DrawClock	hud_common.c	/^void SCR_HUD_DrawClock(hud_t *hud)$/;"	f
SCR_HUD_DrawDemoClock	hud_common.c	/^void SCR_HUD_DrawDemoClock(hud_t *hud)$/;"	f
SCR_HUD_DrawFPS	hud_common.c	/^void SCR_HUD_DrawFPS(hud_t *hud)$/;"	f
SCR_HUD_DrawFace	hud_common.c	/^void SCR_HUD_DrawFace(hud_t *hud)$/;"	f
SCR_HUD_DrawFrags	hud_common.c	/^void SCR_HUD_DrawFrags(hud_t *hud)$/;"	f
SCR_HUD_DrawGameClock	hud_common.c	/^void SCR_HUD_DrawGameClock(hud_t *hud)$/;"	f
SCR_HUD_DrawGroup	hud_common.c	/^void SCR_HUD_DrawGroup(hud_t *hud, int width, int height, mpic_t *pic, int pic_scalemode, float pic_alpha)$/;"	f
SCR_HUD_DrawGun2	hud_common.c	/^void SCR_HUD_DrawGun2 (hud_t *hud)$/;"	f
SCR_HUD_DrawGun3	hud_common.c	/^void SCR_HUD_DrawGun3 (hud_t *hud)$/;"	f
SCR_HUD_DrawGun4	hud_common.c	/^void SCR_HUD_DrawGun4 (hud_t *hud)$/;"	f
SCR_HUD_DrawGun5	hud_common.c	/^void SCR_HUD_DrawGun5 (hud_t *hud)$/;"	f
SCR_HUD_DrawGun6	hud_common.c	/^void SCR_HUD_DrawGun6 (hud_t *hud)$/;"	f
SCR_HUD_DrawGun7	hud_common.c	/^void SCR_HUD_DrawGun7 (hud_t *hud)$/;"	f
SCR_HUD_DrawGun8	hud_common.c	/^void SCR_HUD_DrawGun8 (hud_t *hud)$/;"	f
SCR_HUD_DrawGunByNum	hud_common.c	/^void SCR_HUD_DrawGunByNum (hud_t *hud, int num, float scale, int style, int wide)$/;"	f
SCR_HUD_DrawGunCurrent	hud_common.c	/^void SCR_HUD_DrawGunCurrent (hud_t *hud)$/;"	f
SCR_HUD_DrawHealth	hud_common.c	/^void SCR_HUD_DrawHealth(hud_t *hud)$/;"	f
SCR_HUD_DrawHealthDamage	hud_common.c	/^void SCR_HUD_DrawHealthDamage(hud_t *hud)$/;"	f
SCR_HUD_DrawKey1	hud_common.c	/^void SCR_HUD_DrawKey1(hud_t *hud)$/;"	f
SCR_HUD_DrawKey2	hud_common.c	/^void SCR_HUD_DrawKey2(hud_t *hud)$/;"	f
SCR_HUD_DrawKeys	hud_common.c	/^void SCR_HUD_DrawKeys(hud_t *hud)$/;"	f
SCR_HUD_DrawMP3_Time	hud_common.c	/^void SCR_HUD_DrawMP3_Time(hud_t *hud)$/;"	f
SCR_HUD_DrawMP3_Title	hud_common.c	/^void SCR_HUD_DrawMP3_Title(hud_t *hud)$/;"	f
SCR_HUD_DrawMouserate	hud_common.c	/^void SCR_HUD_DrawMouserate(hud_t *hud)$/;"	f
SCR_HUD_DrawNetStats	hud_common.c	/^void SCR_HUD_DrawNetStats(hud_t *hud)$/;"	f
SCR_HUD_DrawNotify	hud_common.c	/^void SCR_HUD_DrawNotify(hud_t* hud)$/;"	f
SCR_HUD_DrawNum	hud_common.c	/^void SCR_HUD_DrawNum(hud_t *hud, int num, qbool low,$/;"	f
SCR_HUD_DrawOwnFrags	hud_common.c	/^void SCR_HUD_DrawOwnFrags(hud_t *hud)$/;"	f
SCR_HUD_DrawPent	hud_common.c	/^void SCR_HUD_DrawPent(hud_t *hud)$/;"	f
SCR_HUD_DrawPing	hud_common.c	/^void SCR_HUD_DrawPing(hud_t *hud)$/;"	f
SCR_HUD_DrawPowerup	hud_common.c	/^void SCR_HUD_DrawPowerup(hud_t *hud, int num, float scale, int style)$/;"	f
SCR_HUD_DrawQuad	hud_common.c	/^void SCR_HUD_DrawQuad(hud_t *hud)$/;"	f
SCR_HUD_DrawRadar	hud_common.c	/^void SCR_HUD_DrawRadar(hud_t *hud)$/;"	f
SCR_HUD_DrawRing	hud_common.c	/^void SCR_HUD_DrawRing(hud_t *hud)$/;"	f
SCR_HUD_DrawSigil	hud_common.c	/^void SCR_HUD_DrawSigil(hud_t *hud, int num, float scale, int style)$/;"	f
SCR_HUD_DrawSigil1	hud_common.c	/^void SCR_HUD_DrawSigil1(hud_t *hud)$/;"	f
SCR_HUD_DrawSigil2	hud_common.c	/^void SCR_HUD_DrawSigil2(hud_t *hud)$/;"	f
SCR_HUD_DrawSigil3	hud_common.c	/^void SCR_HUD_DrawSigil3(hud_t *hud)$/;"	f
SCR_HUD_DrawSigil4	hud_common.c	/^void SCR_HUD_DrawSigil4(hud_t *hud)$/;"	f
SCR_HUD_DrawSpeed	hud_common.c	/^void SCR_HUD_DrawSpeed(hud_t *hud)$/;"	f
SCR_HUD_DrawSpeed2	hud_common.c	/^void SCR_HUD_DrawSpeed2(hud_t *hud)$/;"	f
SCR_HUD_DrawSuit	hud_common.c	/^void SCR_HUD_DrawSuit(hud_t *hud)$/;"	f
SCR_HUD_DrawTeamFrags	hud_common.c	/^void SCR_HUD_DrawTeamFrags(hud_t *hud)$/;"	f
SCR_HUD_DrawTeamHoldBar	hud_common.c	/^void SCR_HUD_DrawTeamHoldBar(hud_t *hud)$/;"	f
SCR_HUD_DrawTeamHoldInfo	hud_common.c	/^void SCR_HUD_DrawTeamHoldInfo(hud_t *hud)$/;"	f
SCR_HUD_DrawTracking	hud_common.c	/^void SCR_HUD_DrawTracking(hud_t *hud)$/;"	f
SCR_HUD_DrawVidLag	hud_common.c	/^void SCR_HUD_DrawVidLag(hud_t *hud)$/;"	f
SCR_HUD_Group1	hud_common.c	/^void SCR_HUD_Group1(hud_t *hud)$/;"	f
SCR_HUD_Group2	hud_common.c	/^void SCR_HUD_Group2(hud_t *hud)$/;"	f
SCR_HUD_Group3	hud_common.c	/^void SCR_HUD_Group3(hud_t *hud)$/;"	f
SCR_HUD_Group4	hud_common.c	/^void SCR_HUD_Group4(hud_t *hud)$/;"	f
SCR_HUD_Group5	hud_common.c	/^void SCR_HUD_Group5(hud_t *hud)$/;"	f
SCR_HUD_Group6	hud_common.c	/^void SCR_HUD_Group6(hud_t *hud)$/;"	f
SCR_HUD_Group7	hud_common.c	/^void SCR_HUD_Group7(hud_t *hud)$/;"	f
SCR_HUD_Group8	hud_common.c	/^void SCR_HUD_Group8(hud_t *hud)$/;"	f
SCR_HUD_Group9	hud_common.c	/^void SCR_HUD_Group9(hud_t *hud)$/;"	f
SCR_HUD_LoadGroupPic	hud_common.c	/^qbool SCR_HUD_LoadGroupPic(cvar_t *var, mpic_t **hud_pic, char *newpic)$/;"	f
SCR_HUD_Netgraph	hud_common.c	/^void SCR_HUD_Netgraph(hud_t *hud)$/;"	f
SCR_HUD_OnChangePic_Group1	hud_common.c	/^void SCR_HUD_OnChangePic_Group1(cvar_t *var, char *newpic, qbool *cancel)$/;"	f
SCR_HUD_OnChangePic_Group2	hud_common.c	/^void SCR_HUD_OnChangePic_Group2(cvar_t *var, char *newpic, qbool *cancel)$/;"	f
SCR_HUD_OnChangePic_Group3	hud_common.c	/^void SCR_HUD_OnChangePic_Group3(cvar_t *var, char *newpic, qbool *cancel)$/;"	f
SCR_HUD_OnChangePic_Group4	hud_common.c	/^void SCR_HUD_OnChangePic_Group4(cvar_t *var, char *newpic, qbool *cancel)$/;"	f
SCR_HUD_OnChangePic_Group5	hud_common.c	/^void SCR_HUD_OnChangePic_Group5(cvar_t *var, char *newpic, qbool *cancel)$/;"	f
SCR_HUD_OnChangePic_Group6	hud_common.c	/^void SCR_HUD_OnChangePic_Group6(cvar_t *var, char *newpic, qbool *cancel)$/;"	f
SCR_HUD_OnChangePic_Group7	hud_common.c	/^void SCR_HUD_OnChangePic_Group7(cvar_t *var, char *newpic, qbool *cancel)$/;"	f
SCR_HUD_OnChangePic_Group8	hud_common.c	/^void SCR_HUD_OnChangePic_Group8(cvar_t *var, char *newpic, qbool *cancel)$/;"	f
SCR_HUD_OnChangePic_Group9	hud_common.c	/^void SCR_HUD_OnChangePic_Group9(cvar_t *var, char *newpic, qbool *cancel)$/;"	f
SCR_Init	cl_screen.c	/^void SCR_Init (void)$/;"	f
SCR_LoadCursorImage	cl_screen.c	/^mpic_t *SCR_LoadCursorImage(char *cursorimage)$/;"	f
SCR_MV_DrawArmor	cl_screen.c	/^void SCR_MV_DrawArmor (int x, int y, int *width, int *height, int style)$/;"	f
SCR_MV_DrawCurrentAmmo	cl_screen.c	/^void SCR_MV_DrawCurrentAmmo (int x, int y, int *width, int *height)$/;"	f
SCR_MV_DrawCurrentWeapon	cl_screen.c	/^void SCR_MV_DrawCurrentWeapon (int x, int y, int *width, int *height)$/;"	f
SCR_MV_DrawHealth	cl_screen.c	/^void SCR_MV_DrawHealth (int x, int y, int *width, int *height, int style)$/;"	f
SCR_MV_DrawName	cl_screen.c	/^void SCR_MV_DrawName (int x, int y, int *width, int *height)$/;"	f
SCR_MV_DrawPowerups	cl_screen.c	/^void SCR_MV_DrawPowerups (int x, int y)$/;"	f
SCR_MV_DrawWeapons	cl_screen.c	/^void SCR_MV_DrawWeapons (int x, int y, int *width, int *height, int hud_width, int hud_height, qbool vertical)$/;"	f
SCR_MV_SetBoundValue	cl_screen.c	/^void SCR_MV_SetBoundValue (int *var, int val)$/;"	f
SCR_Movieshot	cl_screen.c	/^void SCR_Movieshot(char *name)$/;"	f
SCR_MvdWeaponStatsOff_f	cl_screen.c	/^static void SCR_MvdWeaponStatsOff_f(void)$/;"	f	file:
SCR_MvdWeaponStatsOn_f	cl_screen.c	/^static void SCR_MvdWeaponStatsOn_f(void)$/;"	f	file:
SCR_NEED_CONSOLE_BACKGROUND	screen.h	29;"	d
SCR_NetStats	common_draw.c	/^void SCR_NetStats(int x, int y, float period)$/;"	f
SCR_OnChangeMVHudPos	cl_screen.c	/^void SCR_OnChangeMVHudPos(cvar_t *var, char *newval, qbool *cancel)$/;"	f
SCR_RSShot_f	cl_screen.c	/^void SCR_RSShot_f (void) {$/;"	f
SCR_ScreenShot_f	cl_screen.c	/^void SCR_ScreenShot_f (void)$/;"	f
SCR_Screenshot	cl_screen.c	/^int SCR_Screenshot(char *name) {$/;"	f
SCR_SetMVStatusFourViewRect	cl_screen.c	/^void SCR_SetMVStatusFourViewRect (mv_viewrect_t *view)$/;"	f
SCR_SetMVStatusGatheredPosition	cl_screen.c	/^void SCR_SetMVStatusGatheredPosition (mv_viewrect_t *view, int hud_width, int hud_height, int *x, int *y)$/;"	f
SCR_SetMVStatusPosition	cl_screen.c	/^void SCR_SetMVStatusPosition (int position, mv_viewrect_t *view, int hud_width, int hud_height, int *x, int *y)$/;"	f
SCR_SetMVStatusThreeViewRect	cl_screen.c	/^void SCR_SetMVStatusThreeViewRect (mv_viewrect_t *view)$/;"	f
SCR_SetMVStatusTwoInsetViewRect	cl_screen.c	/^void SCR_SetMVStatusTwoInsetViewRect (mv_viewrect_t *view)$/;"	f
SCR_SetMVStatusTwoViewRect	cl_screen.c	/^void SCR_SetMVStatusTwoViewRect (mv_viewrect_t *view)$/;"	f
SCR_SetUpToDrawConsole	cl_screen.c	/^void SCR_SetUpToDrawConsole (void) {$/;"	f
SCR_SetupAutoID	cl_screen.c	/^void SCR_SetupAutoID (void) {$/;"	f
SCR_SetupCI	cl_screen.c	/^void SCR_SetupCI (void) {$/;"	f
SCR_SizeDown_f	cl_screen.c	/^void SCR_SizeDown_f (void) {$/;"	f
SCR_SizeUp_f	cl_screen.c	/^void SCR_SizeUp_f (void) {$/;"	f
SCR_TEAM_T_MAXTEAMSIZE	sbar.c	397;"	d	file:
SCR_TileClear	cl_screen.c	/^void SCR_TileClear (void) {$/;"	f
SCR_UpdateScreen	cl_screen.c	/^void SCR_UpdateScreen (void) {$/;"	f
SCR_UpdateWholeScreen	cl_screen.c	/^void SCR_UpdateWholeScreen (void) {$/;"	f
SCR_ZoomIn_f	cl_screen.c	/^void SCR_ZoomIn_f (void) {$/;"	f
SCR_ZoomOut_f	cl_screen.c	/^void SCR_ZoomOut_f (void) {$/;"	f
SEARCH_TIME	EX_browser.c	35;"	d	file:
SECONDARY_BUFFER_SIZE	snd_win.c	31;"	d	file:
SECURITY_GETFUNC	modules.c	42;"	d	file:
SECURITY_GETFUNC	modules.c	44;"	d	file:
SECURITY_INIT_BAD_CHECKSUM	security.h	31;"	d
SECURITY_INIT_BAD_VERSION	security.h	32;"	d
SECURITY_INIT_ERROR	security.h	33;"	d
SECURITY_INIT_NOPROC	security.h	34;"	d
SELF_SOUND	snd_dma.c	25;"	d	file:
SERVER_EMPTY	EX_browser.h	/^	SERVER_EMPTY = 0, SERVER_NONEMPTY = 1, SERVER_FULL = 2$/;"	e	enum:__anon147
SERVER_EXTENSIONS	protocol.h	65;"	d
SERVER_FULL	EX_browser.h	/^	SERVER_EMPTY = 0, SERVER_NONEMPTY = 1, SERVER_FULL = 2$/;"	e	enum:__anon147
SERVER_NONEMPTY	EX_browser.h	/^	SERVER_EMPTY = 0, SERVER_NONEMPTY = 1, SERVER_FULL = 2$/;"	e	enum:__anon147
SET_FLAG	ez_controls.h	165;"	d
SG_INFO	mvd_utils_common.h	38;"	d
SHA1	sha1.c	/^char *SHA1(char *string)$/;"	f
SHA1Final	sha1.c	/^void SHA1Final(unsigned char digest[DIGEST_SIZE], SHA1_CTX* context)$/;"	f
SHA1HANDSOFF	sha1.h	17;"	d
SHA1Init	sha1.c	/^void SHA1Init(SHA1_CTX* context)$/;"	f
SHA1Transform	sha1.c	/^void SHA1Transform(unsigned long state[5], unsigned char buffer[64])$/;"	f
SHA1Update	sha1.c	/^void SHA1Update(SHA1_CTX* context, unsigned char* data, unsigned int len)$/;"	f
SHA1_CTX	sha1.h	/^} SHA1_CTX;$/;"	t	typeref:struct:__anon275
SHA1_Final	sha1.c	/^char *SHA1_Final(void)$/;"	f
SHA1_Init	sha1.c	/^void SHA1_Init(void)$/;"	f
SHA1_Update	sha1.c	/^void SHA1_Update(unsigned char *string)$/;"	f
SHADEDOT_QUANT	gl_md3.c	10;"	d	file:
SHADEDOT_QUANT	gl_rmain.c	338;"	d	file:
SHORTNAMESIZE	vfs_tar.h	50;"	d
SHOTGUN_SPREAD	hud_common.c	5532;"	d	file:
SHOWNET	cl_nqdemo.c	976;"	d	file:
SHOWNET	cl_parse.c	2997;"	d	file:
SIDE_BACK	cmodel.h	/^	SIDE_BACK = 1,$/;"	e	enum:__anon130
SIDE_FRONT	cmodel.h	/^	SIDE_FRONT = 0,$/;"	e	enum:__anon130
SIDE_ON	cmodel.h	/^	SIDE_ON = 2$/;"	e	enum:__anon130
SIGN	debug.h	232;"	d
SINGLEPLAYER_ITEMS	menu.c	721;"	d	file:
SINTABLE_APPROX	gl_warp.c	/^__inline static float SINTABLE_APPROX(float time) {$/;"	f	file:
SIS_FAILURE	snd_win.c	/^typedef enum {SIS_SUCCESS, SIS_FAILURE, SIS_NOTAVAIL} sndinitstat;$/;"	e	enum:__anon63	file:
SIS_NOTAVAIL	snd_win.c	/^typedef enum {SIS_SUCCESS, SIS_FAILURE, SIS_NOTAVAIL} sndinitstat;$/;"	e	enum:__anon63	file:
SIS_SUCCESS	snd_win.c	/^typedef enum {SIS_SUCCESS, SIS_FAILURE, SIS_NOTAVAIL} sndinitstat;$/;"	e	enum:__anon63	file:
SKINPREVIEWHEIGHT	settings_page.c	50;"	d	file:
SKIPBLANKS	teamplay.c	1727;"	d	file:
SKIPTOEOL	teamplay.c	1728;"	d	file:
SKYMASK	d_iface.h	185;"	d
SKYMASK	gl_local.h	81;"	d
SKYSHIFT	d_iface.h	183;"	d
SKYSHIFT	gl_local.h	79;"	d
SKYSIZE	d_iface.h	184;"	d
SKYSIZE	gl_local.h	80;"	d
SKY_SPAN_MAX	d_sky.c	25;"	d	file:
SKY_SPAN_SHIFT	d_sky.c	24;"	d	file:
SLIDER_RANGE	Ctrl.c	16;"	d	file:
SLIDER_RANGE	menu.c	114;"	d	file:
SList_Init	cl_slist.c	/^void SList_Init(void) {$/;"	f
SList_Length	cl_slist.c	/^int SList_Length (void) {$/;"	f
SList_Load	cl_slist.c	/^void SList_Load (void) {$/;"	f
SList_Reset	cl_slist.c	/^void SList_Reset (int i) {$/;"	f
SList_Reset_NoFree	cl_slist.c	/^void SList_Reset_NoFree (int i) { $/;"	f
SList_Save	cl_slist.c	/^void SList_Save (FILE *f) {$/;"	f
SList_Set	cl_slist.c	/^void SList_Set (int i, char *addr, char *desc) {$/;"	f
SList_Shutdown	cl_slist.c	/^void SList_Shutdown(void) {  $/;"	f
SList_Switch	cl_slist.c	/^void SList_Switch (int a, int b) {$/;"	f
SNDDMA_ALSA	snd_linux.c	/^static qbool SNDDMA_ALSA = true;$/;"	v	file:
SNDDMA_GetDMAPos	snd_linux.c	/^int SNDDMA_GetDMAPos(void)$/;"	f
SNDDMA_GetDMAPos	snd_mac.c	/^int SNDDMA_GetDMAPos(void)$/;"	f
SNDDMA_GetDMAPos	snd_win.c	/^int SNDDMA_GetDMAPos(void)$/;"	f
SNDDMA_GetDMAPos_ALSA	snd_alsa.c	/^int SNDDMA_GetDMAPos_ALSA (void)$/;"	f
SNDDMA_GetDMAPos_OSS	snd_oss.c	/^int SNDDMA_GetDMAPos_OSS(void)$/;"	f
SNDDMA_Init	snd_linux.c	/^qbool SNDDMA_Init(void)$/;"	f
SNDDMA_Init	snd_mac.c	/^qbool SNDDMA_Init(void)$/;"	f
SNDDMA_Init	snd_win.c	/^qbool SNDDMA_Init(void)$/;"	f
SNDDMA_InitDirect	snd_win.c	/^static sndinitstat SNDDMA_InitDirect (void)$/;"	f	file:
SNDDMA_InitWav	snd_win.c	/^static qbool SNDDMA_InitWav (void)$/;"	f	file:
SNDDMA_Init_ALSA	snd_alsa.c	/^qbool SNDDMA_Init_ALSA (void)$/;"	f
SNDDMA_Init_OSS	snd_oss.c	/^qbool SNDDMA_Init_OSS(void)$/;"	f
SNDDMA_Shutdown	snd_linux.c	/^void SNDDMA_Shutdown(void)$/;"	f
SNDDMA_Shutdown	snd_mac.c	/^void SNDDMA_Shutdown(void)$/;"	f
SNDDMA_Shutdown	snd_win.c	/^void SNDDMA_Shutdown(void)$/;"	f
SNDDMA_Shutdown_ALSA	snd_alsa.c	/^void SNDDMA_Shutdown_ALSA (void)$/;"	f
SNDDMA_Shutdown_OSS	snd_oss.c	/^void SNDDMA_Shutdown_OSS(void)$/;"	f
SNDDMA_Submit	snd_linux.c	/^void SNDDMA_Submit(void)$/;"	f
SNDDMA_Submit	snd_mac.c	/^void SNDDMA_Submit(void)$/;"	f
SNDDMA_Submit	snd_win.c	/^void SNDDMA_Submit(void)$/;"	f
SNDDMA_Submit_ALSA	snd_alsa.c	/^void SNDDMA_Submit_ALSA (void)$/;"	f
SND_ATTENUATION	protocol.h	316;"	d
SND_COMPLETION	snd_mac.c	30;"	d	file:
SND_InitScaletable	snd_mix.c	/^void SND_InitScaletable (void)$/;"	f
SND_PaintChannelFrom16	snd_mix.c	/^static void SND_PaintChannelFrom16 (channel_t *ch, sfxcache_t *sc, int count)$/;"	f	file:
SND_PaintChannelFrom8	snd_mix.c	/^static void SND_PaintChannelFrom8 (channel_t *ch, sfxcache_t *sc, int count)$/;"	f	file:
SND_PickChannel	snd_dma.c	/^static channel_t *SND_PickChannel (int entnum, int entchannel)$/;"	f	file:
SND_Rate	snd_mem.c	/^int SND_Rate(int rate)$/;"	f
SND_Spatialize	snd_dma.c	/^static void SND_Spatialize (channel_t *ch)$/;"	f	file:
SND_VOLUME	protocol.h	315;"	d
SNG_INFO	mvd_utils_common.h	35;"	d
SOLID_BBOX	server.h	327;"	d
SOLID_BSP	server.h	329;"	d
SOLID_NOT	server.h	325;"	d
SOLID_SLIDEBOX	server.h	328;"	d
SOLID_TRIGGER	server.h	326;"	d
SO_DONTLINGER	EX_browser_ping.c	44;"	d	file:
SPAWNFLAG_NOT_DEATHMATCH	server.h	357;"	d
SPAWNFLAG_NOT_EASY	server.h	354;"	d
SPAWNFLAG_NOT_HARD	server.h	356;"	d
SPAWNFLAG_NOT_MEDIUM	server.h	355;"	d
SPEED	r_local.h	203;"	d
SPEED_BLUE	hud_common.c	764;"	d	file:
SPEED_BROWN_RED	hud_common.c	762;"	d	file:
SPEED_DARK_RED	hud_common.c	763;"	d	file:
SPEED_FAST	hud_common.c	769;"	d	file:
SPEED_FASTEST	hud_common.c	770;"	d	file:
SPEED_FILL_SPACING	common_draw.c	883;"	d	file:
SPEED_GREEN	hud_common.c	761;"	d	file:
SPEED_INSANE	hud_common.c	771;"	d	file:
SPEED_NORMAL	hud_common.c	768;"	d	file:
SPEED_OUTLINE_SPACING	common_draw.c	882;"	d	file:
SPEED_RED	hud_common.c	765;"	d	file:
SPEED_STOPPED	hud_common.c	767;"	d	file:
SPEED_TAG_LENGTH	common_draw.c	881;"	d	file:
SPEED_TEXT_ALIGN_CENTER	common_draw.c	889;"	d	file:
SPEED_TEXT_ALIGN_CLOSE	common_draw.c	888;"	d	file:
SPEED_TEXT_ALIGN_FAR	common_draw.c	890;"	d	file:
SPEED_TEXT_ALIGN_NONE	common_draw.c	887;"	d	file:
SPEED_TEXT_ONLY	common_draw.c	885;"	d	file:
SPEED_WHITE	common_draw.c	884;"	d	file:
SPM_BINDING	settings.h	/^	enum { SPM_NORMAL, SPM_BINDING, SPM_VIEWHELP, SPM_CHOOSESKIN } mode;$/;"	e	enum:__anon273::__anon274
SPM_CHOOSESKIN	settings.h	/^	enum { SPM_NORMAL, SPM_BINDING, SPM_VIEWHELP, SPM_CHOOSESKIN } mode;$/;"	e	enum:__anon273::__anon274
SPM_NORMAL	settings.h	/^	enum { SPM_NORMAL, SPM_BINDING, SPM_VIEWHELP, SPM_CHOOSESKIN } mode;$/;"	e	enum:__anon273::__anon274
SPM_VIEWHELP	settings.h	/^	enum { SPM_NORMAL, SPM_BINDING, SPM_VIEWHELP, SPM_CHOOSESKIN } mode;$/;"	e	enum:__anon273::__anon274
SPRITE_VERSION	spritegn.h	61;"	d
SPR_FACING_UPRIGHT	spritegn.h	83;"	d
SPR_GROUP	spritegn.h	/^typedef enum { SPR_SINGLE=0, SPR_GROUP } spriteframetype_t;$/;"	e	enum:__anon281
SPR_ORIENTED	spritegn.h	85;"	d
SPR_SINGLE	spritegn.h	/^typedef enum { SPR_SINGLE=0, SPR_GROUP } spriteframetype_t;$/;"	e	enum:__anon281
SPR_VP_PARALLEL	spritegn.h	84;"	d
SPR_VP_PARALLEL_ORIENTED	spritegn.h	86;"	d
SPR_VP_PARALLEL_UPRIGHT	spritegn.h	82;"	d
SSG_INFO	mvd_utils_common.h	37;"	d
SSHOT_FAILED	cl_screen.c	3599;"	d	file:
SSHOT_FAILED_QUIET	cl_screen.c	3600;"	d	file:
SSHOT_SUCCESS	cl_screen.c	3601;"	d	file:
SShot_ExtForFormat	cl_screen.c	/^static char *SShot_ExtForFormat(int format) {$/;"	f	file:
SShot_FormatForName	cl_screen.c	/^static image_format_t SShot_FormatForName(char *name) {$/;"	f	file:
START	sys_mac.c	/^static enum { QUIT, START, FAILED } action = START;$/;"	e	enum:__anon67	file:
STATFRAMES	server.h	237;"	d
STATS_MAX_IMPORTANT_ENTS	stats_grid.c	136;"	d	file:
STATS_TEAM1	stats_grid.h	9;"	d
STATS_TEAM2	stats_grid.h	10;"	d
STATUS_FAILED	EX_browser_ping.c	64;"	d	file:
STAT_ACTIVEWEAPON	common.h	68;"	d
STAT_AMMO	common.h	61;"	d
STAT_ARMOR	common.h	62;"	d
STAT_CELLS	common.h	67;"	d
STAT_HEALTH	common.h	58;"	d
STAT_ITEMS	common.h	73;"	d
STAT_MINUS	hud_common.c	33;"	d	file:
STAT_MINUS	sbar.c	66;"	d	file:
STAT_MONSTERS	common.h	72;"	d
STAT_NAILS	common.h	65;"	d
STAT_ROCKETS	common.h	66;"	d
STAT_SECRETS	common.h	71;"	d
STAT_SHELLS	common.h	64;"	d
STAT_TIME	common.h	75;"	d
STAT_TOTALMONSTERS	common.h	70;"	d
STAT_TOTALSECRETS	common.h	69;"	d
STAT_VIEWHEIGHT	common.h	74;"	d
STAT_WEAPON	common.h	60;"	d
STEPSIZE	pmove.c	35;"	d	file:
STEPSIZE	sv_move.c	24;"	d	file:
STHeight	settings_page.c	/^static int STHeight(setting* s) {$/;"	f	file:
STOP_EPSILON	pmove.c	65;"	d	file:
STOP_EPSILON	sv_phys.c	143;"	d	file:
STRCMP	hash.h	8;"	d
STRICT	debug.h	258;"	d
STRINGTEMP_BUFFERS	pr_cmds.c	30;"	d	file:
STRINGTEMP_LENGTH	pr_cmds.c	31;"	d	file:
STRUCT_FROM_LINK	progs.h	41;"	d
ST_Printf	common.h	255;"	d
ST_RAND	modelgen.h	/^typedef enum {ST_SYNC=0, ST_RAND } synctype_t;$/;"	e	enum:__anon221
ST_RAND	spritegn.h	/^typedef enum {ST_SYNC=0, ST_RAND } synctype_t;$/;"	e	enum:__anon276
ST_SYNC	modelgen.h	/^typedef enum {ST_SYNC=0, ST_RAND } synctype_t;$/;"	e	enum:__anon221
ST_SYNC	spritegn.h	/^typedef enum {ST_SYNC=0, ST_RAND } synctype_t;$/;"	e	enum:__anon276
SUBDIVISIONS	gl_warp.c	901;"	d	file:
SURFCACHE_SIZE_AT_320X200	d_local.h	36;"	d
SURF_DRAWALPHA	gl_model.h	80;"	d
SURF_DRAWBACKGROUND	gl_model.h	78;"	d
SURF_DRAWBACKGROUND	r_model.h	71;"	d
SURF_DRAWSKY	gl_model.h	74;"	d
SURF_DRAWSKY	r_model.h	67;"	d
SURF_DRAWSPRITE	gl_model.h	75;"	d
SURF_DRAWSPRITE	r_model.h	68;"	d
SURF_DRAWTILED	gl_model.h	77;"	d
SURF_DRAWTILED	r_model.h	70;"	d
SURF_DRAWTURB	gl_model.h	76;"	d
SURF_DRAWTURB	r_model.h	69;"	d
SURF_FORBRUSH	r_model.h	72;"	d
SURF_PLANEBACK	gl_model.h	73;"	d
SURF_PLANEBACK	r_model.h	66;"	d
SURF_T_SHIFT	asm_draw.h	78;"	d
SURF_UNDERWATER	gl_model.h	79;"	d
SU_ARMOR	cl_nqdemo.c	72;"	d	file:
SU_IDEALPITCH	cl_nqdemo.c	60;"	d	file:
SU_INWATER	cl_nqdemo.c	70;"	d	file:
SU_ITEMS	cl_nqdemo.c	68;"	d	file:
SU_ONGROUND	cl_nqdemo.c	69;"	d	file:
SU_PUNCH1	cl_nqdemo.c	61;"	d	file:
SU_PUNCH2	cl_nqdemo.c	62;"	d	file:
SU_PUNCH3	cl_nqdemo.c	63;"	d	file:
SU_VELOCITY1	cl_nqdemo.c	64;"	d	file:
SU_VELOCITY2	cl_nqdemo.c	65;"	d	file:
SU_VELOCITY3	cl_nqdemo.c	66;"	d	file:
SU_VIEWHEIGHT	cl_nqdemo.c	59;"	d	file:
SU_WEAPON	cl_nqdemo.c	73;"	d	file:
SU_WEAPONFRAME	cl_nqdemo.c	71;"	d	file:
SVC_DirectConnect	sv_main.c	/^void SVC_DirectConnect (void) {$/;"	f
SVC_GetChallenge	sv_main.c	/^void SVC_GetChallenge (void) {$/;"	f
SVC_Log	sv_main.c	/^void SVC_Log (void) {$/;"	f
SVC_Ping	sv_main.c	/^void SVC_Ping (void) {$/;"	f
SVC_RemoteCommand	sv_main.c	/^void SVC_RemoteCommand (void) {$/;"	f
SVC_Status	sv_main.c	/^void SVC_Status (void) {$/;"	f
SVGA16_driver	mgraph.h	1662;"	d
SVGA24_driver	mgraph.h	1663;"	d
SVGA32_driver	mgraph.h	1664;"	d
SVGA4_driver	mgraph.h	1660;"	d
SVGA8_driver	mgraph.h	1661;"	d
SV_AddGravity	sv_phys.c	/^void SV_AddGravity (edict_t *ent, float scale) {$/;"	f
SV_AddIP_f	sv_main.c	/^void SV_AddIP_f (void) {$/;"	f
SV_AddNailUpdate	sv_ents.c	/^static qbool SV_AddNailUpdate (edict_t *ent)$/;"	f	file:
SV_AreaEdicts	sv_world.c	/^int SV_AreaEdicts (vec3_t mins, vec3_t maxs, edict_t **edicts, int max_edicts, int area)$/;"	f
SV_BeginRedirect	sv_send.c	/^void SV_BeginRedirect (redirect_t rd) {$/;"	f
SV_BoundRate	sv_main.c	/^int SV_BoundRate (int rate) {$/;"	f
SV_BroadcastCommand	sv_send.c	/^void SV_BroadcastCommand (char *fmt, ...) {$/;"	f
SV_BroadcastPrintf	sv_send.c	/^void SV_BroadcastPrintf (int level, char *fmt, ...) {$/;"	f
SV_CalcPing	sv_main.c	/^int SV_CalcPing (client_t *cl) {$/;"	f
SV_CheckBottom	sv_move.c	/^qbool SV_CheckBottom (edict_t *ent)$/;"	f
SV_CheckLog	sv_main.c	/^void SV_CheckLog (void) {$/;"	f
SV_CheckModel	sv_init.c	/^unsigned SV_CheckModel (char *mdl)$/;"	f
SV_CheckTimeouts	sv_main.c	/^void SV_CheckTimeouts (void) {$/;"	f
SV_CheckVars	sv_main.c	/^void SV_CheckVars (void) {$/;"	f
SV_CheckVelocity	sv_phys.c	/^void SV_CheckVelocity (edict_t *ent) {$/;"	f
SV_CheckWaterTransition	sv_phys.c	/^void SV_CheckWaterTransition (edict_t *ent) {$/;"	f
SV_ClearBackbuf	sv_nchan.c	/^void SV_ClearBackbuf (client_t *cl)$/;"	f
SV_ClearReliable	sv_nchan.c	/^void SV_ClearReliable (client_t *cl)$/;"	f
SV_ClearWorld	sv_world.c	/^void SV_ClearWorld (void) {$/;"	f
SV_ClientPrintf	sv_send.c	/^void SV_ClientPrintf (client_t *cl, int level, char *fmt, ...) {$/;"	f
SV_ClipMoveToEntity	sv_world.c	/^trace_t SV_ClipMoveToEntity (edict_t *ent, vec3_t start, vec3_t mins, vec3_t maxs, vec3_t end)$/;"	f
SV_ClipToLinks	sv_world.c	/^void SV_ClipToLinks ( areanode_t *node, moveclip_t *clip)$/;"	f
SV_CloseEnough	sv_move.c	/^qbool SV_CloseEnough (edict_t *ent, edict_t *goal, float dist)$/;"	f
SV_CompleteDownoload	sv_user.c	/^void SV_CompleteDownoload(void)$/;"	f
SV_ConSay_f	sv_ccmds.c	/^void SV_ConSay_f (void) {$/;"	f
SV_ConnectionlessPacket	sv_main.c	/^void SV_ConnectionlessPacket (void) {$/;"	f
SV_CreateAreaNode	sv_world.c	/^areanode_t *SV_CreateAreaNode (int depth, vec3_t mins, vec3_t maxs) {$/;"	f
SV_CreateBaseline	sv_init.c	/^void SV_CreateBaseline (void)$/;"	f
SV_DropClient	sv_main.c	/^void SV_DropClient (client_t *drop) {$/;"	f
SV_EmitNailUpdate	sv_ents.c	/^static void SV_EmitNailUpdate (sizebuf_t *msg)$/;"	f	file:
SV_EndRedirect	sv_send.c	/^void SV_EndRedirect (void) {$/;"	f
SV_ExecuteClientMessage	sv_user.c	/^void SV_ExecuteClientMessage (client_t *cl) {$/;"	f
SV_ExecuteClientMove	sv_user.c	/^void SV_ExecuteClientMove (client_t *cl, usercmd_t oldest, usercmd_t oldcmd, usercmd_t newcmd) {$/;"	f
SV_ExecuteUserCommand	sv_user.c	/^void SV_ExecuteUserCommand (char *s, qbool fromQC) {$/;"	f
SV_ExtractFromUserinfo	sv_main.c	/^void SV_ExtractFromUserinfo (client_t *cl) {$/;"	f
SV_FilterPacket	sv_main.c	/^qbool SV_FilterPacket (void) {$/;"	f
SV_FinalMessage	sv_main.c	/^void SV_FinalMessage (char *message) {$/;"	f
SV_FindModelNumbers	sv_send.c	/^void SV_FindModelNumbers (void) {$/;"	f
SV_FixCheckBottom	sv_move.c	/^void SV_FixCheckBottom (edict_t *ent)$/;"	f
SV_Floodprot_f	sv_ccmds.c	/^void SV_Floodprot_f (void) {$/;"	f
SV_FlushRedirect	sv_send.c	/^void SV_FlushRedirect (void) {$/;"	f
SV_FlushSignon	sv_init.c	/^void SV_FlushSignon (void)$/;"	f
SV_FlyMove	sv_phys.c	/^int SV_FlyMove (edict_t *ent, float time, trace_t *steptrace, int type) {$/;"	f
SV_Fraglogfile_f	sv_ccmds.c	/^void SV_Fraglogfile_f (void) {$/;"	f
SV_Frame	sv_main.c	/^void SV_Frame (double time) {$/;"	f
SV_Frame	sv_null.c	/^void SV_Frame (double time)$/;"	f
SV_FullClientUpdate	sv_main.c	/^void SV_FullClientUpdate (client_t *client, sizebuf_t *buf) {$/;"	f
SV_FullClientUpdateToClient	sv_main.c	/^void SV_FullClientUpdateToClient (client_t *client, client_t *cl) {$/;"	f
SV_Gamedir	sv_ccmds.c	/^void SV_Gamedir (void) {$/;"	f
SV_Gamedir_f	sv_ccmds.c	/^void SV_Gamedir_f (void) {$/;"	f
SV_GenerateUserID	sv_main.c	/^int SV_GenerateUserID (void)$/;"	f
SV_GetBaseline	sv_ents.c	/^static entity_state_t *SV_GetBaseline (int number) { $/;"	f	file:
SV_GetConsoleCommands	sv_main.c	/^void SV_GetConsoleCommands (void) {$/;"	f
SV_Heartbeat_f	sv_master.c	/^void SV_Heartbeat_f (void) {$/;"	f
SV_HullForEntity	sv_world.c	/^hull_t *SV_HullForEntity (edict_t *ent, vec3_t mins, vec3_t maxs, vec3_t offset)$/;"	f
SV_Impact	sv_phys.c	/^void SV_Impact (edict_t *e1, edict_t *e2) {$/;"	f
SV_Init	sv_main.c	/^void SV_Init (void) {$/;"	f
SV_Init	sv_null.c	/^void SV_Init (void)$/;"	f
SV_InitLocal	sv_main.c	/^void SV_InitLocal (void) {$/;"	f
SV_InitOperatorCommands	sv_ccmds.c	/^void SV_InitOperatorCommands (void) {$/;"	f
SV_Kick_f	sv_ccmds.c	/^void SV_Kick_f (void) {$/;"	f
SV_LinkEdict	sv_world.c	/^void SV_LinkEdict (edict_t *ent, qbool touch_triggers)$/;"	f
SV_LinkToLeafs	sv_world.c	/^void SV_LinkToLeafs (edict_t *ent)$/;"	f
SV_ListIP_f	sv_main.c	/^void SV_ListIP_f (void) {$/;"	f
SV_LoadGame_f	sv_save.c	/^void SV_LoadGame_f (void) {$/;"	f
SV_Localinfo_f	sv_ccmds.c	/^void SV_Localinfo_f (void) {$/;"	f
SV_MAX_EDICTS	common.h	46;"	d
SV_Map_f	sv_ccmds.c	/^void SV_Map_f (void) {$/;"	f
SV_ModelIndex	sv_init.c	/^int SV_ModelIndex (char *name)$/;"	f
SV_MoveBounds	sv_world.c	/^void SV_MoveBounds (vec3_t start, vec3_t mins, vec3_t maxs, vec3_t end, vec3_t boxmins, vec3_t boxmaxs)$/;"	f
SV_MoveToGoal	sv_move.c	/^void SV_MoveToGoal (void)$/;"	f
SV_Multicast	sv_send.c	/^void SV_Multicast (vec3_t origin, int to)$/;"	f
SV_NewChaseDir	sv_move.c	/^void SV_NewChaseDir (edict_t *actor, edict_t *enemy, float dist)$/;"	f
SV_NextChunkedDownload	sv_user.c	/^void SV_NextChunkedDownload(int chunknum, int percent, int chunked_download_number)$/;"	f
SV_NextUpload	sv_user.c	/^void SV_NextUpload (void) {$/;"	f
SV_PMTypeForClient	sv_user.c	/^int SV_PMTypeForClient (client_t *cl)$/;"	f
SV_ParseClientCommand	pr_edict.c	/^func_t SV_ParseClientCommand;		\/\/KRIMZON_SV_PARSECLIENTCOMMAND$/;"	v
SV_Physics	sv_phys.c	/^void SV_Physics (void) {$/;"	f
SV_Physics_Noclip	sv_phys.c	/^void SV_Physics_Noclip (edict_t *ent) {$/;"	f
SV_Physics_None	sv_phys.c	/^void SV_Physics_None (edict_t *ent) {$/;"	f
SV_Physics_Pusher	sv_phys.c	/^void SV_Physics_Pusher (edict_t *ent) {$/;"	f
SV_Physics_Step	sv_phys.c	/^void SV_Physics_Step (edict_t *ent) {$/;"	f
SV_Physics_Toss	sv_phys.c	/^void SV_Physics_Toss (edict_t *ent) {$/;"	f
SV_PointContents	sv_world.c	/^int SV_PointContents (vec3_t p)$/;"	f
SV_PostRunCmd	sv_user.c	/^void SV_PostRunCmd (void) {$/;"	f
SV_PreRunCmd	sv_user.c	/^void SV_PreRunCmd(void) {$/;"	f
SV_PrintToClient	sv_send.c	/^static void SV_PrintToClient(client_t *cl, int level, char *string) {$/;"	f	file:
SV_ProgStartFrame	sv_phys.c	/^void SV_ProgStartFrame (void) {$/;"	f
SV_Push	sv_phys.c	/^qbool SV_Push (edict_t *pusher, vec3_t move) {$/;"	f
SV_PushEntity	sv_phys.c	/^trace_t SV_PushEntity (edict_t *ent, vec3_t push) {$/;"	f
SV_PushMove	sv_phys.c	/^void SV_PushMove (edict_t *pusher, float movetime) {$/;"	f
SV_Quit_f	sv_ccmds.c	/^void SV_Quit_f (void) {$/;"	f
SV_ReadPackets	sv_main.c	/^void SV_ReadPackets (void) {$/;"	f
SV_RedirectedPrint	sv_send.c	/^void SV_RedirectedPrint (char *msg) {$/;"	f
SV_RemoveIP_f	sv_main.c	/^void SV_RemoveIP_f (void) {$/;"	f
SV_RunCmd	sv_user.c	/^void SV_RunCmd (usercmd_t *ucmd) {$/;"	f
SV_RunEntity	sv_phys.c	/^void SV_RunEntity (edict_t *ent) {$/;"	f
SV_RunNewmis	sv_phys.c	/^void SV_RunNewmis (void) {$/;"	f
SV_RunThink	sv_phys.c	/^qbool SV_RunThink (edict_t *ent) {$/;"	f
SV_SaveGame_f	sv_save.c	/^void SV_SaveGame_f (void) {$/;"	f
SV_SaveSpawnparms	sv_init.c	/^void SV_SaveSpawnparms (void)$/;"	f
SV_SavegameComment	sv_save.c	/^void SV_SavegameComment (char *buffer) {$/;"	f
SV_Say	sv_user.c	/^void SV_Say (qbool team) {$/;"	f
SV_SendBan	sv_main.c	/^void SV_SendBan (void)$/;"	f
SV_SendClientDatagram	sv_send.c	/^qbool SV_SendClientDatagram (client_t *client) {$/;"	f
SV_SendClientMessages	sv_send.c	/^void SV_SendClientMessages (void) {$/;"	f
SV_SendMessagesToAll	sv_send.c	/^void SV_SendMessagesToAll (void) {$/;"	f
SV_SendServerInfoChange	sv_ccmds.c	/^void SV_SendServerInfoChange(char *key, char *value) {$/;"	f
SV_ServerinfoChanged	sv_ccmds.c	/^void SV_ServerinfoChanged (char *key, char *string) {$/;"	f
SV_Serverinfo_f	sv_ccmds.c	/^void SV_Serverinfo_f (void) {$/;"	f
SV_SetMaster_f	sv_master.c	/^void SV_SetMaster_f (void) {$/;"	f
SV_SetMoveVars	sv_phys.c	/^void SV_SetMoveVars(void) {$/;"	f
SV_SetPlayer	sv_ccmds.c	/^qbool SV_SetPlayer (void) {$/;"	f
SV_Shutdown	sv_main.c	/^void SV_Shutdown (char *finalmsg) {$/;"	f
SV_Shutdown	sv_null.c	/^void SV_Shutdown (char *finalmsg)$/;"	f
SV_Snap	sv_ccmds.c	/^void SV_Snap (int uid) {$/;"	f
SV_SnapAll_f	sv_ccmds.c	/^void SV_SnapAll_f (void) {$/;"	f
SV_Snap_f	sv_ccmds.c	/^void SV_Snap_f (void) {$/;"	f
SV_SpawnServer	sv_init.c	/^void SV_SpawnServer (char *mapname, qbool devmap)$/;"	f
SV_SpawnSpectator	sv_user.c	/^void SV_SpawnSpectator (void) {$/;"	f
SV_StartSound	sv_send.c	/^void SV_StartSound (edict_t *entity, int channel, char *sample, int volume, float attenuation) {       $/;"	f
SV_Status_f	sv_ccmds.c	/^void SV_Status_f (void) {$/;"	f
SV_StepDirection	sv_move.c	/^qbool SV_StepDirection (edict_t *ent, float yaw, float dist)$/;"	f
SV_TestEntityPosition	sv_world.c	/^edict_t	*SV_TestEntityPosition (edict_t *ent)$/;"	f
SV_TogglePause	sv_user.c	/^void SV_TogglePause (const char *msg) {$/;"	f
SV_TouchLinks	sv_world.c	/^static void SV_TouchLinks (edict_t *ent, areanode_t *node)$/;"	f	file:
SV_Trace	sv_world.c	/^trace_t SV_Trace (vec3_t start, vec3_t mins, vec3_t maxs, vec3_t end, int type, edict_t *passedict)$/;"	f
SV_TranslateEntnum	sv_ents.c	/^int SV_TranslateEntnum (int num)$/;"	f
SV_UnlinkEdict	sv_world.c	/^void SV_UnlinkEdict (edict_t *ent)$/;"	f
SV_UpdateClientStats	sv_send.c	/^void SV_UpdateClientStats (client_t *client) {$/;"	f
SV_UpdateToReliableMessages	sv_send.c	/^void SV_UpdateToReliableMessages (void) {$/;"	f
SV_User_f	sv_ccmds.c	/^void SV_User_f (void) {$/;"	f
SV_WriteClientdataToMessage	sv_send.c	/^void SV_WriteClientdataToMessage (client_t *client, sizebuf_t *msg) {$/;"	f
SV_WriteEntitiesToClient	sv_ents.c	/^void SV_WriteEntitiesToClient (client_t *client, sizebuf_t *msg)$/;"	f
SV_WriteIP_f	sv_main.c	/^void SV_WriteIP_f (void) {$/;"	f
SV_WritePlayersToClient	sv_ents.c	/^static void SV_WritePlayersToClient (client_t *client, byte *pvs, sizebuf_t *msg)$/;"	f	file:
SV_movestep	sv_move.c	/^qbool SV_movestep (edict_t *ent, vec3_t move, qbool relink)$/;"	f
SWAPINTERVALFUNCPTR	vid_wgl.c	/^typedef BOOL (APIENTRY *SWAPINTERVALFUNCPTR)(int);$/;"	t	file:
SYMTYPE	vfs_tar.h	29;"	d
SYNCTYPE_T	modelgen.h	51;"	d
SYNCTYPE_T	spritegn.h	65;"	d
SYSINFO_3D_description	host.c	/^char				*SYSINFO_3D_description        = NULL;$/;"	v
SYSINFO_GetString	host.c	/^char * SYSINFO_GetString(void)$/;"	f
SYSINFO_Init	host.c	/^void SYSINFO_Init(void)$/;"	f
SYSINFO_MHz	host.c	/^int					SYSINFO_MHz = 0;$/;"	v
SYSINFO_memory	host.c	/^unsigned long long	SYSINFO_memory = 0;$/;"	v
SYSINFO_processor_description	host.c	/^char				*SYSINFO_processor_description = NULL;$/;"	v
SYSTEMTIME	localtime.h	/^} SYSTEMTIME;$/;"	t	typeref:struct:SYSTEMTIME_s
SYSTEMTIME_s	localtime.h	/^typedef struct SYSTEMTIME_s$/;"	s
SYSTEMTIMEcmp	localtime_linux.c	/^int SYSTEMTIMEcmp(const SYSTEMTIME *t1, const SYSTEMTIME *t2)$/;"	f
SYSTEMTIMEcmp	localtime_win.c	/^int SYSTEMTIMEcmp(const SYSTEMTIME *t1, const SYSTEMTIME *t2)$/;"	f
SYS_CLIPBOARD_SIZE	sys_linux.c	577;"	d	file:
SYS_CLIPBOARD_SIZE	sys_mac.c	1510;"	d	file:
SYS_CLIPBOARD_SIZE	sys_win.c	637;"	d	file:
SZ_Clear	q_shared.c	/^void SZ_Clear (sizebuf_t *buf) {$/;"	f
SZ_GetSpace	q_shared.c	/^void *SZ_GetSpace (sizebuf_t *buf, int length) {$/;"	f
SZ_Init	q_shared.c	/^void SZ_Init (sizebuf_t *buf, byte *data, int length) {$/;"	f
SZ_Print	q_shared.c	/^void SZ_Print (sizebuf_t *buf, char *data) {$/;"	f
SZ_Write	q_shared.c	/^void SZ_Write (sizebuf_t *buf, void *data, int length) {$/;"	f
S_BlockSound	snd_win.c	/^void S_BlockSound (void)$/;"	f
S_ClearBuffer	snd_dma.c	/^void S_ClearBuffer (void)$/;"	f
S_ExtraUpdate	snd_dma.c	/^void S_ExtraUpdate (void)$/;"	f
S_FindName	snd_dma.c	/^static sfx_t *S_FindName (char *name)$/;"	f	file:
S_Init	snd_dma.c	/^void S_Init (void)$/;"	f
S_LoadSound	snd_mem.c	/^sfxcache_t *S_LoadSound (sfx_t *s)$/;"	f
S_LoadSound	snd_ov.c	/^sfxcache_t *S_LoadSound(sfx_t *s)$/;"	f
S_LocalSound	snd_dma.c	/^void S_LocalSound (char *sound)$/;"	f
S_LocalSoundWithVol	snd_dma.c	/^void S_LocalSoundWithVol(char *sound, float volume)$/;"	f
S_PaintChannels	snd_mix.c	/^void S_PaintChannels (int endtime)$/;"	f
S_PlayVol_f	snd_dma.c	/^static void S_PlayVol_f (void)$/;"	f	file:
S_Play_f	snd_dma.c	/^static void S_Play_f (void)$/;"	f	file:
S_PrecacheSound	snd_dma.c	/^sfx_t *S_PrecacheSound (char *name)$/;"	f
S_Restart_f	snd_dma.c	/^static void S_Restart_f (void)$/;"	f	file:
S_Shutdown	snd_dma.c	/^void S_Shutdown (void)$/;"	f
S_SoundInfo_f	snd_dma.c	/^static void S_SoundInfo_f (void)$/;"	f	file:
S_SoundList_f	snd_dma.c	/^static void S_SoundList_f (void)$/;"	f	file:
S_StartSound	snd_dma.c	/^void S_StartSound (int entnum, int entchannel, sfx_t *sfx, vec3_t origin, float fvol, float attenuation)$/;"	f
S_Startup	snd_dma.c	/^static qbool S_Startup (void)$/;"	f	file:
S_StaticSound	snd_dma.c	/^void S_StaticSound (sfx_t *sfx, vec3_t origin, float vol, float attenuation)$/;"	f
S_StopAllSounds	snd_dma.c	/^void S_StopAllSounds (qbool clear)$/;"	f
S_StopAllSounds_f	snd_dma.c	/^static void S_StopAllSounds_f (void)$/;"	f	file:
S_StopSound	snd_dma.c	/^void S_StopSound (int entnum, int entchannel)$/;"	f
S_TransferPaintBuffer	snd_mix.c	/^static void S_TransferPaintBuffer(int endtime)$/;"	f	file:
S_TransferStereo16	snd_mix.c	/^static void S_TransferStereo16 (int endtime)$/;"	f	file:
S_UnblockSound	snd_win.c	/^void S_UnblockSound (void)$/;"	f
S_Update	snd_dma.c	/^void S_Update (vec3_t origin, vec3_t forward, vec3_t right, vec3_t up)$/;"	f
S_UpdateAmbientSounds	snd_dma.c	/^static void S_UpdateAmbientSounds (void)$/;"	f	file:
S_Update_	snd_dma.c	/^static void S_Update_ (void)$/;"	f	file:
SaveConfig_f	config_manager.c	/^void SaveConfig_f(void)$/;"	f
SavePrefs	mac_prefs.c	/^SavePrefs ()$/;"	f
Sbar_BottomColor	sbar.c	/^int Sbar_BottomColor(player_info_t *player)$/;"	f
Sbar_Changed	sbar.c	/^void Sbar_Changed (void) {$/;"	f
Sbar_ColorForMap	sbar.c	/^int	Sbar_ColorForMap (int m) {$/;"	f
Sbar_DeathmatchOverlay	sbar.c	/^static void Sbar_DeathmatchOverlay (int start) {$/;"	f	file:
Sbar_DontShowScores	sbar.c	/^void Sbar_DontShowScores (void) {$/;"	f
Sbar_DontShowTeamScores	sbar.c	/^void Sbar_DontShowTeamScores (void) {$/;"	f
Sbar_Draw	sbar.c	/^void Sbar_Draw(void) {$/;"	f
Sbar_DrawAltString	sbar.c	/^static void Sbar_DrawAltString (int x, int y, char *str) {$/;"	f	file:
Sbar_DrawCharacter	sbar.c	/^static void Sbar_DrawCharacter (int x, int y, int num) {$/;"	f	file:
Sbar_DrawCompact	sbar.c	/^static void Sbar_DrawCompact(void) {$/;"	f	file:
Sbar_DrawCompact_Bare	sbar.c	/^static void Sbar_DrawCompact_Bare (void) {$/;"	f	file:
Sbar_DrawCompact_TF	sbar.c	/^static void Sbar_DrawCompact_TF(void) {$/;"	f	file:
Sbar_DrawFace	sbar.c	/^static void Sbar_DrawFace (void) {$/;"	f	file:
Sbar_DrawFrags	sbar.c	/^static void Sbar_DrawFrags (void) {$/;"	f	file:
Sbar_DrawFrags_DrawCell	sbar.c	/^static void Sbar_DrawFrags_DrawCell(int x, int y, int topcolor, int bottomcolor, int frags, int brackets) {$/;"	f	file:
Sbar_DrawInventory	sbar.c	/^static void Sbar_DrawInventory (void) {$/;"	f	file:
Sbar_DrawNormal	sbar.c	/^static void Sbar_DrawNormal (void) {$/;"	f	file:
Sbar_DrawNum	sbar.c	/^void Sbar_DrawNum (int x, int y, int num, int digits, int color) {$/;"	f
Sbar_DrawPic	sbar.c	/^static void Sbar_DrawPic (int x, int y, mpic_t *pic) {$/;"	f	file:
Sbar_DrawString	sbar.c	/^void Sbar_DrawString (int x, int y, char *str) {$/;"	f
Sbar_DrawSubPic	sbar.c	/^static void Sbar_DrawSubPic(int x, int y, mpic_t *pic, int srcx, int srcy, int width, int height) {$/;"	f	file:
Sbar_DrawTransPic	sbar.c	/^static void Sbar_DrawTransPic (int x, int y, mpic_t *pic) {$/;"	f	file:
Sbar_FinaleOverlay	sbar.c	/^void Sbar_FinaleOverlay (void) {$/;"	f
Sbar_Init	sbar.c	/^void Sbar_Init (void) {$/;"	f
Sbar_IntermissionNumber	sbar.c	/^static void Sbar_IntermissionNumber (int x, int y, int num, int digits, int color, int rightadjustify) {$/;"	f	file:
Sbar_IntermissionOverlay	sbar.c	/^void Sbar_IntermissionOverlay (void) {$/;"	f
Sbar_IsSpectator	sbar.c	/^static __inline qbool Sbar_IsSpectator(int mynum) {$/;"	f	file:
Sbar_MiniDeathmatchOverlay	sbar.c	/^static void Sbar_MiniDeathmatchOverlay (void) {$/;"	f	file:
Sbar_PlayerNum	sbar.c	/^static __inline int Sbar_PlayerNum(void) {$/;"	f	file:
Sbar_ShowScores	sbar.c	/^void Sbar_ShowScores (void) {$/;"	f
Sbar_ShowTeamScores	sbar.c	/^void Sbar_ShowTeamScores (void) {$/;"	f
Sbar_SoloScoreboard	sbar.c	/^static void Sbar_SoloScoreboard (void) {$/;"	f	file:
Sbar_SortFrags	sbar.c	/^static void Sbar_SortFrags(qbool spec) {$/;"	f	file:
Sbar_SortTeams	sbar.c	/^static void Sbar_SortTeams (void) {$/;"	f	file:
Sbar_SortTeamsAndFrags	sbar.c	/^static void Sbar_SortTeamsAndFrags(qbool specs) {$/;"	f	file:
Sbar_SortTeamsAndFrags_Compare	sbar.c	/^static int Sbar_SortTeamsAndFrags_Compare(int a, int b) {$/;"	f	file:
Sbar_TeamOverlay	sbar.c	/^static void Sbar_TeamOverlay (void) {$/;"	f	file:
Sbar_TopColor	sbar.c	/^int Sbar_TopColor(player_info_t *player)$/;"	f
Sbar_itoa	sbar.c	/^static int Sbar_itoa (int num, char *buf) {$/;"	f	file:
ScaleDimensions	gl_texture.c	/^static void ScaleDimensions(int width, int height, int *scaled_width, int *scaled_height, int mode) $/;"	f	file:
ScaleDimensions1	gl_texture.c	/^static void ScaleDimensions1(int width, int height, int *scaled_width, int *scaled_height, int mode) $/;"	f	file:
Scrap_AllocBlock	gl_draw.c	/^qbool Scrap_AllocBlock (int scrapnum, int w, int h, int *x, int *y)$/;"	f
Scrap_Upload	gl_draw.c	/^void Scrap_Upload (void)$/;"	f
ScreenSaver_isDisabled	sys_win.c	/^static qbool ScreenSaver_isDisabled = false;$/;"	v	file:
ScrollBar	Ctrl.h	/^} ScrollBar, *PScrollBar;$/;"	t	typeref:struct:ScrollBar_s
ScrollBar_Create	Ctrl_ScrollBar.c	/^PScrollBar ScrollBar_Create(ScrollPos_setter pos_setter)$/;"	f
ScrollBar_Delete	Ctrl_ScrollBar.c	/^void ScrollBar_Delete(PScrollBar scrbar)$/;"	f
ScrollBar_Draw	Ctrl_ScrollBar.c	/^void ScrollBar_Draw(PScrollBar scrbar, int x, int y, int h)$/;"	f
ScrollBar_MouseEvent	Ctrl_ScrollBar.c	/^qbool ScrollBar_MouseEvent(PScrollBar scrbar, const mouse_state_t *ms)$/;"	f
ScrollBar_s	Ctrl.h	/^typedef struct ScrollBar_s {$/;"	s
ScrollBars_Init	Ctrl_ScrollBar.c	/^void ScrollBars_Init()$/;"	f
ScrollPos_setter	Ctrl.h	/^typedef void (*ScrollPos_setter) (double);$/;"	t
SearchNextPlayer	EX_browser.c	/^qbool SearchNextPlayer(int pos)$/;"	f
SearchNextServer	EX_browser.c	/^qbool SearchNextServer (int pos)$/;"	f
SecondsToHourString	utils.c	/^char *SecondsToHourString(int print_time) {$/;"	f
SecondsToMinutesString	utils.c	/^char *SecondsToMinutesString(int print_time) {$/;"	f
Security_Generate_Crc	modules.c	/^Security_Generate_Crc_t Security_Generate_Crc;$/;"	v
Security_Generate_Crc_t	security.h	/^typedef signed_buffer_t *(*Security_Generate_Crc_t) (const int, const char*, const char*);$/;"	t
Security_Init	modules.c	/^Security_Init_t	Security_Init;$/;"	v
Security_Init_t	security.h	/^typedef int (*Security_Init_t) (char *);$/;"	t
Security_Shutdown	modules.c	/^Security_Shutdown_t Security_Shutdown;$/;"	v
Security_Shutdown_t	security.h	/^typedef void (*Security_Shutdown_t) (void);$/;"	t
Security_Supported_Binaries	modules.c	/^Security_Supported_Binaries_t Security_Supported_Binaries;$/;"	v
Security_Supported_Binaries_t	security.h	/^typedef void (*Security_Supported_Binaries_t) (void*);$/;"	t
Security_Verify_Response	modules.c	/^Security_Verify_Response_t Security_Verify_Response;$/;"	v
Security_Verify_Response_t	security.h	/^typedef signed_buffer_t *(*Security_Verify_Response_t) (const int, const char*, const char*, const char*);$/;"	t
Seek	fs.h	/^	int (*Seek) (struct vfsfile_s *file, unsigned long pos, int whence);	\/\/ Returns 0 on sucess, -1 otherwise$/;"	m	struct:vfsfile_s
SeparateChat	cl_parse.c	/^int SeparateChat(char *chat, int *out_type, char **out_msg)$/;"	f
Serverinfo_Change	EX_browser.c	/^void Serverinfo_Change (server_data *s)$/;"	f
Serverinfo_Draw	EX_browser.c	/^void Serverinfo_Draw ()$/;"	f
Serverinfo_Key	EX_browser.c	/^void Serverinfo_Key(int key)$/;"	f
Serverinfo_Players_Draw	EX_browser.c	/^void Serverinfo_Players_Draw(int x, int y, int w, int h)$/;"	f
Serverinfo_Players_Key	EX_browser.c	/^void Serverinfo_Players_Key(int key)$/;"	f
Serverinfo_Rules_Draw	EX_browser.c	/^void Serverinfo_Rules_Draw(int x, int y, int w, int h)$/;"	f
Serverinfo_Rules_Key	EX_browser.c	/^void Serverinfo_Rules_Key(int key)$/;"	f
Serverinfo_Sources_Draw	EX_browser.c	/^void Serverinfo_Sources_Draw(int x, int y, int w, int h)$/;"	f
Serverinfo_Sources_Key	EX_browser.c	/^void Serverinfo_Sources_Key(int key)$/;"	f
Serverinfo_Start	EX_browser.c	/^void Serverinfo_Start (server_data *s)$/;"	f
Serverinfo_Stop	EX_browser.c	/^void Serverinfo_Stop(void)$/;"	f
Servers_Compare_Func	EX_browser.c	/^int Servers_Compare_Func(const void * p_s1, const void * p_s2)$/;"	f
Servers_Draw	menu_multiplayer.c	/^static void Servers_Draw (int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page)$/;"	f	file:
Servers_Key	menu_multiplayer.c	/^static int Servers_Key(int key, CTab_t *tab, CTabPage_t *page)$/;"	f	file:
Servers_Mouse_Event	menu_multiplayer.c	/^static qbool Servers_Mouse_Event(const mouse_state_t *ms)$/;"	f	file:
Servers_OnShow	menu_multiplayer.c	/^static void Servers_OnShow(void)$/;"	f	file:
Servers_disp	EX_browser.c	/^int Servers_disp;   \/\/ server# at the top of the list$/;"	v
Servers_pos	EX_browser.c	/^int Servers_pos;$/;"	v
SetBufferSize	in_win.c	/^static void SetBufferSize(void) {$/;"	f	file:
SetChangeParms	progdefs.h	/^	func_t	SetChangeParms;$/;"	m	struct:__anon252
SetCurrentPage	Ctrl_Tab.c	/^void SetCurrentPage(CTab_t *tab, char *name)$/;"	f
SetDefaultDirectory	sys_mac.c	/^void SetDefaultDirectory (void)$/;"	f
SetError	parser.c	/^LOCAL void SetError(EParser p, int error)$/;"	f
SetGlobalsFromPrefs	sys_mac.c	/^static void SetGlobalsFromPrefs (void)$/;"	f	file:
SetNewParms	progdefs.h	/^	func_t	SetNewParms;$/;"	m	struct:__anon252
SetPing	EX_browser_net.c	/^void SetPing(server_data *s, int ping)$/;"	f
SetUpClientEdict	sv_user.c	/^void SetUpClientEdict (client_t *cl, edict_t *ent)$/;"	f
SetVideoCvarsForPrefs	sys_mac.c	/^void SetVideoCvarsForPrefs (void)$/;"	f
SetVolume	mp3_player.h	/^	void   (*SetVolume)      (double vol);$/;"	m	struct:__anon236
Set_Activepoint	mosdm.c	/^void Set_Activepoint(void){$/;"	f
Setting_BindKey	settings_page.c	/^static void Setting_BindKey(setting* set, int key)$/;"	f	file:
Setting_Click	settings_page.c	/^static void Setting_Click(settings_page* page, const mouse_state_t *ms)$/;"	f	file:
Setting_Decrease	settings_page.c	/^static void Setting_Decrease(setting* set) {$/;"	f	file:
Setting_DrawAction	settings_page.c	/^static void Setting_DrawAction(int x, int y, int w, setting* set, qbool active)$/;"	f	file:
Setting_DrawBind	settings_page.c	/^static void Setting_DrawBind(int x, int y, int w, setting* set, qbool active, qbool bindmode)$/;"	f	file:
Setting_DrawBool	settings_page.c	/^static void Setting_DrawBool(int x, int y, int w, setting* setting, qbool active)$/;"	f	file:
Setting_DrawBoolAdv	settings_page.c	/^static void Setting_DrawBoolAdv(int x, int y, int w, setting* setting, qbool active)$/;"	f	file:
Setting_DrawColor	settings_page.c	/^static void Setting_DrawColor(int x, int y, int w, setting* set, qbool active)$/;"	f	file:
Setting_DrawEnum	settings_page.c	/^static void Setting_DrawEnum(int x, int y, int w, setting* set, qbool active)$/;"	f	file:
Setting_DrawHelpBox	settings_page.c	/^static int Setting_DrawHelpBox(int x, int y, int w, int h, settings_page* page, qbool full)$/;"	f	file:
Setting_DrawIntNum	settings_page.c	/^static void Setting_DrawIntNum(int x, int y, int w, setting* setting, qbool active)$/;"	f	file:
Setting_DrawNamed	settings_page.c	/^static void Setting_DrawNamed(int x, int y, int w, setting* set, qbool active)$/;"	f	file:
Setting_DrawNum	settings_page.c	/^static void Setting_DrawNum(int x, int y, int w, setting* setting, qbool active)$/;"	f	file:
Setting_DrawSeparator	settings_page.c	/^static void Setting_DrawSeparator(int x, int y, int w, setting* set)$/;"	f	file:
Setting_DrawSkin	settings_page.c	/^static void Setting_DrawSkin(int x, int y, int w, setting* set, qbool active)$/;"	f	file:
Setting_DrawSkinPreview	settings_page.c	/^static void Setting_DrawSkinPreview(int x, int y, int w, int h, char *skinfile)$/;"	f	file:
Setting_DrawString	settings_page.c	/^static void Setting_DrawString(int x, int y, int w, setting* setting, qbool active)$/;"	f	file:
Setting_Increase	settings_page.c	/^static void Setting_Increase(setting* set) {$/;"	f	file:
Setting_IncreaseEnum	settings_page.c	/^static void Setting_IncreaseEnum(setting* set, int step)$/;"	f	file:
Setting_PrintLabel	settings_page.c	/^static int Setting_PrintLabel(int x, int y, int w, const char *l, qbool active)$/;"	f	file:
Setting_Reset	settings_page.c	/^static void Setting_Reset(setting* set)$/;"	f	file:
Setting_Slider_Click	settings_page.c	/^static void Setting_Slider_Click(const settings_page *page, const mouse_state_t *ms)$/;"	f	file:
Setting_UnbindKey	settings_page.c	/^static void Setting_UnbindKey(setting* set)$/;"	f	file:
Settings_AdjustScrollBar	settings_page.c	/^static void Settings_AdjustScrollBar(settings_page *page)$/;"	f	file:
Settings_Draw	settings_page.c	/^void Settings_Draw(int x, int y, int w, int h, settings_page* tab)$/;"	f
Settings_Init	settings_page.c	/^void Settings_Init(settings_page *page, setting *arr, size_t size)$/;"	f
Settings_Key	settings_page.c	/^qbool Settings_Key(settings_page* tab, int key)$/;"	f
Settings_LowestViewpoint	settings_page.c	/^static int Settings_LowestViewpoint(const settings_page *page)$/;"	f	file:
Settings_MainInit	settings_page.c	/^void Settings_MainInit(void)$/;"	f
Settings_Mouse_Event	settings_page.c	/^qbool Settings_Mouse_Event(settings_page *page, const mouse_state_t *ms)$/;"	f
Settings_OnShow	settings_page.c	/^void Settings_OnShow(settings_page *page)$/;"	f
Settings_PageHeight	settings_page.c	/^static int Settings_PageHeight(const settings_page *page)$/;"	f	file:
Settings_Page_Init	settings_page.h	19;"	d
Settings_Page_SetMinit	settings_page.h	20;"	d
SetupPlayerEntity	cl_ents.c	/^void SetupPlayerEntity(int num, player_state_t *state) {$/;"	f
ShortSwap	q_shared.c	/^short ShortSwap (short s)$/;"	f
ShowPreselectedWeap	hud.h	158;"	d
Shuffle_f	mp3_player.h	/^	void  (*Shuffle_f)       (void);$/;"	m	struct:__anon236
Shutdown	mp3_player.h	/^	void  (*Shutdown)        (void);$/;"	m	struct:__anon236
Shutdown_SB	EX_browser.c	/^void Shutdown_SB(void)$/;"	f
SignbitsForPlane	gl_rmain.c	/^int SignbitsForPlane (mplane_t *out) {$/;"	f
Skin_AllSkins_f	skin.c	/^void Skin_AllSkins_f (void) {$/;"	f
Skin_AsNameOrId	skin.c	/^char *Skin_AsNameOrId (player_info_t *sc) {$/;"	f
Skin_Cache	skin.c	/^byte *Skin_Cache (skin_t *skin, qbool no_baseskin) $/;"	f
Skin_Find	skin.c	/^void Skin_Find (player_info_t *sc)$/;"	f
Skin_FindName	skin.c	/^char *Skin_FindName (player_info_t *sc) {$/;"	f
Skin_Find_Ex	skin.c	/^void Skin_Find_Ex (player_info_t *sc, char *skin_name) {$/;"	f
Skin_ForcingType	skin.c	/^static int Skin_ForcingType(const char *team)$/;"	f	file:
Skin_NextDownload	skin.c	/^void Skin_NextDownload (void) {$/;"	f
Skin_PixelsLoad	skin.c	/^byte *Skin_PixelsLoad(char *name, int *max_w, int *max_h, int *bpp, int *real_width, int *real_height)$/;"	f
Skin_ShowSkins_f	skin.c	/^void Skin_ShowSkins_f (void) {$/;"	f
Skin_Skins_f	skin.c	/^void Skin_Skins_f (void) {$/;"	f
Skin_To_TFSkin	teamplay.c	/^static char *Skin_To_TFSkin (char *myskin)$/;"	f	file:
Skins_PreCache	skin.c	/^void Skins_PreCache(void)$/;"	f
SkipQTVLeadingProxies	cl_parse.c	/^static char *SkipQTVLeadingProxies(char *s)$/;"	f	file:
SleepUntilInput	sys_win.c	/^void SleepUntilInput (int time) $/;"	f
SliderPos	settings_page.c	/^static float SliderPos(float min, float max, float val) { return (val-min)\/(max-min); }$/;"	f	file:
Slider_Startpos	settings_page.c	/^static int Slider_Startpos(int w)$/;"	f	file:
SndDoubleBackUPP	CarbonSndPlayDB.h	/^typedef STACK_UPP_TYPE(SndDoubleBackProcPtr)	SndDoubleBackUPP;$/;"	t
SndDoubleBuffer	CarbonSndPlayDB.h	/^struct SndDoubleBuffer {$/;"	s
SndDoubleBuffer	CarbonSndPlayDB.h	/^typedef struct SndDoubleBuffer          SndDoubleBuffer;$/;"	t	typeref:struct:SndDoubleBuffer
SndDoubleBufferHeader	CarbonSndPlayDB.h	/^struct SndDoubleBufferHeader {$/;"	s
SndDoubleBufferHeader	CarbonSndPlayDB.h	/^typedef struct SndDoubleBufferHeader    SndDoubleBufferHeader;$/;"	t	typeref:struct:SndDoubleBufferHeader
SndDoubleBufferHeader2	CarbonSndPlayDB.h	/^struct SndDoubleBufferHeader2 {$/;"	s
SndDoubleBufferHeader2	CarbonSndPlayDB.h	/^typedef struct SndDoubleBufferHeader2   SndDoubleBufferHeader2;$/;"	t	typeref:struct:SndDoubleBufferHeader2
SndDoubleBufferHeader2Ptr	CarbonSndPlayDB.h	/^typedef SndDoubleBufferHeader2 *        SndDoubleBufferHeader2Ptr;$/;"	t
SndDoubleBufferHeaderPtr	CarbonSndPlayDB.h	/^typedef SndDoubleBufferHeader *         SndDoubleBufferHeaderPtr;$/;"	t
SndDoubleBufferPtr	CarbonSndPlayDB.h	/^typedef SndDoubleBuffer *               SndDoubleBufferPtr;$/;"	t
SndPlayDoubleBuffer	snd_mac.c	29;"	d	file:
Snd_WriteLinearBlastStereo16	snd_mix.c	/^static void Snd_WriteLinearBlastStereo16 (void)$/;"	f	file:
Snd_WriteLinearBlastStereo16_SwapStereo	snd_mix.c	/^static void Snd_WriteLinearBlastStereo16_SwapStereo (void)$/;"	f	file:
SockadrToNetadr	net.c	/^void SockadrToNetadr (struct sockaddr_storage *s, netadr_t *a)$/;"	f
Sort_All_Players	EX_browser.c	/^void Sort_All_Players(void)$/;"	f
Sort_Servers	EX_browser.c	/^void Sort_Servers (void)$/;"	f
Sort_Sources	EX_browser.c	/^void Sort_Sources (void)$/;"	f
SoundBufferSize	snd_mac.c	37;"	d	file:
Sound_NextDownload	cl_parse.c	/^void Sound_NextDownload (void) $/;"	f
Sources_Compare_Func	EX_browser.c	/^int Sources_Compare_Func (const void * p_s1, const void * p_s2)$/;"	f
Sources_Draw	menu_multiplayer.c	/^static void Sources_Draw (int x, int y, int w, int h, CTab_t *tab, CTabPage_t *page)$/;"	f	file:
Sources_Key	menu_multiplayer.c	/^static int Sources_Key(int key, CTab_t *tab, CTabPage_t *page)$/;"	f	file:
Sources_Mouse_Event	menu_multiplayer.c	/^static qbool Sources_Mouse_Event(const mouse_state_t *ms)$/;"	f	file:
Sources_disp	EX_browser.c	/^int Sources_disp;   \/\/ source# at the top of the list$/;"	v
Sources_pos	EX_browser.c	/^int Sources_pos;$/;"	v
SparkGen	gl_rpart.c	/^void SparkGen (vec3_t org, byte col[3], float count, float size, float life)$/;"	f
SpectatorConnect	pr_edict.c	/^func_t SpectatorConnect, SpectatorThink, SpectatorDisconnect;$/;"	v
SpectatorDisconnect	pr_edict.c	/^func_t SpectatorConnect, SpectatorThink, SpectatorDisconnect;$/;"	v
SpectatorThink	pr_edict.c	/^func_t SpectatorConnect, SpectatorThink, SpectatorDisconnect;$/;"	v
Spline_Add	splines.c	/^struct spline *Spline_Add(void *data)$/;"	f
Spline_Calculate	splines.c	/^int Spline_Calculate(struct spline *spline, struct spline_point *s_point ,double time, vec3_t vec)$/;"	f
Spline_Calculate_From_Point	splines.c	/^int Spline_Calculate_From_Point(struct spline *spline, double time, vec3_t vec, int point)$/;"	f
Spline_Check_Selected_Point_Time	splines.c	/^void Spline_Check_Selected_Point_Time(struct spline *spline, int point)$/;"	f
Spline_Cleanup	splines.c	/^void Spline_Cleanup(struct spline *spline)$/;"	f
Spline_Cleanup_Points	splines.c	/^void Spline_Cleanup_Points(struct spline *spline)$/;"	f
Spline_Even_Speed	splines.c	/^void Spline_Even_Speed(struct spline *spline)$/;"	f
Spline_Get_Point_Count	splines.c	/^int Spline_Get_Point_Count(struct spline *spline)$/;"	f
Spline_Get_Point_Data_By_Number	splines.c	/^void *Spline_Get_Point_Data_By_Number(struct spline *spline, int point)$/;"	f
Spline_Get_Point_From_Number	splines.c	/^struct spline_point *Spline_Get_Point_From_Number(struct spline *spline, int point_number)$/;"	f
Spline_Get_Point_Origin_By_Number	splines.c	/^float	*Spline_Get_Point_Origin_By_Number(struct spline *spline, int point)$/;"	f
Spline_Get_Point_Position	splines.c	/^void Spline_Get_Point_Position(struct spline *spline, int point_number, vec3_t position)$/;"	f
Spline_Get_Point_Time_By_Number	splines.c	/^double *Spline_Get_Point_Time_By_Number(struct spline *spline, int point)$/;"	f
Spline_Insert_Point	splines.c	/^struct spline_point *Spline_Insert_Point(struct spline *spline, vec3_t origin, struct spline_point *s_point, int before, void *data)$/;"	f
Spline_Remove	splines.c	/^void Spline_Remove(struct spline *spline)$/;"	f
Spline_Remove_Point	splines.c	/^void Spline_Remove_Point(struct spline *spline, struct spline_point *s_point)$/;"	f
Spline_Remove_Point_By_Number	splines.c	/^void Spline_Remove_Point_By_Number(struct spline *spline, int number)$/;"	f
Spline_Set_Point_From_Number	splines.c	/^void Spline_Set_Point_From_Number(struct spline *spline, int point_number, vec3_t location)$/;"	f
Spline_Set_Point_Time_By_Number	splines.c	/^void Spline_Set_Point_Time_By_Number(struct spline *spline, int point, double time)$/;"	f
Spline_Update	splines.c	/^void Spline_Update(struct spline *spline)$/;"	f
Sprockets_Active	in_mac.c	/^qbool Sprockets_Active = false;$/;"	v
SrcBlend	gl_rpart.c	/^	int			SrcBlend;$/;"	m	struct:particle_tree_s	file:
Sshot_SshotDirectory	cl_screen.c	/^static char *Sshot_SshotDirectory(void) {$/;"	f	file:
StartFrame	progdefs.h	/^	func_t	StartFrame;$/;"	m	struct:__anon252
StartNewGame	menu.c	/^static void StartNewGame (void) {$/;"	f	file:
Start_Autoupdate	EX_browser_net.c	/^void Start_Autoupdate(server_data *s)$/;"	f
Startup_Place	host.c	/^void Startup_Place(void)$/;"	f
State_AmmoForWeapon	hud_common.c	/^int State_AmmoForWeapon(int weapon)$/;"	f
State_AmmoNumForWeapon	hud_common.c	/^int State_AmmoNumForWeapon(int weapon)$/;"	f
StatsGrid_CalculateHoldItem	stats_grid.c	/^void StatsGrid_CalculateHoldItem(stats_weight_grid_t *grid, int row, int col, float hold_threshold, int team_id)$/;"	f
StatsGrid_Change	stats_grid.c	/^void StatsGrid_Change(stats_weight_grid_t *grid,$/;"	f
StatsGrid_CompareHoldItems	stats_grid.c	/^static int StatsGrid_CompareHoldItems(const void *it1, const void *it2)$/;"	f	file:
StatsGrid_DecreaseTeamWeights	stats_grid.c	/^void StatsGrid_DecreaseTeamWeights(stats_weight_grid_t *grid, int row, int col, float hold_threshold)$/;"	f
StatsGrid_DecreaseWeight	stats_grid.c	/^void StatsGrid_DecreaseWeight(cell_weight_t *weight, stats_weight_grid_t *grid)$/;"	f
StatsGrid_Gather	stats_grid.c	/^void StatsGrid_Gather()$/;"	f
StatsGrid_Init	stats_grid.c	/^void StatsGrid_Init(stats_weight_grid_t **grid,$/;"	f
StatsGrid_InitHoldItems	stats_grid.c	/^void StatsGrid_InitHoldItems()$/;"	f
StatsGrid_InitTeamNames	stats_grid.c	/^void StatsGrid_InitTeamNames(stats_weight_grid_t *grid)$/;"	f
StatsGrid_Remove	stats_grid.c	/^void StatsGrid_Remove(stats_weight_grid_t **grid)$/;"	f
StatsGrid_ResetHoldItemCounts	stats_grid.c	/^void StatsGrid_ResetHoldItemCounts()$/;"	f
StatsGrid_ResetHoldItems	stats_grid.c	/^void StatsGrid_ResetHoldItems()$/;"	f
StatsGrid_ResetHoldItemsOrder	stats_grid.c	/^void StatsGrid_ResetHoldItemsOrder()$/;"	f
StatsGrid_SetHoldItemName	stats_grid.c	/^void StatsGrid_SetHoldItemName(char *dst_name, const char *src_name, int count)$/;"	f
StatsGrid_SetHoldItemOrder	stats_grid.c	/^void StatsGrid_SetHoldItemOrder(const char *item_name, int order)$/;"	f
StatsGrid_SetWeightForPlayer	stats_grid.c	/^void StatsGrid_SetWeightForPlayer(stats_weight_grid_t *grid,$/;"	f
StatsGrid_SortHoldItems	stats_grid.c	/^void StatsGrid_SortHoldItems()$/;"	f
StatsGrid_ValidateTeamColors	stats_grid.c	/^void StatsGrid_ValidateTeamColors()$/;"	f
Stats_EnterSlot	fragstats.c	/^void Stats_EnterSlot(int num) {$/;"	f
Stats_GetBasicStats	fragstats.c	/^void Stats_GetBasicStats(int num, int *playerstats) {$/;"	f
Stats_GetFlagStats	fragstats.c	/^void Stats_GetFlagStats(int num, int *playerstats) {$/;"	f
Stats_Init	fragstats.c	/^void Stats_Init(void) {$/;"	f
Stats_IsActive	fragstats.c	/^qbool Stats_IsActive(void) {$/;"	f
Stats_IsFlagsParsed	fragstats.c	/^qbool Stats_IsFlagsParsed(void) {$/;"	f
Stats_NewMap	fragstats.c	/^void Stats_NewMap(void) {$/;"	f
Stats_ParsePrint	fragstats.c	/^void Stats_ParsePrint(char *s, int level, cfrags_format *cff) {$/;"	f
Stats_ParsePrintLine	fragstats.c	/^static void Stats_ParsePrintLine(char *s, cfrags_format *cff) $/;"	f	file:
Stats_Reset	fragstats.c	/^void Stats_Reset(void) {$/;"	f
StopQWZPlayback	cl_demo.c	/^static void StopQWZPlayback (void)$/;"	f	file:
Stop_f	mp3_player.h	/^	void  (*Stop_f)          (void);$/;"	m	struct:__anon236
StoreCurrentVideoSettings	menu_options.c	/^static void StoreCurrentVideoSettings(menu_video_settings_t *out) {$/;"	f	file:
StringEntryEnter	settings_page.c	/^static void StringEntryEnter(setting* set) {$/;"	f	file:
StringEntryLeave	settings_page.c	/^static void StringEntryLeave(setting* set) {$/;"	f	file:
StringToFilter	sv_main.c	/^qbool StringToFilter (char *s, ipfilter_t *f) {$/;"	f
StringToRGB	utils.c	/^byte* StringToRGB(char *s)$/;"	f
StringToRGB_W	utils.c	/^void StringToRGB_W(char *s, byte *rgb)$/;"	f
StripInlineSpaces	document_rendering.c	/^char * StripInlineSpaces(char *str, document_rendered_link_t *links)$/;"	f
StripLength	gl_mesh.c	/^int	StripLength (int starttri, int startv)$/;"	f
SubdividePolygon	gl_warp.c	/^void SubdividePolygon (int numverts, float *verts) {$/;"	f
SuiColor	vx_tracker.c	/^static char *SuiColor(int player)$/;"	f	file:
SwapPic	wad.c	/^void SwapPic (qpic_t *pic) {$/;"	f
Sys_Activate	sys_mac.c	/^static void Sys_Activate (void)$/;"	f	file:
Sys_CloseIPC	sys_linux.c	/^void Sys_CloseIPC()$/;"	f
Sys_CloseIPC	sys_mac.c	/^void Sys_CloseIPC()$/;"	f
Sys_CloseIPC	sys_win.c	/^void Sys_CloseIPC()$/;"	f
Sys_ConsoleInput	sv_sys_unix.c	/^char *Sys_ConsoleInput (void)$/;"	f
Sys_ConsoleInput	sv_sys_win.c	/^char *Sys_ConsoleInput (void)$/;"	f
Sys_ConsoleInput	sys_linux.c	/^char *Sys_ConsoleInput (void) {$/;"	f
Sys_ConsoleInput	sys_mac.c	/^char *Sys_ConsoleInput (void) {$/;"	f
Sys_ConsoleInput	sys_win.c	/^char *Sys_ConsoleInput (void)$/;"	f
Sys_CopyToClipboard	sys_linux.c	/^void Sys_CopyToClipboard(char *text) {$/;"	f
Sys_CopyToClipboard	sys_mac.c	/^void Sys_CopyToClipboard(char *text) {$/;"	f
Sys_CopyToClipboard	sys_win.c	/^void Sys_CopyToClipboard(char *text) $/;"	f
Sys_CreateThread	sys_linux.c	/^int  Sys_CreateThread(DWORD WINAPI (*func)(void *), void *param)$/;"	f
Sys_CreateThread	sys_mac.c	/^int  Sys_CreateThread(DWORD WINAPI (*func)(void *), void *param)$/;"	f
Sys_Deactivate	sys_mac.c	/^static void Sys_Deactivate (void)$/;"	f	file:
Sys_DebugLog	sys_mac.c	/^void Sys_DebugLog(char *file, char *fmt, ...)$/;"	f
Sys_DisableScreenSaving	sys_win.c	/^static void Sys_DisableScreenSaving(void)$/;"	f	file:
Sys_DoubleTime	sv_sys_unix.c	/^double Sys_DoubleTime (void)$/;"	f
Sys_DoubleTime	sv_sys_win.c	/^double Sys_DoubleTime (void)$/;"	f
Sys_DoubleTime	sys_linux.c	/^double Sys_DoubleTime (void) {$/;"	f
Sys_DoubleTime	sys_mac.c	/^double Sys_DoubleTime (void)$/;"	f
Sys_DoubleTime	sys_win.c	/^double Sys_DoubleTime (void) $/;"	f
Sys_EnumerateFiles	sys_linux.c	/^int Sys_EnumerateFiles (char *gpath, char *match, int (*func)(char *, int, void *), void *parm)$/;"	f
Sys_EnumerateFiles	sys_mac.c	/^int Sys_EnumerateFiles (char *gpath, char *match, int (*func)(char *, int, void *), void *parm) {$/;"	f
Sys_EnumerateFiles	sys_win.c	/^int Sys_EnumerateFiles (char *gpath, char *match, int (*func)(char *, int, void *), void *parm)$/;"	f
Sys_Error	sv_sys_unix.c	/^void Sys_Error (char *error, ...)$/;"	f
Sys_Error	sv_sys_win.c	/^void Sys_Error (char *error, ...) {$/;"	f
Sys_Error	sys_linux.c	/^void Sys_Error (char *error, ...) {$/;"	f
Sys_Error	sys_mac.c	/^void Sys_Error (char *error, ...)$/;"	f
Sys_Error	sys_win.c	/^void Sys_Error (char *error, ...) $/;"	f
Sys_FileClose	sys_mac.c	/^void Sys_FileClose (int handle)$/;"	f
Sys_FileExists	sys_mac.c	/^qbool Sys_FileExists (char *path)$/;"	f
Sys_FileOpenRead	sys_mac.c	/^int Sys_FileOpenRead (char *path, int *hndl)$/;"	f
Sys_FileOpenWrite	sys_mac.c	/^int Sys_FileOpenWrite (char *path)$/;"	f
Sys_FileRead	sys_mac.c	/^int Sys_FileRead (int handle, void *dest, int count)$/;"	f
Sys_FileSeek	sys_mac.c	/^void Sys_FileSeek (int handle, int position)$/;"	f
Sys_FileWrite	sys_mac.c	/^int Sys_FileWrite (int handle, void *src, int count)$/;"	f
Sys_FindProcess	sys_mac.c	/^static OSStatus Sys_FindProcess( OSType creator, OSType type, ProcessSerialNumber *outProcess )$/;"	f	file:
Sys_GetClipboardData	sys_linux.c	/^char *Sys_GetClipboardData(void) {$/;"	f
Sys_GetClipboardData	sys_mac.c	/^char *Sys_GetClipboardData(void) {$/;"	f
Sys_GetClipboardTextW	sys_linux.c	/^wchar *Sys_GetClipboardTextW(void) {$/;"	f
Sys_GetClipboardTextW	sys_mac.c	/^wchar *Sys_GetClipboardTextW(void) {$/;"	f
Sys_GetClipboardTextW	sys_win.c	/^wchar *Sys_GetClipboardTextW(void) $/;"	f
Sys_GetFullExePath	sys_win.c	/^void Sys_GetFullExePath(char *path, unsigned int path_length, qbool long_name)$/;"	f
Sys_GetProcAddress	sys_mac.c	/^void *Sys_GetProcAddress (const char *ExtName)$/;"	f
Sys_HighFPPrecision	sys_linux.c	/^void Sys_HighFPPrecision (void) {}$/;"	f
Sys_HighFPPrecision	sys_mac.c	/^void Sys_HighFPPrecision (void){}$/;"	f
Sys_HighFPPrecision	sys_win.c	/^void Sys_HighFPPrecision(void) {}$/;"	f
Sys_Init	sv_sys_unix.c	/^void Sys_Init (void)$/;"	f
Sys_Init	sv_sys_win.c	/^void Sys_Init (void)$/;"	f
Sys_Init	sys_linux.c	/^void Sys_Init(void) {$/;"	f
Sys_Init	sys_mac.c	/^void Sys_Init(void)$/;"	f
Sys_Init	sys_win.c	/^void Sys_Init (void) $/;"	f
Sys_InitDoubleTime	sys_win.c	/^void Sys_InitDoubleTime (void) $/;"	f
Sys_InitIPC	sys_linux.c	/^void Sys_InitIPC()$/;"	f
Sys_InitIPC	sys_mac.c	/^void Sys_InitIPC()$/;"	f
Sys_InitIPC	sys_win.c	/^void Sys_InitIPC()$/;"	f
Sys_Init_	sys_win.c	/^void Sys_Init_ (void) $/;"	f
Sys_LowFPPrecision	sys_linux.c	/^void Sys_LowFPPrecision (void) {}$/;"	f
Sys_LowFPPrecision	sys_mac.c	/^void Sys_LowFPPrecision (void){}$/;"	f
Sys_LowFPPrecision	sys_win.c	/^void Sys_LowFPPrecision(void) {}$/;"	f
Sys_MSleep	sys.h	29;"	d
Sys_MSleep	sys.h	31;"	d
Sys_MakeCodeWriteable	sys_linux.c	/^void Sys_MakeCodeWriteable (unsigned long startaddr, unsigned long length) {$/;"	f
Sys_MakeCodeWriteable	sys_mac.c	/^void Sys_MakeCodeWriteable (unsigned long startaddr, unsigned long length){}$/;"	f
Sys_MakeCodeWriteable	sys_win.c	/^void Sys_MakeCodeWriteable (unsigned long startaddr, unsigned long length) $/;"	f
Sys_Message	sys_mac.c	/^void Sys_Message (Str255 briefMsg, char *error, ...)$/;"	f
Sys_PathProtection	fs.c	/^qbool Sys_PathProtection(const char *pattern)$/;"	f
Sys_PipeFile	sys_linux.c	/^static char *Sys_PipeFile(void) {$/;"	f	file:
Sys_Printf	sv_sys_unix.c	/^void Sys_Printf (char *fmt, ...)$/;"	f
Sys_Printf	sv_sys_win.c	/^void Sys_Printf (char *fmt, ...)$/;"	f
Sys_Printf	sys_linux.c	/^void Sys_Printf (char *fmt, ...) {$/;"	f
Sys_Printf	sys_mac.c	/^void Sys_Printf (char *fmt, ...)$/;"	f
Sys_Printf	sys_win.c	/^void Sys_Printf (char *fmt, ...) $/;"	f
Sys_Quit	sv_sys_unix.c	/^void Sys_Quit (void)$/;"	f
Sys_Quit	sv_sys_win.c	/^void Sys_Quit (void)$/;"	f
Sys_Quit	sys_linux.c	/^void Sys_Quit (void) {$/;"	f
Sys_Quit	sys_mac.c	/^void Sys_Quit (void)$/;"	f
Sys_Quit	sys_win.c	/^void Sys_Quit (void) $/;"	f
Sys_ReadDirClose	sys_linux.c	/^void Sys_ReadDirClose(unsigned long search)$/;"	f
Sys_ReadDirClose	sys_mac.c	/^void Sys_ReadDirClose(unsigned long search)$/;"	f
Sys_ReadDirClose	sys_win.c	/^void Sys_ReadDirClose(unsigned long search)$/;"	f
Sys_ReadDirFirst	sys_linux.c	/^unsigned long Sys_ReadDirFirst(sys_dirent *ent)$/;"	f
Sys_ReadDirFirst	sys_mac.c	/^unsigned long Sys_ReadDirFirst(sys_dirent *ent)$/;"	f
Sys_ReadDirFirst	sys_win.c	/^unsigned long Sys_ReadDirFirst(sys_dirent *ent)$/;"	f
Sys_ReadDirNext	sys_linux.c	/^int Sys_ReadDirNext(unsigned long search, sys_dirent *ent)$/;"	f
Sys_ReadDirNext	sys_mac.c	/^int Sys_ReadDirNext(unsigned long search, sys_dirent *ent)$/;"	f
Sys_ReadDirNext	sys_win.c	/^int Sys_ReadDirNext(unsigned long search, sys_dirent *ent)$/;"	f
Sys_ReadIPC	sys_linux.c	/^void Sys_ReadIPC()$/;"	f
Sys_ReadIPC	sys_mac.c	/^void Sys_ReadIPC()$/;"	f
Sys_ReadIPC	sys_win.c	/^void Sys_ReadIPC()$/;"	f
Sys_RestoreScreenSaving	sys_win.c	/^static void Sys_RestoreScreenSaving(void)$/;"	f	file:
Sys_SemDestroy	sys_linux.c	/^int Sys_SemDestroy(sem_t *sem)$/;"	f
Sys_SemDestroy	sys_mac.c	/^int Sys_SemDestroy(sem_t *sem)$/;"	f
Sys_SemDestroy	sys_win.c	/^int Sys_SemDestroy(sem_t *sem)$/;"	f
Sys_SemInit	sys_linux.c	/^int Sys_SemInit(sem_t *sem, int value, int max_value) $/;"	f
Sys_SemInit	sys_mac.c	/^int Sys_SemInit(sem_t *sem, int value, int max_value) $/;"	f
Sys_SemInit	sys_win.c	/^int Sys_SemInit(sem_t *sem, int value, int max_value) $/;"	f
Sys_SemPost	sys_linux.c	/^int Sys_SemPost(sem_t *sem)$/;"	f
Sys_SemPost	sys_mac.c	/^int Sys_SemPost(sem_t *sem)$/;"	f
Sys_SemPost	sys_win.c	/^int Sys_SemPost(sem_t *sem)$/;"	f
Sys_SemWait	sys_linux.c	/^int Sys_SemWait(sem_t *sem) $/;"	f
Sys_SemWait	sys_mac.c	/^int Sys_SemWait(sem_t *sem) $/;"	f
Sys_SemWait	sys_win.c	/^int Sys_SemWait(sem_t *sem) $/;"	f
Sys_SendIPC	sys_linux.c	/^unsigned int Sys_SendIPC(const char *buf)$/;"	f
Sys_SendIPC	sys_mac.c	/^unsigned int Sys_SendIPC(const char *buf)$/;"	f
Sys_SendIPC	sys_win.c	/^unsigned int Sys_SendIPC(const char *buf)$/;"	f
Sys_SendKeyEvents	linux_glimp.c	/^void Sys_SendKeyEvents (void) {$/;"	f
Sys_SendKeyEvents	sys_mac.c	/^void Sys_SendKeyEvents (void)$/;"	f
Sys_SendKeyEvents	sys_win.c	/^void Sys_SendKeyEvents (void) $/;"	f
Sys_SendKeyEvents	vid_glx.c	/^void Sys_SendKeyEvents(void) {$/;"	f
Sys_SendKeyEvents	vid_svgalib.c	/^void Sys_SendKeyEvents(void)$/;"	f
Sys_SendKeyEvents	vid_x11.c	/^void Sys_SendKeyEvents (void)$/;"	f
Sys_SetFPCW	sys_win.c	/^void Sys_SetFPCW(void) {}$/;"	f
Sys_SetPriority	sys_win.c	/^int Sys_SetPriority(int priority) $/;"	f
Sys_Sleep	sys_mac.c	/^void Sys_Sleep (void){}$/;"	f
Sys_SwitchToFinder_f	sys_mac.c	/^void Sys_SwitchToFinder_f (void)$/;"	f
Sys_chdir	sys_linux.c	/^int Sys_chdir (const char *path)$/;"	f
Sys_chdir	sys_mac.c	/^int Sys_chdir (const char *path)$/;"	f
Sys_chdir	sys_win.c	/^int Sys_chdir (const char *path)$/;"	f
Sys_fullpath	sys_linux.c	/^char *Sys_fullpath(char *absPath, const char *relPath, int maxLength)$/;"	f
Sys_fullpath	sys_mac.c	/^char *Sys_fullpath(char *absPath, const char *relPath, int maxLength)$/;"	f
Sys_fullpath	sys_win.c	/^char *Sys_fullpath(char *absPath, const char *relPath, int maxLength)$/;"	f
Sys_getcwd	sys_linux.c	/^char * Sys_getcwd (char *buf, int bufsize)$/;"	f
Sys_getcwd	sys_mac.c	/^char * Sys_getcwd (char *buf, int bufsize)$/;"	f
Sys_getcwd	sys_win.c	/^char * Sys_getcwd (char *buf, int bufsize)$/;"	f
Sys_mkdir	sv_sys_unix.c	/^void Sys_mkdir (const char *path)$/;"	f
Sys_mkdir	sv_sys_win.c	/^void Sys_mkdir (const char *path)$/;"	f
Sys_mkdir	sys_linux.c	/^void Sys_mkdir (const char *path) {$/;"	f
Sys_mkdir	sys_mac.c	/^void Sys_mkdir (const char *path)$/;"	f
Sys_mkdir	sys_win.c	/^void Sys_mkdir (const char *path) $/;"	f
Sys_remove	sys_linux.c	/^int Sys_remove (char *path)$/;"	f
Sys_remove	sys_mac.c	/^int Sys_remove (char *path)$/;"	f
Sys_remove	sys_win.c	/^int Sys_remove (char *path)$/;"	f
T	parser.c	/^LOCAL expr_val T(EParser p) { return Tap(p, F(p)); }$/;"	f
TAB_MAX_NAME_LENGTH	Ctrl_Tab.h	8;"	d
TAB_MAX_TABS	Ctrl_Tab.h	9;"	d
TARGET_API_MAC_CARBON	CarbonSndPlayDB.c	61;"	d	file:
TCL_Alias	cl_tcl.c	/^static int TCL_Alias (ClientData data, Tcl_Interp* interp, int objc, Tcl_Obj *const objv[])$/;"	f	file:
TCL_ClockProc	cl_tcl.c	/^static int TCL_ClockProc (ClientData data, Tcl_Interp* interp, int objc, Tcl_Obj *const objv[])$/;"	f	file:
TCL_Cmd	cl_tcl.c	/^static int TCL_Cmd (ClientData data, Tcl_Interp* interp, int objc, Tcl_Obj *const objv[])$/;"	f	file:
TCL_DeleteProc	cl_tcl.c	/^static void TCL_DeleteProc (ClientData data)$/;"	f	file:
TCL_DenyProc	cl_tcl.c	/^static int TCL_DenyProc (ClientData data, Tcl_Interp* interp, int objc, Tcl_Obj *const objv[])$/;"	f	file:
TCL_Eval_f	cl_tcl.c	/^static void TCL_Eval_f (void)$/;"	f	file:
TCL_Exec_f	cl_tcl.c	/^static void TCL_Exec_f (void)$/;"	f	file:
TCL_ExecuteAlias	cl_tcl.c	/^void TCL_ExecuteAlias (cmd_alias_t *alias)$/;"	f
TCL_InterpInit	cl_tcl.c	/^void TCL_InterpInit (void)$/;"	f
TCL_InterpInitCommands	cl_tcl.c	/^void TCL_InterpInitCommands (void)$/;"	f
TCL_InterpLoaded	cl_tcl.c	/^qbool TCL_InterpLoaded (void)$/;"	f
TCL_LIB_NAME	embed_tcl.h	27;"	d
TCL_LIB_NAME	embed_tcl.h	29;"	d
TCL_LIB_NAME	embed_tcl.h	31;"	d
TCL_OpenProc	cl_tcl.c	/^static int TCL_OpenProc (ClientData data, Tcl_Interp* interp, int objc, Tcl_Obj *const objv[])$/;"	f	file:
TCL_Proc_f	cl_tcl.c	/^static void TCL_Proc_f (void)$/;"	f	file:
TCL_QStringToObj	cl_tcl.c	/^static Tcl_Obj* TCL_QStringToObj (const char* src)$/;"	f	file:
TCL_RawToUtfChars	cl_tcl.c	/^static int TCL_RawToUtfChars (ClientData client_data, const char *src, int src_len, int flags,$/;"	f	file:
TCL_RegisterMacro	cl_tcl.c	/^void TCL_RegisterMacro (macro_command_t *macro)$/;"	f
TCL_RegisterVariable	cl_tcl.c	/^void TCL_RegisterVariable (cvar_t *variable)$/;"	f
TCL_ReplaceProc	cl_tcl.c	/^static void TCL_ReplaceProc (const char* command, Tcl_ObjCmdProc* proc)$/;"	f	file:
TCL_Shutdown	cl_tcl.c	/^void TCL_Shutdown (void)$/;"	f
TCL_TraceVariable	cl_tcl.c	/^static char* TCL_TraceVariable (ClientData data, Tcl_Interp* interp,$/;"	f	file:
TCL_UnregisterVariable	cl_tcl.c	/^void TCL_UnregisterVariable (const char *name)$/;"	f
TCL_UtfToRawChars	cl_tcl.c	/^static int TCL_UtfToRawChars (ClientData client_data, const char *src, int src_len, int flags,$/;"	f	file:
TCL_lib	cl_tcl.c	/^static void* TCL_lib;$/;"	v	file:
TCP_OpenListenSocket	net.c	/^int TCP_OpenListenSocket (int port)$/;"	f
TCP_OpenStream	net.c	/^int TCP_OpenStream (netadr_t remoteaddr)$/;"	f
TD_OFF	menu_multiplayer.c	/^		TD_OFF, TD_ON, cg_teamdamage_max$/;"	e	enum:cg_teamdamage_e	file:
TD_ON	menu_multiplayer.c	/^		TD_OFF, TD_ON, cg_teamdamage_max$/;"	e	enum:cg_teamdamage_e	file:
TEAMFRAGS_EXTRA_SPEC_BEFORE	hud_common.c	2794;"	d	file:
TEAMFRAGS_EXTRA_SPEC_NOICON	hud_common.c	2796;"	d	file:
TEAMFRAGS_EXTRA_SPEC_NONE	hud_common.c	2793;"	d	file:
TEAMFRAGS_EXTRA_SPEC_ONTOP	hud_common.c	2795;"	d	file:
TEAMFRAGS_EXTRA_SPEC_RLTEXT	hud_common.c	2797;"	d	file:
TEAMINFO_NICKLEN	cl_screen.c	1465;"	d	file:
TEAMINFO_SHOWSELF	cl_screen.c	1751;"	d	file:
TEAM_COUNT	stats_grid.h	8;"	d
TEMPHUD_FULLPATH	hud_common.c	4202;"	d	file:
TEMPHUD_NAME	hud_common.c	4201;"	d	file:
TEMP_DEMO_NAME	cl_demo.c	1760;"	d	file:
TEMP_LOG_NAME	logging.c	170;"	d	file:
TEXWAD_MAXIMAGES	wad.c	243;"	d	file:
TEX_ALPHA	gl_texture.h	27;"	d
TEX_BRIGHTEN	gl_texture.h	31;"	d
TEX_COMPLAIN	gl_texture.h	25;"	d
TEX_FULLBRIGHT	gl_texture.h	29;"	d
TEX_LUMA	gl_texture.h	28;"	d
TEX_MIPMAP	gl_texture.h	26;"	d
TEX_NOCOMPRESS	gl_texture.h	32;"	d
TEX_NOSCALE	gl_texture.h	30;"	d
TEX_NO_PCX	gl_texture.h	33;"	d
TEX_SPECIAL	bspfile.h	168;"	d
TE_BLOOD	protocol.h	340;"	d
TE_EXPLOSION	protocol.h	331;"	d
TE_GUNSHOT	protocol.h	330;"	d
TE_IDENT	nmenu_trackentity.c	10;"	d	file:
TE_KNIGHTSPIKE	protocol.h	336;"	d
TE_LAVASPLASH	protocol.h	338;"	d
TE_LIGHTNING1	protocol.h	333;"	d
TE_LIGHTNING2	protocol.h	334;"	d
TE_LIGHTNING3	protocol.h	337;"	d
TE_LIGHTNINGBLOOD	protocol.h	341;"	d
TE_SPIKE	protocol.h	328;"	d
TE_SUPERSPIKE	protocol.h	329;"	d
TE_TAREXPLOSION	protocol.h	332;"	d
TE_TELEPORT	protocol.h	339;"	d
TE_WIZSPIKE	protocol.h	335;"	d
TF_TRAIL	render.h	/^	TF_TRAIL,$/;"	e	enum:trail_type_s
TGAHeader_s	image.c	/^typedef struct TGAHeader_s $/;"	s	file:
TGAHeader_t	image.c	/^} TGAHeader_t;$/;"	t	typeref:struct:TGAHeader_s	file:
TGA_ERROR	image.c	1691;"	d	file:
TGA_MAPPED	image.c	1641;"	d	file:
TGA_MAPPED_RLE	image.c	1642;"	d	file:
TGA_MONO	image.c	1645;"	d	file:
TGA_MONO_RLE	image.c	1646;"	d	file:
TGA_RGB	image.c	1643;"	d	file:
TGA_RGB_RLE	image.c	1644;"	d	file:
TGA_upsample15	image.c	/^static void TGA_upsample15(byte *dest, byte *src, qbool alpha) $/;"	f	file:
TGA_upsample24	image.c	/^static void TGA_upsample24(byte *dest, byte *src) $/;"	f	file:
TGA_upsample32	image.c	/^static void TGA_upsample32(byte *dest, byte *src) $/;"	f	file:
TGZ_EXTRACT	vfs_tar.h	/^	TGZ_EXTRACT,$/;"	e	enum:__anon292
TGZ_INVALID	vfs_tar.h	/^	TGZ_INVALID $/;"	e	enum:__anon292
TGZ_LIST	vfs_tar.h	/^	TGZ_LIST,$/;"	e	enum:__anon292
TIMETYPE_CLOCK	common_draw.h	4;"	d
TIMETYPE_DEMOCLOCK	common_draw.h	7;"	d
TIMETYPE_GAMECLOCK	common_draw.h	5;"	d
TIMETYPE_GAMECLOCKINV	common_draw.h	6;"	d
TI_TIMEOUT	cl_screen.c	1480;"	d	file:
TKColor	vx_tracker.c	/^static char *TKColor(int player)$/;"	f	file:
TK_AND	parser.c	75;"	d	file:
TK_ASTERISK	parser.c	53;"	d	file:
TK_BR_C	parser.c	58;"	d	file:
TK_BR_O	parser.c	57;"	d	file:
TK_DOUBLE	parser.c	47;"	d	file:
TK_EOF	parser.c	44;"	d	file:
TK_EQ	parser.c	65;"	d	file:
TK_EQ2	parser.c	66;"	d	file:
TK_GE	parser.c	67;"	d	file:
TK_GT	parser.c	68;"	d	file:
TK_INTEGER	parser.c	48;"	d	file:
TK_INVALID	parser.c	45;"	d	file:
TK_ISIN	parser.c	70;"	d	file:
TK_LE	parser.c	64;"	d	file:
TK_LT	parser.c	63;"	d	file:
TK_MINUS	parser.c	51;"	d	file:
TK_MOD	parser.c	55;"	d	file:
TK_NE	parser.c	69;"	d	file:
TK_NISIN	parser.c	71;"	d	file:
TK_OR	parser.c	76;"	d	file:
TK_PLUS	parser.c	50;"	d	file:
TK_REEQ	parser.c	72;"	d	file:
TK_RENE	parser.c	73;"	d	file:
TK_SLASH	parser.c	54;"	d	file:
TK_STR	parser.c	61;"	d	file:
TK_VAR	parser.c	60;"	d	file:
TOOK	tp_msgs.c	40;"	d	file:
TOOK_EMPTY	teamplay.h	213;"	d
TOPMARGIN	menu_ingame.c	18;"	d	file:
TOP_RANGE	render.h	23;"	d
TP_AddLoc	teamplay.c	/^void TP_AddLoc(char *locname)$/;"	f
TP_AddLocNode	teamplay.c	/^static void TP_AddLocNode(vec3_t coord, char *name)$/;"	f	file:
TP_AddLoc_f	teamplay.c	/^void TP_AddLoc_f (void)$/;"	f
TP_AddMacros	teamplay.c	/^void TP_AddMacros (void)$/;"	f
TP_CategorizeMessage	teamplay.c	/^int TP_CategorizeMessage (const char *s, int *offset)$/;"	f
TP_CheckPickupSound	teamplay.c	/^void TP_CheckPickupSound (char *s, vec3_t org)$/;"	f
TP_CheckSoundTrigger	tp_triggers.c	/^qbool TP_CheckSoundTrigger (wchar *wstr)$/;"	f
TP_ClearLocs	teamplay.c	/^static void TP_ClearLocs(void)$/;"	f	file:
TP_ClearLocs_f	teamplay.c	/^void TP_ClearLocs_f (void)$/;"	f
TP_ColorForcing	teamplay.c	/^void TP_ColorForcing (cvar_t *topcolor, cvar_t *bottomcolor)$/;"	f
TP_ConvertToWhiteText	vx_stuff.c	/^char *TP_ConvertToWhiteText(char *s)$/;"	f
TP_CountPlayers	teamplay.c	/^int	TP_CountPlayers (void)$/;"	f
TP_CurrentTrackNum	teamplay.c	/^int TP_CurrentTrackNum(void)$/;"	f
TP_DumpMsgFilters	teamplay.c	/^void TP_DumpMsgFilters(FILE *f)$/;"	f
TP_DumpTriggers	tp_triggers.c	/^void TP_DumpTriggers (FILE *f)$/;"	f
TP_EnemyColor_f	teamplay.c	/^void TP_EnemyColor_f(void)$/;"	f
TP_ExecTrigger	tp_triggers.c	/^void TP_ExecTrigger (char *trigger)$/;"	f
TP_FilterMessage	teamplay.c	/^qbool TP_FilterMessage (wchar *source)$/;"	f
TP_FindModelNumbers	teamplay.c	/^void TP_FindModelNumbers (void)$/;"	f
TP_FindPoint	teamplay.c	/^void TP_FindPoint (void)$/;"	f
TP_FindTrigger	tp_triggers.c	/^msg_trigger_t *TP_FindTrigger (char *name)$/;"	f
TP_GetMapGroupName	teamplay.c	/^char *TP_GetMapGroupName(char *mapname, qbool *system)$/;"	f
TP_GetModels	vx_stuff.c	/^checkmodel_t *TP_GetModels (char *s)$/;"	f
TP_GetNeed	teamplay.c	/^void TP_GetNeed(void)$/;"	f
TP_GetSkyGroupName	teamplay.c	/^char *TP_GetSkyGroupName(char *mapname, qbool *system)$/;"	f
TP_Init	teamplay.c	/^void TP_Init (void)$/;"	f
TP_InitTriggers	tp_triggers.c	/^void TP_InitTriggers (void)$/;"	f
TP_IsAmmoLow	hud_common.c	/^int TP_IsAmmoLow(int weapon)$/;"	f
TP_IsArmorLow	hud_common.c	/^int TP_IsArmorLow(void)$/;"	f
TP_IsFlagMessage	tp_triggers.c	/^static qbool TP_IsFlagMessage (const char *message)$/;"	f	file:
TP_IsHealthLow	hud_common.c	/^int TP_IsHealthLow(void)$/;"	f
TP_IsItemVisible	teamplay.c	/^qbool TP_IsItemVisible(item_vis_t *visitem)$/;"	f
TP_IsWeaponLow	hud_common.c	/^int TP_IsWeaponLow(void)$/;"	f
TP_LoadLocFile	teamplay.c	/^qbool TP_LoadLocFile (char *path, qbool quiet)$/;"	f
TP_LoadLocFile_f	teamplay.c	/^void TP_LoadLocFile_f (void)$/;"	f
TP_LocationName	teamplay.c	/^char *TP_LocationName(vec3_t location)$/;"	f
TP_MSG_Colored_Armor	tp_msgs.c	/^GLOBAL const char *TP_MSG_Colored_Armor(void)$/;"	f
TP_MSG_Colored_Powerup	tp_msgs.c	/^GLOBAL const char * TP_MSG_Colored_Powerup(void)$/;"	f
TP_MSG_Colored_Short_Powerups	tp_msgs.c	/^GLOBAL const char * TP_MSG_Colored_Short_Powerups(void) \/\/ this displays "qrp" instead of "quad ring pent", some people prefer this!$/;"	f
TP_MSG_GENERIC	tp_msgs.c	502;"	d	file:
TP_MapName	teamplay.c	/^char *TP_MapName(void)$/;"	f
TP_MsgFilter_f	teamplay.c	/^void TP_MsgFilter_f (void)$/;"	f
TP_MsgTrigger_f	tp_triggers.c	/^void TP_MsgTrigger_f (void)$/;"	f
TP_Msg_Coming_f	tp_msgs.c	/^GLOBAL void TP_Msg_Coming_f (void) { TP_MSG_GENERIC("{&cf50coming&cfff}"); } \/\/ orange coming$/;"	f
TP_Msg_EnemyPowerup_f	tp_msgs.c	/^GLOBAL void TP_Msg_EnemyPowerup_f (void) \/\/ might as well add flag to this monster. need $point and $took to see red\/blue flag!$/;"	f
TP_Msg_GetPentQuad	tp_msgs.c	/^LOCAL void TP_Msg_GetPentQuad(qbool quad)$/;"	f
TP_Msg_GetPent_f	tp_msgs.c	/^GLOBAL void TP_Msg_GetPent_f (void) { TP_Msg_GetPentQuad(false); }$/;"	f
TP_Msg_GetQuad_f	tp_msgs.c	/^GLOBAL void TP_Msg_GetQuad_f (void) { TP_Msg_GetPentQuad(true); }$/;"	f
TP_Msg_Help_f	tp_msgs.c	/^GLOBAL void TP_Msg_Help_f (void) { TP_MSG_GENERIC("{&cff0help&cfff}"); } \/\/ yellow help$/;"	f
TP_Msg_Lost_f	tp_msgs.c	/^GLOBAL void TP_Msg_Lost_f (void)$/;"	f
TP_Msg_Need_f	tp_msgs.c	/^GLOBAL void TP_Msg_Need_f (void)$/;"	f
TP_Msg_Point_f	tp_msgs.c	/^GLOBAL void TP_Msg_Point_f (void)$/;"	f
TP_Msg_QuadDead_f	tp_msgs.c	/^GLOBAL void TP_Msg_QuadDead_f (void)$/;"	f
TP_Msg_Replace_f	tp_msgs.c	/^GLOBAL void TP_Msg_Replace_f (void) { TP_MSG_GENERIC("{&c9ffreplace&cfff}"); } \/\/cyan replace$/;"	f
TP_Msg_Report_f	tp_msgs.c	/^GLOBAL void TP_Msg_Report_f (void)$/;"	f
TP_Msg_Safe_f	tp_msgs.c	/^GLOBAL void TP_Msg_Safe_f (void) { TP_MSG_GENERIC("{&c0b0safe&cfff}"); } \/\/ green safe$/;"	f
TP_Msg_Slipped_f	tp_msgs.c	/^GLOBAL void TP_Msg_Slipped_f (void) { TP_MSG_GENERIC("enemy slipped"); }$/;"	f
TP_Msg_Took_f	tp_msgs.c	/^GLOBAL void TP_Msg_Took_f (void)$/;"	f
TP_Msg_Trick_f	tp_msgs.c	/^GLOBAL void TP_Msg_Trick_f (void) { TP_MSG_GENERIC("trick"); }$/;"	f
TP_Msg_Waiting_f	tp_msgs.c	/^GLOBAL void TP_Msg_Waiting_f (void) { TP_MSG_GENERIC("waiting"); }$/;"	f
TP_Msg_YesOk_f	tp_msgs.c	/^GLOBAL void TP_Msg_YesOk_f (void) { TP_MSG_GENERIC("{&c9ffyes\/ok&cfff}"); } \/\/cyan yes\/ok$/;"	f
TP_Msg_YouTake_f	tp_msgs.c	/^GLOBAL void TP_Msg_YouTake_f (void) { TP_MSG_GENERIC("you take"); }$/;"	f
TP_NeedRefreshSkins	teamplay.c	/^qbool TP_NeedRefreshSkins(void)$/;"	f
TP_NewMap	teamplay.c	/^void TP_NewMap (void)$/;"	f
TP_PENT	teamplay.c	829;"	d	file:
TP_POINT_EXPIRE_TIME	teamplay.h	210;"	d
TP_ParseFunChars	teamplay.c	/^char *TP_ParseFunChars (char *s, qbool chat)$/;"	f
TP_ParseMacroString	teamplay.c	/^char *TP_ParseMacroString (char *s)$/;"	f
TP_ParsePlayerInfo	teamplay.c	/^void TP_ParsePlayerInfo(player_state_t *oldstate, player_state_t *state, player_info_t *info)$/;"	f
TP_ParseWeaponModel	teamplay.c	/^void TP_ParseWeaponModel(model_t *model)$/;"	f
TP_ParseWhiteText	teamplay.c	/^wchar *TP_ParseWhiteText (const wchar *s, qbool team, int offset)$/;"	f
TP_Pickup_f	teamplay.c	/^void TP_Pickup_f (void)$/;"	f
TP_PlayerName	teamplay.c	/^char *TP_PlayerName (void)$/;"	f
TP_PlayerTeam	teamplay.c	/^char *TP_PlayerTeam (void)$/;"	f
TP_PlayersNumber	teamplay.c	/^int TP_PlayersNumber(int userid, const char* team)$/;"	f
TP_Point_f	teamplay.c	/^void TP_Point_f (void)$/;"	f
TP_PrintHiddenMessage	teamplay.c	/^void TP_PrintHiddenMessage(char *buf, int nodisplay)$/;"	f
TP_QUAD	teamplay.c	830;"	d	file:
TP_RING	teamplay.c	831;"	d	file:
TP_RankPoint	teamplay.c	/^static float TP_RankPoint(item_vis_t *visitem)$/;"	f	file:
TP_RefreshSkin	teamplay.c	/^void TP_RefreshSkin(int slot)$/;"	f
TP_RefreshSkins	teamplay.c	/^void TP_RefreshSkins(void)$/;"	f
TP_RemoveClosestLoc	teamplay.c	/^void TP_RemoveClosestLoc (vec3_t location)$/;"	f
TP_RemoveLoc_f	teamplay.c	/^void TP_RemoveLoc_f (void)$/;"	f
TP_ResetAllTriggers	tp_triggers.c	/^void TP_ResetAllTriggers (void)$/;"	f
TP_SaveLocFile	teamplay.c	/^qbool TP_SaveLocFile(char *path, qbool quiet)$/;"	f
TP_SaveLocFile_f	teamplay.c	/^void TP_SaveLocFile_f (void)$/;"	f
TP_SearchForMsgTriggers	tp_triggers.c	/^void TP_SearchForMsgTriggers (const char *s, int level)$/;"	f
TP_Send_TeamSay	tp_msgs.c	/^LOCAL void TP_Send_TeamSay(char *format, ...)$/;"	f
TP_ShortNick	tp_msgs.c	/^LOCAL char *TP_ShortNick(void)$/;"	f
TP_StatChanged	teamplay.c	/^void TP_StatChanged (int stat, int value)$/;"	f
TP_SuppressMessage	teamplay.c	/^qbool TP_SuppressMessage (wchar *buf)$/;"	f
TP_TOOK_EXPIRE_TIME	teamplay.h	209;"	d
TP_TeamColor_f	teamplay.c	/^void TP_TeamColor_f(void)$/;"	f
TP_TeamFortressEngineerSpanner	hud_common.c	/^int TP_TeamFortressEngineerSpanner(void) {$/;"	f
TP_ThisPOV_IsHisTeam	teamplay.c	/^qbool TP_ThisPOV_IsHisTeam(const char* team)$/;"	f
TP_ThisPOV_Team	teamplay.c	/^static char* TP_ThisPOV_Team() {$/;"	f	file:
TP_Took_f	teamplay.c	/^void TP_Took_f (void)$/;"	f
TP_UpdateSkins	teamplay.c	/^void TP_UpdateSkins(void)$/;"	f
TRACER1_TRAIL	render.h	/^	TRACER1_TRAIL, TRACER2_TRAIL, VOOR_TRAIL,$/;"	e	enum:trail_type_s
TRACER2_TRAIL	render.h	/^	TRACER1_TRAIL, TRACER2_TRAIL, VOOR_TRAIL,$/;"	e	enum:trail_type_s
TRANSPARENT_COLOR	d_iface.h	152;"	d
TRANSPARENT_COLOR	quakeasm.h	42;"	d
TRUE	debug.h	272;"	d
TRUE	debug.h	280;"	d
TRUE	debug.h	287;"	d
TRY_PFD_FAIL_HARD	win_glimp.c	84;"	d	file:
TRY_PFD_FAIL_SOFT	win_glimp.c	83;"	d	file:
TRY_PFD_SUCCESS	win_glimp.c	82;"	d	file:
TRY_READ_MVD	cl_demo.c	/^	TRY_READ_MVD	= 3$/;"	e	enum:demoprobe_parse_type_e	file:
TR_BLOCKED	cmodel.c	/^enum { TR_EMPTY, TR_SOLID, TR_BLOCKED };$/;"	e	enum:__anon7	file:
TR_EMPTY	cmodel.c	/^enum { TR_EMPTY, TR_SOLID, TR_BLOCKED };$/;"	e	enum:__anon7	file:
TR_SOLID	cmodel.c	/^enum { TR_EMPTY, TR_SOLID, TR_BLOCKED };$/;"	e	enum:__anon7	file:
TURBSCALE	gl_warp.c	198;"	d	file:
TURBSINSIZE	gl_warp.c	197;"	d	file:
TURB_TEX_SIZE	d_iface.h	178;"	d
TURB_TEX_SIZE	d_ifacea.h	35;"	d
TYP_LABEL	wad.h	35;"	d
TYP_LUMPY	wad.h	37;"	d
TYP_MIPTEX	wad.h	42;"	d
TYP_NONE	wad.h	34;"	d
TYP_PALETTE	wad.h	38;"	d
TYP_QPIC	wad.h	40;"	d
TYP_QTEX	wad.h	39;"	d
TYP_SOUND	wad.h	41;"	d
Tap	parser.c	/^LOCAL expr_val Tap(EParser p, expr_val v)$/;"	f
TeamFrags_DrawExtraSpecInfo	hud_common.c	/^int TeamFrags_DrawExtraSpecInfo(int num, int px, int py, int width, int height, int style)$/;"	f
TeamHold_DrawBars	hud_common.c	/^void TeamHold_DrawBars(int x, int y, int width, int height,$/;"	f
TeamHold_DrawPercentageBar	hud_common.c	/^void TeamHold_DrawPercentageBar(int x, int y, int width, int height,$/;"	f
TeamHold_OnChangeItemFilterInfo	hud_common.c	/^void TeamHold_OnChangeItemFilterInfo(cvar_t *var, char *s, qbool *cancel)$/;"	f
Tell	fs.h	/^	unsigned long (*Tell) (struct vfsfile_s *file);$/;"	m	struct:vfsfile_s
Test_OnButtonDraw	hud_editor.c	/^int Test_OnButtonDraw(ez_control_t *self, void *payload)$/;"	f
Test_OnControlDraw	hud_editor.c	/^int Test_OnControlDraw(ez_control_t *self, void *payload)$/;"	f
Test_OnGotFocus	hud_editor.c	/^int Test_OnGotFocus(ez_control_t *self, void *payload)$/;"	f
Test_OnLostFocus	hud_editor.c	/^int Test_OnLostFocus(ez_control_t *self, void *payload)$/;"	f
Test_OnSliderPositionChanged	hud_editor.c	/^int Test_OnSliderPositionChanged(ez_control_t *self, void *payload)$/;"	f
Thread_Cleanup	thread_linux.c	/^void Thread_Cleanup(void)$/;"	f
Thread_Cleanup	thread_win.c	/^void Thread_Cleanup(void)$/;"	f
Thread_Run	thread_linux.c	/^int Thread_Run(void *f)$/;"	f
Thread_Run	thread_win.c	/^int Thread_Run(void *f)$/;"	f
Time_Frame	timer.c	/^void Time_Frame(void)$/;"	f
Timer_Add	timer.c	/^struct timer *Timer_Add(double interval, char *text, void (*function)(void), int no_instant)$/;"	f
Timer_Console	timer.c	/^void Timer_Console(void)$/;"	f
Timer_Delete	timer.c	/^void Timer_Delete(int i)$/;"	f
Timer_Delete_Struct	timer.c	/^void Timer_Delete_Struct(struct timer *timer)$/;"	f
Timer_Function	nmenu_demo.c	/^void Timer_Function(void)$/;"	f
Timer_Init	timer.c	/^void Timer_Init(void)$/;"	f
Timer_Run	timer.c	/^void Timer_Run(struct timer *timer)$/;"	f
ToString	parser.c	/^LOCAL expr_val ToString(EParser p, const expr_val e)$/;"	f
ToggleRepeat_f	mp3_player.h	/^	void  (*ToggleRepeat_f)  (void);$/;"	m	struct:__anon236
ToggleShuffle_f	mp3_player.h	/^	void  (*ToggleShuffle_f) (void);$/;"	m	struct:__anon236
Toggle_Source	EX_browser_sources.c	/^void Toggle_Source(source_data *s)$/;"	f
TraceLineN	gl_rpart.c	/^static qbool TraceLineN (vec3_t start, vec3_t end, vec3_t impact, vec3_t normal)$/;"	f	file:
TragicDeath	vid_x11.c	/^static void TragicDeath (int signal_num) {$/;"	f	file:
TrailStats	vx_motiontrail.c	/^void TrailStats (int change)$/;"	f
TransformVector	r_misc.c	/^void TransformVector (vec3_t in, vec3_t out) {$/;"	f
TranslateTextureName	gl_model.c	/^static char *TranslateTextureName (texture_t *tx)$/;"	f	file:
Trig_Disable	tp_triggers.c	/^static void Trig_Disable (pcre_trigger_t *trig)$/;"	f	file:
Trig_Enable	tp_triggers.c	/^static void Trig_Enable(pcre_trigger_t *trig)$/;"	f	file:
Trig_ReSearch_do	tp_triggers.c	/^static void Trig_ReSearch_do (ReTrigger_func f)$/;"	f	file:
TrimModelName	cl_demo.c	/^static char *TrimModelName (const char *full)$/;"	f	file:
TruePointContents	gl_local.h	237;"	d
Turbulent8	d_scan.c	/^void Turbulent8 (espan_t *pspan) {$/;"	f
Type	mp3_player.h	/^	const mp3_players_t Type;$/;"	m	struct:__anon236
UDP_OpenSocket	net.c	/^int UDP_OpenSocket (int port)$/;"	f
UINT2	md4.c	/^typedef unsigned short int UINT2;$/;"	t	file:
UINT4	md4.c	/^typedef unsigned int UINT4;$/;"	t	file:
UINT4	md4.c	/^typedef unsigned long int UINT4;$/;"	t	file:
UI_DrawBox	Ctrl.c	/^void UI_DrawBox(int x, int y, int w, int h)$/;"	f
UI_DrawCharacter	Ctrl.c	/^void UI_DrawCharacter (int cx, int line, int num)$/;"	f
UI_DrawColoredAlphaBox	Ctrl.c	/^void UI_DrawColoredAlphaBox(int x, int y, int w, int h, color_t color)$/;"	f
UI_DrawGrayBox	Ctrl.c	/^void UI_DrawGrayBox(int x, int y, int w, int h)$/;"	f
UI_DrawSlider	Ctrl.c	/^int UI_DrawSlider (int x, int y, float range) {$/;"	f
UI_MakeLine	Ctrl.c	/^void UI_MakeLine(char *buf, int w)$/;"	f
UI_MakeLine2	Ctrl.c	/^void UI_MakeLine2(char *buf, int w)$/;"	f
UI_Print	Ctrl.c	/^void UI_Print (int cx, int cy, const char *str, int red)$/;"	f
UI_Print3	Ctrl.c	/^void UI_Print3 (int cx, int cy, const char *str, clrinfo_t *clr, int clr_cnt, int red)$/;"	f
UI_PrintTextBlock	Ctrl.c	/^qbool UI_PrintTextBlock(int x, int y, int w, int h, const char* text, qbool red)$/;"	f
UI_Print_Center	Ctrl.c	/^void UI_Print_Center (int cx, int cy, int w, const char *str, int red)$/;"	f
UI_Print_Center3	Ctrl.c	/^void UI_Print_Center3 (int cx, int cy, int w, char *str, clrinfo_t *clr, int clr_cnt, int red)$/;"	f
UI_SliderWidth	Ctrl.c	/^int UI_SliderWidth(void) { return (SLIDER_RANGE+1)*LETTERWIDTH; }$/;"	f
UNALIGNED_OK	q_shared.h	86;"	d
UNALIGNED_OK	q_shared.h	88;"	d
UNDEF_ALSA_FUNC	snd_alsa_funcs.h	30;"	d
UNDEF_ALSA_FUNC	snd_alsa_funcs.h	60;"	d
UNEXP_CHAR	parser.c	720;"	d	file:
UNKNOWN	keys.h	/^	UNKNOWN = 256$/;"	e	enum:__anon171
UNKNOWN_S	keys.c	1317;"	d	file:
UPDATE_BACKUP	protocol.h	354;"	d
UPDATE_MASK	protocol.h	355;"	d
USEDSPFADES	mac.h	28;"	d
USE_AGL	vid_mac.c	144;"	d	file:
USE_DSP	vid_mac.c	145;"	d	file:
USINGRAWINPUT	in_raw.h	8;"	d
U_ANGLE1	protocol.h	265;"	d
U_ANGLE2	protocol.h	259;"	d
U_ANGLE3	protocol.h	266;"	d
U_COLORMAP	protocol.h	268;"	d
U_EFFECTS	protocol.h	270;"	d
U_FRAME	protocol.h	260;"	d
U_FTE_ABSLIGHT	protocol.h	302;"	d
U_FTE_COLOURMOD	protocol.h	303;"	d
U_FTE_DPFLAGS	protocol.h	304;"	d
U_FTE_DRAWFLAGS	protocol.h	301;"	d
U_FTE_EFFECTS16	protocol.h	307;"	d
U_FTE_ENTITYDBL	protocol.h	295;"	d
U_FTE_ENTITYDBL2	protocol.h	298;"	d
U_FTE_EVENMORE	protocol.h	274;"	d
U_FTE_FARMORE	protocol.h	308;"	d
U_FTE_FATNESS	protocol.h	285;"	d
U_FTE_LIGHT	protocol.h	306;"	d
U_FTE_MODELDBL	protocol.h	290;"	d
U_FTE_SCALE	protocol.h	279;"	d
U_FTE_TAGINFO	protocol.h	305;"	d
U_FTE_TRANS	protocol.h	282;"	d
U_FTE_UNUSED1	protocol.h	292;"	d
U_FTE_YETMORE	protocol.h	300;"	d
U_MODEL	protocol.h	267;"	d
U_MOREBITS	protocol.h	262;"	d
U_ORIGIN1	protocol.h	256;"	d
U_ORIGIN2	protocol.h	257;"	d
U_ORIGIN3	protocol.h	258;"	d
U_REMOVE	protocol.h	261;"	d
U_SKIN	protocol.h	269;"	d
U_SOLID	protocol.h	271;"	d
UnignoreAll_f	ignore.c	/^static void UnignoreAll_f (void) {$/;"	f	file:
Unignore_ID_f	ignore.c	/^static void Unignore_ID_f(void) {$/;"	f	file:
Unignore_f	ignore.c	/^static void Unignore_f(void) {$/;"	f	file:
UnignoreteamAll_f	ignore.c	/^static void UnignoreteamAll_f (void) {$/;"	f	file:
Unignoreteam_f	ignore.c	/^static void Unignoreteam_f(void) {$/;"	f	file:
UnixtimeToWintime	localtime_linux.c	/^void UnixtimeToWintime(SYSTEMTIME *wintime, struct tm* time)$/;"	f
Unmark_Source	EX_browser_sources.c	/^void Unmark_Source(source_data *s)$/;"	f
UpdateCP	console.c	/^int UpdateCP (int lines) {$/;"	f
Update_Events	mosdm.c	/^void Update_Events(void){$/;"	f
Update_Multiple_Sources	EX_browser_sources.c	/^void Update_Multiple_Sources(source_data *s[], int sn)$/;"	f
Update_Multiple_Sources_Proc	EX_browser_sources.c	/^DWORD WINAPI Update_Multiple_Sources_Proc(void * lpParameter)$/;"	f
Update_Num	mosdm.c	/^void Update_Num(void){$/;"	f
Update_Point_Cam	mosdm.c	/^void Update_Point_Cam(void){$/;"	f
Update_Point_View	mosdm.c	/^void Update_Point_View(void){$/;"	f
Update_Source	EX_browser_sources.c	/^void Update_Source(source_data *s)$/;"	f
Update_Source_From_File	EX_browser_sources.c	/^qbool Update_Source_From_File(source_data *s, char *fname, server_data **servers, int *pserversn)$/;"	f
Update_TeamInfo	cl_screen.c	/^void Update_TeamInfo()$/;"	f
UpdatingSources_Draw	EX_browser.c	/^void UpdatingSources_Draw(void)$/;"	f
UserdirSet	fs.h	23;"	d
Util_Extend_Filename	utils.c	/^int Util_Extend_Filename(char *filename, char **ext) {$/;"	f
Util_F_Match	utils.c	/^qbool Util_F_Match (const char *_msg, char *f_request) {$/;"	f
Util_GetNextWordwrapString	utils.c	/^qbool Util_GetNextWordwrapString(const char *input, char *target, int start_index, int *end_index_ret, int target_max_size, int max_pixel_width, int char_size)$/;"	f
Util_Invalid_Filename_Msg	utils.c	/^char *Util_Invalid_Filename_Msg(char *s) {$/;"	f
Util_Is_Valid_Filename	utils.c	/^qbool Util_Is_Valid_Filename(char *s)$/;"	f
Util_Is_Valid_FilenameEx	utils.c	/^qbool Util_Is_Valid_FilenameEx(char *s, qbool drive_prefix_valid) {$/;"	f
Util_Process_Filename	utils.c	/^void Util_Process_Filename(char *string) {$/;"	f
Util_Process_FilenameEx	utils.c	/^void Util_Process_FilenameEx(char *string, qbool allow_root) {$/;"	f
Util_ToValidFileName	utils.c	/^void Util_ToValidFileName(const char* i, char* o, size_t buffersize)$/;"	f
Utils_RegExpGetGroup	utils.c	/^qbool Utils_RegExpGetGroup(char *regexp, char *matchstring, const char **resultstring, int *resultlength, int group)$/;"	f
Utils_RegExpMatch	utils.c	/^qbool Utils_RegExpMatch(char *regexp, char *matchstring)$/;"	f
Utils_TF_ColorToTeam	utils.c	/^char *Utils_TF_ColorToTeam(int color) {$/;"	f
Utils_TF_ColorToTeam_Failsafe	utils.c	/^static char *Utils_TF_ColorToTeam_Failsafe(int color) {$/;"	f	file:
Utils_TF_TeamToColor	utils.c	/^int Utils_TF_TeamToColor(char *team) {$/;"	f
VARFVAL	settings_page.c	/^float VARFVAL(const cvar_t *v)$/;"	f
VARSVAL	settings_page.c	68;"	d	file:
VAR_HASHPOOL_SIZE	cvar.c	40;"	d	file:
VERSION_NUMBER	version.h	70;"	d
VERTEXSIZE	gl_model.h	94;"	d
VFSERR_EOF	fs.h	/^	VFSERR_EOF$/;"	e	enum:__anon150
VFSERR_NONE	fs.h	/^	VFSERR_NONE,$/;"	e	enum:__anon150
VFSGZIP_Close	vfs_gzip.c	/^static void VFSGZIP_Close(vfsfile_t *file) $/;"	f	file:
VFSGZIP_Flush	vfs_gzip.c	/^static void VFSGZIP_Flush(vfsfile_t *file) $/;"	f	file:
VFSGZIP_GetLen	vfs_gzip.c	/^static unsigned long VFSGZIP_GetLen(vfsfile_t *file) $/;"	f	file:
VFSGZIP_ReadBytes	vfs_gzip.c	/^static int VFSGZIP_ReadBytes(vfsfile_t *file, void *buffer, int bytestoread, vfserrno_t *err) $/;"	f	file:
VFSGZIP_Seek	vfs_gzip.c	/^static int VFSGZIP_Seek(vfsfile_t *file, unsigned long offset, int whence) $/;"	f	file:
VFSGZIP_Tell	vfs_gzip.c	/^static unsigned long VFSGZIP_Tell(vfsfile_t *file) $/;"	f	file:
VFSGZIP_WriteBytes	vfs_gzip.c	/^static int VFSGZIP_WriteBytes(vfsfile_t *file, const void *buffer, int bytestowrite) $/;"	f	file:
VFSMMAP_Close	vfs_mmap.c	/^static void VFSMMAP_Close(vfsfile_t *file) $/;"	f	file:
VFSMMAP_Flush	vfs_mmap.c	/^static void VFSMMAP_Flush(vfsfile_t *file) $/;"	f	file:
VFSMMAP_GetLen	vfs_mmap.c	/^static unsigned long VFSMMAP_GetLen(vfsfile_t *file) $/;"	f	file:
VFSMMAP_ReadBytes	vfs_mmap.c	/^static int VFSMMAP_ReadBytes(vfsfile_t *file, void *buffer, int bytestoread, vfserrno_t *err) $/;"	f	file:
VFSMMAP_Seek	vfs_mmap.c	/^static int VFSMMAP_Seek(vfsfile_t *file, unsigned long offset, int whence) $/;"	f	file:
VFSMMAP_Tell	vfs_mmap.c	/^static unsigned long VFSMMAP_Tell(vfsfile_t *file) $/;"	f	file:
VFSMMAP_WriteBytes	vfs_mmap.c	/^static int VFSMMAP_WriteBytes(vfsfile_t *file, const void *buffer, int bytestowrite) $/;"	f	file:
VFSOS_Close	vfs_os.c	/^static void VFSOS_Close(vfsfile_t *file)$/;"	f	file:
VFSOS_GetSize	vfs_os.c	/^static unsigned long VFSOS_GetSize (struct vfsfile_s *file)$/;"	f	file:
VFSOS_Open	vfs_os.c	/^vfsfile_t *VFSOS_Open(char *name, FILE *f, char *mode)$/;"	f
VFSOS_Open	vfs_os.c	/^vfsfile_t *VFSOS_Open(char *osname, char *mode)$/;"	f
VFSOS_ReadBytes	vfs_os.c	/^static int VFSOS_ReadBytes (struct vfsfile_s *file, void *buffer, int bytestoread, vfserrno_t *err)$/;"	f	file:
VFSOS_Seek	vfs_os.c	/^static int VFSOS_Seek (struct vfsfile_s *file, unsigned long pos, int whence)$/;"	f	file:
VFSOS_Tell	vfs_os.c	/^static unsigned long VFSOS_Tell (struct vfsfile_s *file)$/;"	f	file:
VFSOS_WriteBytes	vfs_os.c	/^static int VFSOS_WriteBytes (struct vfsfile_s *file, const void *buffer, int bytestowrite)$/;"	f	file:
VFSPAK_Close	vfs_pak.c	/^static void VFSPAK_Close(vfsfile_t *vfs)$/;"	f	file:
VFSPAK_GetLen	vfs_pak.c	/^static unsigned long VFSPAK_GetLen (struct vfsfile_s *vfs)$/;"	f	file:
VFSPAK_ReadBytes	vfs_pak.c	/^static int VFSPAK_ReadBytes (struct vfsfile_s *vfs, void *buffer, int bytestoread, vfserrno_t *err)$/;"	f	file:
VFSPAK_Seek	vfs_pak.c	/^static int VFSPAK_Seek (struct vfsfile_s *vfs, unsigned long offset, int whence)$/;"	f	file:
VFSPAK_Seek	vfs_pak.c	/^static int VFSPAK_Seek (struct vfsfile_s *vfs, unsigned long pos, int whence)$/;"	f	file:
VFSPAK_Tell	vfs_pak.c	/^static unsigned long VFSPAK_Tell (struct vfsfile_s *vfs)$/;"	f	file:
VFSPAK_WriteBytes	vfs_pak.c	/^static int VFSPAK_WriteBytes (struct vfsfile_s *vfs, const void *buffer, int bytestoread)$/;"	f	file:
VFSTAR_Close	vfs_tar.c	/^static void VFSTAR_Close(vfsfile_t *file) $/;"	f	file:
VFSTAR_Flush	vfs_tar.c	/^static void VFSTAR_Flush(vfsfile_t *file) $/;"	f	file:
VFSTAR_GetLen	vfs_tar.c	/^static unsigned long VFSTAR_GetLen(vfsfile_t *file) $/;"	f	file:
VFSTAR_ReadBytes	vfs_tar.c	/^static int VFSTAR_ReadBytes(vfsfile_t *file, void *buffer, int bytestoread, vfserrno_t *err) $/;"	f	file:
VFSTAR_Seek	vfs_tar.c	/^static int VFSTAR_Seek(vfsfile_t *file, unsigned long offset, int whence) $/;"	f	file:
VFSTAR_Tell	vfs_tar.c	/^static unsigned long VFSTAR_Tell(vfsfile_t *file) $/;"	f	file:
VFSTAR_WriteBytes	vfs_tar.c	/^static int VFSTAR_WriteBytes(vfsfile_t *file, const void *buffer, int bytestowrite) $/;"	f	file:
VFSTCP_Close	vfs_tcp.c	/^void VFSTCP_Close (struct vfsfile_s *file)$/;"	f
VFSTCP_Error	vfs_tcp.c	/^void VFSTCP_Error(tcpfile_t *f)$/;"	f
VFSTCP_GetLen	vfs_tcp.c	/^unsigned long VFSTCP_GetLen (struct vfsfile_s *file)$/;"	f
VFSTCP_ReadBytes	vfs_tcp.c	/^int VFSTCP_ReadBytes (struct vfsfile_s *file, void *buffer, int bytestoread, vfserrno_t *err)$/;"	f
VFSTCP_Seek	vfs_tcp.c	/^int VFSTCP_Seek (struct vfsfile_s *file, unsigned long pos, int whence)$/;"	f
VFSTCP_Tell	vfs_tcp.c	/^unsigned long VFSTCP_Tell (struct vfsfile_s *file)$/;"	f
VFSTCP_Tick	vfs_tcp.c	/^void VFSTCP_Tick(void)$/;"	f
VFSTCP_WriteBytes	vfs_tcp.c	/^int VFSTCP_WriteBytes (struct vfsfile_s *file, const void *buffer, int bytestowrite)$/;"	f
VFSZIP_Close	vfs_zip.c	/^static void VFSZIP_Close (struct vfsfile_s *file)$/;"	f	file:
VFSZIP_GetLen	vfs_zip.c	/^static unsigned long VFSZIP_GetLen (struct vfsfile_s *file)$/;"	f	file:
VFSZIP_MakeActive	vfs_zip.c	/^static void VFSZIP_MakeActive(vfszip_t *vfsz)$/;"	f	file:
VFSZIP_ReadBytes	vfs_zip.c	/^static int VFSZIP_ReadBytes (struct vfsfile_s *file, void *buffer, int bytestoread, vfserrno_t *err)$/;"	f	file:
VFSZIP_Seek	vfs_zip.c	/^static int VFSZIP_Seek (struct vfsfile_s *file, unsigned long pos, int whence)$/;"	f	file:
VFSZIP_Tell	vfs_zip.c	/^static unsigned long VFSZIP_Tell (struct vfsfile_s *file)$/;"	f	file:
VFSZIP_WriteBytes	vfs_zip.c	/^static int VFSZIP_WriteBytes (struct vfsfile_s *file, const void *buffer, int bytestoread)$/;"	f	file:
VFS_CHECKCALL	fs.c	/^void VFS_CHECKCALL (struct vfsfile_s *vf, void *fld, char *emsg) {$/;"	f
VFS_CLOSE	fs.c	/^void VFS_CLOSE (struct vfsfile_s *vf) {$/;"	f
VFS_COPYPROTECTED	fs.c	/^qbool VFS_COPYPROTECTED(struct vfsfile_s *vf) {$/;"	f
VFS_FLUSH	fs.c	/^void VFS_FLUSH (struct vfsfile_s *vf) {$/;"	f
VFS_Filter	fs.c	/^vfsfile_t *VFS_Filter(const char *filename, vfsfile_t *handle)$/;"	f
VFS_GETLEN	fs.c	/^unsigned long VFS_GETLEN (struct vfsfile_s *vf) {$/;"	f
VFS_GETS	fs.c	/^char *VFS_GETS(struct vfsfile_s *vf, char *buffer, int buflen)$/;"	f
VFS_READ	fs.c	/^int VFS_READ (struct vfsfile_s *vf, void *buffer, int bytestoread, vfserrno_t *err) {$/;"	f
VFS_SEEK	fs.c	/^int VFS_SEEK (struct vfsfile_s *vf, unsigned long pos, int whence) {$/;"	f
VFS_TELL	fs.c	/^unsigned long VFS_TELL (struct vfsfile_s *vf) {$/;"	f
VFS_TICK	vfs_tcp.c	/^void VFS_TICK(void)$/;"	f
VFS_WRITE	fs.c	/^int VFS_WRITE (struct vfsfile_s *vf, const void *buffer, int bytestowrite) {$/;"	f
VGA4_driver	mgraph.h	1658;"	d
VGA8_driver	mgraph.h	1666;"	d
VGAX_driver	mgraph.h	1659;"	d
VGA_bufferrowbytes	vid_svgalib.c	/^int VGA_width, VGA_height, VGA_rowbytes, VGA_bufferrowbytes, VGA_planar;$/;"	v
VGA_bufferrowbytes	vid_x11.c	/^int VGA_width, VGA_height, VGA_rowbytes, VGA_bufferrowbytes, VGA_planar;$/;"	v
VGA_height	vid_svgalib.c	/^int VGA_width, VGA_height, VGA_rowbytes, VGA_bufferrowbytes, VGA_planar;$/;"	v
VGA_height	vid_x11.c	/^int VGA_width, VGA_height, VGA_rowbytes, VGA_bufferrowbytes, VGA_planar;$/;"	v
VGA_pagebase	vid_svgalib.c	/^byte *VGA_pagebase;$/;"	v
VGA_pagebase	vid_x11.c	/^byte *VGA_pagebase;$/;"	v
VGA_planar	vid_svgalib.c	/^int VGA_width, VGA_height, VGA_rowbytes, VGA_bufferrowbytes, VGA_planar;$/;"	v
VGA_planar	vid_x11.c	/^int VGA_width, VGA_height, VGA_rowbytes, VGA_bufferrowbytes, VGA_planar;$/;"	v
VGA_rowbytes	vid_svgalib.c	/^int VGA_width, VGA_height, VGA_rowbytes, VGA_bufferrowbytes, VGA_planar;$/;"	v
VGA_rowbytes	vid_x11.c	/^int VGA_width, VGA_height, VGA_rowbytes, VGA_bufferrowbytes, VGA_planar;$/;"	v
VGA_width	vid_svgalib.c	/^int VGA_width, VGA_height, VGA_rowbytes, VGA_bufferrowbytes, VGA_planar;$/;"	v
VGA_width	vid_x11.c	/^int VGA_width, VGA_height, VGA_rowbytes, VGA_bufferrowbytes, VGA_planar;$/;"	v
VID_AllocBuffers	vid_win.c	/^qbool VID_AllocBuffers (int width, int height) {$/;"	f
VID_CBITS	vid.h	21;"	d
VID_CheckAdequateMem	vid_win.c	/^qbool VID_CheckAdequateMem (int width, int height) {$/;"	f
VID_CheckModedescFixup	vid_win.c	/^void VID_CheckModedescFixup (int mode) {$/;"	f
VID_CheckWindowXY	vid_win.c	/^void VID_CheckWindowXY (void) {$/;"	f
VID_ConsoleX	vid.h	92;"	d
VID_ConsoleX	vid_svgalib.c	/^int VID_ConsoleX (int x)$/;"	f
VID_ConsoleX	vid_win.c	/^int VID_ConsoleX (int x)$/;"	f
VID_ConsoleX	vid_x11.c	/^int VID_ConsoleX (int x)$/;"	f
VID_ConsoleY	vid.h	93;"	d
VID_ConsoleY	vid_svgalib.c	/^int VID_ConsoleY (int y)$/;"	f
VID_ConsoleY	vid_win.c	/^int VID_ConsoleY (int y)$/;"	f
VID_ConsoleY	vid_x11.c	/^int VID_ConsoleY (int y)$/;"	f
VID_DescribeCurrentMode_f	vid_mac.c	/^void VID_DescribeCurrentMode_f (void)$/;"	f
VID_FadeIn	vid_mac.c	/^void VID_FadeIn (void)$/;"	f
VID_FadeOut	vid_mac.c	/^void VID_FadeOut (void)$/;"	f
VID_ForceMode_f	vid_win.c	/^void VID_ForceMode_f (void) {$/;"	f
VID_Fullscreen_f	vid_win.c	/^void VID_Fullscreen_f (void) {$/;"	f
VID_GRADES	vid.h	22;"	d
VID_GetExtModeDescription	vid_wgl.c	/^char *VID_GetExtModeDescription (int mode) {$/;"	f
VID_GetExtModeDescription	vid_win.c	/^char *VID_GetExtModeDescription (int mode) {$/;"	f
VID_GetModeDescription	vid_wgl.c	/^char *VID_GetModeDescription (int mode) {$/;"	f
VID_GetModeDescription	vid_win.c	/^char *VID_GetModeDescription (int mode) {$/;"	f
VID_GetModeDescription2	vid_win.c	/^char *VID_GetModeDescription2 (int mode) {$/;"	f
VID_GetModeDescriptionMemCheck	vid_win.c	/^char *VID_GetModeDescriptionMemCheck (int mode) {$/;"	f
VID_GetModePtr	vid_wgl.c	/^vmode_t *VID_GetModePtr (int modenum) {$/;"	f
VID_GetModePtr	vid_win.c	/^vmode_t *VID_GetModePtr (int modenum) {$/;"	f
VID_GetPBuffer	vid_wgl.c	/^pbuffer_s *VID_GetPBuffer()$/;"	f
VID_GetPBufferProcAddresses	vid_wgl.c	/^void VID_GetPBufferProcAddresses()$/;"	f
VID_GetVideoModesForActiveDisplays	vid_mac.c	/^void VID_GetVideoModesForActiveDisplays (void)$/;"	f
VID_Init	tr_init.c	/^void VID_Init (unsigned char *palette) {$/;"	f
VID_Init	vid_glx.c	/^void VID_Init(unsigned char *palette) {$/;"	f
VID_Init	vid_mac.c	/^void VID_Init (unsigned char *palette)$/;"	f
VID_Init	vid_svgalib.c	/^void VID_Init (unsigned char *palette)$/;"	f
VID_Init	vid_wgl.c	/^void VID_Init (unsigned char *palette) {$/;"	f
VID_Init	vid_win.c	/^void VID_Init (unsigned char *palette) {$/;"	f
VID_Init	vid_x11.c	/^void VID_Init (unsigned char *palette)$/;"	f
VID_InitDIB	vid_wgl.c	/^void VID_InitDIB (HINSTANCE hInstance) {$/;"	f
VID_InitFullDIB	vid_wgl.c	/^void VID_InitFullDIB (HINSTANCE hInstance) {$/;"	f
VID_InitFullDIB	vid_win.c	/^void VID_InitFullDIB (HINSTANCE hInstance) {$/;"	f
VID_InitMGLDIB	vid_win.c	/^void VID_InitMGLDIB (HINSTANCE hInstance) {$/;"	f
VID_InitMGLFull	vid_win.c	/^void VID_InitMGLFull (HINSTANCE hInstance) {$/;"	f
VID_InitModes	vid_svgalib.c	/^static void VID_InitModes (void)$/;"	f	file:
VID_InitPBuffer	vid_wgl.c	/^void VID_InitPBuffer(pbuffer_s * pbuffer, int width, int height)$/;"	f
VID_IsPBufferSupported	vid_wgl.c	/^qbool VID_IsPBufferSupported()$/;"	f
VID_LockBuffer	vid_glx.c	/^void VID_LockBuffer() {}$/;"	f
VID_LockBuffer	vid_svgalib.c	/^void VID_LockBuffer() {}$/;"	f
VID_LockBuffer	vid_win.c	/^void VID_LockBuffer (void) {$/;"	f
VID_LockBuffer	vid_x11.c	/^void VID_LockBuffer (void) {}$/;"	f
VID_MenuDraw	vid_wgl.c	/^void VID_MenuDraw (void) {$/;"	f
VID_MenuDraw	vid_win.c	/^void VID_MenuDraw (void) {$/;"	f
VID_MenuKey	vid_wgl.c	/^void VID_MenuKey (int key) {$/;"	f
VID_MenuKey	vid_win.c	/^void VID_MenuKey (int key) {$/;"	f
VID_Minimize_f	vid_glx.c	/^void VID_Minimize_f(void) {$/;"	f
VID_Minimize_f	vid_win.c	/^void VID_Minimize_f (void) {$/;"	f
VID_ModeList_f	vid_mac.c	/^void VID_ModeList_f (void)$/;"	f
VID_ModeList_f	vid_svgalib.c	/^static void VID_ModeList_f (void)$/;"	f	file:
VID_ModeList_f	vid_wgl.c	/^void VID_ModeList_f (void) {$/;"	f
VID_ModeList_f	vid_win.c	/^void VID_ModeList_f (void) {$/;"	f
VID_NotifyActivity	vid_wgl.c	/^void VID_NotifyActivity(void) {$/;"	f
VID_NotifyActivity	vid_win.c	/^void VID_NotifyActivity(void) {$/;"	f
VID_NotifyActivity	win_glimp.c	/^void VID_NotifyActivity(void) {$/;"	f
VID_NumModes	vid_wgl.c	/^int VID_NumModes (void) {$/;"	f
VID_NumModes	vid_win.c	/^int VID_NumModes (void) {$/;"	f
VID_ROW_SIZE	vid_wgl.c	1934;"	d	file:
VID_ROW_SIZE	vid_win.c	43;"	d	file:
VID_RememberWindowPos	vid_win.c	/^void VID_RememberWindowPos (void) {$/;"	f
VID_ResCompare	vid_mac.c	/^int VID_ResCompare(const void *a, const void *b)$/;"	f
VID_Restart	vid_wgl.c	/^void VID_Restart ()$/;"	f
VID_Restart_f	tr_init.c	/^void VID_Restart_f (void)$/;"	f
VID_Restart_f	vid_mac.c	/^void VID_Restart_f (void)$/;"	f
VID_Restart_f	vid_wgl.c	/^void VID_Restart_f (void)$/;"	f
VID_RestoreOldMode	vid_win.c	/^void VID_RestoreOldMode (int original_mode) {$/;"	f
VID_SetCaption	linux_glimp.c	/^void VID_SetCaption (char *text)$/;"	f
VID_SetCaption	vid_glx.c	/^void VID_SetCaption (char *text)$/;"	f
VID_SetCaption	vid_mac.c	/^void VID_SetCaption (char *text) {}$/;"	f
VID_SetCaption	vid_svgalib.c	/^void VID_SetCaption (char *text) {}$/;"	f
VID_SetCaption	vid_wgl.c	/^void VID_SetCaption (char *text) {$/;"	f
VID_SetCaption	vid_win.c	/^void VID_SetCaption (char *text) {$/;"	f
VID_SetCaption	vid_x11.c	/^void VID_SetCaption (char *text) {}$/;"	f
VID_SetCaption	win_glimp.c	/^void VID_SetCaption (char *text) {$/;"	f
VID_SetConWidth	vid_mac.c	/^void VID_SetConWidth ()$/;"	f
VID_SetDeviceGammaRamp	linux_glimp.c	/^void VID_SetDeviceGammaRamp (unsigned short *ramps) {$/;"	f
VID_SetDeviceGammaRamp	vid_glx.c	/^void VID_SetDeviceGammaRamp (unsigned short *ramps) {$/;"	f
VID_SetDeviceGammaRamp	vid_mac.c	/^void VID_SetDeviceGammaRamp (unsigned short *ramps)$/;"	f
VID_SetDeviceGammaRamp	vid_wgl.c	/^void VID_SetDeviceGammaRamp(unsigned short *ramps) {$/;"	f
VID_SetDeviceGammaRamp	win_glimp.c	/^void VID_SetDeviceGammaRamp(unsigned short *ramps) {$/;"	f
VID_SetFullDIBMode	vid_wgl.c	/^qbool VID_SetFullDIBMode (int modenum) {$/;"	f
VID_SetFullDIBMode	vid_win.c	/^qbool VID_SetFullDIBMode (int modenum) {$/;"	f
VID_SetFullscreenMode	vid_win.c	/^qbool VID_SetFullscreenMode (int modenum) {$/;"	f
VID_SetMode	vid_svgalib.c	/^int VID_SetMode (int modenum, unsigned char *palette)$/;"	f
VID_SetMode	vid_wgl.c	/^int VID_SetMode (int modenum, unsigned char *palette) {$/;"	f
VID_SetMode	vid_win.c	/^int VID_SetMode (int modenum, unsigned char *palette) {$/;"	f
VID_SetPalette	vid_common_gl.c	/^void VID_SetPalette (unsigned char *palette) {$/;"	f
VID_SetPalette	vid_svgalib.c	/^void VID_SetPalette (byte *palette)$/;"	f
VID_SetPalette	vid_win.c	/^void VID_SetPalette (unsigned char *palette) {$/;"	f
VID_SetPalette	vid_x11.c	/^void VID_SetPalette(unsigned char *palette)$/;"	f
VID_SetWindowedMode	vid_wgl.c	/^qbool VID_SetWindowedMode (int modenum) {$/;"	f
VID_SetWindowedMode	vid_win.c	/^qbool VID_SetWindowedMode (int modenum) {$/;"	f
VID_ShiftPalette	vid_glx.c	/^void VID_ShiftPalette(unsigned char *p) {}$/;"	f
VID_ShiftPalette	vid_mac.c	/^void VID_ShiftPalette (unsigned char *palette)$/;"	f
VID_ShiftPalette	vid_svgalib.c	/^void VID_ShiftPalette (unsigned char *p)$/;"	f
VID_ShiftPalette	vid_wgl.c	/^void VID_ShiftPalette (unsigned char *palette) {}$/;"	f
VID_ShiftPalette	vid_win.c	/^void VID_ShiftPalette (unsigned char *palette) {$/;"	f
VID_ShiftPalette	vid_x11.c	/^void VID_ShiftPalette(unsigned char *p)$/;"	f
VID_ShiftPalette	win_glimp.c	/^void VID_ShiftPalette (unsigned char *palette) {}$/;"	f
VID_ShowFreq_f	vid_wgl.c	/^void VID_ShowFreq_f(void) {$/;"	f
VID_ShowFreq_f	win_glimp.c	/^void VID_ShowFreq_f(void) {$/;"	f
VID_Shutdown	tr_init.c	/^void VID_Shutdown (void) {$/;"	f
VID_Shutdown	vid_glx.c	/^void VID_Shutdown(void) {$/;"	f
VID_Shutdown	vid_mac.c	/^void VID_Shutdown (void)$/;"	f
VID_Shutdown	vid_svgalib.c	/^void VID_Shutdown (void)$/;"	f
VID_Shutdown	vid_wgl.c	/^void VID_Shutdown (void) {$/;"	f
VID_Shutdown	vid_win.c	/^void VID_Shutdown (void) {$/;"	f
VID_Shutdown	vid_x11.c	/^void VID_Shutdown (void)$/;"	f
VID_ShutdownPBuffer	vid_wgl.c	/^void VID_ShutdownPBuffer(pbuffer_s * pbuffer)$/;"	f
VID_Suspend	vid_win.c	/^int VID_Suspend (MGLDC *dc, int flags) {$/;"	f
VID_TestMode_f	vid_win.c	/^void VID_TestMode_f (void) {$/;"	f
VID_ToggleWindow_f	vid_mac.c	/^void VID_ToggleWindow_f ()$/;"	f
VID_UnlockBuffer	vid_glx.c	/^void VID_UnlockBuffer() {}$/;"	f
VID_UnlockBuffer	vid_svgalib.c	/^void VID_UnlockBuffer() {}$/;"	f
VID_UnlockBuffer	vid_win.c	/^void VID_UnlockBuffer (void) {$/;"	f
VID_UnlockBuffer	vid_x11.c	/^void VID_UnlockBuffer (void) {}$/;"	f
VID_Update	vid_svgalib.c	/^void VID_Update (vrect_t *rects)$/;"	f
VID_Update	vid_win.c	/^void VID_Update (vrect_t *rects) { $/;"	f
VID_Update	vid_x11.c	/^void VID_Update (vrect_t *rects)$/;"	f
VID_UpdateWindowStatus	vid_wgl.c	/^void VID_UpdateWindowStatus (void) {$/;"	f
VID_UpdateWindowStatus	vid_win.c	/^void VID_UpdateWindowStatus (void) {$/;"	f
VID_UpdateWindowStatus	win_glimp.c	/^void VID_UpdateWindowStatus (void) {$/;"	f
VID_Windowed_f	vid_win.c	/^void VID_Windowed_f (void) {$/;"	f
VID_highhunkmark	vid_svgalib.c	/^static int VID_highhunkmark;$/;"	v	file:
VID_highhunkmark	vid_win.c	/^static int		VID_highhunkmark;$/;"	v	file:
VID_zzz	tr_init.c	/^void VID_zzz (void) {$/;"	f
VKey	in_raw.h	/^	USHORT VKey;$/;"	m	struct:tagRAWKEYBOARD
VLight_ChangeLightAngle_f	vx_vertexlights.c	/^void VLight_ChangeLightAngle_f(void)$/;"	f
VLight_DumpLightTable_f	vx_vertexlights.c	/^void VLight_DumpLightTable_f(void)$/;"	f
VLight_GetLightValue	vx_vertexlights.c	/^float VLight_GetLightValue(int index, float apitch, float ayaw)$/;"	f
VLight_LerpLight	vx_vertexlights.c	/^float VLight_LerpLight(int index1, int index2, float ilerp, float apitch, float ayaw)$/;"	f
VLight_ResetAnormTable	vx_vertexlights.c	/^void VLight_ResetAnormTable()$/;"	f
VOOR_TRAIL	render.h	/^	TRACER1_TRAIL, TRACER2_TRAIL, VOOR_TRAIL,$/;"	e	enum:trail_type_s
VSyncLagFix	cl_main.c	/^qbool VSyncLagFix (void)$/;"	f
VWepModel_NextDownload	cl_parse.c	/^void VWepModel_NextDownload (void)$/;"	f
VXBlobExplosion	gl_rpart.c	/^void VXBlobExplosion (vec3_t org) $/;"	f
VXBlood	gl_rpart.c	/^void VXBlood (vec3_t org, float count)$/;"	f
VXExplosion	gl_rpart.c	/^void VXExplosion (vec3_t org)$/;"	f
VXGunshot	gl_rpart.c	/^void VXGunshot (vec3_t org, float count)$/;"	f
VXNailhit	gl_rpart.c	/^void VXNailhit (vec3_t org, float count)$/;"	f
VXSCR_DrawTrackerString	vx_tracker.c	/^void VXSCR_DrawTrackerString (void)$/;"	f
VXTeleport	gl_rpart.c	/^void VXTeleport (vec3_t org) $/;"	f
VX_DeathEffect	gl_rpart.c	/^void VX_DeathEffect (vec3_t org)$/;"	f
VX_DetpackExplosion	gl_rpart.c	/^void VX_DetpackExplosion (vec3_t org)$/;"	f
VX_GetStreak	vx_tracker.c	/^killing_streak_t *VX_GetStreak (int frags)	$/;"	f
VX_GibEffect	gl_rpart.c	/^void VX_GibEffect (vec3_t org)$/;"	f
VX_Implosion	gl_rpart.c	/^void VX_Implosion (vec3_t org)$/;"	f
VX_LightningBeam	gl_rpart.c	/^void VX_LightningBeam (vec3_t start, vec3_t end)$/;"	f
VX_LightningTrail	gl_rpart.c	/^void VX_LightningTrail (vec3_t start, vec3_t end)$/;"	f
VX_OwnFragNew	vx_tracker.c	/^static void VX_OwnFragNew(const char *victim)$/;"	f	file:
VX_OwnFragText	vx_tracker.c	/^const char * VX_OwnFragText(void)$/;"	f
VX_OwnFragTextLen	vx_tracker.c	/^int VX_OwnFragTextLen(void)$/;"	f
VX_OwnFragTime	vx_tracker.c	/^double VX_OwnFragTime(void)$/;"	f
VX_ParticleTrail	gl_rpart.c	/^void VX_ParticleTrail (vec3_t start, vec3_t end, float size, float time, col_t color)$/;"	f
VX_TeslaCharge	gl_rpart.c	/^void VX_TeslaCharge (vec3_t org)$/;"	f
VX_TrackerAddText	vx_tracker.c	/^void VX_TrackerAddText(char *msg, tracktype_t tt)$/;"	f
VX_TrackerClear	vx_tracker.c	/^void VX_TrackerClear()$/;"	f
VX_TrackerDeath	vx_tracker.c	/^void VX_TrackerDeath(int player, int weapon, int count)$/;"	f
VX_TrackerFlagCapture	vx_tracker.c	/^void VX_TrackerFlagCapture(int count)$/;"	f
VX_TrackerFlagDrop	vx_tracker.c	/^void VX_TrackerFlagDrop(int count)$/;"	f
VX_TrackerFlagTouch	vx_tracker.c	/^void VX_TrackerFlagTouch(int count)$/;"	f
VX_TrackerFragXvsY	vx_tracker.c	/^void VX_TrackerFragXvsY(int player, int killer, int weapon, int player_wcount, int killer_wcount)$/;"	f
VX_TrackerIsEnemy	vx_tracker.c	/^qbool VX_TrackerIsEnemy(int player)$/;"	f
VX_TrackerOddFrag	vx_tracker.c	/^void VX_TrackerOddFrag(int player, int weapon, int wcount)$/;"	f
VX_TrackerOddTeamkill	vx_tracker.c	/^void VX_TrackerOddTeamkill(int player, int weapon, int count)$/;"	f
VX_TrackerOddTeamkilled	vx_tracker.c	/^void VX_TrackerOddTeamkilled(int player, int weapon)$/;"	f
VX_TrackerStreak	vx_tracker.c	/^void VX_TrackerStreak (int player, int count)$/;"	f
VX_TrackerStreakEnd	vx_tracker.c	/^void VX_TrackerStreakEnd(int player, int killer, int count)$/;"	f
VX_TrackerStreakEndOddTeamkilled	vx_tracker.c	/^void VX_TrackerStreakEndOddTeamkilled(int player, int count)$/;"	f
VX_TrackerSuicide	vx_tracker.c	/^void VX_TrackerSuicide(int player, int weapon, int count)$/;"	f
VX_TrackerTK_XvsY	vx_tracker.c	/^void VX_TrackerTK_XvsY(int player, int killer, int weapon, int p_count, int p_icount, int k_count, int k_icount)$/;"	f
VX_TrackerThink	vx_tracker.c	/^void VX_TrackerThink()$/;"	f
V_AddDlight	cl_nqdemo.c	27;"	d	file:
V_AddIdle	cl_view.c	/^void V_AddIdle (void) {$/;"	f
V_AddLightBlend	cl_view.c	/^void V_AddLightBlend (float r, float g, float b, float a2) {$/;"	f
V_AddViewWeapon	cl_view.c	/^void V_AddViewWeapon (float bob) {$/;"	f
V_AddWaterfog	cl_view.c	/^void V_AddWaterfog (int contents) {$/;"	f
V_BonusFlash_f	cl_view.c	/^void V_BonusFlash_f (void) {$/;"	f
V_BoundOffsets	cl_view.c	/^void V_BoundOffsets (void) {$/;"	f
V_CalcBlend	cl_view.c	/^void V_CalcBlend (void) {$/;"	f
V_CalcBob	cl_view.c	/^float V_CalcBob (void) {$/;"	f
V_CalcIntermissionRefdef	cl_view.c	/^void V_CalcIntermissionRefdef (void) {$/;"	f
V_CalcPowerupCshift	cl_view.c	/^void V_CalcPowerupCshift (void) {$/;"	f
V_CalcRefdef	cl_view.c	/^void V_CalcRefdef (void) {$/;"	f
V_CalcRoll	cl_view.c	/^float V_CalcRoll (vec3_t angles, vec3_t velocity) {$/;"	f
V_CalcViewRoll	cl_view.c	/^void V_CalcViewRoll (void) {$/;"	f
V_CheckGamma	cl_view.c	/^qbool V_CheckGamma (void) {$/;"	f
V_CurrentWeaponModel	cl_view.c	/^static int V_CurrentWeaponModel(void) { $/;"	f	file:
V_DriftPitch	cl_view.c	/^void V_DriftPitch (void) {$/;"	f
V_Init	cl_view.c	/^void V_Init (void) {$/;"	f
V_ParseDamage	cl_view.c	/^void V_ParseDamage (void)$/;"	f
V_RenderView	cl_view.c	/^void V_RenderView (void) {$/;"	f
V_SetContentsColor	cl_view.c	/^void V_SetContentsColor (int contents) {$/;"	f
V_StartPitchDrift	cl_view.c	/^void V_StartPitchDrift (void) {$/;"	f
V_StopPitchDrift	cl_view.c	/^void V_StopPitchDrift (void) {$/;"	f
V_TF_ClearGrenadeEffects	cl_view.c	/^void V_TF_ClearGrenadeEffects ()$/;"	f
V_TF_FlashSettings	cl_view.c	/^void V_TF_FlashSettings (qbool flashed)$/;"	f
V_TF_FlashStuff	cl_view.c	/^void V_TF_FlashStuff (void)$/;"	f
V_UpdatePalette	cl_view.c	/^void V_UpdatePalette (void) {$/;"	f
V_cshift_f	cl_view.c	/^void V_cshift_f (void) {$/;"	f
ValueForKey	EX_browser_net.c	/^char *ValueForKey(server_data *s, char *k)$/;"	f
VectorAdd	mathlib.h	55;"	d
VectorClear	mathlib.h	57;"	d
VectorCompare	mathlib.h	79;"	d
VectorCopy	mathlib.h	56;"	d
VectorInterpolate	mathlib.h	126;"	d
VectorJogi	mvd_cam.h	8;"	d
VectorL2Compare	mathlib.h	72;"	d
VectorLength	mathlib.c	/^vec_t VectorLength (vec3_t v) {$/;"	f
VectorMA	mathlib.h	81;"	d
VectorNegate	mathlib.h	58;"	d
VectorNormalize	mathlib.c	/^float VectorNormalize (vec3_t v) {$/;"	f
VectorNormalizeFast	mathlib.h	97;"	d
VectorScale	mathlib.h	89;"	d
VectorSet	mathlib.h	59;"	d
VectorSubtract	mathlib.h	54;"	d
VectorSupCompare	mathlib.h	66;"	d
VectorVectors	mathlib.c	/^void VectorVectors(vec3_t forward, vec3_t right, vec3_t up) {$/;"	f
VerifyData	modules.c	/^qbool VerifyData (signed_buffer_t *p)$/;"	f
VerifySystemSpecs	sys_mac.c	/^void VerifySystemSpecs (void)$/;"	f
VersionString	version.c	/^char *VersionString (void)$/;"	f
VideoApplySettings	menu_options.c	/^void VideoApplySettings (void)$/;"	f
View_DelP	mosdm.c	/^void View_DelP(void){$/;"	f
View_Del_Point	mosdm.c	/^void View_Del_Point(void){$/;"	f
View_MIS	mosdm.c	/^void View_MIS(void){$/;"	f
View_SES	mosdm.c	/^void View_SES(void){$/;"	f
View_SSE	mosdm.c	/^void View_SSE(void){$/;"	f
View_SetP	mosdm.c	/^void View_SetP(void){$/;"	f
View_SetStart	mosdm.c	/^void View_SetStart(void){$/;"	f
View_SetStop	mosdm.c	/^void View_SetStop(void){$/;"	f
View_Set_Point	mosdm.c	/^void View_Set_Point(void){$/;"	f
WAD3_LoadTexture	wad.c	/^byte *WAD3_LoadTexture (texture_t *tx)$/;"	f
WAD3_LoadWadFile	wad.c	/^void WAD3_LoadWadFile (char *filename)$/;"	f
WAKE_UP	keys.h	/^	WAKE_UP,		\/\/186$/;"	e	enum:__anon171
WARP_HEIGHT	d_iface.h	23;"	d
WARP_WIDTH	d_iface.h	22;"	d
WAV_BUFFERS	snd_win.c	28;"	d	file:
WAV_BUFFER_SIZE	snd_win.c	30;"	d	file:
WAV_MASK	snd_win.c	29;"	d	file:
WEAPON_COUNT	cl_screen.c	4784;"	d	file:
WG_AppActivate	win_glimp.c	/^void WG_AppActivate(BOOL fActive, BOOL minimized) {$/;"	f
WG_CheckHardwareGamma	win_glimp.c	/^void WG_CheckHardwareGamma (void) {$/;"	f
WG_CheckNeedSetDeviceGammaRamp	win_glimp.c	/^void WG_CheckNeedSetDeviceGammaRamp(void) {$/;"	f
WG_RestoreGamma	win_glimp.c	/^void WG_RestoreGamma(void) {$/;"	f
WIN32	debug.h	124;"	d
WIN32_LEAN_AND_MEAN	debug.h	259;"	d
WINAMP_BUTTON1	winamp.h	416;"	d
WINAMP_BUTTON1_CTRL	winamp.h	426;"	d
WINAMP_BUTTON1_SHIFT	winamp.h	421;"	d
WINAMP_BUTTON2	winamp.h	417;"	d
WINAMP_BUTTON2_CTRL	winamp.h	427;"	d
WINAMP_BUTTON2_SHIFT	winamp.h	422;"	d
WINAMP_BUTTON3	winamp.h	418;"	d
WINAMP_BUTTON3_CTRL	winamp.h	428;"	d
WINAMP_BUTTON3_SHIFT	winamp.h	423;"	d
WINAMP_BUTTON4	winamp.h	419;"	d
WINAMP_BUTTON4_CTRL	winamp.h	429;"	d
WINAMP_BUTTON4_SHIFT	winamp.h	424;"	d
WINAMP_BUTTON5	winamp.h	420;"	d
WINAMP_BUTTON5_CTRL	winamp.h	430;"	d
WINAMP_BUTTON5_SHIFT	winamp.h	425;"	d
WINAMP_COMMAND	mp3_winamp.c	218;"	d	file:
WINAMP_FFWD5S	winamp.h	410;"	d
WINAMP_FILE_PLAY	winamp.h	432;"	d
WINAMP_GetPlaylist	mp3_winamp.c	/^long WINAMP_GetPlaylist(char **buf) $/;"	f
WINAMP_HELP_ABOUT	winamp.h	435;"	d
WINAMP_OPTIONS_AOT	winamp.h	434;"	d
WINAMP_OPTIONS_EQ	winamp.h	406;"	d
WINAMP_OPTIONS_PLEDIT	winamp.h	407;"	d
WINAMP_OPTIONS_PREFS	winamp.h	433;"	d
WINAMP_ParsePlaylist_EXTM3U	mp3_winamp.c	/^int WINAMP_ParsePlaylist_EXTM3U(char *playlist_buf, unsigned int length,$/;"	f
WINAMP_Playlist	mp3_winamp.c	/^static char **WINAMP_Playlist;$/;"	v	file:
WINAMP_Playlist_nelms	mp3_winamp.c	/^static int WINAMP_Playlist_nelms;$/;"	v	file:
WINAMP_REW5S	winamp.h	411;"	d
WINAMP_Set_ToggleFn	mp3_winamp.c	/^static void WINAMP_Set_ToggleFn(char *name, int setparam, int getparam) $/;"	f	file:
WINAMP_Toggle_ToggleFn	mp3_winamp.c	/^static void WINAMP_Toggle_ToggleFn(char *name, int setparam, int getparam) $/;"	f	file:
WINAMP_VOLUMEDOWN	winamp.h	409;"	d
WINAMP_VOLUMEUP	winamp.h	408;"	d
WINAPI	sys.h	36;"	d
WINDOW_CLASS_NAME	linux_glimp.c	104;"	d	file:
WINDOW_CLASS_NAME	win_glimp.c	86;"	d	file:
WINDOW_DEFAULT_NAME	win_glimp.c	87;"	d	file:
WINUSERAPI	in_raw.h	16;"	d
WITH_JPEG_STATIC	quakedef.h	37;"	d
WITH_MP3_PLAYER	quakedef.h	44;"	d
WITH_PNG_STATIC	quakedef.h	30;"	d
WITH_VFS_WILD	fs.c	112;"	d	file:
WM_INPUT	in_raw.h	20;"	d
WM_MOUSEWHEEL	winquake.h	28;"	d
WM_MWHOOK	mw_hook.h	5;"	d
WM_WA_IPC	winamp.h	34;"	d
WM_XBUTTONDOWN	winquake.h	29;"	d
WM_XBUTTONUP	winquake.h	30;"	d
WS_NameToNum	cl_screen.c	/^static weaponName_t WS_NameToNum(const char *name)$/;"	f	file:
W_CleanupName	wad.c	/^void W_CleanupName (char *in, char *out) {$/;"	f
W_FreeWadFile	wad.c	/^void W_FreeWadFile (void)$/;"	f
W_GetLumpName	wad.c	/^void *W_GetLumpName (char *name) {$/;"	f
W_GetLumpNum	wad.c	/^void *W_GetLumpNum (int num) {$/;"	f
W_GetLumpinfo	wad.c	/^lumpinfo_t *W_GetLumpinfo (char *name) {$/;"	f
W_InsertOcranaLeds	wad.c	/^static void W_InsertOcranaLeds (byte *data) {$/;"	f	file:
W_LoadWadFile	wad.c	/^void W_LoadWadFile (char *filename) {$/;"	f
WaitForVSync	vid_glx.c	/^void WaitForVSync (void) { \/\/ thanks to str-$/;"	f
Weapon_NumToString	teamplay.c	/^char *Weapon_NumToString(int num)$/;"	f
WeatherEffect	gl_rpart.c	/^void WeatherEffect (void)$/;"	f
WhoIsSpectated	cl_cam.c	/^int WhoIsSpectated (void)$/;"	f
Win2K	sys_win.c	/^qbool		WinNT, Win2K, WinXP, Win2K3, WinVISTA;$/;"	v
Win2K3	sys_win.c	/^qbool		WinNT, Win2K, WinXP, Win2K3, WinVISTA;$/;"	v
WinCheckOSInfo	sys_win.c	/^void WinCheckOSInfo(void)$/;"	f
WinCheckQWURL	sys_win.c	/^qbool WinCheckQWURL(void)$/;"	f
WinKeyHook	sys_win.c	/^static HHOOK WinKeyHook;$/;"	v	file:
WinKeyHook_isActive	sys_win.c	/^static qbool WinKeyHook_isActive;$/;"	v	file:
WinMain	sys_win.c	/^int WINAPI WinMain (HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) $/;"	f
WinNT	sv_sys_win.c	/^qbool WinNT;$/;"	v
WinNT	sys_win.c	/^qbool		WinNT, Win2K, WinXP, Win2K3, WinVISTA;$/;"	v
WinVISTA	sys_win.c	/^qbool		WinNT, Win2K, WinXP, Win2K3, WinVISTA;$/;"	v
WinXP	sys_win.c	/^qbool		WinNT, Win2K, WinXP, Win2K3, WinVISTA;$/;"	v
WindowRect	vid_win.c	/^RECT		WindowRect;$/;"	v
WindowStyle	vid_wgl.c	/^DWORD		WindowStyle, ExWindowStyle;$/;"	v
WindowStyle	vid_win.c	/^DWORD		WindowStyle, ExWindowStyle;$/;"	v
WriteBytes	fs.h	/^	int (*WriteBytes) (struct vfsfile_s *file, const void *buffer, int bytestowrite);$/;"	m	struct:vfsfile_s
WriteDest	pr_cmds.c	/^static sizebuf_t *WriteDest (void) {$/;"	f	file:
WriteSourcesConfiguration	EX_browser.c	/^void WriteSourcesConfiguration(FILE *f)$/;"	f
Write_GetClient	pr_cmds.c	/^static client_t *Write_GetClient(void) {$/;"	f	file:
X11_buffersize	vid_x11.c	/^static long X11_buffersize;$/;"	v	file:
X11_highhunkmark	vid_x11.c	/^static long X11_highhunkmark;$/;"	v	file:
XCENTERING	r_local.h	69;"	d
XLateKey	linux_glimp.c	/^static int XLateKey(XKeyEvent *ev) {$/;"	f	file:
XLateKey	vid_glx.c	/^static int XLateKey(XKeyEvent *ev) {$/;"	f	file:
XLateKey	vid_x11.c	/^static int XLateKey (XKeyEvent *ev)$/;"	f	file:
XML_READ_BUFSIZE	xsd.h	5;"	d
XMMS2_COMMAND	mp3_xmms2.c	389;"	d	file:
XMMS2_Connect	mp3_xmms2.c	/^static void XMMS2_Connect(void) {$/;"	f	file:
XMMS2_FreeLibrary	mp3_xmms2.c	/^static void XMMS2_FreeLibrary(void) {$/;"	f	file:
XMMS2_GetCurrentDuration	mp3_xmms2.c	/^static int XMMS2_GetCurrentDuration(void) $/;"	f	file:
XMMS2_GetCurrentId	mp3_xmms2.c	/^static unsigned int XMMS2_GetCurrentId(void)$/;"	f	file:
XMMS2_GetCurrentPlayTime	mp3_xmms2.c	/^static unsigned int XMMS2_GetCurrentPlayTime(void)$/;"	f	file:
XMMS2_GetCurrentTrack	mp3_xmms2.c	/^static unsigned int XMMS2_GetCurrentTrack(void) {$/;"	f	file:
XMMS2_GetMediaInfo	mp3_xmms2.c	/^static int XMMS2_GetMediaInfo(unsigned int id, char *name, size_t name_len)$/;"	f	file:
XMMS2_GetPlaylistLength	mp3_xmms2.c	/^static unsigned int XMMS2_GetPlaylistLength(void) {$/;"	f	file:
XMMS2_LoadLibrary	mp3_xmms2.c	/^static void XMMS2_LoadLibrary(void) {$/;"	f	file:
XMMS2_PlayList_SetNext	mp3_xmms2.c	/^static void XMMS2_PlayList_SetNext(int absolute) {$/;"	f	file:
XMMS2_PlayList_SetNextRel	mp3_xmms2.c	/^static void XMMS2_PlayList_SetNextRel(int offset) {$/;"	f	file:
XMMS2_SeekRel	mp3_xmms2.c	/^static void XMMS2_SeekRel(int offset) {$/;"	f	file:
XMMS_COMMAND	mp3_xmms.c	158;"	d	file:
XMMS_FreeLibrary	mp3_xmms.c	/^static void XMMS_FreeLibrary(void) {$/;"	f	file:
XMMS_LoadLibrary	mp3_xmms.c	/^static void XMMS_LoadLibrary(void) {$/;"	f	file:
XMMS_SESSION	mp3_xmms.c	39;"	d	file:
XMMS_Set_ToggleFn	mp3_xmms.c	/^static void XMMS_Set_ToggleFn(char *name, void *togglefunc, void *getfunc) {$/;"	f	file:
XMMS_pid	mp3_xmms.c	/^static int XMMS_pid = 0;$/;"	v	file:
XSD_AddText	xsd.c	/^char *XSD_AddText(char *dst, const char *src, int src_len)$/;"	f
XSD_Command_Free	xsd_command.c	/^void XSD_Command_Free(xml_t *doc)$/;"	f
XSD_Command_Init	xsd_command.c	/^static void XSD_Command_Init(xml_command_t *document)$/;"	f	file:
XSD_Command_Load	xsd_command.c	/^xml_command_t * XSD_Command_Load(char *filename)$/;"	f
XSD_Command_LoadFromHandle	xsd_command.c	/^xml_t * XSD_Command_LoadFromHandle(FILE *f, int filelen) {$/;"	f
XSD_DetectType_OnStartElement	xsd.c	/^static void XSD_DetectType_OnStartElement(void *userData, const XML_Char *name, const XML_Char **atts)$/;"	f	file:
XSD_DocumentConvertType	xsd.c	/^typedef xml_document_t * (*XSD_DocumentConvertType)(xml_t *);$/;"	t	file:
XSD_DocumentFreeType	xsd.c	/^typedef void (*XSD_DocumentFreeType)(xml_t *);$/;"	t	file:
XSD_DocumentLoadType	xsd.c	/^typedef xml_t * (*XSD_DocumentLoadType)(FILE *f, int len);$/;"	t	file:
XSD_DocumentLoadType	xsd.c	/^typedef xml_t * (*XSD_DocumentLoadType)(vfsfile_t *v, int len);$/;"	t	file:
XSD_Document_Free	xsd_document.c	/^void XSD_Document_Free(xml_t *doc)$/;"	f
XSD_Document_Init	xsd_document.c	/^static void XSD_Document_Init(xml_document_t *document)$/;"	f	file:
XSD_Document_Load	xsd_document.c	/^xml_document_t * XSD_Document_Load(char *filename)$/;"	f
XSD_Document_LoadFromHandle	xsd_document.c	/^xml_t * XSD_Document_LoadFromHandle(FILE *f, int filelen) {$/;"	f
XSD_Document_New	xsd_document.c	/^xml_document_t * XSD_Document_New(void)$/;"	f
XSD_FreeDocument	xsd.c	/^void XSD_FreeDocument(xml_t *document)$/;"	f
XSD_Free_Tag_A	xsd_document.c	/^static void XSD_Free_Tag_A(document_tag_a_t *a)$/;"	f	file:
XSD_Free_Tag_Br	xsd_document.c	/^static void XSD_Free_Tag_Br(document_tag_br_t *br)$/;"	f	file:
XSD_Free_Tag_Color	xsd_document.c	/^static void XSD_Free_Tag_Color(document_tag_color_t *c)$/;"	f	file:
XSD_Free_Tag_Di	xsd_document.c	/^static void XSD_Free_Tag_Di(document_tag_di_t *l)$/;"	f	file:
XSD_Free_Tag_Dict	xsd_document.c	/^static void XSD_Free_Tag_Dict(document_tag_dict_t *l)$/;"	f	file:
XSD_Free_Tag_Em	xsd_document.c	/^static void XSD_Free_Tag_Em(document_tag_em_t *i)$/;"	f	file:
XSD_Free_Tag_H	xsd_document.c	/^static void XSD_Free_Tag_H(document_tag_h_t *h)$/;"	f	file:
XSD_Free_Tag_Hr	xsd_document.c	/^static void XSD_Free_Tag_Hr(document_tag_hr_t *hr)$/;"	f	file:
XSD_Free_Tag_Img	xsd_document.c	/^static void XSD_Free_Tag_Img(document_tag_img_t *i)$/;"	f	file:
XSD_Free_Tag_Li	xsd_document.c	/^static void XSD_Free_Tag_Li(document_tag_li_t *l)$/;"	f	file:
XSD_Free_Tag_List	xsd_document.c	/^static void XSD_Free_Tag_List(document_tag_list_t *l)$/;"	f	file:
XSD_Free_Tag_P	xsd_document.c	/^static void XSD_Free_Tag_P(document_tag_p_t *p)$/;"	f	file:
XSD_Free_Tag_Pre	xsd_document.c	/^static void XSD_Free_Tag_Pre(document_tag_pre_t *pre)$/;"	f	file:
XSD_Free_Tag_Section	xsd_document.c	/^static void XSD_Free_Tag_Section(document_tag_section_t *s)$/;"	f	file:
XSD_Free_Tag_Sp	xsd_document.c	/^static void XSD_Free_Tag_Sp(document_tag_sp_t *sp)$/;"	f	file:
XSD_Free_Tag_Text	xsd_document.c	/^static void XSD_Free_Tag_Text(document_tag_text_t *t)$/;"	f	file:
XSD_Free_Tags	xsd_document.c	/^static void XSD_Free_Tags(document_tag_t *t)$/;"	f	file:
XSD_GetAttribute	xsd.c	/^const char *XSD_GetAttribute(const char **atts, const char *name)$/;"	f
XSD_InitStack	xsd.c	/^void XSD_InitStack(xml_parser_stack_t *stack)$/;"	f
XSD_IsIn	xsd.c	/^int XSD_IsIn(char *path, char *subPath)$/;"	f
XSD_IsSpace	xsd.c	/^int XSD_IsSpace(char c)$/;"	f
XSD_LoadDocument	xsd.c	/^xml_t * XSD_LoadDocument(char *filename)$/;"	f
XSD_LoadDocumentWithXsl	xsd.c	/^xml_document_t * XSD_LoadDocumentWithXsl(char *filename)$/;"	f
XSD_OnEndElement	xsd.c	/^void XSD_OnEndElement(xml_parser_stack_t *stack, const XML_Char *name)$/;"	f
XSD_OnStartElement	xsd.c	/^void XSD_OnStartElement(xml_parser_stack_t *stack, const XML_Char *name, const XML_Char **atts)$/;"	f
XSD_RenderClear	document_rendering.c	/^void XSD_RenderClear(document_rendered_t *r)$/;"	f
XSD_RenderDocument	document_rendering.c	/^int XSD_RenderDocument(document_rendered_t *ret, xml_document_t *doc, int width)$/;"	f
XSD_RenderDocumentOnce	document_rendering.c	/^static int XSD_RenderDocumentOnce(xml_document_t *doc, byte *buf, int width, int lines,$/;"	f	file:
XSD_RestoreStack	xsd.c	/^void XSD_RestoreStack(xml_parser_stack_t *stack)$/;"	f
XSD_StripSpaces	xsd.c	/^char *XSD_StripSpaces (char *str)$/;"	f
XSD_Variable_Convert	xsd_variable.c	/^xml_document_t * XSD_Variable_Convert(xml_t *doc)$/;"	f
XSD_Variable_Free	xsd_variable.c	/^void XSD_Variable_Free(xml_t *doc)$/;"	f
XSD_Variable_Init	xsd_variable.c	/^static void XSD_Variable_Init(xml_variable_t *document)$/;"	f	file:
XSD_Variable_Load	xsd_variable.c	/^xml_variable_t * XSD_Variable_Load(char *filename)$/;"	f
XSD_Variable_LoadFromHandle	xsd_variable.c	/^xml_t * XSD_Variable_LoadFromHandle(FILE *f, int filelen) {$/;"	f
XSD_XslConvert	xsd.c	/^xml_document_t * XSD_XslConvert(xml_t *doc)$/;"	f
X_MASK	linux_glimp.c	130;"	d	file:
X_MASK	vid_glx.c	69;"	d	file:
X_vrefresh_rate	vid_glx.c	/^static double X_vrefresh_rate = 0;$/;"	v	file:
XvsYColor	vx_tracker.c	/^static char *XvsYColor(int player, int killer)$/;"	f	file:
YAW	mathlib.h	40;"	d
YA_INFO	mvd_utils_common.h	27;"	d
YCENTERING	r_local.h	70;"	d
YES	debug.h	270;"	d
YES	debug.h	278;"	d
YES	debug.h	285;"	d
YES_BUTTON_WIDTH	sys_win.c	807;"	d	file:
ZIP_WRITEBUFFERSIZE	fs.c	2049;"	d	file:
ZOOMEDFOV	cl_screen.c	105;"	d	file:
Z_EXT_JOIN_OBSERVE	protocol.h	54;"	d
Z_EXT_PF_ONGROUND	protocol.h	56;"	d
Z_EXT_PITCHLIMITS	protocol.h	53;"	d
Z_EXT_PM_TYPE	protocol.h	49;"	d
Z_EXT_PM_TYPE_NEW	protocol.h	50;"	d
Z_EXT_SERVERTIME	protocol.h	52;"	d
Z_EXT_VIEWHEIGHT	protocol.h	51;"	d
Z_EXT_VWEP	protocol.h	57;"	d
Z_Free	q_shared.h	280;"	d
Z_Free	zone2.h	173;"	d
Z_Malloc	q_shared.h	279;"	d
Z_Malloc	zone2.h	172;"	d
Z_Strdup	q_shared.h	281;"	d
Z_Strdup	zone2.c	/^char *Z_Strdup (const char *src)$/;"	f
_3DFX_DRIVER_NAME	tr_types.h	152;"	d
_3DFX_DRIVER_NAME	tr_types.h	157;"	d
_APS_NEXT_COMMAND_VALUE	resource.h	12;"	d
_APS_NEXT_CONTROL_VALUE	resource.h	13;"	d
_APS_NEXT_RESOURCE_VALUE	resource.h	11;"	d
_APS_NEXT_SYMED_VALUE	resource.h	14;"	d
_ASMAPI	debug.h	163;"	d
_CONFIG_MANAGER_H_	config_manager.h	23;"	d
_CONSOLE_H_	console.h	27;"	d
_ControlList	in_win.c	/^enum _ControlList {$/;"	g	file:
_DLLAPI	debug.h	184;"	d
_DLLAPI	debug.h	187;"	d
_DLLAPI	debug.h	194;"	d
_DLLAPI	debug.h	197;"	d
_DLLAPI	debug.h	203;"	d
_DLLASM	debug.h	181;"	d
_DLLASM	debug.h	191;"	d
_DLLVAR	debug.h	185;"	d
_DLLVAR	debug.h	188;"	d
_DLLVAR	debug.h	195;"	d
_DLLVAR	debug.h	198;"	d
_DLLVAR	debug.h	204;"	d
_EXPORT	debug.h	182;"	d
_EXPORT	debug.h	192;"	d
_EXPORT	debug.h	202;"	d
_GL_MD3_H_	gl_md3.h	2;"	d
_GRID	in_win.c	/^pGetRawInputData			_GRID;$/;"	v
_GRIDIA	in_win.c	/^pGetRawInputDeviceInfoA		_GRIDIA;$/;"	v
_GRIDL	in_win.c	/^pGetRawInputDeviceList		_GRIDL;$/;"	v
_HUGE	mgraph.h	1727;"	d
_HUGE	mgraph.h	1729;"	d
_IMAGE_H	image.h	23;"	d
_KEYMAP_H_	keymap.h	24;"	d
_KEYS_H_	keys.h	26;"	d
_MAX_DIR	sys.h	42;"	d
_MAX_EXT	sys.h	41;"	d
_MAX_FNAME	sys.h	40;"	d
_MGL_FNAMESIZE	mgraph.h	727;"	d
_Mem_Alloc	zone2.c	/^void *_Mem_Alloc(mempool_t *pool, size_t size, const char *filename, int fileline)$/;"	f
_Mem_AllocPool	zone2.c	/^mempool_t *_Mem_AllocPool(const char *name, int flags, mempool_t *parent, const char *filename, int fileline)$/;"	f
_Mem_CheckClumpSentinels	zone2.c	/^static void _Mem_CheckClumpSentinels(memclump_t *clump, const char *filename, int fileline)$/;"	f	file:
_Mem_CheckSentinels	zone2.c	/^void _Mem_CheckSentinels(void *data, const char *filename, int fileline)$/;"	f
_Mem_CheckSentinelsGlobal	zone2.c	/^void _Mem_CheckSentinelsGlobal(const char *filename, int fileline)$/;"	f
_Mem_EmptyPool	zone2.c	/^void _Mem_EmptyPool(mempool_t *pool, const char *filename, int fileline)$/;"	f
_Mem_Free	zone2.c	/^void _Mem_Free(void *data, const char *filename, int fileline)$/;"	f
_Mem_FreeBlock	zone2.c	/^static void _Mem_FreeBlock(memheader_t *mem, const char *filename, int fileline)$/;"	f	file:
_Mem_FreePool	zone2.c	/^void _Mem_FreePool(mempool_t **poolpointer, const char *filename, int fileline)$/;"	f
_PUBAPI	debug.h	162;"	d
_RRID	in_win.c	/^pRegisterRawInputDevices	_RRID;$/;"	v
_R_SHARED_H_	r_shared.h	27;"	d
_SHA1	sha1.h	19;"	d
_VARAPI	debug.h	174;"	d
_VARAPI	debug.h	176;"	d
_WAD_H	wad.h	23;"	d
_WAFE_H_	winamp.h	32;"	d
_WIN32	debug.h	121;"	d
__16BIT__	debug.h	104;"	d
__16BIT__	debug.h	91;"	d
__32BIT__	debug.h	115;"	d
__32BIT__	debug.h	131;"	d
__32BIT__	debug.h	84;"	d
__ASM_I386__	asm_i386.h	24;"	d
__AUTH_H__	auth.h	23;"	d
__BIG_ENDIAN__	q_shared.h	152;"	d
__BIG_ENDIAN__	q_shared.h	167;"	d
__BSPFILE_H__	bspfile.h	22;"	d
__CMODEL_H__	cmodel.h	21;"	d
__COMMON_DRAW__H__	common_draw.h	2;"	d
__COMMON_H__	common.h	24;"	d
__CPU_H__	cpu.h	23;"	d
__CTRL_EDITBOX_H__	Ctrl_EditBox.h	8;"	d
__CTRL_H__	Ctrl.h	4;"	d
__CTRL_PAGEVIEWER_H__	Ctrl_PageViewer.h	7;"	d
__CTRL_TAB_H__	Ctrl_Tab.h	4;"	d
__CVAR_H__	cvar.h	22;"	d
__DEBUG_H	debug.h	19;"	d
__DOCUMENT_RENDERING_H__	document_rendering.h	2;"	d
__DRAW_H__	draw.h	25;"	d
__EMBED_TCL_H__	embed_tcl.h	24;"	d
__EX_BROWSER__H__	EX_browser.h	2;"	d
__EX_FILELIST_H__	EX_FileList.h	21;"	d
__EZ_BUTTON_H__	ez_button.h	3;"	d
__EZ_CONTROLS_H__	ez_controls.h	2;"	d
__EZ_LABEL_H__	ez_label.h	3;"	d
__EZ_SCROLLBAR_H__	ez_scrollbar.h	3;"	d
__EZ_SCROLLPANE_H__	ez_scrollpane.h	3;"	d
__EZ_SLIDER_H__	ez_slider.h	3;"	d
__EZ_WINDOW_H__	ez_window.h	3;"	d
__FCHECKS_H__	fchecks.h	23;"	d
__FLAT__	debug.h	48;"	d
__FLAT__	debug.h	69;"	d
__FMOD_H__	fmod.h	23;"	d
__FS_H__	fs.h	6;"	d
__GENDEFS	debug.h	238;"	d
__GLXextFuncPtr	vid_common_gl.c	/^  typedef void (*__GLXextFuncPtr)(void);$/;"	t	file:
__GL_FRAMEBUFFER_H__	gl_framebuffer.h	2;"	d
__GL_LOCAL_H__	gl_local.h	24;"	d
__GL_TEXTURE_H	gl_texture.h	23;"	d
__HASH_H__	hash.h	6;"	d
__HAS_BOOL__	debug.h	49;"	d
__HAS_BOOL__	debug.h	54;"	d
__HELP_H__	help.h	21;"	d
__HUD_COMMON__H__	hud_common.h	7;"	d
__HUD_EDITOR_H__	hud_editor.h	12;"	d
__IGNORE_H_	ignore.h	23;"	d
__INPUT_H__	input.h	22;"	d
__IN_RAW__H__	in_raw.h	2;"	d
__LITTLE_ENDIAN__	q_shared.h	131;"	d
__LITTLE_ENDIAN__	q_shared.h	154;"	d
__LITTLE_ENDIAN__	q_shared.h	165;"	d
__LOCALTIME_H__	localtime.h	2;"	d
__LOGGING_H_	logging.h	23;"	d
__MATHLIB_H__	mathlib.h	23;"	d
__MENU_H__	menu.h	24;"	d
__MENU_INGAME_H__	menu_ingame.h	12;"	d
__MGLWIN_H	mglwin.h	24;"	d
__MGRAPH_H	mgraph.h	32;"	d
__MODEL__	gl_model.h	23;"	d
__MODEL__	r_model.h	23;"	d
__MODULES_H__	modules.h	23;"	d
__MOVIE_AVI_H_	movie_avi.h	23;"	d
__MOVIE_H_	movie.h	23;"	d
__MSDOS16__	debug.h	107;"	d
__MSDOS32__	debug.h	81;"	d
__MSDOS__	debug.h	100;"	d
__MSDOS__	debug.h	140;"	d
__MSDOS__	debug.h	77;"	d
__M_INT_DEFINED	mgraph.h	93;"	d
__NET_H__	net.h	24;"	d
__OPENTRANSPORTPROVIDERS__	in_mac.c	20;"	d	file:
__OPENTRANSPORTPROVIDERS__	sys_mac.c	8;"	d	file:
__OPENTRANSPORTPROVIDERS__	vid_mac.c	21;"	d	file:
__OS2_32__	debug.h	145;"	d
__OS2__	debug.h	144;"	d
__PARSER_H__	parser.h	23;"	d
__PASCAL	debug.h	166;"	d
__PASCAL	debug.h	170;"	d
__PDP_ENDIAN__	q_shared.h	156;"	d
__PMOVE_H__	pmove.h	23;"	d
__QSOUND_H__	qsound.h	25;"	d
__QTV_H__	qtv.h	5;"	d
__QUAKEDEF_H__	quakedef.h	26;"	d
__Q_SHARED_H__	q_shared.h	25;"	d
__REALDOS__	debug.h	110;"	d
__REALDOS__	debug.h	87;"	d
__R_LOCAL_H__	r_local.h	25;"	d
__SC386__	debug.h	42;"	d
__SECURITY_H__	security.h	23;"	d
__SERVER_H__	server.h	24;"	d
__SETTINGS_H__	settings.h	10;"	d
__SETTINGS_PAGE_H__	settings_page.h	15;"	d
__STATS_GRID__H__	stats_grid.h	6;"	d
__SV_WORLD_H__	sv_world.h	23;"	d
__TP_MSGS_H__	tp_msgs.h	12;"	d
__TR_TYPES_H	tr_types.h	27;"	d
__UNIX__	debug.h	148;"	d
__UTILS_H__	utils.h	25;"	d
__VERSION_H__	version.h	23;"	d
__VFS_H__	vfs.h	22;"	d
__VFS_TAR_H__	vfs_tar.h	22;"	d
__VX_STUFF__H__	vx_stuff.h	3;"	d
__VX_TRACKER_H__	vx_tracker.h	3;"	d
__WIN386__	debug.h	134;"	d
__WINDOWS16__	debug.h	94;"	d
__WINDOWS32__	debug.h	118;"	d
__WINDOWS__	debug.h	127;"	d
__WINDOWS__	debug.h	137;"	d
__WINDOWS__	debug.h	97;"	d
__XSD_COMMAND__H__	xsd_command.h	2;"	d
__XSD_DOCUMENT_H__	xsd_document.h	2;"	d
__XSD_H__	xsd.h	2;"	d
__XSD_VARIABLE__H__	xsd_variable.h	2;"	d
__ZONE2_H__	zone2.h	25;"	d
__ZONE_H__	zone.h	22;"	d
__cdecl	debug.h	47;"	d
__cdecl	debug.h	68;"	d
__export	debug.h	167;"	d
__hud_h__	hud.h	6;"	d
__import	debug.h	168;"	d
_aglSetDrawableMonitor	vid_mac.c	/^GLboolean _aglSetDrawableMonitor (AGLContext inContext, Boolean inWindow)$/;"	f
_bottomcolor	client.h	/^	int		_bottomcolor;$/;"	m	struct:player_info_s
_check_version_defined	fragstats.c	187;"	d	file:
_checkargs	fragstats.c	171;"	d	file:
_checkargs2	fragstats.c	176;"	d	file:
_checkargs3	fragstats.c	181;"	d	file:
_con_notifylines	console.c	/^cvar_t		_con_notifylines = {"con_notifylines","4"};$/;"	v
_float	progs.h	/^	float			_float;$/;"	m	union:eval_s
_ftol2_sse	utils.c	/^long _ftol2_sse(double f)$/;"	f
_glXGetVideoSyncSGI	vid_glx.c	/^PFNGLXGETVIDEOSYNCSGIPROC _glXGetVideoSyncSGI;$/;"	v
_glXWaitVideoSyncSGI	vid_glx.c	/^PFNGLXWAITVIDEOSYNCSGIPROC _glXWaitVideoSyncSGI;$/;"	v
_int	progs.h	/^	int				_int;$/;"	m	union:eval_s
_mathlib_temp_float1	mathlib.c	/^float _mathlib_temp_float1, _mathlib_temp_float2, _mathlib_temp_float3;$/;"	v
_mathlib_temp_float2	mathlib.c	/^float _mathlib_temp_float1, _mathlib_temp_float2, _mathlib_temp_float3;$/;"	v
_mathlib_temp_float3	mathlib.c	/^float _mathlib_temp_float1, _mathlib_temp_float2, _mathlib_temp_float3;$/;"	v
_mathlib_temp_int1	mathlib.c	/^int  _mathlib_temp_int1, _mathlib_temp_int2, _mathlib_temp_int3;$/;"	v
_mathlib_temp_int2	mathlib.c	/^int  _mathlib_temp_int1, _mathlib_temp_int2, _mathlib_temp_int3;$/;"	v
_mathlib_temp_int3	mathlib.c	/^int  _mathlib_temp_int1, _mathlib_temp_int2, _mathlib_temp_int3;$/;"	v
_mathlib_temp_vec1	mathlib.c	/^vec3_t _mathlib_temp_vec1, _mathlib_temp_vec2, _mathlib_temp_vec3;$/;"	v
_mathlib_temp_vec2	mathlib.c	/^vec3_t _mathlib_temp_vec1, _mathlib_temp_vec2, _mathlib_temp_vec3;$/;"	v
_mathlib_temp_vec3	mathlib.c	/^vec3_t _mathlib_temp_vec1, _mathlib_temp_vec2, _mathlib_temp_vec3;$/;"	v
_splitpath	sys_linux.c	/^void _splitpath(const char *path, char *drive, char *dir, char *file, char *ext)$/;"	f
_splitpath	sys_mac.c	/^void _splitpath(const char *path, char *drive, char *dir, char *file, char *ext)$/;"	f
_team	client.h	/^	char	_team[MAX_INFO_STRING];$/;"	m	struct:player_info_s
_temp_modulename	modules.c	/^char _temp_modulename[MAX_OSPATH];$/;"	v
_topcolor	client.h	/^	int		_topcolor;$/;"	m	struct:player_info_s
_vid_default_mode	vid_win.c	/^cvar_t		_vid_default_mode = {"_vid_default_mode", "0", CVAR_ARCHIVE};$/;"	v
_vid_default_mode_win	vid_win.c	/^cvar_t		_vid_default_mode_win = {"_vid_default_mode_win", "3", CVAR_ARCHIVE};$/;"	v
_windowed_mouse	in_linux.c	/^cvar_t	_windowed_mouse = {"_windowed_mouse", win_mouse, CVAR_ARCHIVE | CVAR_SILENT};$/;"	v
_windowed_mouse	tr_init.c	/^cvar_t	_windowed_mouse		= { "_windowed_mouse",		"1",	CVAR_ARCHIVE | CVAR_SILENT }; \/\/ actually that more like input, but input registered after video in windows$/;"	v
_windowed_mouse	vid_mac.c	/^cvar_t	_windowed_mouse = {"_windowed_mouse","1", CVAR_ARCHIVE};$/;"	v
_windowed_mouse	vid_wgl.c	/^cvar_t		_windowed_mouse		 = {"_windowed_mouse", "1", CVAR_ARCHIVE};$/;"	v
_windowed_mouse	vid_win.c	/^cvar_t		_windowed_mouse = {"_windowed_mouse", "1", CVAR_ARCHIVE};$/;"	v
a	cam_new.c	/^	float	r,g,b,a;$/;"	m	struct:CamSys_Spline	file:
a	cam_new.h	/^	float	r,g,b,a;$/;"	m	struct:CamSys_Spline
a	mgraph.h	/^	attributes_t a;			\/* Active device attributes					*\/$/;"	m	struct:__anon218
a	pr_comp.h	/^	short	a,b,c;$/;"	m	struct:statement_s
aPage	vid_win.c	/^int		aPage;					\/\/ Current active display page$/;"	v
a_skinwidth	r_alias.c	/^int				a_skinwidth;$/;"	v
a_spans	d_polyse.c	/^spanpackage_t			*a_spans;$/;"	v
a_sstepxfrac	d_polyse.c	/^int				a_sstepxfrac, a_tstepxfrac, r_lstepx, a_ststepxwhole;$/;"	v
a_ststepxwhole	d_polyse.c	/^int				a_sstepxfrac, a_tstepxfrac, r_lstepx, a_ststepxwhole;$/;"	v
a_tstepxfrac	d_polyse.c	/^int				a_sstepxfrac, a_tstepxfrac, r_lstepx, a_ststepxwhole;$/;"	v
ab	hud.h	/^    int al, ar, at, ab;					\/\/ Last frame params.$/;"	m	struct:hud_s
abort_ping	EX_browser.c	/^int abort_ping;$/;"	v
absmax	progdefs.h	/^	vec3_t	absmax;$/;"	m	struct:__anon253
absmin	progdefs.h	/^	vec3_t	absmin;$/;"	m	struct:__anon253
absolute_virtual_x	ez_controls.h	/^	int						absolute_virtual_x;		\/\/ The absolute position of the virtual window on the screen.$/;"	m	struct:ez_control_s
absolute_virtual_y	ez_controls.h	/^	int						absolute_virtual_y;$/;"	m	struct:ez_control_s
absolute_x	ez_controls.h	/^	int						absolute_x;				\/\/ The absolute screen coordinates for the control.$/;"	m	struct:ez_control_s
absolute_y	ez_controls.h	/^	int						absolute_y;	$/;"	m	struct:ez_control_s
accel	console.c	/^	float		accel, grav;$/;"	m	struct:conpart_s	file:
accel	gl_rpart.c	/^	float		accel;$/;"	m	struct:particle_tree_s	file:
accelerate	pmove.h	/^	float	accelerate;$/;"	m	struct:__anon246
acmDriverEnumCallback	movie_avi.c	/^BOOL CALLBACK acmDriverEnumCallback (HACMDRIVERID hadid, DWORD_PTR dwInstance, DWORD fdwSupport)$/;"	f
acolormap	r_alias.c	/^void			*acolormap;	\/\/ FIXME: should go away$/;"	v
action	sys_mac.c	/^static enum { QUIT, START, FAILED } action = START;$/;"	v	typeref:enum:__anon67	file:
action_fnc	settings.h	/^typedef void (*action_fnc) (void);$/;"	t
actionfnc	settings.h	/^	action_fnc actionfnc;		\/\/ action function pointer; required for stt_action$/;"	m	struct:__anon272
active	cl_ents.c	/^	qbool active;$/;"	m	struct:predicted_player	file:
active	fragstats.c	/^	qbool	active;$/;"	m	struct:fragdef_s	file:
active	hud_common.c	/^	qbool active;$/;"	m	struct:__anon31	file:
active	mosdm.c	/^int active = 0 ;$/;"	v
active	mvd_cam.h	/^	int						active;$/;"	m	struct:mvd_menu_s
active	server.h	/^	double	active;$/;"	m	struct:__anon267
activePage	Ctrl_Tab.h	/^    int         activePage;$/;"	m	struct:CTab_s
active_cam_spline	cam_new.c	/^struct CamSys_Spline *active_cam_spline;$/;"	v	typeref:struct:CamSys_Spline
active_particles	r_part.c	/^static particle_t	*particles, *active_particles, *free_particles;$/;"	v	file:
active_point	cam_new.c	/^	int		active_point;$/;"	m	struct:CamSys_Spline	file:
active_point	cam_new.h	/^	int		active_point;$/;"	m	struct:CamSys_Spline
active_track	vx_tracker.c	/^static int active_track = 0;$/;"	v	file:
active_view_spline	cam_new.c	/^struct CamSys_Spline *active_view_spline;$/;"	v	typeref:struct:CamSys_Spline
activemenu	mosdm.c	/^mvd_menu_t	*activemenu;$/;"	v
activeweapon	teamplay.h	/^	int		activeweapon;$/;"	m	struct:tvars_s
adding_server	EX_browser.c	/^int adding_server = 0;$/;"	v
adding_source	EX_browser.c	/^int adding_source = 0;$/;"	v
address	EX_browser.h	/^        netadr_t    address;            \/\/ IP for master type$/;"	m	union:source_data_s::__anon149
address	EX_browser.h	/^    netadr_t    address;$/;"	m	struct:server_data_s
address	EX_browser.h	/^    } address;$/;"	m	struct:source_data_s	typeref:union:source_data_s::__anon149
adivtab	d_polyse.c	/^static adivtab_t	adivtab[32*32] = {$/;"	v	file:
adivtab_t	d_polyse.c	/^} adivtab_t;$/;"	t	typeref:struct:__anon12	file:
adr	server.h	/^	netadr_t	adr;$/;"	m	struct:__anon268
advanced	settings.h	/^	qbool advanced;		\/\/ is this settings advanced?$/;"	m	struct:__anon272
aedge_t	r_alias.c	/^} aedge_t;$/;"	t	typeref:struct:__anon56	file:
aedges	r_alias.c	/^static aedge_t	aedges[12] = {$/;"	v	file:
affinetridesc_t	d_iface.h	/^} affinetridesc_t;$/;"	t	typeref:struct:__anon140
aiment	progdefs.h	/^	int	aiment;$/;"	m	struct:__anon253
airaccelerate	pmove.h	/^	float	airaccelerate;$/;"	m	struct:__anon246
airstep	pmove.h	/^	qbool	airstep;$/;"	m	struct:__anon246
al	block8.h	/^	movb	%al,(%edi)$/;"	v
al	hud.h	/^    int al, ar, at, ab;					\/\/ Last frame params.$/;"	m	struct:hud_s
alias_forward	r_alias.c	/^static vec3_t		alias_forward, alias_right, alias_up;$/;"	v	file:
alias_right	r_alias.c	/^static vec3_t		alias_forward, alias_right, alias_up;$/;"	v	file:
alias_up	r_alias.c	/^static vec3_t		alias_forward, alias_right, alias_up;$/;"	v	file:
aliasframetype_t	modelgen.h	/^typedef enum { ALIAS_SINGLE=0, ALIAS_GROUP } aliasframetype_t;$/;"	t	typeref:enum:__anon222
aliashdr_s	gl_model.h	/^typedef struct aliashdr_s {$/;"	s
aliashdr_s	r_model.h	/^typedef struct aliashdr_s {$/;"	s
aliashdr_t	gl_model.h	/^} aliashdr_t;$/;"	t	typeref:struct:aliashdr_s
aliashdr_t	r_model.h	/^} aliashdr_t;$/;"	t	typeref:struct:aliashdr_s
aliasmodel	gl_mesh.c	/^model_t		*aliasmodel;$/;"	v
aliasskintype_t	modelgen.h	/^typedef enum { ALIAS_SKIN_SINGLE=0, ALIAS_SKIN_GROUP } aliasskintype_t;$/;"	t	typeref:enum:__anon223
aliastransform	r_alias.c	/^float	aliastransform[3][4];$/;"	v
aliasvrect	render.h	/^	vrect_t		aliasvrect;			\/\/ scaled Alias version$/;"	m	struct:__anon256
aliasvrectbottom	render.h	/^	int			aliasvrectright, aliasvrectbottom;	\/\/ scaled Alias versions$/;"	m	struct:__anon256
aliasvrectright	render.h	/^	int			aliasvrectright, aliasvrectbottom;	\/\/ scaled Alias versions$/;"	m	struct:__anon256
aliasxcenter	r_main.c	/^float		aliasxscale, aliasyscale, aliasxcenter, aliasycenter;$/;"	v
aliasxscale	r_main.c	/^float		aliasxscale, aliasyscale, aliasxcenter, aliasycenter;$/;"	v
aliasycenter	r_main.c	/^float		aliasxscale, aliasyscale, aliasxcenter, aliasycenter;$/;"	v
aliasyscale	r_main.c	/^float		aliasxscale, aliasyscale, aliasxcenter, aliasycenter;$/;"	v
align	document_rendering.c	/^    document_align_t align;$/;"	m	struct:document_rendering_context_s	file:
align	new_menu.c	/^	int		align;$/;"	m	struct:menu_ct	file:
align	xsd_document.h	/^    document_align_t align;$/;"	m	struct:document_tag_h_s
align	xsd_document.h	/^    document_align_t align;$/;"	m	struct:document_tag_p_s
align_center	xsd_document.h	/^    align_center,$/;"	e	enum:__anon304
align_left	xsd_document.h	/^    align_left,$/;"	e	enum:__anon304
align_right	xsd_document.h	/^    align_right$/;"	e	enum:__anon304
align_strings_x	hud.c	/^char *align_strings_x[] = {$/;"	v
align_strings_y	hud.c	/^char *align_strings_y[] = {$/;"	v
align_x	hud.h	/^    cvar_t *align_x;					\/\/ Alignment cvars (left, right, ...)$/;"	m	struct:hud_s
align_x_num	hud.h	/^    int    align_x_num;					\/\/ Parsed alignment.$/;"	m	struct:hud_s
align_y	hud.h	/^    cvar_t *align_y;$/;"	m	struct:hud_s
align_y_num	hud.h	/^    int    align_y_num;$/;"	m	struct:hud_s
alivetime	mvd_utils_common.h	/^	double alivetime;$/;"	m	struct:mvd_ds_s
alivetimestart	mvd_utils_common.h	/^	double alivetimestart;$/;"	m	struct:mvd_ds_s
all	mvd_utils_common.h	/^	mvd_avgruns_t all;$/;"	m	struct:mvd_avgruns_all_s
all_players	EX_browser.c	/^player_host ** all_players = NULL;$/;"	v
all_players_n	EX_browser.c	/^int all_players_n = 0;$/;"	v
allocated	gl_rsurf.c	/^static int allocated[MAX_LIGHTMAPS][BLOCK_WIDTH];$/;"	v	file:
allocflags	zone2.h	/^	unsigned char *allocflags;$/;"	m	struct:memexpandablearray_array_s
allow_cheats	render.h	/^	qbool			allow_cheats;$/;"	m	struct:__anon257
allow_download	sv_main.c	/^cvar_t	allow_download = {"allow_download", "1"};$/;"	v
allow_download_gfx	sv_main.c	/^cvar_t	allow_download_gfx = {"allow_download_gfx", "1"};$/;"	v
allow_download_maps	sv_main.c	/^cvar_t	allow_download_maps = {"allow_download_maps", "1"};$/;"	v
allow_download_models	sv_main.c	/^cvar_t	allow_download_models = {"allow_download_models", "1"};$/;"	v
allow_download_other	sv_main.c	/^cvar_t	allow_download_other = {"allow_download_other", "1"};$/;"	v
allow_download_pakmaps	sv_main.c	/^cvar_t	allow_download_pakmaps = {"allow_download_pakmaps", "0"};$/;"	v
allow_download_skins	sv_main.c	/^cvar_t	allow_download_skins = {"allow_download_skins", "1"};$/;"	v
allow_download_sounds	sv_main.c	/^cvar_t	allow_download_sounds = {"allow_download_sounds", "1"};$/;"	v
allow_f_cmdline	fchecks.c	/^cvar_t allow_f_cmdline = {"allow_f_cmdline", "1"};$/;"	v
allow_f_system	fchecks.c	/^cvar_t allow_f_system  = {"allow_f_system",  "1"};$/;"	v
allow_flash	vid_wgl.c	/^qbool allow_flash = false;$/;"	v
allow_flash	vid_win.c	/^qbool allow_flash = false; $/;"	v
allow_lumas	render.h	/^	qbool			allow_lumas;$/;"	m	struct:__anon257
allow_re_triggers	tp_triggers.c	/^qbool allow_re_triggers;$/;"	v
allow_scripts	cl_main.c	/^cvar_t	allow_scripts = {"allow_scripts", "2", 0, Rulesets_OnChange_allow_scripts};$/;"	v
allowdisplaydepthchange	tr_types.h	/^	qbool allowdisplaydepthchange;$/;"	m	struct:__anon287
allowoverflow	q_shared.h	/^	qbool	allowoverflow;	\/\/ if false, do a Sys_Error$/;"	m	struct:sizebuf_s
allowremotecmd	cl_main.c	/^static qbool allowremotecmd = true;$/;"	v	file:
allowscripts_enum	menu_options.c	/^const char* allowscripts_enum[] = { "off", "simple", "all" };$/;"	v
allskins	skin.c	/^char	allskins[MAX_OSPATH];$/;"	v
allsolid	cmodel.h	/^	qbool	allsolid;			\/\/ if true, plane is not valid$/;"	m	struct:__anon133
alltris	gl_mesh.c	/^int		allverts, alltris;$/;"	v
allverts	gl_mesh.c	/^int		allverts, alltris;$/;"	v
alpha	cl_screen.c	/^	float					alpha;$/;"	m	struct:hud_element_s	file:
alpha	client.h	/^	int			alpha;$/;"	m	struct:visentlist_s
alpha	draw.h	/^	byte		alpha;$/;"	m	struct:__anon146
alpha	mgraph.h	/^	uchar	alpha;				\/* Alpha or alignment byte				*\/$/;"	m	struct:__anon207
alpha	render.h	/^	float alpha;$/;"	m	struct:entity_s
alpha	vx_coronas.c	/^	float alpha;$/;"	m	struct:__anon89	file:
alpha	vx_motiontrail.c	/^	float alpha;$/;"	m	struct:__anon90	file:
alphachain	gl_rsurf.c	/^msurface_t	*alphachain = NULL;$/;"	v
alphachain_tail	gl_rsurf.c	/^msurface_t	**alphachain_tail = &alphachain;$/;"	v
alphaskytexture	gl_warp.c	/^int solidskytexture, alphaskytexture;$/;"	v
alphatrail_l	gl_rpart.c	/^static float alphatrail_l;$/;"	v	file:
alphatrail_s	gl_rpart.c	/^static float alphatrail_s;$/;"	v	file:
alt	xsd_document.h	/^    char *alt;$/;"	m	struct:document_tag_pre_s
altDown	in_linux.c	/^int altDown = 0;$/;"	v
altDown	vid_mac.c	/^int altDown = 0;$/;"	v
alternate_anims	gl_model.h	/^	struct texture_s	*alternate_anims;			\/\/bmodels in frame 1 use these$/;"	m	struct:texture_s	typeref:struct:texture_s::texture_s
alternate_anims	r_model.h	/^	struct texture_s	*alternate_anims;			\/\/ bmodels in frmae 1 use these$/;"	m	struct:texture_s	typeref:struct:texture_s::texture_s
always_h_scrollbar	ez_scrollpane.h	/^	always_h_scrollbar	= (1 << 1)$/;"	e	enum:ez_scrollpane_flags_e
always_v_scrollbar	ez_scrollpane.h	/^	always_v_scrollbar	= (1 << 0),$/;"	e	enum:ez_scrollpane_flags_e
ambient_level	bspfile.h	/^	byte		ambient_level[NUM_AMBIENTS];$/;"	m	struct:__anon108
ambient_sfx	snd_dma.c	/^static sfx_t	*ambient_sfx[NUM_AMBIENTS];$/;"	v	file:
ambient_sound_level	cmodel.c	/^	byte			ambient_sound_level[NUM_AMBIENTS];$/;"	m	struct:cleaf_s	file:
ambientlight	gl_rmain.c	/^float		shadelight, ambientlight;$/;"	v
ambientlight	render.h	/^	int			ambientlight;$/;"	m	struct:__anon256
amf_buildingsparks	vx_stuff.c	/^cvar_t		amf_buildingsparks = {"gl_buildingsparks", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_camera_chase	vx_stuff.c	/^cvar_t		amf_camera_chase = {"cl_camera_tpp", "0", CVAR_ARCHIVE};$/;"	v
amf_camera_chase_dist	vx_stuff.c	/^cvar_t		amf_camera_chase_dist = {"cl_camera_tpp_distance", "-56", CVAR_ARCHIVE};$/;"	v
amf_camera_chase_height	vx_stuff.c	/^cvar_t		amf_camera_chase_height = {"cl_camera_tpp_height", "24", CVAR_ARCHIVE};$/;"	v
amf_camera_death	vx_stuff.c	/^cvar_t		amf_camera_death = {"cl_camera_death", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_coronas	vx_stuff.c	/^cvar_t		amf_coronas = {"gl_coronas", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_coronas_tele	vx_stuff.c	/^cvar_t		amf_coronas_tele = {"gl_coronas_tele", "0", CVAR_ARCHIVE};$/;"	v
amf_cutf_tesla_effect	vx_stuff.c	/^cvar_t		amf_cutf_tesla_effect = {"gl_cutf_tesla_effect", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_detpacklights	vx_stuff.c	/^cvar_t		amf_detpacklights = {"gl_detpacklights", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_extratrails	vx_stuff.c	/^cvar_t		amf_extratrails = {"gl_extratrails", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_hidenails	vx_stuff.c	/^cvar_t		amf_hidenails = {"cl_hidenails", "0", CVAR_ARCHIVE};$/;"	v
amf_hiderockets	vx_stuff.c	/^cvar_t		amf_hiderockets = {"cl_hiderockets", "0", CVAR_ARCHIVE};$/;"	v
amf_inferno_speed	vx_stuff.c	/^cvar_t		amf_inferno_speed = {"gl_inferno_speed", "1000", CVAR_ARCHIVE};$/;"	v
amf_inferno_trail	vx_stuff.c	/^cvar_t		amf_inferno_trail = {"gl_inferno_trail", "2", CVAR_ARCHIVE};$/;"	v
amf_lighting_colour	vx_stuff.c	/^cvar_t		amf_lighting_colour = {"gl_lighting_colour", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_lighting_vertex	vx_stuff.c	/^cvar_t		amf_lighting_vertex = {"gl_lighting_vertex", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_lightning	vx_stuff.c	/^cvar_t		amf_lightning = {"gl_lightning", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_lightning_size	vx_stuff.c	/^cvar_t		amf_lightning_size = {"gl_lightning_size", "3", CVAR_ARCHIVE};$/;"	v
amf_lightning_sparks	vx_stuff.c	/^cvar_t		amf_lightning_sparks = {"gl_lightning_sparks", "0", CVAR_ARCHIVE}; \/\/ 0.4$/;"	v
amf_motiontrails	vx_stuff.c	/^cvar_t		amf_motiontrails = {"gl_motiontrails", "0", CVAR_ARCHIVE};$/;"	v
amf_motiontrails_wtf	vx_stuff.c	/^cvar_t		amf_motiontrails_wtf = {"gl_motiontrails_wtf", "0", CVAR_ARCHIVE};$/;"	v
amf_nailtrail	vx_stuff.c	/^cvar_t		amf_nailtrail = {"gl_nailtrail", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_nailtrail_plasma	vx_stuff.c	/^cvar_t		amf_nailtrail_plasma = {"gl_nailtrail_plasma", "0", CVAR_ARCHIVE};$/;"	v
amf_nailtrail_water	vx_stuff.c	/^cvar_t		amf_nailtrail_water = {"gl_nailtrail_turb", "0", CVAR_ARCHIVE};$/;"	v
amf_part_2dshockwaves	vx_stuff.c	/^cvar_t		amf_part_2dshockwaves = {"gl_particle_shockwaves_flat", "0", CVAR_ARCHIVE};$/;"	v
amf_part_blobexplosion	vx_stuff.c	/^cvar_t		amf_part_blobexplosion = {"gl_particle_blobs", "0", CVAR_ARCHIVE}; \/\/ 0.1$/;"	v
amf_part_blood	vx_stuff.c	/^cvar_t		amf_part_blood = {"gl_particle_blood", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_part_blood_color	vx_stuff.c	/^cvar_t		amf_part_blood_color = {"gl_particle_blood_color", "1", CVAR_ARCHIVE};$/;"	v
amf_part_blood_type	vx_stuff.c	/^cvar_t		amf_part_blood_type = {"gl_particle_blood_type", "1", CVAR_ARCHIVE};$/;"	v
amf_part_deatheffect	vx_stuff.c	/^cvar_t		amf_part_deatheffect = {"gl_particle_deatheffect", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_part_explosion	vx_stuff.c	/^cvar_t		amf_part_explosion = {"gl_particle_explosions", "0", CVAR_ARCHIVE};$/;"	v
amf_part_fasttrails	vx_stuff.c	/^cvar_t		amf_part_fasttrails = {"gl_particle_fasttrails", "0", CVAR_ARCHIVE};$/;"	v
amf_part_fire	vx_stuff.c	/^cvar_t		amf_part_fire = {"gl_particle_fire", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_part_firecolor	vx_stuff.c	/^cvar_t		amf_part_firecolor = {"gl_particle_firecolor", "", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_part_fulldetail	gl_rpart.c	/^cvar_t amf_part_fulldetail = {"gl_particle_fulldetail", "0", CVAR_LATCH};$/;"	v
amf_part_gibtrails	vx_stuff.c	/^cvar_t		amf_part_gibtrails = {"gl_particle_gibtrails", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_part_gunshot	vx_stuff.c	/^cvar_t		amf_part_gunshot = {"gl_particle_gunshots", "0", CVAR_ARCHIVE};$/;"	v
amf_part_gunshot_type	vx_stuff.c	/^cvar_t		amf_part_gunshot_type = {"gl_particle_gunshots_type", "1", CVAR_ARCHIVE};$/;"	v
amf_part_muzzleflash	vx_stuff.c	/^cvar_t		amf_part_muzzleflash = {"gl_particle_muzzleflash", "0", CVAR_ARCHIVE};$/;"	v
amf_part_shockwaves	vx_stuff.c	/^cvar_t		amf_part_shockwaves = {"gl_particle_shockwaves", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_part_sparks	vx_stuff.c	/^cvar_t		amf_part_sparks = {"gl_particle_sparks", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_part_spikes	vx_stuff.c	/^cvar_t		amf_part_spikes = {"gl_particle_spikes", "0", CVAR_ARCHIVE}; \/\/ 0.1$/;"	v
amf_part_spikes_type	vx_stuff.c	/^cvar_t		amf_part_spikes_type = {"gl_particle_spikes_type", "1", CVAR_ARCHIVE};$/;"	v
amf_part_teleport	vx_stuff.c	/^cvar_t		amf_part_teleport = {"gl_particle_telesplash", "0", CVAR_ARCHIVE};$/;"	v
amf_part_traildetail	vx_stuff.c	/^cvar_t		amf_part_traildetail = {"gl_particle_trail_detail", "1", CVAR_ARCHIVE};$/;"	v
amf_part_traillen	vx_stuff.c	/^cvar_t		amf_part_traillen    = {"gl_particle_trail_lenght", "1", CVAR_ARCHIVE};$/;"	v
amf_part_trailtime	vx_stuff.c	/^cvar_t		amf_part_trailtime   = {"gl_particle_trail_time",   "1", CVAR_ARCHIVE};$/;"	v
amf_part_trailtype	vx_stuff.c	/^cvar_t		amf_part_trailtype   = {"gl_particle_trail_type",   "1", CVAR_ARCHIVE};$/;"	v
amf_part_trailwidth	vx_stuff.c	/^cvar_t		amf_part_trailwidth  = {"gl_particle_trail_width",  "3", CVAR_ARCHIVE};$/;"	v
amf_showstats	vx_stuff.c	/^cvar_t		amf_showstats = {"r_glstats", "0", CVAR_ARCHIVE};$/;"	v
amf_stat_loss	vx_stuff.c	/^cvar_t		amf_stat_loss = {"r_damagestats", "0", CVAR_ARCHIVE};$/;"	v
amf_tracker_align_right	vx_tracker.c	/^cvar_t		amf_tracker_align_right		= {"r_tracker_align_right", "1", CVAR_ARCHIVE};$/;"	v
amf_tracker_color_bad	vx_tracker.c	/^cvar_t		amf_tracker_color_bad       = {"r_tracker_color_bad",      "900", CVAR_ARCHIVE}; \/\/ bad news$/;"	v
amf_tracker_color_fragonme	vx_tracker.c	/^cvar_t		amf_tracker_color_fragonme  = {"r_tracker_color_fragonme", "900", CVAR_ARCHIVE}; \/\/ use this color when u frag someone$/;"	v
amf_tracker_color_good	vx_tracker.c	/^cvar_t		amf_tracker_color_good      = {"r_tracker_color_good",     "090", CVAR_ARCHIVE}; \/\/ good news$/;"	v
amf_tracker_color_myfrag	vx_tracker.c	/^cvar_t		amf_tracker_color_myfrag    = {"r_tracker_color_myfrag",   "090", CVAR_ARCHIVE}; \/\/ use this color for frag which u done$/;"	v
amf_tracker_color_suicide	vx_tracker.c	/^cvar_t		amf_tracker_color_suicide   = {"r_tracker_color_suicide",  "900", CVAR_ARCHIVE}; \/\/ use this color when u suicides$/;"	v
amf_tracker_color_tkbad	vx_tracker.c	/^cvar_t		amf_tracker_color_tkbad     = {"r_tracker_color_tkbad",    "009", CVAR_ARCHIVE}; \/\/ team kill, on ur team$/;"	v
amf_tracker_color_tkgood	vx_tracker.c	/^cvar_t		amf_tracker_color_tkgood    = {"r_tracker_color_tkgood",   "990", CVAR_ARCHIVE}; \/\/ team kill, not on ur team$/;"	v
amf_tracker_flags	vx_tracker.c	/^cvar_t		amf_tracker_flags			= {"r_tracker_flags", "0", CVAR_ARCHIVE};$/;"	v
amf_tracker_frags	vx_tracker.c	/^cvar_t		amf_tracker_frags			= {"r_tracker_frags", "1", CVAR_ARCHIVE};$/;"	v
amf_tracker_frame_color	vx_tracker.c	/^cvar_t		amf_tracker_frame_color		= {"r_tracker_frame_color", "0 0 0 0", CVAR_ARCHIVE | CVAR_COLOR};$/;"	v
amf_tracker_images_scale	vx_tracker.c	/^cvar_t		amf_tracker_images_scale	= {"r_tracker_images_scale", "1", CVAR_ARCHIVE};$/;"	v
amf_tracker_messages	vx_tracker.c	/^cvar_t		amf_tracker_messages		= {"r_tracker_messages", "10", CVAR_ARCHIVE};$/;"	v
amf_tracker_scale	vx_tracker.c	/^cvar_t		amf_tracker_scale			= {"r_tracker_scale", "1", CVAR_ARCHIVE};$/;"	v
amf_tracker_streaks	vx_tracker.c	/^cvar_t		amf_tracker_streaks			= {"r_tracker_streaks", "0", CVAR_ARCHIVE};$/;"	v
amf_tracker_string_died	vx_tracker.c	/^cvar_t		amf_tracker_string_died     = {"r_tracker_string_died",     " (died)",     CVAR_ARCHIVE};$/;"	v
amf_tracker_string_suicides	vx_tracker.c	/^cvar_t		amf_tracker_string_suicides = {"r_tracker_string_suicides", " (suicides)", CVAR_ARCHIVE};$/;"	v
amf_tracker_time	vx_tracker.c	/^cvar_t		amf_tracker_time			= {"r_tracker_time", "4", CVAR_ARCHIVE};$/;"	v
amf_tracker_x	vx_tracker.c	/^cvar_t		amf_tracker_x				= {"r_tracker_x", "0", CVAR_ARCHIVE};$/;"	v
amf_tracker_y	vx_tracker.c	/^cvar_t		amf_tracker_y				= {"r_tracker_y", "0", CVAR_ARCHIVE};$/;"	v
amf_underwater_trails	vx_stuff.c	/^cvar_t		amf_underwater_trails = {"gl_turb_trails", "0", CVAR_ARCHIVE}; \/\/ 1$/;"	v
amf_waterripple	vx_stuff.c	/^cvar_t		amf_waterripple = {"gl_turbripple", "0", CVAR_ARCHIVE};$/;"	v
amf_weather_rain	vx_stuff.c	/^cvar_t		amf_weather_rain = {"gl_weather_rain", "0", CVAR_ARCHIVE};$/;"	v
amf_weather_rain_fast	vx_stuff.c	/^cvar_t		amf_weather_rain_fast = {"gl_weather_rain_fast", "0", CVAR_ARCHIVE};$/;"	v
ammo_cells	progdefs.h	/^	float	ammo_cells;$/;"	m	struct:__anon253
ammo_nails	progdefs.h	/^	float	ammo_nails;$/;"	m	struct:__anon253
ammo_rockets	progdefs.h	/^	float	ammo_rockets;$/;"	m	struct:__anon253
ammo_shells	progdefs.h	/^	float	ammo_shells;$/;"	m	struct:__anon253
amx	linux_glimp.c	/^static int amx = 0, amy = 0; \/\/ Zzzz hard to explain why we have amx and mx, for us that almost the same$/;"	v	file:
amy	linux_glimp.c	/^static int amx = 0, amy = 0; \/\/ Zzzz hard to explain why we have amx and mx, for us that almost the same$/;"	v	file:
anchor_bottom	ez_controls.h	/^	anchor_bottom	= (1 << 4)$/;"	e	enum:ez_anchor_e
anchor_flags	ez_controls.h	/^	ez_anchor_t				anchor_flags;			\/\/ Which parts of it's parent the control is anchored to.$/;"	m	struct:ez_control_s
anchor_left	ez_controls.h	/^	anchor_left		= (1 << 1), $/;"	e	enum:ez_anchor_e
anchor_none	ez_controls.h	/^	anchor_none		= (1 << 0),$/;"	e	enum:ez_anchor_e
anchor_right	ez_controls.h	/^	anchor_right	= (1 << 2),$/;"	e	enum:ez_anchor_e
anchor_top	ez_controls.h	/^	anchor_top		= (1 << 3),$/;"	e	enum:ez_anchor_e
andMask	mgraph.h	/^	uchar		*andMask;			\/* Hold punch mask for icon			*\/$/;"	m	struct:__anon212
andMask	mgraph.h	/^	ulong		andMask[32];$/;"	m	struct:__anon210
ang	gl_md3.h	/^	float ang[3][3];$/;"	m	struct:__anon160
angledelta	cl_view.c	/^float angledelta (float a) {$/;"	f
anglemod	mathlib.h	95;"	d
angles	cl_ents.c	/^	vec3_t	angles;$/;"	m	struct:__anon3	file:
angles	client.h	/^	vec3_t		angles;$/;"	m	struct:__anon113
angles	mvd_utils.c	/^	vec3_t	angles;$/;"	m	struct:quad_cams_s	file:
angles	nmenu_demo.c	/^	vec3_t	origin, angles;$/;"	m	struct:demo_bookmark	file:
angles	pmove.h	/^	vec3_t		angles;$/;"	m	struct:__anon245
angles	progdefs.h	/^	vec3_t	angles;$/;"	m	struct:__anon253
angles	protocol.h	/^	vec3_t	angles;$/;"	m	struct:entity_state_s
angles	protocol.h	/^	vec3_t	angles;$/;"	m	struct:usercmd_s
angles	render.h	/^	vec3_t					angles;	$/;"	m	struct:entity_s
angles	vx_motiontrail.c	/^	vec3_t angles;$/;"	m	struct:__anon90	file:
anim_max	gl_model.h	/^	int					anim_min, anim_max;			\/\/time for this frame min <=time< max$/;"	m	struct:texture_s
anim_max	r_model.h	/^	int					anim_min, anim_max;			\/\/ time for this frame min <=time< max$/;"	m	struct:texture_s
anim_min	gl_model.h	/^	int					anim_min, anim_max;			\/\/time for this frame min <=time< max$/;"	m	struct:texture_s
anim_min	r_model.h	/^	int					anim_min, anim_max;			\/\/ time for this frame min <=time< max$/;"	m	struct:texture_s
anim_next	gl_model.h	/^	struct texture_s	*anim_next;					\/\/in the animation sequence$/;"	m	struct:texture_s	typeref:struct:texture_s::texture_s
anim_next	r_model.h	/^	struct texture_s	*anim_next;					\/\/ in the animation sequence$/;"	m	struct:texture_s	typeref:struct:texture_s::texture_s
anim_total	gl_model.h	/^	int					anim_total;					\/\/total tenths in sequence ( 0 = no)$/;"	m	struct:texture_s
anim_total	r_model.h	/^	int					anim_total;					\/\/ total tenths in sequence ( 0 = no)$/;"	m	struct:texture_s
anisotropy_ext	vid_common_gl.c	/^int anisotropy_ext = 0;$/;"	v
anisotropy_tap	gl_texture.c	/^int	anisotropy_tap = 1;$/;"	v
anorm_pitch	vx_vertexlights.c	/^byte anorm_pitch[162];$/;"	v
anorm_yaw	vx_vertexlights.c	/^byte anorm_yaw[162];$/;"	v
apitch	gl_rmain.c	/^float apitch, ayaw;$/;"	v
applyHWGamma	cl_screen.c	/^static void applyHWGamma(byte *buffer, int size) {$/;"	f	file:
applyHWGamma	ffmpeg.c	/^static void applyHWGamma(byte *buffer, int size) {$/;"	f	file:
ar	hud.h	/^    int al, ar, at, ab;					\/\/ Last frame params.$/;"	m	struct:hud_s
arc_coords_t	mgraph.h	/^	} arc_coords_t;$/;"	t	typeref:struct:__anon209
archive_color	EX_FileList.h	/^	cvar_t *		archive_color;$/;"	m	struct:filelist_s
area	progs.h	/^	link_t		area;				\/\/ linked to a division node or leaf$/;"	m	struct:edict_s
areanode_s	sv_world.h	/^typedef struct areanode_s$/;"	s
areanode_t	sv_world.h	/^} areanode_t;$/;"	t	typeref:struct:areanode_s
argc	sys_win.c	/^int		argc;$/;"	v
arguments	xsd_command.h	/^    command_argument_t *arguments;$/;"	m	struct:xml_command_s
argv	sys_win.c	/^char	*argv[MAX_NUM_ARGVS];$/;"	v
argv_buf	cmd.h	/^	char	argv_buf[\/*MAX_COM_TOKEN*\/ 1024]; \/\/ here we store data for *cmd_argv[]$/;"	m	struct:tokenizecontext_s
armor	cl_screen.c	/^	int			armor;$/;"	m	struct:ti_player_s	file:
armortype	progdefs.h	/^	float	armortype;$/;"	m	struct:__anon253
armorvalue	progdefs.h	/^	float	armorvalue;$/;"	m	struct:__anon253
arrays	zone2.h	/^	memexpandablearray_array_t *arrays;$/;"	m	struct:memexpandablearray_s
ascent	mgraph.h	/^	m_int			ascent;			\/* Ascent value						*\/$/;"	m	struct:__anon214
ascent	mgraph.h	/^	short			ascent;			\/* Font ascent value				*\/$/;"	m	struct:__anon213
aspect	vid.h	/^	float			aspect;			\/\/ width \/ height -- < 0 is taller than wide$/;"	m	struct:__anon294
aspectRatio	mgraph.h	/^	m_int	aspectRatio;	\/* Mode aspect ratio (horiz\/vert * 1000)	*\/$/;"	m	struct:__anon217
at	hud.h	/^    int al, ar, at, ab;					\/\/ Last frame params.$/;"	m	struct:hud_s
atd_drawtype	d_ifacea.h	95;"	d
atd_numtriangles	d_ifacea.h	94;"	d
atd_pfinalverts	d_ifacea.h	93;"	d
atd_pskin	d_ifacea.h	88;"	d
atd_pskindesc	d_ifacea.h	89;"	d
atd_ptriangles	d_ifacea.h	92;"	d
atd_seamfixupX16	d_ifacea.h	96;"	d
atd_size	d_ifacea.h	97;"	d
atd_skinheight	d_ifacea.h	91;"	d
atd_skinwidth	d_ifacea.h	90;"	d
attack	client.h	/^	qbool forward, back, left, right, jump, attack, up, down;$/;"	m	struct:__anon126
attacks	cl_screen.c	/^	int attacks;		\/\/ all attacks with this weapon, for SG and SSG this is count of bullets$/;"	m	struct:wpType_s	file:
atten	client.h	/^	int			atten;$/;"	m	struct:__anon110
attr_item	vfs_tar.h	/^struct attr_item$/;"	s
attributes	image.c	/^	byte			pixelSize, attributes;$/;"	m	struct:TGAHeader_s	file:
attributes_t	mgraph.h	/^	} attributes_t;$/;"	t	typeref:struct:__anon216
audacious_proxy	mp3_audacious.c	/^DBusGProxy *audacious_proxy;$/;"	v
audio_buffer	ffmpeg.c	/^	uint8_t	*audio_buffer;$/;"	m	struct:frames_list_s	file:
audio_codec	ffmpeg.c	/^	AVCodec		*audio_codec;$/;"	m	struct:ffm	file:
audio_codec_context	ffmpeg.c	/^	AVCodecContext	*audio_codec_context;$/;"	m	struct:ffm	file:
audio_fd	snd_oss.c	/^static int audio_fd;$/;"	v	file:
audio_output_buffer	ffmpeg.c	/^	uint8_t		audio_output_buffer[44100];$/;"	m	struct:ffm	file:
audio_packet	ffmpeg.c	/^	AVPacket	audio_packet;$/;"	m	struct:ffm	file:
audio_samples	ffmpeg.c	/^	short 		audio_samples[44100];$/;"	m	struct:ffm	file:
audio_stream	ffmpeg.c	/^	AVStream	*audio_stream;$/;"	m	struct:ffm	file:
auth_validateclients	auth.c	/^cvar_t auth_validateclients = {"auth_validate", "1"};		$/;"	v
auth_viewcrc	auth.c	/^cvar_t auth_viewcrc = {"auth_viewcrc", "0"};				$/;"	v
auth_warninvalid	auth.c	/^cvar_t auth_warninvalid = {"auth_warninvalid", "0"};$/;"	v
author	fragstats.c	/^	char		*author;$/;"	m	struct:fragdef_s	file:
authors	xsd_document.h	/^    xml_document_author_t *authors;$/;"	m	struct:xml_document_s
auto_grabmouse	vid_glx.c	/^cvar_t  auto_grabmouse = {"auto_grabmouse",$/;"	v
auto_matchname	cl_demo.c	/^static char	auto_matchname[MAX_PATH];	\/\/ Demoname when recording auto match demo.$/;"	v	file:
auto_matchname	cl_screen.c	/^char auto_matchname[2 * MAX_OSPATH];$/;"	v
auto_matchname	logging.c	/^static char	auto_matchname[2 * MAX_OSPATH];$/;"	v	file:
auto_save_menu	nmenu_autosave.c	/^struct menu_s *auto_save_menu;$/;"	v	typeref:struct:menu_s
auto_starttime	cl_demo.c	/^static float auto_starttime;$/;"	v	file:
auto_starttime	logging.c	/^static float auto_starttime;$/;"	v	file:
autocam	cl_cam.c	/^int autocam = CAM_NONE;$/;"	v
autohud	hud_common.c	/^} autohud;$/;"	v	typeref:struct:__anon31
autohud_loaded	hud_common.c	/^qbool autohud_loaded = false;$/;"	v
autoid_count	cl_screen.c	/^static int autoid_count;$/;"	v	file:
autoid_player_t	cl_screen.c	/^} autoid_player_t;$/;"	t	typeref:struct:player_autoid_s	file:
autoids	cl_screen.c	/^static autoid_player_t autoids[MAX_CLIENTS];$/;"	v	file:
autologging	logging.c	/^static qbool autologging = false;$/;"	v	file:
autorecord_enum	menu_options.c	/^const char* autorecord_enum[] = { "off", "don't save", "auto save" };$/;"	v
autorecording	cl_demo.c	/^static qbool autorecording = false;$/;"	v	file:
autosshot	match_tools.c	/^	qbool	autosshot;$/;"	m	struct:matchcvar_s	file:
autoupdate_server	EX_browser_net.c	/^server_data *autoupdate_server;$/;"	v
autoupdate_serverinfo	EX_browser_net.c	/^int autoupdate_serverinfo = 0;$/;"	v
auxedges	r_edge.c	/^edge_t	*auxedges;$/;"	v
auxvert_t	r_local.h	/^} auxvert_t;$/;"	t	typeref:struct:__anon258
av	r_aclip.c	/^static auxvert_t		av[8];$/;"	v	file:
avelocity	progdefs.h	/^	vec3_t	avelocity;$/;"	m	struct:__anon253
avformat_alloc_context	ffmpeg.c	27;"	d	file:
avformat_alloc_context	ffmpeg.c	31;"	d	file:
avg_frags	mvd_utils_common.h	/^	double avg_frags;$/;"	m	struct:mvd_avgruns_s
avg_ping	hud_common.c	/^    int  avg_ping;$/;"	m	struct:sort_teams_info_s	file:
avg_teamfrags	mvd_utils_common.h	/^	double avg_teamfrags;$/;"	m	struct:mvd_avgruns_s
avg_time	mvd_utils_common.h	/^	double avg_time;$/;"	m	struct:mvd_avgruns_s
avifile	movie.c	/^static FILE *avifile = NULL;$/;"	v	file:
avipath	movie.c	/^static char avipath[256];$/;"	v	file:
ax	block16.h	/^	movw	%ax,(%edi)$/;"	v
axe_val	mvd_autotrack.c	54;"	d	file:
axis	sv_world.h	/^	int					axis; \/\/ -1 = leaf node$/;"	m	struct:areanode_s
ayaw	gl_rmain.c	/^float apitch, ayaw;$/;"	v
b	cam_new.c	/^	float	r,g,b,a;$/;"	m	struct:CamSys_Spline	file:
b	cam_new.h	/^	float	r,g,b,a;$/;"	m	struct:CamSys_Spline
b	gl_local.h	/^	float	r, g, b;$/;"	m	struct:__anon153
b	mgraph.h	/^	fxcolor_t	r,g,b;$/;"	m	struct:__anon199
b	pr_comp.h	/^	short	a,b,c;$/;"	m	struct:statement_s
bButtonA	in_win.c	/^	BYTE  bButtonA;             \/\/ One button goes here$/;"	m	struct:MYDATA	file:
bButtonB	in_win.c	/^	BYTE  bButtonB;             \/\/ Another button goes here$/;"	m	struct:MYDATA	file:
bButtonC	in_win.c	/^	BYTE  bButtonC;             \/\/ Another button goes here$/;"	m	struct:MYDATA	file:
bButtonD	in_win.c	/^	BYTE  bButtonD;             \/\/ Another button goes here$/;"	m	struct:MYDATA	file:
bButtonE	in_win.c	/^	BYTE  bButtonE;             \/\/ Another button goes here$/;"	m	struct:MYDATA	file:
bButtonF	in_win.c	/^	BYTE  bButtonF;             \/\/ Another button goes here$/;"	m	struct:MYDATA	file:
bButtonG	in_win.c	/^	BYTE  bButtonG;             \/\/ Another button goes here$/;"	m	struct:MYDATA	file:
bButtonH	in_win.c	/^	BYTE  bButtonH;             \/\/ Another button goes here$/;"	m	struct:MYDATA	file:
bChosePixelFormat	vid_wgl.c	/^int bChosePixelFormat(HDC hDC, PIXELFORMATDESCRIPTOR *pfd, PIXELFORMATDESCRIPTOR *retpfd) {$/;"	f
bExitmultiview	cl_main.c	/^qbool	bExitmultiview;				\/\/ Used when saving effect values on each frame.$/;"	v
bRawData	in_raw.h	/^	BYTE bRawData;$/;"	m	struct:tagRAWHID
bSetupPixelFormat	vid_wgl.c	/^BOOL bSetupPixelFormat(HDC hDC) {$/;"	f
b_mask	vid_x11.c	/^static unsigned long r_mask,g_mask,b_mask;$/;"	v	file:
b_shift	vid_x11.c	/^static long r_shift,g_shift,b_shift;$/;"	v	file:
b_switch	cl_main.c	/^cvar_t	b_switch = {"b_switch", "", CVAR_ARCHIVE|CVAR_USERINFO};$/;"	v
b_val	parser.h	/^	int b_val;		\/\/\/< boolean value$/;"	m	struct:expr_val
back	client.h	/^	qbool forward, back, left, right, jump, attack, up, down;$/;"	m	struct:__anon126
back	ez_scrollbar.h	/^	ez_button_t					*back;				\/\/ Up \/ left button depending on the scrollbars orientation.$/;"	m	struct:ez_scrollbar_s
backColor	mgraph.h	/^	color_t			backColor;		\/* Background color					*\/$/;"	m	struct:__anon216
backbuf	server.h	/^	sizebuf_t	backbuf;$/;"	m	struct:client_s
backbuf_data	server.h	/^	byte		backbuf_data[MAX_BACK_BUFFERS][MAX_MSGLEN];$/;"	m	struct:client_s
backbuf_size	server.h	/^	int			backbuf_size[MAX_BACK_BUFFERS];$/;"	m	struct:client_s
background	ez_controls.h	/^	mpic_t					*background;			\/\/ The background picture.$/;"	m	struct:ez_control_s
background	sys_mac.c	/^qbool background = false;$/;"	v
background_color	ez_controls.h	/^	byte					background_color[4];	\/\/ The background color of the control RGBA.$/;"	m	struct:ez_control_s
backingbuf	vid_svgalib.c	/^static byte backingbuf[48*24];$/;"	v	file:
backingbuf	vid_win.c	/^static byte	backingbuf[48*24];$/;"	v	file:
badmode	vid_wgl.c	/^static vmode_t	badmode;$/;"	v	file:
badmode	vid_win.c	/^static vmode_t	badmode;$/;"	v	file:
bandwidth_enum	menu_options.c	/^const char* bandwidth_enum[] = { $/;"	v
bandwidth_in	client.h	/^    float bandwidth_in;$/;"	m	struct:net_stat_result_s
bandwidth_out	client.h	/^    float bandwidth_out;$/;"	m	struct:net_stat_result_s
bankOffset	mgraph.h	/^	m_int	bankOffset;		\/* Offset of starting bank number			*\/$/;"	m	struct:__anon218
baseRC	vid_wgl.c	/^HGLRC	baseRC = NULL;$/;"	v
base_modelorg	r_bsp.c	/^vec3_t			modelorg, base_modelorg;$/;"	v
base_vpn	r_main.c	/^vec3_t	vpn, base_vpn;$/;"	v
base_vright	r_main.c	/^vec3_t	vright, base_vright;$/;"	v
base_vup	r_main.c	/^vec3_t	vup, base_vup;$/;"	v
baseline	client.h	/^	entity_state_t	baseline;$/;"	m	struct:__anon115
baseline	progs.h	/^	entity_state_t	baseline;$/;"	m	struct:edict_s
basemip	d_init.c	/^static float	basemip[NUM_MIPS-1] = {1.0, 0.5*0.8, 0.25*0.8};$/;"	v	file:
baseskin	skin.c	/^cvar_t	baseskin = {"baseskin", "base"};$/;"	v
bbextents	d_vars.c	/^fixed16_t	sadjust, tadjust, bbextents, bbextentt;$/;"	v
bbextentt	d_vars.c	/^fixed16_t	sadjust, tadjust, bbextents, bbextentt;$/;"	v
bboxmax	gl_model.h	/^	trivertx_t			bboxmax;$/;"	m	struct:maliasgroupframedesc_s
bboxmax	gl_model.h	/^	vec3_t				bboxmax;$/;"	m	struct:maliasframedesc_s
bboxmax	modelgen.h	/^	trivertx_t	bboxmax;	\/\/ lightnormal isn't used$/;"	m	struct:__anon227
bboxmax	modelgen.h	/^	trivertx_t	bboxmax;	\/\/ lightnormal isn't used$/;"	m	struct:__anon228
bboxmax	r_model.h	/^	trivertx_t			bboxmax;$/;"	m	struct:maliasframedesc_s
bboxmax	r_model.h	/^	trivertx_t			bboxmax;$/;"	m	struct:maliasgroupframedesc_s
bboxmin	gl_model.h	/^	trivertx_t			bboxmin;$/;"	m	struct:maliasgroupframedesc_s
bboxmin	gl_model.h	/^	vec3_t				bboxmin;$/;"	m	struct:maliasframedesc_s
bboxmin	modelgen.h	/^	trivertx_t	bboxmin;	\/\/ lightnormal isn't used$/;"	m	struct:__anon227
bboxmin	modelgen.h	/^	trivertx_t	bboxmin;	\/\/ lightnormal isn't used$/;"	m	struct:__anon228
bboxmin	r_model.h	/^	trivertx_t			bboxmin;$/;"	m	struct:maliasframedesc_s
bboxmin	r_model.h	/^	trivertx_t			bboxmin;$/;"	m	struct:maliasgroupframedesc_s
bdrBright	mgraph.h	/^	color_t			bdrBright;		\/* Border bright color				*\/$/;"	m	struct:__anon216
bdrDark	mgraph.h	/^	color_t			bdrDark;		\/* Border dark color				*\/$/;"	m	struct:__anon216
beam_t	cl_tent.c	/^} beam_t;$/;"	t	typeref:struct:__anon6	file:
beamlength	gl_model.h	/^	float				beamlength; \/\/ remove?$/;"	m	struct:msprite_s
beamlength	r_model.h	/^	float				beamlength; \/\/ remove?$/;"	m	struct:msprite_s
beamlength	spritegn.h	/^	float		beamlength;$/;"	m	struct:__anon277
bedge_s	r_local.h	/^typedef struct bedge_s$/;"	s
bedge_t	r_local.h	/^} bedge_t;$/;"	t	typeref:struct:bedge_s
best_fit	vid_glx.c	/^static int best_fit = 0;$/;"	v	file:
bezier_cams_enable	mvd_cam.c	/^cvar_t	bezier_cams_enable = {"bezier_cams_enable", "0"};$/;"	v
bezier_cams_show_in_pip	mvd_cam.c	/^cvar_t	bezier_cams_show_in_pip = {"beziers_cams_show_in_pip","0"};$/;"	v
beziers_autodist	mvd_cam.c	/^cvar_t	beziers_autodist	=	{"beziers_autodist","0"};$/;"	v
beziers_color_ca	mvd_cam.c	/^cvar_t	beziers_color_ca	=	{"beziers_color_ca","255 0 255"};$/;"	v
beziers_color_cd	mvd_cam.c	/^cvar_t	beziers_color_cd	=	{"beziers_color_cd","0 255 0"};$/;"	v
beziers_color_ep	mvd_cam.c	/^cvar_t	beziers_color_ep	=	{"beziers_color_ep","255 0 0"};$/;"	v
beziers_color_va	mvd_cam.c	/^cvar_t	beziers_color_va	=	{"beziers_color_va","255 255 0"};$/;"	v
beziers_color_vd	mvd_cam.c	/^cvar_t	beziers_color_vd	=	{"beziers_color_vd","0 255 255"};$/;"	v
beziers_color_vl	mvd_cam.c	/^cvar_t	beziers_color_vl	=	{"beziers_color_vl","255 0 0"};$/;"	v
beziers_mouse_move	mvd_cam.c	/^cvar_t	beziers_mouse_move = {"beziers_mouse_move","0"};$/;"	v
beziers_mouse_move_modifier	mvd_cam.c	/^cvar_t	beziers_mouse_move_modifier = {"beziers_mouse_move_modifier","100"};$/;"	v
beziers_mouse_move_number	mvd_cam.c	/^cvar_t	beziers_mouse_move_number = {"beziers_mouse_move_number","0"};$/;"	v
beziers_mouse_move_plane	mvd_cam.c	/^cvar_t	beziers_mouse_move_plane = {"beziers_mouse_move_plane","xy"};$/;"	v
beziers_mouse_move_point	mvd_cam.c	/^cvar_t	beziers_mouse_move_point = {"beziers_mouse_move_point","1"};$/;"	v
beziers_mouse_move_type	mvd_cam.c	/^cvar_t	beziers_mouse_move_type = {"beziers_mouse_move_type","0"};$/;"	v
beziers_mouse_to_view_interval	mvd_cam.c	/^cvar_t	beziers_mouse_to_view_interval	=	{"beziers_mouse_to_view_interval","0.5"};$/;"	v
beziers_reverse	mvd_cam.c	/^cvar_t	beziers_reverse = {"beziers_reverse","0"};$/;"	v
beziers_svl	mvd_cam.c	/^cvar_t	beziers_svl	=	{"beziers_svl","0"};$/;"	v
beziers_testtime	mvd_cam.c	/^cvar_t	beziers_testtime = {"beziers_testtime","0",0,ON_Change_Test_Time};$/;"	v
beziers_testtime_modifier	mvd_cam.c	/^cvar_t	beziers_testtime_modifier = {"beziers_testtime_modifier","1000"};$/;"	v
bgmvolume	snd_dma.c	/^cvar_t bgmvolume = {"bgmvolume", "1", CVAR_ARCHIVE};$/;"	v
bigmenu_items_s	menu.c	/^typedef struct bigmenu_items_s {$/;"	s	file:
bigmenu_items_t	menu.c	/^} bigmenu_items_t;$/;"	t	typeref:struct:bigmenu_items_s	file:
bigyear	match_tools.c	/^	char bigyear[8];$/;"	m	struct:matchinfo_s	file:
bin2hex	sha1.c	/^char *bin2hex(unsigned char *d)$/;"	f
bit	cl_cmd.c	/^	int			bit;$/;"	m	struct:__anon1	file:
bitmap_t	mgraph.h	/^	} bitmap_t;$/;"	t	typeref:struct:__anon211
bits	zone2.h	/^	int bits[MEMBITINTS];$/;"	m	struct:memclump_s
bitsPerPixel	mgraph.h	/^	m_int		bitsPerPixel;		\/* Pixel width						*\/$/;"	m	struct:__anon211
bitsPerPixel	mgraph.h	/^	m_int	bitsPerPixel;	\/* Number of bits per pixel					*\/$/;"	m	struct:__anon217
bits_per_pixel	image.c	/^    char			bits_per_pixel;$/;"	m	struct:pcx_s	file:
blink	cl_screen.c	/^	float					blink;$/;"	m	struct:hud_element_s	file:
blk	sha1.h	47;"	d
blk0	sha1.h	45;"	d
block	zone2.h	/^	unsigned char block[MEMCLUMPSIZE];$/;"	m	struct:memclump_s
block_drawing	cl_screen.c	/^qbool	block_drawing;$/;"	v
block_switch	vid_win.c	/^cvar_t		block_switch = {"block_switch", "0", CVAR_ARCHIVE};$/;"	v
blockcycle	cl_parse.c	/^int blockcycle;$/;"	v
blockdivmask	r_surf.c	/^unsigned		blockdivmask;$/;"	v
blockdivshift	r_surf.c	/^int				lightright, lightleftstep, lightrightstep, blockdivshift;$/;"	v
blocked	progdefs.h	/^	func_t	blocked;$/;"	m	struct:__anon253
blocklights	gl_rsurf.c	/^static unsigned blocklights[MAX_LIGHTMAP_SIZE * 3];$/;"	v	file:
blocklights	r_surf.c	/^unsigned	blocklights[18 * 18];$/;"	v
blocksinuse	zone2.h	/^	size_t blocksinuse;$/;"	m	struct:memclump_s
blocksize	r_surf.c	/^int				lightleft, sourcesstep, blocksize, sourcetstep;$/;"	v
blue	mgraph.h	/^	uchar	blue;				\/* Blue component of color				*\/$/;"	m	struct:__anon207
blueAdjust	mgraph.h	/^	m_int	bluePos,blueAdjust;		\/* Blue position and adjustment		*\/$/;"	m	struct:__anon208
blueFieldPosition	mgraph.h	/^	char    blueFieldPosition;      \/* Bit posn of lsb of blue mask     *\/$/;"	m	struct:__anon217
blueMask	mgraph.h	/^	uchar	blueMask,rsvdMask;$/;"	m	struct:__anon208
blueMaskSize	mgraph.h	/^	char    blueMaskSize;           \/* Size of direct color blue mask   *\/$/;"	m	struct:__anon217
bluePos	mgraph.h	/^	m_int	bluePos,blueAdjust;		\/* Blue position and adjustment		*\/$/;"	m	struct:__anon208
bm_map	menu_multiplayer.c	/^	GENERATE_ENUM_MENU_FUNC(bm_map);$/;"	v
bm_map_desc	menu_multiplayer.c	/^	static const char *bm_map_desc[bm_map_max] = {$/;"	v	file:
bm_map_e	menu_multiplayer.c	/^	typedef enum bm_map_e {$/;"	g	file:
bm_map_max	menu_multiplayer.c	/^		bm_map_max$/;"	e	enum:bm_map_e	file:
bm_map_t	menu_multiplayer.c	/^	} bm_map_t;$/;"	t	typeref:enum:bm_map_e	file:
bm_type	menu_multiplayer.c	/^	GENERATE_ENUM_MENU_FUNC(bm_type);$/;"	v
bm_type_desc	menu_multiplayer.c	/^	static const char *bm_type_desc[bm_type_max] = {$/;"	v	file:
bm_type_e	menu_multiplayer.c	/^	typedef enum bm_type_e {$/;"	g	file:
bm_type_max	menu_multiplayer.c	/^		bmt_arena, bmt_clarena, bmt_duel, bmt_ffa, bmt_team, bm_type_max$/;"	e	enum:bm_type_e	file:
bm_type_t	menu_multiplayer.c	/^	} bm_type_t;$/;"	t	typeref:enum:bm_type_e	file:
bmm_aerowalk	menu_multiplayer.c	/^		bmm_dm3, bmm_dm4, bmm_dm6, bmm_ztndm3, bmm_e1m2, bmm_aerowalk, bmm_spinev2,$/;"	e	enum:bm_map_e	file:
bmm_amphi2	menu_multiplayer.c	/^		bmm_pkeg1, bmm_ultrav, bmm_frobodm2, bmm_amphi2, bmm_povdmm4, bmm_dranzdm8,$/;"	e	enum:bm_map_e	file:
bmm_dm3	menu_multiplayer.c	/^		bmm_dm3, bmm_dm4, bmm_dm6, bmm_ztndm3, bmm_e1m2, bmm_aerowalk, bmm_spinev2,$/;"	e	enum:bm_map_e	file:
bmm_dm4	menu_multiplayer.c	/^		bmm_dm3, bmm_dm4, bmm_dm6, bmm_ztndm3, bmm_e1m2, bmm_aerowalk, bmm_spinev2,$/;"	e	enum:bm_map_e	file:
bmm_dm6	menu_multiplayer.c	/^		bmm_dm3, bmm_dm4, bmm_dm6, bmm_ztndm3, bmm_e1m2, bmm_aerowalk, bmm_spinev2,$/;"	e	enum:bm_map_e	file:
bmm_dranzdm8	menu_multiplayer.c	/^		bmm_pkeg1, bmm_ultrav, bmm_frobodm2, bmm_amphi2, bmm_povdmm4, bmm_dranzdm8,$/;"	e	enum:bm_map_e	file:
bmm_e1m2	menu_multiplayer.c	/^		bmm_dm3, bmm_dm4, bmm_dm6, bmm_ztndm3, bmm_e1m2, bmm_aerowalk, bmm_spinev2,$/;"	e	enum:bm_map_e	file:
bmm_frobodm2	menu_multiplayer.c	/^		bmm_pkeg1, bmm_ultrav, bmm_frobodm2, bmm_amphi2, bmm_povdmm4, bmm_dranzdm8,$/;"	e	enum:bm_map_e	file:
bmm_pkeg1	menu_multiplayer.c	/^		bmm_pkeg1, bmm_ultrav, bmm_frobodm2, bmm_amphi2, bmm_povdmm4, bmm_dranzdm8,$/;"	e	enum:bm_map_e	file:
bmm_povdmm4	menu_multiplayer.c	/^		bmm_pkeg1, bmm_ultrav, bmm_frobodm2, bmm_amphi2, bmm_povdmm4, bmm_dranzdm8,$/;"	e	enum:bm_map_e	file:
bmm_spinev2	menu_multiplayer.c	/^		bmm_dm3, bmm_dm4, bmm_dm6, bmm_ztndm3, bmm_e1m2, bmm_aerowalk, bmm_spinev2,$/;"	e	enum:bm_map_e	file:
bmm_ultrav	menu_multiplayer.c	/^		bmm_pkeg1, bmm_ultrav, bmm_frobodm2, bmm_amphi2, bmm_povdmm4, bmm_dranzdm8,$/;"	e	enum:bm_map_e	file:
bmm_ztndm3	menu_multiplayer.c	/^		bmm_dm3, bmm_dm4, bmm_dm6, bmm_ztndm3, bmm_e1m2, bmm_aerowalk, bmm_spinev2,$/;"	e	enum:bm_map_e	file:
bmt_arena	menu_multiplayer.c	/^		bmt_arena, bmt_clarena, bmt_duel, bmt_ffa, bmt_team, bm_type_max$/;"	e	enum:bm_type_e	file:
bmt_clarena	menu_multiplayer.c	/^		bmt_arena, bmt_clarena, bmt_duel, bmt_ffa, bmt_team, bm_type_max$/;"	e	enum:bm_type_e	file:
bmt_duel	menu_multiplayer.c	/^		bmt_arena, bmt_clarena, bmt_duel, bmt_ffa, bmt_team, bm_type_max$/;"	e	enum:bm_type_e	file:
bmt_ffa	menu_multiplayer.c	/^		bmt_arena, bmt_clarena, bmt_duel, bmt_ffa, bmt_team, bm_type_max$/;"	e	enum:bm_type_e	file:
bmt_team	menu_multiplayer.c	/^		bmt_arena, bmt_clarena, bmt_duel, bmt_ffa, bmt_team, bm_type_max$/;"	e	enum:bm_type_e	file:
bookmark_angles	nmenu_demo.c	/^vec3_t	bookmark_origin, bookmark_angles;$/;"	v
bookmark_changed	nmenu_demo.c	/^int bookmark_changed;$/;"	v
bookmark_compare	nmenu_demo.c	/^int bookmark_compare(void *data1, void *data2)$/;"	f
bookmark_count	nmenu_demo.c	/^int bookmark_count;$/;"	v
bookmark_list	nmenu_demo.c	/^struct linked_list *bookmark_list;$/;"	v	typeref:struct:linked_list
bookmark_origin	nmenu_demo.c	/^vec3_t	bookmark_origin, bookmark_angles;$/;"	v
bookmark_time	nmenu_demo.c	/^double bookmark_time;$/;"	v
bool	debug.h	245;"	d
bool	debug.h	248;"	d
boolean_value	xsd_variable.h	/^        } boolean_value;$/;"	m	union:xml_variable_s::__anon308	typeref:struct:xml_variable_s::__anon308::__anon309
botmatch_menu	menu_ingame.c	/^settings_page botmatch_menu;$/;"	v
botmatch_menu_entries	menu_ingame.c	/^setting botmatch_menu_entries[] = {$/;"	v
bottom	EX_browser.h	/^    int bottom;$/;"	m	struct:playerinfo_s
bottom	hud_common.c	/^    int  top, bottom;   \/\/ leader colours$/;"	m	struct:sort_teams_info_s	file:
bottom	mgraph.h	/^	m_int	bottom;$/;"	m	struct:__anon197
bottom_center	ez_button.h	/^	bottom_center,$/;"	e	enum:ez_textalign_e
bottom_edge_gap	ez_controls.h	/^	int						bottom_edge_gap;		\/\/ from the edge we were.$/;"	m	struct:ez_control_s
bottom_left	ez_button.h	/^	bottom_left,$/;"	e	enum:ez_textalign_e
bottom_right	ez_button.h	/^	bottom_right$/;"	e	enum:ez_textalign_e
bottomcolor	cl_main.c	/^cvar_t	bottomcolor = {"bottomcolor","", CVAR_ARCHIVE|CVAR_USERINFO};$/;"	v
bottomcolor	client.h	/^	int		bottomcolor;$/;"	m	struct:player_info_s
bottomcolor	sbar.c	/^	int topcolor, bottomcolor;$/;"	m	struct:__anon62	file:
bottommask	r_sky.c	/^byte	bottommask[128*131];$/;"	v
bottomsky	r_sky.c	/^byte	bottomsky[128*131];$/;"	v
bounces	gl_rpart.c	/^	byte		bounces;	$/;"	m	struct:particle_s	file:
bound	q_shared.h	78;"	d
bound_bottom	ez_controls.h	/^	int						bound_bottom;$/;"	m	struct:ez_control_s
bound_left	ez_controls.h	/^	int						bound_left;$/;"	m	struct:ez_control_s
bound_right	ez_controls.h	/^	int						bound_right;$/;"	m	struct:ez_control_s
bound_top	ez_controls.h	/^	int						bound_top;				\/\/ The bounds the control is allowed to draw within.$/;"	m	struct:ez_control_s
boundingradius	gl_model.h	/^	float				boundingradius;$/;"	m	struct:aliashdr_s
boundingradius	modelgen.h	/^	float		boundingradius;$/;"	m	struct:__anon224
boundingradius	spritegn.h	/^	float		boundingradius;$/;"	m	struct:__anon277
bounds	gl_md3.h	/^	vec3_t		bounds[2];$/;"	m	struct:md3Frame_s
box_clipnodes	cmodel.c	/^static dclipnode_t	box_clipnodes[6];$/;"	v	file:
box_hull	cmodel.c	/^static hull_t		box_hull;$/;"	v	file:
box_planes	cmodel.c	/^static mplane_t		box_planes[6];$/;"	v	file:
boxmaxs	sv_world.c	/^	vec3_t		boxmins, boxmaxs;\/\/ enclose the test object along entire move$/;"	m	struct:__anon66	file:
boxmins	sv_world.c	/^	vec3_t		boxmins, boxmaxs;\/\/ enclose the test object along entire move$/;"	m	struct:__anon66	file:
bp_var	mvd_utils.c	/^bp_var_t bp_var[MAX_CLIENTS];$/;"	v
bp_var_s	mvd_utils.c	/^typedef struct bp_var_s{$/;"	s	file:
bp_var_t	mvd_utils.c	/^} bp_var_t;$/;"	t	typeref:struct:bp_var_s	file:
bpp	client.h	/^	int				bpp;			\/\/ used in gl,  bpp = 1 for pcx and 4 for 32bit skins$/;"	m	struct:__anon111
bpp	gl_texture.c	/^	int			bpp;$/;"	m	struct:__anon28	file:
bpp	menu_options.c	/^	int bpp;$/;"	m	struct:menu_video_settings_s	file:
bpp	vid_wgl.c	/^	int			bpp;$/;"	m	struct:__anon81	file:
bpp	vid_win.c	/^	int			bpp;$/;"	m	struct:__anon85	file:
brighten32	gl_texture.c	/^static void brighten32 (byte *data, int size)$/;"	f	file:
brushmodel	gl_rmain.c	/^int			brushmodel = 0;$/;"	v
bspversion	gl_model.h	/^	int					bspversion;$/;"	m	struct:model_s
bspversion	r_model.h	/^	int					bspversion;$/;"	m	struct:model_s
bubble	client.h	/^	int				bubble;				\/\/ non zero means no flashblend bubble$/;"	m	struct:__anon118
bubble_costable	gl_rlight.c	/^float bubble_sintable[17], bubble_costable[17];$/;"	v
bubble_sintable	gl_rlight.c	/^float bubble_sintable[17], bubble_costable[17];$/;"	v
bubblecolor	gl_rlight.c	/^float bubblecolor[NUM_DLIGHTTYPES][4] = {$/;"	v
bucket	hash.h	/^	bucket_t **bucket;$/;"	m	struct:hashtable_s
bucket_s	hash.h	/^typedef struct bucket_s {$/;"	s
bucket_t	hash.h	/^} bucket_t;$/;"	t	typeref:struct:bucket_s
buf	Ctrl_EditBox.c	/^char buf[MAX_EDITTEXT+1];$/;"	v
buf	document_rendering.c	/^    byte    *buf;$/;"	m	struct:document_rendering_context_s	file:
buf	security.h	/^	byte *buf;$/;"	m	struct:signed_buffer_s
buf_cmd	timer.c	/^	char *buf_cmd;$/;"	m	struct:timer	file:
buffer	ffmpeg.c	/^	uint8_t	*buffer;$/;"	m	struct:frames_list_s	file:
buffer	image.c	/^	JOCTET * buffer;			\/\/ Start of buffer.$/;"	m	struct:__anon34	file:
buffer	image.c	/^  JOCTET *buffer;$/;"	m	struct:__anon32	file:
buffer	image.c	/^  JOCTET *buffer;$/;"	m	struct:__anon33	file:
buffer	md4.c	/^    unsigned char buffer[64];           \/* input buffer *\/$/;"	m	struct:__anon43	file:
buffer	qsound.h	/^	unsigned char	*buffer;$/;"	m	struct:dma_s
buffer	sha1.h	/^    unsigned char buffer[64];$/;"	m	struct:__anon275
buffer	vfs_tar.h	/^  char               buffer[BLOCKSIZE];$/;"	m	union:tar_buffer
buffer	vid.h	/^	pixel_t			*buffer;		\/\/ invisible buffer$/;"	m	struct:__anon294
bufferingtime	cl_demo.c	/^double bufferingtime; \/\/ if we stream from QTV, this is non zero when we trying fill our buffer$/;"	v
bufferlength	qsound.h	/^	int		bufferlength;		\/\/ used only by certain drivers$/;"	m	struct:dma_s
buflen	textencoding.c	290;"	d	file:
buggy	lua.c	/^	int buggy;$/;"	m	struct:L_lua_states	file:
build_number	version.c	/^int build_number (void) {$/;"	f
builtin_t	progs.h	/^typedef void (*builtin_t) (void);$/;"	t
bullet	xsd_document.h	/^    list_bullet_t bullet;$/;"	m	struct:document_tag_dict_s
bullet	xsd_document.h	/^    list_bullet_t bullet;$/;"	m	struct:document_tag_list_s
bunnyspeedcap	client.h	/^	float		bunnyspeedcap;$/;"	m	struct:__anon125
bunnyspeedcap	pmove.h	/^	float	bunnyspeedcap;$/;"	m	struct:__anon246
button	hud_editor.c	/^ez_button_t *button = NULL;$/;"	v
button0	progdefs.h	/^	float	button0;$/;"	m	struct:__anon253
button1	progdefs.h	/^	float	button1;$/;"	m	struct:__anon253
button2	progdefs.h	/^	float	button2;$/;"	m	struct:__anon253
button_down	keys.h	/^    int button_down;    \/\/ number of the button that just has been pressed down$/;"	m	struct:mouse_state_s
button_up	keys.h	/^    int button_up;      \/\/ number of the button that just has been released$/;"	m	struct:mouse_state_s
buttons	in_win.c	/^	volatile int	buttons;$/;"	m	struct:__anon35	file:
buttons	keys.h	/^    qbool buttons[9];   \/\/ button states .. omit button 0$/;"	m	struct:mouse_state_s
buttons	protocol.h	/^	byte	buttons;$/;"	m	struct:usercmd_s
byte	q_shared.h	/^typedef unsigned char byte;$/;"	t
byteWidth	mgraph.h	/^	m_int		byteWidth;			\/* Byte with for AND mask			*\/$/;"	m	struct:__anon212
bytesPerLine	mgraph.h	/^	m_int		bytesPerLine;		\/* Bytes per line value for surface *\/$/;"	m	struct:__anon211
bytesPerLine	mgraph.h	/^	m_int	bytesPerLine;	\/* Number of bytes in a line				*\/$/;"	m	struct:__anon217
bytes_per_line	image.c	/^    unsigned short	bytes_per_line;$/;"	m	struct:pcx_s	file:
c	draw.h	/^	color_t c;	\/\/ Color.$/;"	m	struct:clrinfo_s
c	mgraph.h	/^	fxcolor_t	c;$/;"	m	struct:__anon201
c	mgraph.h	/^	fxcolor_t	c;$/;"	m	struct:__anon204
c	mgraph.h	/^	fxrgb_t		c;$/;"	m	struct:__anon202
c	mgraph.h	/^	fxrgb_t		c;$/;"	m	struct:__anon205
c	pr_comp.h	/^	short	a,b,c;$/;"	m	struct:statement_s
c_alias_polys	gl_rmain.c	/^int			c_brush_polys, c_alias_polys;$/;"	v
c_brush_polys	gl_rmain.c	/^int			c_brush_polys, c_alias_polys;$/;"	v
c_curve_s	mvd_cam.h	/^typedef struct c_curve_s {$/;"	s
c_curve_t	mvd_cam.h	/^} c_curve_t;$/;"	t	typeref:struct:c_curve_s
c_event_s	mvd_cam.h	/^typedef struct c_event_s {$/;"	s
c_event_t	mvd_cam.h	/^} c_event_t ;$/;"	t	typeref:struct:c_event_s
c_event_time	cam_event_system.c	/^double *c_event_time, *c_event_value, *c_selected_event_value;$/;"	v
c_event_time_real	cam_event_system.c	/^double c_event_time_real, c_event_value_real;$/;"	v
c_event_type	cam_event_system.c	/^int c_selected_entry, c_selected_entry_value, c_event_type;$/;"	v
c_event_value	cam_event_system.c	/^double *c_event_time, *c_event_value, *c_selected_event_value;$/;"	v
c_event_value_real	cam_event_system.c	/^double c_event_time_real, c_event_value_real;$/;"	v
c_faceclip	r_rast.c	/^int				c_faceclip;					\/\/ number of faces clipped$/;"	v
c_selected_entry	cam_event_system.c	/^int c_selected_entry, c_selected_entry_value, c_event_type;$/;"	v
c_selected_entry_value	cam_event_system.c	/^int c_selected_entry, c_selected_entry_value, c_event_type;$/;"	v
c_selected_event_value	cam_event_system.c	/^double *c_event_time, *c_event_value, *c_selected_event_value;$/;"	v
c_surf	r_main.c	/^int			c_surf;$/;"	v
ca_active	client.h	/^ca_active			\/\/ everything is in, so frames can be rendered$/;"	e	enum:__anon120
ca_connected	client.h	/^ca_connected,		\/\/ netchan_t established, waiting for svc_serverdata$/;"	e	enum:__anon120
ca_demostart	client.h	/^ca_demostart,		\/\/ starting up a demo$/;"	e	enum:__anon120
ca_disconnected	client.h	/^ca_disconnected, 	\/\/ full screen console with no connection$/;"	e	enum:__anon120
ca_onserver	client.h	/^ca_onserver,		\/\/ processing data lists, donwloading, etc$/;"	e	enum:__anon120
cache	client.h	/^	cache_user_t	cache;$/;"	m	struct:__anon111
cache	gl_model.h	/^	cache_user_t		cache; \/\/ only access through Mod_Extradata$/;"	m	struct:model_s
cache	qsound.h	/^	cache_user_t cache;$/;"	m	struct:sfx_s
cache	r_model.h	/^	cache_user_t		cache; \/\/ only access through Mod_Extradata$/;"	m	struct:model_s
cache_head	zone.c	/^cache_system_t cache_head;$/;"	v
cache_system_s	zone.c	/^typedef struct cache_system_s {$/;"	s	file:
cache_system_t	zone.c	/^} cache_system_t;$/;"	t	typeref:struct:cache_system_s	file:
cache_user_s	zone.h	/^typedef struct cache_user_s$/;"	s
cache_user_t	zone.h	/^} cache_user_t;$/;"	t	typeref:struct:cache_user_s
cacheblock	d_vars.c	/^pixel_t			*cacheblock;$/;"	v
cached_dlight	gl_model.h	/^	qbool				cached_dlight;				\/\/ true if dynamic light in cache$/;"	m	struct:msurface_s
cached_light	gl_model.h	/^	int					cached_light[MAXLIGHTMAPS];	\/\/ values currently used in lightmap$/;"	m	struct:msurface_s
cachededgeoffset	gl_model.h	/^	unsigned int		cachededgeoffset;$/;"	m	struct:medge_s
cachededgeoffset	r_model.h	/^	unsigned int		cachededgeoffset;$/;"	m	struct:medge_s
cachemempool	zone2.c	/^mempool_t *cachemempool;$/;"	v
cacheoffset	r_rast.c	/^unsigned int	cacheoffset;$/;"	v
cachepic_node_s	common_draw.h	/^typedef struct cachepic_node_s $/;"	s
cachepic_node_t	common_draw.h	/^} cachepic_node_t;$/;"	t	typeref:struct:cachepic_node_s
cachepic_s	common_draw.h	/^typedef struct cachepic_s $/;"	s
cachepic_t	common_draw.h	/^} cachepic_t;$/;"	t	typeref:struct:cachepic_s
cachepics	common_draw.c	/^cachepic_node_t	*cachepics[CACHED_PICS_HDSIZE];$/;"	v
cachespot	gl_model.h	/^	void				*cachespot; \/\/ remove?$/;"	m	struct:msprite_s
cachespot	r_model.h	/^	void				*cachespot; \/\/ remove?$/;"	m	struct:msprite_s
cachespots	r_model.h	/^	struct surfcache_s	*cachespots[MIPLEVELS];$/;"	m	struct:msurface_s	typeref:struct:msurface_s::surfcache_s
cachewidth	d_vars.c	/^int				cachewidth;$/;"	v
cactive_t	client.h	/^} cactive_t;$/;"	t	typeref:enum:__anon120
called_second	keys.c	/^int called_second = 0;$/;"	v
cam	mvd_utils.c	/^		quad_cams_t cam;$/;"	m	struct:cam_id_s	file:
cam_1	mvd_utils.c	/^int cam_1,cam_2,cam_3,cam_4;$/;"	v
cam_2	mvd_utils.c	/^int cam_1,cam_2,cam_3,cam_4;$/;"	v
cam_3	mvd_utils.c	/^int cam_1,cam_2,cam_3,cam_4;$/;"	v
cam_4	mvd_utils.c	/^int cam_1,cam_2,cam_3,cam_4;$/;"	v
cam_angles	mvd_cam.c	/^vec3_t	cam_pos,view_pos,cam_angles,snd_cam_pos,snd_cam_view;$/;"	v
cam_current_event	mosdm.c	/^c_event_t	*cam_current_event;$/;"	v
cam_dist	cl_pred.c	/^cvar_t cam_dist = {"cam_dist", "100"};$/;"	v
cam_enable_all	mosdm.c	/^int cam_enable_all = 0;$/;"	v
cam_event_name	mosdm.c	/^char	*cam_event_name;$/;"	v
cam_event_num	mosdm.c	/^int		*cam_event_num;$/;"	v
cam_event_snum	mosdm.c	/^int		cam_event_snum;$/;"	v
cam_event_time	mosdm.c	/^double	*cam_event_time;$/;"	v
cam_event_type	mosdm.c	/^int		*cam_event_type;$/;"	v
cam_event_value	mosdm.c	/^double	*cam_event_value;$/;"	v
cam_id	mvd_utils.c	/^cam_id_t cam_id[7];$/;"	v
cam_id_s	mvd_utils.c	/^typedef struct cam_id_s {$/;"	s	file:
cam_id_t	mvd_utils.c	/^} cam_id_t;$/;"	t	typeref:struct:cam_id_s	file:
cam_in_progress	mvd_cam.c	/^int cam_in_progress = -1;$/;"	v
cam_lastviewtime	cl_cam.c	/^double cam_lastviewtime;$/;"	v
cam_lockdir	cl_pred.c	/^cvar_t cam_lockdir = {"cam_lockdir", "0"};$/;"	v
cam_lockpos	cl_pred.c	/^cvar_t cam_lockpos = {"cam_lockpos", "0"};$/;"	v
cam_menu	cam_new_menu.c	/^struct menu_s *cam_menu;$/;"	v	typeref:struct:menu_s
cam_num	mosdm.c	/^int *cam_num;$/;"	v
cam_pnum	mosdm.c	/^int		*cam_pnum;$/;"	v
cam_popups	cam_new.c	/^struct MS_Popup_Menu_Menu **cam_popups, **view_popups;$/;"	v	typeref:struct:MS_Popup_Menu_Menu
cam_pos	mvd_cam.c	/^vec3_t	cam_pos,view_pos,cam_angles,snd_cam_pos,snd_cam_view;$/;"	v
cam_pos1	mvd_cam.c	/^double cam_pos1,cam_pos2,cam_pos3;$/;"	v
cam_pos2	mvd_cam.c	/^double cam_pos1,cam_pos2,cam_pos3;$/;"	v
cam_pos3	mvd_cam.c	/^double cam_pos1,cam_pos2,cam_pos3;$/;"	v
cam_show_all	mosdm.c	/^int cam_show_all = 0;$/;"	v
cam_splines	cam_new.c	/^struct CamSys_Spline *view_splines, *cam_splines, *selected_view_spline, *selected_cam_spline;$/;"	v	typeref:struct:
cam_spnum	mosdm.c	/^int		cam_spnum;$/;"	v
cam_start_time	mvd_cam.c	/^double cam_start_time,cam_stop_time,testtime1;$/;"	v
cam_stop_time	mvd_cam.c	/^double cam_start_time,cam_stop_time,testtime1;$/;"	v
cam_thirdperson	cl_pred.c	/^cvar_t cam_thirdperson = {"cam_thirdperson", "0"};$/;"	v
cam_viewangles	cl_cam.c	/^vec3_t cam_viewangles;$/;"	v
cam_zoomaccel	cl_input.c	/^cvar_t cam_zoomaccel = {"cam_zoomaccel", "2000"};$/;"	v
cam_zoomspeed	cl_input.c	/^cvar_t cam_zoomspeed = {"cam_zoomspeed", "300"};$/;"	v
camera_angles	vx_camera.c	/^vec3_t	camera_angles; \/\/Where the camera is looking$/;"	v
camera_angles_finish	vx_camera.c	/^vec3_t	camera_angles_finish; \/\/Where we want the camera looking when we stop$/;"	v
camera_info_strings	mosdm.c	/^char *camera_info_strings[8] = {{"Camera"},{"Number"},{"Info"},{"Submenu"},{"Modifier"},{"Show"},{"Enable"},{"Close"}};$/;"	v
camera_pos	vx_camera.c	/^vec3_t	camera_pos; \/\/Where the camera is$/;"	v
camera_pos_finish	vx_camera.c	/^vec3_t	camera_pos_finish; \/\/Where we want the camera to stop$/;"	v
camera_speed	vx_camera.c	/^float	camera_speed; \/\/Speed that the camera moves$/;"	v
cameramode_t	vx_stuff.h	/^} cameramode_t;$/;"	t	typeref:enum:__anon296
cameras	mvd_cam.c	/^c_curve_t cameras[max_cameras];$/;"	v
cameratype	vx_camera.c	/^cameramode_t cameratype;$/;"	v
camsys_enable	cam_new.c	/^cvar_t	camsys_enable	=	{"camsys_enable", "0"};$/;"	v
capture_audio_samples	movie.c	/^short capture_audio_samples[44100];	\/\/ big enough buffer for 1fps at 44100Hz$/;"	v
captured_audio_samples	ffmpeg.c	/^	unsigned int	captured_audio_samples;$/;"	m	struct:ffm	file:
captured_audio_samples	movie.c	/^int captured_audio_samples;$/;"	v
captures	fragstats.c	/^	int captures;$/;"	m	struct:fragstats_s	file:
caret_pos	ez_label.h	/^	ez_label_textpos_t		caret_pos;					\/\/ The position of the caret (index \/ row \/ column).$/;"	m	struct:ez_label_s
catmull_points	mvd_cam.h	/^	int		catmull_points;$/;"	m	struct:c_curve_s
caustics_chain	gl_model.h	/^	struct	glpoly_s	*caustics_chain;			\/\/next caustic poly in chain$/;"	m	struct:glpoly_s	typeref:struct:glpoly_s::glpoly_s
caustics_polys	gl_rsurf.c	/^glpoly_t *caustics_polys = NULL;$/;"	v
cbuf_current	cmd.c	/^cbuf_t *cbuf_current = NULL;$/;"	v
cbuf_formatted_comms	cmd.c	/^cbuf_t cbuf_safe, cbuf_formatted_comms;$/;"	v
cbuf_main	cmd.c	/^cbuf_t cbuf_main;$/;"	v
cbuf_s	cmd.h	/^typedef struct cbuf_s {$/;"	s
cbuf_safe	cmd.c	/^cbuf_t cbuf_safe, cbuf_formatted_comms;$/;"	v
cbuf_svc	cmd.c	/^cbuf_t cbuf_svc;$/;"	v
cbuf_t	cmd.h	/^} cbuf_t;$/;"	t	typeref:struct:cbuf_s
cc_dofstart	mosdm.c	/^double *cc_dofstart;		\/\/	dof	start	pointer$/;"	v
cc_dofstop	mosdm.c	/^double *cc_dofstop;			\/\/	dof stop	pointer$/;"	v
cc_dsstart	mosdm.c	/^double *cc_dsstart;			\/\/	demo_speed	start	pointer$/;"	v
cc_dsstop	mosdm.c	/^double *cc_dsstop;			\/\/	demo_speed	stop	pointer$/;"	v
cc_enable	mosdm.c	/^int *cc_enable;			\/\/ enable pointer$/;"	v
cc_fovstart	mosdm.c	/^double *cc_fovstart;		\/\/	fov	start	pointer$/;"	v
cc_fovstop	mosdm.c	/^double *cc_fovstop;			\/\/	fov	stop	pointer$/;"	v
cc_point	mosdm.c	/^vec3_t	*cc_point;$/;"	v
cc_point_x	mosdm.c	/^vec_t	*cc_point_x,*cc_point_y,*cc_point_z;$/;"	v
cc_point_y	mosdm.c	/^vec_t	*cc_point_x,*cc_point_y,*cc_point_z;$/;"	v
cc_point_z	mosdm.c	/^vec_t	*cc_point_x,*cc_point_y,*cc_point_z;$/;"	v
cc_points	mosdm.c	/^vec_t *cc_points[60];$/;"	v
cc_show	mosdm.c	/^int *cc_show;			\/\/ show pointer$/;"	v
cc_startt	mosdm.c	/^double *cc_startt;			\/\/starttime pointer$/;"	v
cc_stopt	mosdm.c	/^double *cc_stopt;			\/\/ stoptime pointer$/;"	v
cc_type	mosdm.c	/^int *cc_type;			\/\/ type pointer$/;"	v
cdValid	cd_linux.c	/^static qbool cdValid = false;$/;"	v	file:
cdValid	cd_win.c	/^static qbool cdValid = false;$/;"	v	file:
cd_dev	cd_linux.c	/^static char cd_dev[64] = "\/dev\/cdrom";$/;"	v	file:
cdfile	cd_linux.c	/^static int cdfile = -1;$/;"	v	file:
cdrom	cd_win.c	/^static byte		cdrom;$/;"	v	file:
cdsFullscreen	tr_types.h	/^	qbool	cdsFullscreen;$/;"	m	struct:__anon287
cdtrack	client.h	/^	int			cdtrack;			\/\/\/< cd audio$/;"	m	struct:__anon125
cdup_find	EX_FileList.h	/^    qbool			cdup_find;$/;"	m	struct:filelist_s
cdup_name	EX_FileList.h	/^    char            cdup_name[MAX_PATH+1];$/;"	m	struct:filelist_s
cdvolume	cd_linux.c	/^static float	cdvolume;$/;"	v	file:
cdvolume	cd_win.c	/^static float	cdvolume;$/;"	v	file:
ceilv	r_rast.c	/^	int		ceilv;$/;"	m	struct:__anon60	file:
cell_length	stats_grid.h	/^	int				cell_length;			\/\/ Cell side length.$/;"	m	struct:stats_weight_grid_s
cell_weight_s	stats_grid.h	/^typedef struct cell_weight_s$/;"	s
cell_weight_t	stats_grid.h	/^} cell_weight_t;$/;"	t	typeref:struct:cell_weight_s
cells	stats_grid.h	/^	stats_cell_t	**cells;				\/\/ The cells.$/;"	m	struct:stats_weight_grid_s
cem_curve_a	cam_new.c	/^float *cem_point_x, *cem_point_y, *cem_point_z, *cem_curve_r, *cem_curve_g, *cem_curve_b, *cem_curve_a;$/;"	v
cem_curve_b	cam_new.c	/^float *cem_point_x, *cem_point_y, *cem_point_z, *cem_curve_r, *cem_curve_g, *cem_curve_b, *cem_curve_a;$/;"	v
cem_curve_g	cam_new.c	/^float *cem_point_x, *cem_point_y, *cem_point_z, *cem_curve_r, *cem_curve_g, *cem_curve_b, *cem_curve_a;$/;"	v
cem_curve_r	cam_new.c	/^float *cem_point_x, *cem_point_y, *cem_point_z, *cem_curve_r, *cem_curve_g, *cem_curve_b, *cem_curve_a;$/;"	v
cem_move_spline_x	cam_new.c	/^float *cem_move_spline_x, *cem_move_spline_y, *cem_move_spline_z;$/;"	v
cem_move_spline_y	cam_new.c	/^float *cem_move_spline_x, *cem_move_spline_y, *cem_move_spline_z;$/;"	v
cem_move_spline_z	cam_new.c	/^float *cem_move_spline_x, *cem_move_spline_y, *cem_move_spline_z;$/;"	v
cem_point_time	cam_new.c	/^double *cem_starttime, *cem_stoptime, *vem_starttime, *vem_stoptime, *cem_point_time, *vem_point_time;$/;"	v
cem_point_x	cam_new.c	/^float *cem_point_x, *cem_point_y, *cem_point_z, *cem_curve_r, *cem_curve_g, *cem_curve_b, *cem_curve_a;$/;"	v
cem_point_y	cam_new.c	/^float *cem_point_x, *cem_point_y, *cem_point_z, *cem_curve_r, *cem_curve_g, *cem_curve_b, *cem_curve_a;$/;"	v
cem_point_z	cam_new.c	/^float *cem_point_x, *cem_point_y, *cem_point_z, *cem_curve_r, *cem_curve_g, *cem_curve_b, *cem_curve_a;$/;"	v
cem_resolution	cam_new.c	/^int *cem_resolution, *vem_resolution;$/;"	v
cem_starttime	cam_new.c	/^double *cem_starttime, *cem_stoptime, *vem_starttime, *vem_stoptime, *cem_point_time, *vem_point_time;$/;"	v
cem_stoptime	cam_new.c	/^double *cem_starttime, *cem_stoptime, *vem_starttime, *vem_stoptime, *cem_point_time, *vem_point_time;$/;"	v
centity_t	client.h	/^} centity_t;$/;"	t	typeref:struct:__anon115
cfg_backup	config_manager.c	/^cvar_t	cfg_backup			=	{"cfg_backup", "0"};$/;"	v
cfg_browser_democolor	menu_options.c	/^cvar_t	cfg_browser_democolor		= {"cfg_browser_democolor",	"255 255 255 255", CVAR_COLOR};	\/\/ White.$/;"	v
cfg_browser_dircolor	menu_options.c	/^cvar_t	cfg_browser_dircolor		= {"cfg_browser_dircolor",		"170 80 0 255", CVAR_COLOR};	\/\/ Redish.$/;"	v
cfg_browser_interline	menu_options.c	/^cvar_t  cfg_browser_interline		= {"cfg_browser_interline",	"0"};$/;"	v
cfg_browser_scrollnames	menu_options.c	/^cvar_t  cfg_browser_scrollnames	= {"cfg_browser_scrollnames",	"1"};$/;"	v
cfg_browser_selectedcolor	menu_options.c	/^cvar_t	cfg_browser_selectedcolor	= {"cfg_browser_selectedcolor","0 150 235 255", CVAR_COLOR};	\/\/ Light blue.$/;"	v
cfg_browser_showdate	menu_options.c	/^cvar_t  cfg_browser_showdate		= {"cfg_browser_showdate",		"1"};$/;"	v
cfg_browser_showsize	menu_options.c	/^cvar_t  cfg_browser_showsize		= {"cfg_browser_showsize",		"1"};$/;"	v
cfg_browser_showstatus	menu_options.c	/^cvar_t  cfg_browser_showstatus		= {"cfg_browser_showstatus",	"1"};$/;"	v
cfg_browser_showtime	menu_options.c	/^cvar_t  cfg_browser_showtime		= {"cfg_browser_showtime",		"1"};$/;"	v
cfg_browser_sortmode	menu_options.c	/^cvar_t  cfg_browser_sortmode		= {"cfg_browser_sortmode",		"1"};$/;"	v
cfg_browser_stripnames	menu_options.c	/^cvar_t  cfg_browser_stripnames		= {"cfg_browser_stripnames",	"1"};$/;"	v
cfg_browser_zipcolor	menu_options.c	/^cvar_t	cfg_browser_zipcolor		= {"cfg_browser_zipcolor",		"255 170 0 255", CVAR_COLOR};	\/\/ Orange.$/;"	v
cfg_legacy_exec	config_manager.c	/^cvar_t	cfg_legacy_exec		=	{"cfg_legacy_exec", "1"};$/;"	v
cfg_legacy_write	config_manager.c	/^cvar_t	cfg_legacy_write	=	{"cfg_legacy_write", "0"};$/;"	v
cfg_save_aliases	config_manager.c	/^cvar_t	cfg_save_aliases	=	{"cfg_save_aliases", "1"};$/;"	v
cfg_save_binds	config_manager.c	/^cvar_t	cfg_save_binds		=	{"cfg_save_binds", "1"};$/;"	v
cfg_save_cmdline	config_manager.c	/^cvar_t	cfg_save_cmdline	=	{"cfg_save_cmdline", "1"};$/;"	v
cfg_save_cmds	config_manager.c	/^cvar_t	cfg_save_cmds		=	{"cfg_save_cmds", "1"};$/;"	v
cfg_save_cvars	config_manager.c	/^cvar_t	cfg_save_cvars		=	{"cfg_save_cvars", "1"};$/;"	v
cfg_save_onquit	config_manager.c	/^cvar_t	cfg_save_onquit		=	{"cfg_save_onquit", "0"};$/;"	v
cfg_save_sysinfo	config_manager.c	/^cvar_t	cfg_save_sysinfo	=	{"cfg_save_sysinfo", "0"};$/;"	v
cfg_save_unchanged	config_manager.c	/^cvar_t	cfg_save_unchanged	=	{"cfg_save_unchanged", "0"};$/;"	v
cfg_save_userinfo	config_manager.c	/^cvar_t	cfg_save_userinfo	=	{"cfg_save_userinfo", "2"};$/;"	v
cfg_use_home	config_manager.c	/^cvar_t  cfg_use_home		=	{"cfg_use_home", "0"};$/;"	v
cfrags_format	console.h	/^} cfrags_format;$/;"	t	typeref:struct:cfrags_format_s
cfrags_format_s	console.h	/^typedef struct cfrags_format_s {$/;"	s
cg_teamdamage	menu_multiplayer.c	/^	GENERATE_ENUM_MENU_FUNC(cg_teamdamage);$/;"	v
cg_teamdamage_desc	menu_multiplayer.c	/^	static const char* cg_teamdamage_desc[cg_teamdamage_max] = {$/;"	v	file:
cg_teamdamage_e	menu_multiplayer.c	/^	typedef enum cg_teamdamage_e {$/;"	g	file:
cg_teamdamage_max	menu_multiplayer.c	/^		TD_OFF, TD_ON, cg_teamdamage_max$/;"	e	enum:cg_teamdamage_e	file:
cg_teamdamage_t	menu_multiplayer.c	/^	} cg_teamdamage_t;$/;"	t	typeref:enum:cg_teamdamage_e	file:
ch_dist_mult	asm_i386.h	88;"	d
ch_end	asm_i386.h	82;"	d
ch_entchannel	asm_i386.h	86;"	d
ch_entnum	asm_i386.h	85;"	d
ch_leftvol	asm_i386.h	80;"	d
ch_looping	asm_i386.h	84;"	d
ch_master_vol	asm_i386.h	89;"	d
ch_origin	asm_i386.h	87;"	d
ch_pos	asm_i386.h	83;"	d
ch_rightvol	asm_i386.h	81;"	d
ch_sfx	asm_i386.h	79;"	d
ch_size	asm_i386.h	90;"	d
chain	gl_model.h	/^	struct	glpoly_s	*chain;						\/\/next lightmap poly in chain$/;"	m	struct:glpoly_s	typeref:struct:glpoly_s::glpoly_s
chain	progdefs.h	/^	int	chain;$/;"	m	struct:__anon253
chain	zone2.h	/^	struct memclump_s *chain;$/;"	m	struct:memclump_s	typeref:struct:memclump_s::memclump_s
chain	zone2.h	/^	struct memheader_s *chain;$/;"	m	struct:mempool_s	typeref:struct:mempool_s::memheader_s
challenge	client.h	/^	int			challenge;$/;"	m	struct:__anon122
challenge	server.h	/^	int			challenge;$/;"	m	struct:__anon268
challenge_t	server.h	/^} challenge_t;$/;"	t	typeref:struct:__anon268
challenges	server.h	/^	challenge_t	challenges[MAX_CHALLENGES];	\/\/ to prevent invalid IPs from connecting$/;"	m	struct:__anon269
change_time	stats_grid.h	/^	float			change_time;			\/\/ The last time the weight was changed. (Used for fading weight).$/;"	m	struct:cell_weight_s
changepname	mvd_cam.h	/^	int						changepname;$/;"	m	struct:mvd_menu_s
channel_s	qsound.h	/^typedef struct channel_s {$/;"	s
channel_t	qsound.h	/^} channel_t;$/;"	t	typeref:struct:channel_s
channels	qsound.h	/^	int		channels;$/;"	m	struct:wavinfo_s
channels	qsound.h	/^	unsigned int	channels;$/;"	m	struct:snd_format_s
channels	snd_dma.c	/^channel_t	channels[MAX_CHANNELS];$/;"	v
char2wc	q_shared.c	/^wchar char2wc (char c)$/;"	f
char_range	gl_draw.c	/^int		char_range[MAX_CHARSETS];$/;"	v
char_range	r_draw.c	/^int			char_range[MAX_CHARSETS];		\/\/ 0x0400, etc; slot 0 is always 0x00$/;"	v
char_textures	gl_draw.c	/^int		char_textures[MAX_CHARSETS];$/;"	v
charptr	mvd_cam.h	/^	char					**charptr;$/;"	m	struct:mvd_menu_s
charset	cl_screen.c	/^	int					charset;$/;"	m	struct:hud_element_s	file:
chat_buffer	keys.c	/^wchar		chat_buffer[MAXCMDLINE];$/;"	v
chat_linepos	keys.c	/^int			chat_linepos = 0;$/;"	v
chat_observers	keys.c	/^qbool chat_observers;	\/\/ added by jogi$/;"	v
chat_server	keys.c	/^qbool chat_server;		\/\/ added by jogi$/;"	v
chat_team	keys.c	/^qbool	chat_team;$/;"	v
check_models	fmod.c	/^static check_models_t check_models[MAX_CHECK_MODELS];$/;"	v	file:
check_models_hashes_entry_s	fmod.c	/^typedef struct check_models_hashes_entry_s {$/;"	s	file:
check_models_hashes_entry_t	fmod.c	/^} check_models_hashes_entry_t;$/;"	t	typeref:struct:check_models_hashes_entry_s	file:
check_models_num	fmod.c	/^static int check_models_num = 0;$/;"	v	file:
check_models_s	fmod.c	/^typedef struct check_models_s {$/;"	s	file:
check_models_t	fmod.c	/^} check_models_t;$/;"	t	typeref:struct:check_models_s	file:
check_mtfl_ruleset	teamplay.c	/^static int check_mtfl_ruleset (void)$/;"	f	file:
checked	EX_browser.h	/^    int checked;                        \/\/ 1 if use this source$/;"	m	struct:source_data_s
checked	fmod.c	/^	qbool		checked;$/;"	m	struct:check_models_s	file:
checkmodel_t	vx_stuff.c	/^} checkmodel_t;$/;"	t	typeref:struct:__anon91	file:
checkpvs	pr_cmds.c	/^static byte	*checkpvs;$/;"	v	file:
checksum	EX_browser_ping.c	/^    unsigned short checksum;       \/\/ IP checksum$/;"	m	struct:IP_header_s	file:
checksum	server.h	/^	unsigned	checksum;			\/\/ checksum for calcs$/;"	m	struct:client_s
child1	hud_editor.c	/^ez_control_t *child1 = NULL;$/;"	v
child2	hud_editor.c	/^ez_control_t *child2 = NULL;$/;"	v
child_thread	thread_linux.c	/^static pthread_t child_thread[256];$/;"	v	file:
children	bspfile.h	/^	short		children[2];	\/\/ negative numbers are -(leafs+1), not nodes$/;"	m	struct:__anon104
children	bspfile.h	/^	short		children[2];	\/\/ negative numbers are contents$/;"	m	struct:__anon105
children	cmodel.c	/^	struct cnode_s	*children[2];	$/;"	m	struct:cnode_s	typeref:struct:cnode_s::cnode_s	file:
children	document_rendering.h	/^    struct document_rendered_section_s *children;$/;"	m	struct:document_rendered_section_s	typeref:struct:document_rendered_section_s::document_rendered_section_s
children	ez_controls.h	/^	ez_double_linked_list_t	children;				\/\/ List of children belonging to the control.$/;"	m	struct:ez_control_s
children	gl_model.h	/^	struct mnode_s		*children[2];	$/;"	m	struct:mnode_s	typeref:struct:mnode_s::mnode_s
children	r_model.h	/^	struct mnode_s		*children[2];	$/;"	m	struct:mnode_s	typeref:struct:mnode_s::mnode_s
children	sv_world.h	/^	struct areanode_s	*children[2];$/;"	m	struct:areanode_s	typeref:struct:areanode_s::areanode_s
chksum	vfs_tar.h	/^  char chksum[8];               \/* 148 *\/$/;"	m	struct:tar_header
chktbl	common.c	/^static byte chktbl[1024] = {$/;"	v	file:
chokecount	server.h	/^	int			chokecount;$/;"	m	struct:client_s
chunked_download_number	cl_parse.c	/^int chunked_download_number = 0; \/\/ Never reset, bumped up.$/;"	v
ci_clients	cl_screen.c	/^static ci_player_t ci_clients[MAX_CLIENTS];$/;"	v	file:
ci_count	cl_screen.c	/^static int ci_count;$/;"	v	file:
ci_initialized	cl_screen.c	/^qbool ci_initialized = false;$/;"	v
ci_player_s	cl_screen.c	/^typedef struct ci_player_s {$/;"	s	file:
ci_player_t	cl_screen.c	/^} ci_player_t;$/;"	t	typeref:struct:ci_player_s	file:
ci_tex_t	cl_screen.c	/^} ci_tex_t;$/;"	t	typeref:enum:__anon4	file:
ci_texture_s	cl_screen.c	/^typedef struct ci_texture_s {$/;"	s	file:
ci_texture_t	cl_screen.c	/^} ci_texture_t;$/;"	t	typeref:struct:ci_texture_s	file:
ci_textures	cl_screen.c	/^static ci_texture_t ci_textures[num_citextures];$/;"	v	file:
citex_afk	cl_screen.c	/^	citex_afk,$/;"	e	enum:__anon4	file:
citex_chat	cl_screen.c	/^	citex_chat,$/;"	e	enum:__anon4	file:
citex_chat_afk	cl_screen.c	/^	citex_chat_afk,$/;"	e	enum:__anon4	file:
cl	block8.h	/^	movb	%cl,1(%edi)$/;"	v
cl	cl_main.c	/^clientState_t		cl;$/;"	v
cl_alphaents	cl_main.c	/^visentlist_t	cl_firstpassents, cl_visents, cl_alphaents;$/;"	v
cl_anglespeedkey	cl_input.c	/^cvar_t	cl_anglespeedkey = {"cl_anglespeedkey","1.5", CVAR_ARCHIVE};$/;"	v
cl_backpackfilter	cl_main.c	/^cvar_t	cl_backpackfilter = {"cl_backpackfilter", "0"};$/;"	v
cl_backspeed	cl_input.c	/^cvar_t	cl_backspeed = {"cl_backspeed","400", CVAR_ARCHIVE};$/;"	v
cl_beam_mod	cl_tent.c	/^static model_t	*cl_explo_mod, *cl_bolt1_mod, *cl_bolt2_mod, *cl_bolt3_mod, *cl_beam_mod;$/;"	v	file:
cl_beams	cl_tent.c	/^beam_t cl_beams[MAX_BEAMS];$/;"	v
cl_blurs	vx_motiontrail.c	/^motionblur_t	cl_blurs[MAX_BLURS];$/;"	v
cl_bob	cl_view.c	/^cvar_t	cl_bob = {"cl_bob", "0.00"};$/;"	v
cl_bobcycle	cl_view.c	/^cvar_t	cl_bobcycle = {"cl_bobcycle", "0.0"};$/;"	v
cl_bobup	cl_view.c	/^cvar_t	cl_bobup = {"cl_bobup", "0.0"};$/;"	v
cl_bolt1_mod	cl_tent.c	/^static model_t	*cl_explo_mod, *cl_bolt1_mod, *cl_bolt2_mod, *cl_bolt3_mod, *cl_beam_mod;$/;"	v	file:
cl_bolt2_mod	cl_tent.c	/^static model_t	*cl_explo_mod, *cl_bolt1_mod, *cl_bolt2_mod, *cl_bolt3_mod, *cl_beam_mod;$/;"	v	file:
cl_bolt3_mod	cl_tent.c	/^static model_t	*cl_explo_mod, *cl_bolt1_mod, *cl_bolt2_mod, *cl_bolt3_mod, *cl_beam_mod;$/;"	v	file:
cl_c2sImpulseBackup	cl_input.c	/^cvar_t	cl_c2sImpulseBackup = {"cl_c2sImpulseBackup","3"};$/;"	v
cl_c2sImpulseBackup_enum	menu_options.c	/^const char* cl_c2sImpulseBackup_enum[] = {$/;"	v
cl_c2spps	cl_input.c	/^cvar_t	cl_c2spps = {"cl_c2spps","0"};$/;"	v
cl_chasecam	cl_cam.c	/^cvar_t cl_chasecam = {"cl_chasecam", "1"};		\/\/ "through the eyes" view$/;"	v
cl_chatmode	keys.c	/^cvar_t cl_chatmode          = {"cl_chatmode", "2"};$/;"	v
cl_chatmode_enum	menu_options.c	/^const char* cl_chatmode_enum[] = {$/;"	v
cl_chatsound	cl_main.c	/^cvar_t	cl_chatsound = {"s_chat_custom", "1"};$/;"	v
cl_chunksperframe	cl_main.c	/^cvar_t  cl_chunksperframe  = {"cl_chunksperframe", "2"};$/;"	v
cl_cmdline	cl_main.c	/^cvar_t cl_cmdline			= {"cl_cmdline", "", CVAR_ROM};$/;"	v
cl_confirmquit	cl_main.c	/^cvar_t	cl_confirmquit = {"cl_confirmquit", "0"}; \/\/ , CVAR_INIT$/;"	v
cl_crossx	cl_view.c	/^cvar_t  cl_crossx = {"cl_crossx", "0", CVAR_ARCHIVE};$/;"	v
cl_crossy	cl_view.c	/^cvar_t  cl_crossy = {"cl_crossy", "0", CVAR_ARCHIVE};$/;"	v
cl_crypt_rcon	cl_main.c	/^cvar_t	cl_crypt_rcon = {"cl_crypt_rcon", "1"};$/;"	v
cl_curlybraces	cmd.c	/^cvar_t cl_curlybraces = {"cl_curlybraces", "0"};$/;"	v
cl_deadbodyfilter	cl_main.c	/^cvar_t	cl_deadbodyfilter = {"cl_deadbodyFilter", "0"};$/;"	v
cl_demoPingInterval	cl_main.c	/^cvar_t	cl_demoPingInterval = {"cl_demoPingInterval", "5"};$/;"	v
cl_demoplay_flash	cl_view.c	/^cvar_t	cl_demoplay_flash = {"cl_demoplay_flash", ".33", CVAR_ARCHIVE};$/;"	v
cl_demospeed	cl_main.c	/^cvar_t	cl_demospeed = {"cl_demospeed", "1"};$/;"	v
cl_dlights	cl_main.c	/^dlight_t		cl_dlights[MAX_DLIGHTS];$/;"	v
cl_drawgun	cl_view.c	/^cvar_t	cl_drawgun = {"r_drawviewmodel", "1"};$/;"	v
cl_efrags	cl_main.c	/^efrag_t			cl_efrags[MAX_EFRAGS];$/;"	v
cl_enemybothskin	teamplay.c	/^cvar_t	cl_enemybothskin = {"enemybothskin", "", 0, OnChangeSkinForcing};$/;"	v
cl_enemybottomcolor	teamplay.c	/^cvar_t	cl_enemybottomcolor = {"enemybottomcolor", "-1", 0, OnChangeColorForcing};$/;"	v
cl_enemypentskin	teamplay.c	/^cvar_t	cl_enemypentskin = {"enemypentskin", "", 0, OnChangeSkinForcing};$/;"	v
cl_enemyquadskin	teamplay.c	/^cvar_t	cl_enemyquadskin = {"enemyquadskin", "", 0, OnChangeSkinForcing};$/;"	v
cl_enemyskin	teamplay.c	/^cvar_t	cl_enemyskin = {"enemyskin", "", 0, OnChangeSkinForcing};$/;"	v
cl_enemytopcolor	teamplay.c	/^cvar_t  cl_enemytopcolor = {"enemytopcolor", "-1", 0, OnChangeColorForcing};$/;"	v
cl_entframecount	cl_nqdemo.c	/^int cl_entframecount;$/;"	v
cl_entities	cl_main.c	/^centity_t       cl_entities[CL_MAX_EDICTS];$/;"	v
cl_explo_mod	cl_tent.c	/^static model_t	*cl_explo_mod, *cl_bolt1_mod, *cl_bolt2_mod, *cl_bolt3_mod, *cl_beam_mod;$/;"	v	file:
cl_explosions	cl_tent.c	/^explosion_t	cl_explosions[MAX_EXPLOSIONS];$/;"	v
cl_explosions_headnode	cl_tent.c	/^explosion_t cl_explosions_headnode, *cl_free_explosions;$/;"	v
cl_fakename	cl_main.c	/^cvar_t	cl_fakename = {"cl_fakename", ""};$/;"	v
cl_fakeshaft	cl_main.c	/^cvar_t	cl_fakeshaft = {"cl_fakeshaft", "0", 0, Rulesets_OnChange_cl_fakeshaft};$/;"	v
cl_filterdrawviewmodel	cl_main.c	/^cvar_t	cl_filterdrawviewmodel = {"cl_filterdrawviewmodel", "0"};$/;"	v
cl_firstpassents	cl_main.c	/^visentlist_t	cl_firstpassents, cl_visents, cl_alphaents;$/;"	v
cl_fix_mvd	cl_main.c	/^cvar_t cl_fix_mvd				= {"cl_fix_mvd", "0", CVAR_ARCHIVE};$/;"	v
cl_flame0_model	cl_ents.c	/^model_t *cl_flame0_model;$/;"	v
cl_floodprot	cl_main.c	/^cvar_t cl_floodprot			= {"cl_floodprot", "0"};$/;"	v
cl_forwardspeed	cl_input.c	/^cvar_t	cl_forwardspeed = {"cl_forwardspeed","400", CVAR_ARCHIVE};$/;"	v
cl_fp_messages	cl_main.c	/^cvar_t cl_fp_messages		= {"cl_fp_messages", "4"};$/;"	v
cl_fp_persecond	cl_main.c	/^cvar_t cl_fp_persecond		= {"cl_fp_persecond", "4"};$/;"	v
cl_free_explosions	cl_tent.c	/^explosion_t cl_explosions_headnode, *cl_free_explosions;$/;"	v
cl_gibfilter	cl_main.c	/^cvar_t	cl_gibfilter = {"cl_gibFilter", "0"};$/;"	v
cl_hightrack	cl_cam.c	/^cvar_t cl_hightrack = {"cl_hightrack", "0" };	\/\/ track high fragger $/;"	v
cl_hud	cl_screen.c	/^cvar_t	cl_hud					= {"cl_hud", "1"};	\/\/ QW262 HUD.$/;"	v
cl_hudswap	cl_main.c	/^cvar_t	cl_hudswap	= {"cl_hudswap", "0", CVAR_ARCHIVE};$/;"	v
cl_independentPhysics	cl_main.c	/^cvar_t  cl_independentPhysics = {"cl_independentPhysics", "1", 0, Rulesets_OnChange_indphys};$/;"	v
cl_keypad	in_linux.c	/^cvar_t	cl_keypad       = {"cl_keypad",      "1", CVAR_SILENT};$/;"	v
cl_keypad	in_mac.c	/^cvar_t	cl_keypad = {"cl_keypad","0"};$/;"	v
cl_keypad	in_win.c	/^cvar_t	cl_keypad = {"cl_keypad", "1", CVAR_ARCHIVE};$/;"	v
cl_lerp_monsters	cl_main.c	/^cvar_t cl_lerp_monsters			= {"cl_lerp_monsters", "1"};$/;"	v
cl_lightstyle	cl_main.c	/^lightstyle_t	cl_lightstyle[MAX_LIGHTSTYLES];$/;"	v
cl_loadFragfiles	fragstats.c	/^cvar_t cl_loadFragfiles = {"cl_loadFragfiles", "1"};$/;"	v
cl_maxfps	cl_main.c	/^cvar_t	cl_maxfps	= {"cl_maxfps", "0", CVAR_ARCHIVE};$/;"	v
cl_mediaroot	cl_main.c	/^cvar_t  cl_mediaroot = {"cl_mediaroot", "0", CVAR_ARCHIVE};$/;"	v
cl_model_bobbing	cl_main.c	/^cvar_t cl_model_bobbing		= {"cl_model_bobbing", "1"};$/;"	v
cl_modelindex_s	client.h	/^typedef enum cl_modelindex_s {$/;"	g
cl_modelindex_t	client.h	/^} cl_modelindex_t;$/;"	t	typeref:enum:cl_modelindex_s
cl_modelindices	cl_ents.c	/^cl_modelindex_t cl_modelindices[cl_num_modelindices];$/;"	v
cl_modelnames	cl_ents.c	/^char *cl_modelnames[cl_num_modelindices];$/;"	v
cl_movespeedkey	cl_input.c	/^cvar_t	cl_movespeedkey = {"cl_movespeedkey","2.0", CVAR_ARCHIVE};$/;"	v
cl_multiview	gl_rmain.c	/^cvar_t cl_multiview = {"cl_multiview", "0" };$/;"	v
cl_multiview	r_main.c	/^cvar_t cl_multiview = {"cl_multiview", "0" };$/;"	v
cl_muzzleflash	cl_main.c	/^cvar_t	cl_muzzleflash = {"cl_muzzleflash", "1"};$/;"	v
cl_mvdisplayhud	gl_rmain.c	/^cvar_t cl_mvdisplayhud = {"cl_mvdisplayhud", "1"};$/;"	v
cl_mvdisplayhud	r_main.c	/^cvar_t cl_mvdisplayhud = {"cl_mvdisplayhud", "1"};$/;"	v
cl_mvhudflip	gl_rmain.c	/^cvar_t cl_mvhudflip = {"cl_mvhudflip", "0"};$/;"	v
cl_mvhudflip	r_main.c	/^cvar_t cl_mvhudflip = {"cl_mvhudflip", "0"};$/;"	v
cl_mvhudpos	gl_rmain.c	/^cvar_t cl_mvhudpos = {"cl_mvhudpos", "bottom center"};$/;"	v
cl_mvhudpos	r_main.c	/^cvar_t cl_mvhudpos = {"cl_mvhudpos", "bottom center"};$/;"	v
cl_mvhudvertical	gl_rmain.c	/^cvar_t cl_mvhudvertical = {"cl_mvhudvertical", "0"};$/;"	v
cl_mvhudvertical	r_main.c	/^cvar_t cl_mvhudvertical = {"cl_mvhudvertical", "0"};$/;"	v
cl_mvinset	gl_rmain.c	/^cvar_t cl_mvinset = {"cl_mvinset", "0"};$/;"	v
cl_mvinset	r_main.c	/^cvar_t cl_mvinset = {"cl_mvinset", "0"};$/;"	v
cl_mvinsetcrosshair	gl_rmain.c	/^cvar_t cl_mvinsetcrosshair = {"cl_mvinsetcrosshair", "1"};$/;"	v
cl_mvinsetcrosshair	r_main.c	/^cvar_t cl_mvinsetcrosshair = {"cl_mvinsetcrosshair", "1"};$/;"	v
cl_mvinsethud	gl_rmain.c	/^cvar_t cl_mvinsethud = {"cl_mvinsethud", "1"};$/;"	v
cl_mvinsethud	r_main.c	/^cvar_t cl_mvinsethud = {"cl_mvinsethud", "1"};$/;"	v
cl_name_as_skin	skin.c	/^cvar_t	cl_name_as_skin = {"cl_name_as_skin", "0", 0, OnChangeSkinForcing};$/;"	v
cl_newlerp	cl_main.c	/^cvar_t cl_newlerp				= {"cl_newlerp", "0"};$/;"	v
cl_nodelta	cl_input.c	/^cvar_t	cl_nodelta = {"cl_nodelta","0"};$/;"	v
cl_nofake	teamplay.c	/^cvar_t	cl_nofake = {"cl_nofake", "2"};$/;"	v
cl_nolerp	cl_main.c	/^cvar_t cl_nolerp			= {"cl_nolerp", "0"}; \/\/ 0 is good for indep-phys, 1 is good for old-phys$/;"	v
cl_nopred	cl_pred.c	/^cvar_t	cl_nopred	= {"cl_nopred", "0"};$/;"	v
cl_novweps	cl_main.c	/^cvar_t cl_novweps				= {"cl_novweps", "0"};$/;"	v
cl_num_modelindices	client.h	/^	cl_num_modelindices,$/;"	e	enum:cl_modelindex_s
cl_num_oldprojectiles	cl_ents.c	/^int				cl_num_oldprojectiles;					$/;"	v
cl_num_projectiles	cl_ents.c	/^int				cl_num_projectiles;$/;"	v
cl_oldprojectiles	cl_ents.c	/^projectile_t	cl_oldprojectiles[MAX_PROJECTILES];		$/;"	v
cl_onload	cl_main.c	/^cvar_t cl_onload = {"cl_onload", "menu", CVAR_ARCHIVE};$/;"	v
cl_parseFunChars	teamplay.c	/^cvar_t	cl_parseFunChars = {"cl_parseFunChars", "1"};$/;"	v
cl_parseSay	teamplay.c	/^cvar_t	cl_parseSay = {"cl_parseSay", "1"};$/;"	v
cl_parseWhiteText	cl_main.c	/^cvar_t	cl_parseWhiteText = {"cl_parseWhiteText", "1"};$/;"	v
cl_parsefrags	fragstats.c	/^cvar_t cl_parsefrags = {"cl_parseFrags", "1"};$/;"	v
cl_pext_chunkeddownloads	cl_main.c	/^cvar_t  cl_pext_chunkeddownloads  = {"cl_pext_chunkeddownloads", "1"};$/;"	v
cl_pext_other	cl_main.c	/^cvar_t  cl_pext_other = {"cl_pext_other", "0"};		\/\/ will break demos!$/;"	v
cl_physfps	cl_main.c	/^cvar_t	cl_physfps	= {"cl_physfps", "0"};	\/\/#fps$/;"	v
cl_pitchspeed	cl_input.c	/^cvar_t	cl_pitchspeed = {"cl_pitchspeed","150", CVAR_ARCHIVE};$/;"	v
cl_predict_half	cl_main.c	/^cvar_t	cl_predict_half = {"cl_predict_half", "0"};$/;"	v
cl_predict_players	cl_main.c	/^cvar_t	cl_predict_players = {"cl_predict_players", "1"};$/;"	v
cl_projectiles	cl_ents.c	/^projectile_t	cl_projectiles[MAX_PROJECTILES];$/;"	v
cl_pushlatency	cl_pred.c	/^cvar_t	cl_pushlatency = {"pushlatency", "-999"};$/;"	v
cl_restrictions	cl_main.c	/^cvar_t	cl_restrictions = {"cl_restrictions", "0"}; \/\/ 1 is FuhQuake and QW262 defaults$/;"	v
cl_rocket2grenade	cl_main.c	/^cvar_t	cl_rocket2grenade = {"cl_r2g", "0"};$/;"	v
cl_rollalpha	cl_view.c	/^cvar_t	cl_rollalpha = {"cl_rollalpha", "20"};$/;"	v
cl_rollangle	cl_view.c	/^cvar_t	cl_rollangle = {"cl_rollangle", "0"};$/;"	v
cl_rollspeed	cl_view.c	/^cvar_t	cl_rollspeed = {"cl_rollspeed", "200"};$/;"	v
cl_savehistory	keys.c	/^cvar_t	cl_savehistory = {"cl_savehistory", "1"};$/;"	v
cl_sayfilter_coloredtext	cl_cmd.c	/^cvar_t cl_sayfilter_coloredtext = {"cl_sayfilter_coloredtext", "0"};$/;"	v
cl_sayfilter_sendboth	cl_cmd.c	/^cvar_t cl_sayfilter_sendboth = {"cl_sayfilter_sendboth", "0"};$/;"	v
cl_sbar	cl_main.c	/^cvar_t	cl_sbar		= {"cl_sbar", "0", CVAR_ARCHIVE};$/;"	v
cl_sfx_knighthit	cl_tent.c	/^sfx_t	*cl_sfx_wizhit, *cl_sfx_knighthit, *cl_sfx_tink1, *cl_sfx_ric1, *cl_sfx_ric2, *cl_sfx_ric3, *cl_sfx_r_exp3;$/;"	v
cl_sfx_r_exp3	cl_tent.c	/^sfx_t	*cl_sfx_wizhit, *cl_sfx_knighthit, *cl_sfx_tink1, *cl_sfx_ric1, *cl_sfx_ric2, *cl_sfx_ric3, *cl_sfx_r_exp3;$/;"	v
cl_sfx_ric1	cl_tent.c	/^sfx_t	*cl_sfx_wizhit, *cl_sfx_knighthit, *cl_sfx_tink1, *cl_sfx_ric1, *cl_sfx_ric2, *cl_sfx_ric3, *cl_sfx_r_exp3;$/;"	v
cl_sfx_ric2	cl_tent.c	/^sfx_t	*cl_sfx_wizhit, *cl_sfx_knighthit, *cl_sfx_tink1, *cl_sfx_ric1, *cl_sfx_ric2, *cl_sfx_ric3, *cl_sfx_r_exp3;$/;"	v
cl_sfx_ric3	cl_tent.c	/^sfx_t	*cl_sfx_wizhit, *cl_sfx_knighthit, *cl_sfx_tink1, *cl_sfx_ric1, *cl_sfx_ric2, *cl_sfx_ric3, *cl_sfx_r_exp3;$/;"	v
cl_sfx_tink1	cl_tent.c	/^sfx_t	*cl_sfx_wizhit, *cl_sfx_knighthit, *cl_sfx_tink1, *cl_sfx_ric1, *cl_sfx_ric2, *cl_sfx_ric3, *cl_sfx_r_exp3;$/;"	v
cl_sfx_wizhit	cl_tent.c	/^sfx_t	*cl_sfx_wizhit, *cl_sfx_knighthit, *cl_sfx_tink1, *cl_sfx_ric1, *cl_sfx_ric2, *cl_sfx_ric3, *cl_sfx_r_exp3;$/;"	v
cl_showFragsMessages	fragstats.c	/^cvar_t cl_showFragsMessages = {"con_fragmessages", "1"};$/;"	v
cl_showkeycodes	keys.c	/^cvar_t	cl_showkeycodes = {"cl_showkeycodes", "0"};$/;"	v
cl_shownet	cl_main.c	/^cvar_t	cl_shownet = {"cl_shownet", "0"};	\/\/ can be 0, 1, or 2$/;"	v
cl_sidespeed	cl_input.c	/^cvar_t	cl_sidespeed = {"cl_sidespeed","400", CVAR_ARCHIVE};$/;"	v
cl_smartjump	cl_input.c	/^cvar_t	cl_smartjump = {"cl_smartjump", "1"};$/;"	v
cl_solid_players	cl_main.c	/^cvar_t	cl_solid_players = {"cl_solid_players", "1"};$/;"	v
cl_static_entities	cl_main.c	/^entity_t		cl_static_entities[MAX_STATIC_ENTITIES];$/;"	v
cl_staticsounds	cl_main.c	/^cvar_t	cl_staticsounds = {"cl_staticSounds", "1"};$/;"	v
cl_teambothskin	teamplay.c	/^cvar_t	cl_teambothskin = {"teambothskin", "", 0, OnChangeSkinForcing};$/;"	v
cl_teambottomcolor	teamplay.c	/^cvar_t  cl_teambottomcolor = {"teambottomcolor", "-1", 0, OnChangeColorForcing};$/;"	v
cl_teampentskin	teamplay.c	/^cvar_t	cl_teampentskin = {"teampentskin", "", 0, OnChangeSkinForcing};$/;"	v
cl_teamquadskin	teamplay.c	/^cvar_t	cl_teamquadskin = {"teamquadskin", "", 0, OnChangeSkinForcing};$/;"	v
cl_teamskin	teamplay.c	/^cvar_t	cl_teamskin = {"teamskin", "", 0, OnChangeSkinForcing};$/;"	v
cl_teamtopcolor	teamplay.c	/^cvar_t  cl_teamtopcolor = {"teamtopcolor", "-1", 0, OnChangeColorForcing};$/;"	v
cl_timeout	cl_main.c	/^cvar_t	cl_timeout = {"cl_timeout", "60"};$/;"	v
cl_upspeed	cl_input.c	/^cvar_t	cl_upspeed = {"cl_upspeed","200", CVAR_ARCHIVE};$/;"	v
cl_useimagesinfraglog	fragstats.c	/^cvar_t cl_useimagesinfraglog = {"cl_useimagesinfraglog", "0"};$/;"	v
cl_useproxy	cl_main.c	/^cvar_t cl_useproxy			= {"cl_useproxy", "0"};$/;"	v
cl_verify_qwprotocol	cl_main.c	/^cvar_t cl_verify_qwprotocol = {"cl_verify_qwprotocol", "1", CVAR_ARCHIVE};$/;"	v
cl_visbents	cl_main.c	/^visentlist_t	cl_visents, cl_visbents;$/;"	v
cl_visents	cl_main.c	/^visentlist_t	cl_firstpassents, cl_visents, cl_alphaents;$/;"	v
cl_visents	cl_main.c	/^visentlist_t	cl_visents, cl_visbents;$/;"	v
cl_vsync_lag_fix	cl_main.c	/^cvar_t	cl_vsync_lag_fix = {"cl_vsync_lag_fix", "0"};$/;"	v
cl_vsync_lag_tweak	cl_main.c	/^cvar_t	cl_vsync_lag_tweak = {"cl_vsync_lag_tweak", "1.0"};$/;"	v
cl_warncmd	cmd.c	/^cvar_t cl_warncmd = {"cl_warncmd", "0"};$/;"	v
cl_weaponhide	cl_input.c	/^cvar_t  cl_weaponhide = {"cl_weaponhide", "0"};$/;"	v
cl_weaponpreselect	cl_input.c	/^cvar_t  cl_weaponpreselect = {"cl_weaponpreselect", "0"};$/;"	v
cl_window_caption	cl_main.c	/^cvar_t cl_window_caption	= {"cl_window_caption", "1"};$/;"	v
cl_yawspeed	cl_input.c	/^cvar_t	cl_yawspeed = {"cl_yawspeed","140", CVAR_ARCHIVE};$/;"	v
clamp	mathlib.h	201;"	d
classname	progdefs.h	/^	string_t	classname;$/;"	m	struct:__anon253
clc_bad	protocol.h	186;"	d
clc_delta	protocol.h	191;"	d
clc_move	protocol.h	189;"	d
clc_nop	protocol.h	187;"	d
clc_stringcmd	protocol.h	190;"	d
clc_tmove	protocol.h	192;"	d
clc_upload	protocol.h	193;"	d
cleaf_s	cmodel.c	/^typedef struct cleaf_s {$/;"	s	file:
cleaf_t	cmodel.c	/^} cleaf_t;$/;"	t	typeref:struct:cleaf_s	file:
cleanupAGL	vid_mac.c	/^static void cleanupAGL(AGLContext ctx)$/;"	f	file:
clearColor	gl_rmain.c	/^float clearColor[3] = {0, 0, 0};$/;"	v
clearconsole	cl_screen.c	/^int		clearconsole;$/;"	v
clearnotify	cl_screen.c	/^int		clearnotify;$/;"	v
cleartime	net.h	/^	double		cleartime;			\/\/ if curtime > nc->cleartime, free to go$/;"	m	struct:__anon240
client	cl_screen.c	/^	int 		client;$/;"	m	struct:ti_player_s	file:
client	cl_screen.c	/^	int 		client;$/;"	m	struct:ws_player_s	file:
clientPersistent_t	client.h	/^} clientPersistent_t;$/;"	t	typeref:struct:__anon122
clientState_t	client.h	/^} clientState_t;$/;"	t	typeref:struct:__anon125
client_frame_t	server.h	/^} client_frame_t;$/;"	t	typeref:struct:__anon266
client_s	server.h	/^typedef struct client_s {$/;"	s
client_t	server.h	/^} client_t;$/;"	t	typeref:struct:client_s
clients	server.h	/^	client_t	clients[MAX_CLIENTS];$/;"	m	struct:__anon269
clip	mgraph.h	/^	m_int			clip;			\/* Is clipping on?					*\/$/;"	m	struct:__anon216
clipRect	mgraph.h	/^	rect_t			clipRect;		\/* Clipping rectangle dimensions	*\/$/;"	m	struct:__anon216
clip_current	r_sprite.c	/^static int				clip_current;$/;"	v	file:
clip_maxs	cmodel.h	/^	vec3_t		clip_maxs;$/;"	m	struct:__anon131
clip_mins	cmodel.h	/^	vec3_t		clip_mins;$/;"	m	struct:__anon131
clip_verts	r_sprite.c	/^static vec5_t			clip_verts[2][MAXWORKINGVERTS];$/;"	v	file:
clipboard	utils.c	/^static char clipboard[CLIPBOARDSIZE] = "\\0";    \/\/ for clipboard implementation$/;"	v	file:
clipboard_buffer	sys_linux.c	/^static char clipboard_buffer[SYS_CLIPBOARD_SIZE] = {0};$/;"	v	file:
clipboard_buffer	sys_mac.c	/^static char clipboard_buffer[SYS_CLIPBOARD_SIZE] = {0};$/;"	v	file:
clipmodels	client.h	/^	cmodel_t	*clipmodels[MAX_MODELS];$/;"	m	struct:__anon125
clipnodes	cmodel.h	/^	dclipnode_t	*clipnodes;$/;"	m	struct:__anon131
clipplane_s	r_local.h	/^typedef struct clipplane_s$/;"	s
clipplane_t	r_local.h	/^} clipplane_t;$/;"	t	typeref:struct:clipplane_s
close_button	ez_window.h	/^	ez_button_t				*close_button;		\/\/ The close button in the upper right corner.$/;"	m	struct:ez_window_s
closesocket	net.h	56;"	d
clpred_newpos	cl_pred.c	/^qbool clpred_newpos = false;$/;"	v
clr	console.h	/^	clrinfo_t *clr; \/\/ clr[maxsize]$/;"	m	struct:__anon136
clrinfo_s	draw.h	/^typedef struct clrinfo_s$/;"	s
clrinfo_t	draw.h	/^} clrinfo_t;$/;"	t	typeref:struct:clrinfo_s
cls	cl_main.c	/^clientPersistent_t	cls;$/;"	v
clump	zone2.h	/^	struct memclump_s *clump;$/;"	m	struct:memheader_s	typeref:struct:memheader_s::memclump_s
clumpchain	zone2.h	/^	struct memclump_s *clumpchain;$/;"	m	struct:mempool_s	typeref:struct:mempool_s::memclump_s
cm	fs.c	/^	unsigned char cm;$/;"	m	struct:__anon20	file:
cmd	client.h	/^	usercmd_t			cmd;				\/\/ Cmd that generated the frame.$/;"	m	struct:__anon114
cmd	pmove.h	/^	usercmd_t	cmd;$/;"	m	struct:__anon245
cmd	sv_user.c	/^usercmd_t	cmd;$/;"	v
cmd_alias	cmd.c	/^cmd_alias_t	*cmd_alias;$/;"	v
cmd_alias_hash	cmd.c	/^cmd_alias_t *cmd_alias_hash[ALIAS_HASHPOOL_SIZE];$/;"	v
cmd_alias_s	cmd.h	/^typedef struct cmd_alias_s {$/;"	s
cmd_alias_t	cmd.h	/^} cmd_alias_t;$/;"	t	typeref:struct:cmd_alias_s
cmd_argc	cmd.h	/^	int		cmd_argc; \/\/ arguments count$/;"	m	struct:tokenizecontext_s
cmd_args	cmd.h	/^	char	cmd_args[\/*MAX_COM_TOKEN*\/ 1024 * 2]; \/\/ here we store original of what we parse, from argv(1) to argv(argc() - 1)$/;"	m	struct:tokenizecontext_s
cmd_argv	cmd.h	/^	char	*cmd_argv[MAX_ARGS]; \/\/ links to argv_buf[]$/;"	m	struct:tokenizecontext_s
cmd_function_s	cmd.h	/^typedef struct cmd_function_s {$/;"	s
cmd_function_t	cmd.h	/^} cmd_function_t;$/;"	t	typeref:struct:cmd_function_s
cmd_functions	cmd.c	/^\/*static*\/ cmd_function_t	*cmd_functions;		\/\/ possible commands to execute$/;"	v
cmd_hash_array	cmd.c	/^cmd_function_t	*cmd_hash_array[CMD_HASHPOOL_SIZE];$/;"	v
cmd_mempool	cmd.c	/^static mempool_t *cmd_mempool;$/;"	v	file:
cmd_null_string	cmd.c	/^static	char	*cmd_null_string = "";$/;"	v	file:
cmd_tokenizecontext	cmd.c	/^static  tokenizecontext_t cmd_tokenizecontext;$/;"	v	file:
cmdmsg	client.h	/^	sizebuf_t	cmdmsg;$/;"	m	struct:__anon122
cmdmsg_data	client.h	/^	byte		cmdmsg_data[512]; \/\/\/< have no idea which size here must be$/;"	m	struct:__anon122
cmdtime	server.h	/^	double		cmdtime;			\/\/ realtime of last message$/;"	m	struct:client_s
cmdtime_msec	cl_input.c	/^int cmdtime_msec = 0;$/;"	v
cmod_base	cmodel.c	/^static byte			*cmod_base;					\/\/ for CM_Load* functions$/;"	v	file:
cmodel_t	cmodel.h	/^} cmodel_t;$/;"	t	typeref:struct:__anon135
cmp_type	parser.c	/^} cmp_type;$/;"	t	typeref:enum:__anon54	file:
cnode_s	cmodel.c	/^typedef struct cnode_s {$/;"	s	file:
cnode_t	cmodel.c	/^} cnode_t;$/;"	t	typeref:struct:cnode_s	file:
cnttextures	gl_texture.c	/^static int cnttextures[4] = {-1, -1, -1, -1};$/;"	v	file:
col	ez_label.h	/^	int col;$/;"	m	struct:ez_label_textpos_s
col_count	stats_grid.h	/^	int				col_count;				\/\/ Column count.$/;"	m	struct:stats_weight_grid_s
col_t	cl_screen.c	/^typedef byte col_t[4]; \/\/ FIXME: why 4?$/;"	t	file:
col_t	gl_rpart.c	/^typedef byte col_t[4];$/;"	t	file:
color	cl_screen.c	/^	col_t		color;$/;"	m	struct:ci_player_s	file:
color	client.h	/^	byte			color[3];			\/\/ use such color if type == lt_custom$/;"	m	struct:__anon118
color	client.h	/^	byte			color[3];			\/\/ use such color if type == lt_custom$/;"	m	struct:customlight_s
color	console.c	/^	float		color[4];$/;"	m	struct:conpart_s	file:
color	cvar.h	/^	byte	color[4];			\/\/ gets set in Cvar_Set, Cvar_Register, Cvar_Create$/;"	m	struct:cvar_s
color	d_iface.h	/^	float		color;$/;"	m	struct:particle_s
color	d_iface.h	/^	float	u, v, zi, color;$/;"	m	struct:__anon141
color	d_iface.h	/^	int		color;$/;"	m	struct:__anon143
color	ez_label.h	/^	clrinfo_t				color;						\/\/ The text color of the label. \/\/ TODO : Make this a pointer?$/;"	m	struct:ez_label_s
color	gl_rpart.c	/^	col_t		color;$/;"	m	struct:particle_s	file:
color	mgraph.h	/^	color_t			color;			\/* Foreground color					*\/$/;"	m	struct:__anon216
color	mvd_cam.h	/^	byte color[3];$/;"	m	struct:c_curve_s
color	new_menu.c	/^	char	*color;$/;"	m	struct:menu_ct	file:
color	r_part.c	/^	float		color;$/;"	m	struct:particle_s	file:
color	stats_grid.h	/^	int		color;							\/\/ Team color.$/;"	m	struct:stats_team_s
color	vx_coronas.c	/^	vec3_t color;$/;"	m	struct:__anon89	file:
colorBits	tr_types.h	/^	int						colorBits, depthBits, stencilBits;$/;"	m	struct:__anon286
colorMode	mgraph.h	/^	m_int			colorMode;		\/* Current color mode				*\/$/;"	m	struct:__anon216
colorTab	mgraph.h	/^	color_t	*colorTab;		\/* Color lookup table cache					*\/$/;"	m	struct:__anon218
color_black	vid_common_gl.c	/^byte color_black[4] = {0, 0, 0, 255};$/;"	v
color_depth	mac_prefs.h	/^	int	color_depth;			\/\/ Menu selection # for monitor bit depth$/;"	m	struct:__anon179
color_focused	ez_button.h	/^	byte					color_focused[4];	\/\/ Color of the focus indicator of the button.$/;"	m	struct:ez_button_s
color_hover	ez_button.h	/^	byte					color_hover[4];		\/\/ Color when the button is hovered.$/;"	m	struct:ez_button_s
color_normal	ez_button.h	/^	byte					color_normal[4];	\/\/ The normal color of the button.$/;"	m	struct:ez_button_s
color_planes	image.c	/^    char			color_planes;$/;"	m	struct:pcx_s	file:
color_pressed	ez_button.h	/^	byte					color_pressed[4];	\/\/ Color when the button is pressed.$/;"	m	struct:ez_button_s
color_t	draw.h	/^typedef int color_t;$/;"	t
color_t	mgraph.h	/^typedef	ulong		color_t;$/;"	t
color_white	vid_common_gl.c	/^byte color_white[4] = {255, 255, 255, 255};$/;"	v
colorbits	mac.h	/^	UInt16	colorbits;		\/\/ gl_vid_colorbits.value (16|32)$/;"	m	struct:__anon173
coloredtext_enum	menu_options.c	/^const char* coloredtext_enum[] = { "off", "simple", "frag messages" };$/;"	v
coloredtextfilterlevel_e	cl_cmd.c	/^typedef enum coloredtextfilterlevel_e$/;"	g	file:
coloredtextfilterlevel_e	cl_cmd.c	/^} coloredtextfilterlevel_e;$/;"	t	typeref:enum:coloredtextfilterlevel_e	file:
colormap	progdefs.h	/^	float	colormap;$/;"	m	struct:__anon253
colormap	protocol.h	/^	int		colormap;$/;"	m	struct:entity_state_s
colormap	r_main.c	/^void		*colormap;$/;"	v
colormap	render.h	/^	byte					*colormap;$/;"	m	struct:entity_s
colormap	vid.h	/^	pixel_t			*colormap;		\/\/ 256 * VID_GRADES size$/;"	m	struct:__anon294
colormap16	vid.h	/^	unsigned short	*colormap16;	\/\/ 256 * VID_GRADES size$/;"	m	struct:__anon294
colormapIndex	image.c	/^	unsigned short	colormapIndex, colormapLength;$/;"	m	struct:TGAHeader_s	file:
colormapLength	image.c	/^	unsigned short	colormapIndex, colormapLength;$/;"	m	struct:TGAHeader_s	file:
colormapSize	image.c	/^	byte			colormapSize;$/;"	m	struct:TGAHeader_s	file:
colormapType	image.c	/^	byte			idLength, colormapType, imageType;$/;"	m	struct:TGAHeader_s	file:
colors	settings_page.c	/^static const char* colors[14] = { "White", "Brown", "Lavender", "Khaki", "Red", "Lt Brown", "Peach", "Lt Peach", "Purple", "Dk Purple", "Tan", "Green", "Yellow", "Blue" };$/;"	v	file:
coltextfilter_color	cl_cmd.c	/^	coltextfilter_color = 1,$/;"	e	enum:coloredtextfilterlevel_e	file:
coltextfilter_colorwhite	cl_cmd.c	/^	coltextfilter_colorwhite = 2$/;"	e	enum:coloredtextfilterlevel_e	file:
coltextfilter_none	cl_cmd.c	/^	coltextfilter_none = 0,$/;"	e	enum:coloredtextfilterlevel_e	file:
column_s	EX_browser.h	/^typedef struct column_s$/;"	s
columns	EX_browser.h	/^} columns;$/;"	t	typeref:struct:column_s
com_argc	common.c	/^static int	com_argc;$/;"	v	file:
com_args_original	common.c	/^char 		*com_args_original;$/;"	v
com_argv	common.c	/^static char	**com_argv;$/;"	v	file:
com_basedir	fs.c	/^char	com_basedir[MAX_OSPATH];	\/\/ c:\/quake$/;"	v
com_filesearchpath	fs.c	/^char *com_filesearchpath;$/;"	v
com_gamedir	fs.c	/^char	com_gamedir[MAX_OSPATH];    \/\/ c:\/quake\/qw$/;"	v
com_gamedirfile	fs.c	/^char	com_gamedirfile[MAX_QPATH]; \/\/ qw tf ctf and etc. In other words single dir name without path$/;"	v
com_homedir	fs.c	/^char	com_homedir[MAX_PATH];		\/\/ something really long C:\/Documents and Settings\/qqshka$/;"	v
com_serveractive	common.c	/^qbool com_serveractive = false;$/;"	v
com_token	common.c	/^char		com_token[MAX_COM_TOKEN];$/;"	v
com_userdir	fs.c	/^char	com_userdir[MAX_OSPATH] = {0};$/;"	v
command	client.h	/^	usercmd_t	command;		\/\/ Last command for prediction.$/;"	m	struct:__anon112
command	mvd_cam.h	/^	char					command[32];$/;"	m	struct:mvd_menu_s
commandLine	sys_mac.c	/^char  *commandLine;$/;"	v
command_argument_s	xsd_command.h	/^typedef struct command_argument_s$/;"	s
command_argument_t	xsd_command.h	/^command_argument_t;$/;"	t	typeref:struct:command_argument_s
command_line	mac_prefs.h	/^	char	command_line[PREF_CMDLINE_LEN];$/;"	m	struct:__anon179
commands	gl_mesh.c	/^int		commands[8192];$/;"	v
commands	gl_model.h	/^	int					commands;	\/\/ gl command list with embedded s\/t$/;"	m	struct:aliashdr_s
compare	linked_list.c	/^	int (*compare)(void *data1, void *data2);$/;"	m	struct:linked_list	file:
compare	sv_main.c	/^	unsigned	compare;$/;"	m	struct:__anon64	file:
compass_max	mosdm.c	/^double	compass_max;$/;"	v
compass_min	mosdm.c	/^double	compass_min;$/;"	v
compass_restrict	mosdm.c	/^double	compass_restrict;$/;"	v
compass_time	mosdm.c	/^double	compass_time;$/;"	v
compl_clen	keys.c	/^static int	compl_clen;$/;"	v	file:
compl_common	keys.c	/^static char	compl_common[64];$/;"	v	file:
compl_len	keys.c	/^static int	compl_len;$/;"	v	file:
completed_time	client.h	/^	int			completed_time;		\/\/\/< latched from time at intermission start$/;"	m	struct:__anon125
components	cl_screen.c	/^	int			components;$/;"	m	struct:ci_texture_s	file:
components	console.c	/^	int			components;$/;"	m	struct:cp_texture_s	file:
components	gl_rpart.c	/^	int			components;$/;"	m	struct:particle_texture_s	file:
compressed_vis	gl_model.h	/^	byte				*compressed_vis;$/;"	m	struct:mleaf_s
compressed_vis	r_model.h	/^	byte				*compressed_vis;$/;"	m	struct:mleaf_s
compression	wad.h	/^	char		compression;$/;"	m	struct:__anon299
con	console.c	/^console_t	con;$/;"	v
con_addtimestamp	console.c	/^qbool    con_addtimestamp;$/;"	v
con_clearnotify	console.c	/^cvar_t		con_clearnotify = {"con_clearnotify","1"};$/;"	v
con_cursorspeed	console.c	/^float		con_cursorspeed = 4;$/;"	v
con_funchars_mode	keys.c	/^cvar_t con_funchars_mode    = {"con_funchars_mode", "0"};$/;"	v
con_highlight	console.c	/^cvar_t		con_highlight  		= {"con_highlight","0"};$/;"	v
con_highlight_mark	console.c	/^cvar_t		con_highlight_mark 	= {"con_highlight_mark",""};$/;"	v
con_initialized	console.c	/^qbool	con_initialized = false;$/;"	v
con_linewidth	console.c	/^int 		con_linewidth;		\/\/ characters across screen$/;"	v
con_margin	console.c	/^int         con_margin=0;       \/\/ kazik: margin on the left side$/;"	v
con_notify	console.c	/^cvar_t		con_notify = {"con_notify", "1"};$/;"	v
con_notifylines	console.c	/^int			con_notifylines;			\/\/ scan lines to clear for notify lines$/;"	v
con_notifytime	console.c	/^cvar_t		con_notifytime = {"con_notifytime","3"};		\/\/seconds$/;"	v
con_ormask	console.c	/^int			con_ormask;$/;"	v
con_particles_alpha	console.c	/^cvar_t		con_particles_alpha  = {"con_particles_alpha",  "1"};$/;"	v
con_particles_images	console.c	/^cvar_t		con_particles_images = {"con_particles_images", "3"};$/;"	v
con_redchars	keys.c	/^qbool con_redchars    = false;$/;"	v
con_shift	console.c	/^cvar_t      con_shift  = {"con_shift", "0"};$/;"	v
con_sound_mm1_file	console.c	/^cvar_t      con_sound_mm1_file      = {"s_mm1_file",      "misc\/talk.wav"};$/;"	v
con_sound_mm1_volume	console.c	/^cvar_t      con_sound_mm1_volume    = {"s_mm1_volume",    "1"};$/;"	v
con_sound_mm2_file	console.c	/^cvar_t      con_sound_mm2_file      = {"s_mm2_file",      "misc\/talk.wav"};$/;"	v
con_sound_mm2_volume	console.c	/^cvar_t      con_sound_mm2_volume    = {"s_mm2_volume",    "1"};$/;"	v
con_sound_other_file	console.c	/^cvar_t      con_sound_other_file    = {"s_otherchat_file",    "misc\/talk.wav"};$/;"	v
con_sound_other_volume	console.c	/^cvar_t      con_sound_other_volume  = {"s_otherchat_volume",  "1"};$/;"	v
con_sound_spec_file	console.c	/^cvar_t      con_sound_spec_file     = {"s_spec_file",     "misc\/talk.wav"};$/;"	v
con_sound_spec_volume	console.c	/^cvar_t      con_sound_spec_volume   = {"s_spec_volume",   "1"};$/;"	v
con_suppress	console.c	/^qbool	con_suppress = false;$/;"	v
con_tilde_mode	keys.c	/^cvar_t con_tilde_mode       = {"con_tilde_mode", "0"};$/;"	v
con_times	console.c	/^float		con_times[NUM_CON_TIMES];	\/\/ cls.realtime time the line was generated$/;"	v
con_timestamps	console.c	/^cvar_t      con_timestamps  = {"con_timestamps", "0"};$/;"	v
con_totallines	console.c	/^int			con_totallines;		\/\/ total lines in console scrollback$/;"	v
con_vislines	console.c	/^int			con_vislines;$/;"	v
con_wordwrap	console.c	/^cvar_t		con_wordwrap = {"con_wordwrap","1"};$/;"	v
conback	gl_draw.c	/^static mpic_t	conback;$/;"	v	file:
concussioned	cl_screen.c	/^qbool	concussioned = false;$/;"	v
config_notify	vid_x11.c	/^static int config_notify = 0;$/;"	v	file:
config_notify_height	vid_x11.c	/^static int config_notify_height;$/;"	v	file:
config_notify_width	vid_x11.c	/^static int config_notify_width;$/;"	v	file:
configs_filelist	menu_options.c	/^filelist_t configs_filelist;$/;"	v
confirm_func	EX_browser.c	/^void (*confirm_func)(void);$/;"	v
confirm_text	EX_browser.c	/^char confirm_text[64];$/;"	v
confirmation	EX_browser.c	/^qbool confirmation;$/;"	v
conheight	vid.h	/^	unsigned		conheight;$/;"	m	struct:__anon294
connect_time	cl_main.c	/^double		connect_time = 0;		\/\/ for connection retransmits$/;"	v
connection	mp3_mpd.c	/^static mpd_Connection *connection;$/;"	v	file:
connection	mp3_xmms2.c	/^static xmmsc_connection_t *connection;$/;"	v	file:
connection_started	server.h	/^	double		connection_started;	\/\/ or time of disconnect for zombies$/;"	m	struct:client_s
conpart	console.c	/^static conpart_t conpart[MAX_CONPART];$/;"	v	file:
conpart_s	console.c	/^typedef struct conpart_s {$/;"	s	file:
conpart_t	console.c	/^} conpart_t;$/;"	t	typeref:struct:conpart_s	file:
conpart_tex_t	console.c	/^} conpart_tex_t;$/;"	t	typeref:enum:__anon9	file:
console_command	new_menu.c	/^	char *console_command;$/;"	m	struct:MS_Popup_Entry	file:
console_t	console.h	/^} console_t;$/;"	t	typeref:struct:__anon136
consolecommands	mvd_cam.h	/^	char consolecommands[1024];$/;"	m	struct:c_curve_s
consolekeys	keys.c	/^qbool	consolekeys[UNKNOWN + 256];	\/\/ if true, can't be rebound while in console$/;"	v
content	new_menu.c	/^	struct	menu_ct *content;$/;"	m	struct:menu_s	typeref:struct:menu_s::menu_ct	file:
content	xsd_document.h	/^    document_tag_t *content;$/;"	m	struct:xml_document_s
content_height	new_menu.c	/^	int		content_height;$/;"	m	struct:menu_s	file:
content_width	new_menu.c	/^	int		content_width;$/;"	m	struct:menu_s	file:
contents	bspfile.h	/^	int			contents;$/;"	m	struct:__anon108
contents	cl_screen.c	/^	void*					contents;$/;"	m	struct:hud_element_s	file:
contents	cmodel.c	/^	int				contents; \/\/ 0, to differentiate from leafs$/;"	m	struct:cnode_s	file:
contents	cmodel.c	/^	int				contents; \/\/ a negative contents number$/;"	m	struct:cleaf_s	file:
contents	gl_model.h	/^	int					contents;					\/\/ 0, to differentiate from leafs$/;"	m	struct:mnode_s
contents	gl_model.h	/^	int					contents;					\/\/ wil be a negative contents number$/;"	m	struct:mleaf_s
contents	r_model.h	/^	int					contents;					\/\/ 0, to differentiate from leafs$/;"	m	struct:mnode_s
contents	r_model.h	/^	int					contents;					\/\/ wil be a negative contents number$/;"	m	struct:mleaf_s
context	sha1.c	/^SHA1_CTX	context;$/;"	v
control_anchor_viewport	ez_controls.h	/^	control_anchor_viewport		= (1 << 10),	\/\/ Anchor to the visible edges of the controls instead of the virtual edges.$/;"	e	enum:ez_control_flags_e
control_clicked	ez_controls.h	/^	control_clicked				= (1 << 6),		\/\/ Is the control being clicked? (If the mouse button is released outside the control a click event isn't raised).$/;"	e	enum:ez_control_iflags_e
control_contained	ez_controls.h	/^	control_contained			= (1 << 6),		\/\/ Is the control contained within it's parent or can it go outside its edges?$/;"	e	enum:ez_control_flags_e
control_enabled	ez_controls.h	/^	control_enabled				= (1 << 0),		\/\/ Is the control usable?$/;"	e	enum:ez_control_flags_e
control_focusable	ez_controls.h	/^	control_focusable			= (1 << 2),		\/\/ Can the control be given focus?$/;"	e	enum:ez_control_flags_e
control_focused	ez_controls.h	/^	control_focused				= (1 << 0),		\/\/ Is the control currently in focus?$/;"	e	enum:ez_control_iflags_e
control_hidden_by_parent	ez_controls.h	/^	control_hidden_by_parent	= (1 << 9)		\/\/ Is the control hidden cause it's parent is not visible?$/;"	e	enum:ez_control_iflags_e
control_ignore_mouse	ez_controls.h	/^	control_ignore_mouse		= (1 << 9),		\/\/ Should the control ignore mouse input?$/;"	e	enum:ez_control_flags_e
control_listen_repeat_mouse	ez_controls.h	/^	control_listen_repeat_mouse	= (1 << 12)		\/\/ Should the control listen to repeated mouse button events?$/;"	e	enum:ez_control_flags_e
control_mouse_over	ez_controls.h	/^	control_mouse_over			= (1 << 7),		\/\/ Is the mouse over the control?$/;"	e	enum:ez_control_iflags_e
control_movable	ez_controls.h	/^	control_movable				= (1 << 1),		\/\/ Can the control be moved?$/;"	e	enum:ez_control_flags_e
control_move_parent	ez_controls.h	/^	control_move_parent			= (1 << 11),	\/\/ When moving this control, should we also move it's parent?$/;"	e	enum:ez_control_flags_e
control_moving	ez_controls.h	/^	control_moving				= (1 << 1),		\/\/ Is the control in the process of being moved?$/;"	e	enum:ez_control_iflags_e
control_resize_h	ez_controls.h	/^	control_resize_h			= (1 << 3),		\/\/ Is the control resizeable horizontally?$/;"	e	enum:ez_control_flags_e
control_resize_v	ez_controls.h	/^	control_resize_v			= (1 << 4),		\/\/ Is the control resizeable vertically?$/;"	e	enum:ez_control_flags_e
control_resizeable	ez_controls.h	/^	control_resizeable			= (1 << 5),		\/\/ Is the control resizeable at all, not just by the user? \/\/ TODO : Should this be external?$/;"	e	enum:ez_control_flags_e
control_resizing_bottom	ez_controls.h	/^	control_resizing_bottom		= (1 << 5),		\/\/ Resizing downards.$/;"	e	enum:ez_control_iflags_e
control_resizing_left	ez_controls.h	/^	control_resizing_left		= (1 << 2),		\/\/ Are we resizing the control to the left?$/;"	e	enum:ez_control_iflags_e
control_resizing_right	ez_controls.h	/^	control_resizing_right		= (1 << 3),		\/\/ Are we resizing the control to the right?$/;"	e	enum:ez_control_iflags_e
control_resizing_top	ez_controls.h	/^	control_resizing_top		= (1 << 4),		\/\/ Resizing upwards.$/;"	e	enum:ez_control_iflags_e
control_scrollable	ez_controls.h	/^	control_scrollable			= (1 << 8),		\/\/ Is the control scrollable$/;"	e	enum:ez_control_flags_e
control_tree	ez_controls.h	/^	struct ez_tree_s		*control_tree;			\/\/ The control tree the control belongs to.$/;"	m	struct:ez_control_s	typeref:struct:ez_control_s::ez_tree_s
control_update_anchorgap	ez_controls.h	/^	control_update_anchorgap	= (1 << 8),		\/\/ Update the anchor gap when resizing the control?$/;"	e	enum:ez_control_iflags_e
control_visible	ez_controls.h	/^	control_visible				= (1 << 7),		\/\/ Is the control visible?$/;"	e	enum:ez_control_flags_e
conversion_formula_found	hud_common.c	/^static qbool conversion_formula_found = false;$/;"	v	file:
convert_function	xsd.c	/^    XSD_DocumentConvertType convert_function;$/;"	m	struct:xsd_mapping_s	file:
conwidth	vid.h	/^	unsigned		conwidth;$/;"	m	struct:__anon294
coop	sv_main.c	/^cvar_t	coop = {"coop", "0", CVAR_SERVERINFO};$/;"	v
coopmaxplayers	menu_multiplayer.c	/^static int coopmaxplayers = 2;$/;"	v	file:
coord	teamplay.h	/^	vec3_t coord;$/;"	m	struct:locdata_s
coords	cl_screen.c	/^	float		coords[MAX_CITEX_COMPONENTS][4];$/;"	m	struct:ci_texture_s	file:
coords	cl_screen.c	/^	signed char				coords[4]; \/\/ pos_type, x, y, bg$/;"	m	struct:hud_element_s	file:
coords	console.c	/^	float		coords[MAX_CPTEX_COMPONENTS][4];$/;"	m	struct:cp_texture_s	file:
coords	gl_rpart.c	/^	float		coords[MAX_PTEX_COMPONENTS][4];		$/;"	m	struct:particle_texture_s	file:
copied_time	cam_new.c	/^double copied_time;$/;"	v
copyprotected	fs.h	/^	qbool copyprotected;							\/\/ File found was in a pak$/;"	m	struct:vfsfile_s
corona_t	vx_coronas.c	/^} corona_t;$/;"	t	typeref:struct:__anon89	file:
coronatexture	vx_stuff.c	/^int coronatexture;$/;"	v
coronatexture	vx_stuff.h	/^int	coronatexture;$/;"	v
coronatype_t	vx_stuff.h	/^} coronatype_t;$/;"	t	typeref:enum:__anon295
cost	gl_rpart.c	/^static float cost[7] = {1.000000, 0.623490, -0.222521, -0.900969, -0.900969, -0.222521, 0.623490};$/;"	v	file:
count	client.h	/^	int			count;$/;"	m	struct:visentlist_s
count	cvar.h	/^	int		count;$/;"	m	struct:cvar_group_s
count	d_local.h	/^	int					u, v, count;$/;"	m	struct:sspan_s
count	d_polyse.c	/^	int				count;$/;"	m	struct:__anon10	file:
count	ez_controls.h	/^	int count;$/;"	m	struct:ez_double_linked_list_s
count	keys.c	/^int count = 0;$/;"	v
count	md4.c	/^    UINT4 count[2];             \/* number of bits, modulo 2^64 (lsb first) *\/$/;"	m	struct:__anon43	file:
count	mvd_utils_common.h	/^	int count ;$/;"	m	struct:mvd_pw_s
count	protocol.h	/^	int				count;$/;"	m	struct:temp_entity_list_s
count	r_shared.h	/^	int				u, v, count;$/;"	m	struct:espan_s
count	server.h	/^	int		count;$/;"	m	struct:__anon267
count	settings.h	/^	int count;			\/\/ amount of elements in set_tab$/;"	m	struct:__anon273
count	sha1.h	/^    unsigned long count[2];$/;"	m	struct:__anon275
count	stats_grid.h	/^	int				count;$/;"	m	struct:__anon283
count	thread_linux.c	/^static int count = 0;$/;"	v	file:
count	thread_win.c	/^static int count = 0;$/;"	v	file:
count_alias	keys.c	/^int count_alias = 0;$/;"	v
count_cmd	keys.c	/^int count_cmd = 0;$/;"	v
count_cvar	keys.c	/^int count_cvar = 0;$/;"	v
countdown	client.h	/^	qbool		countdown;$/;"	m	struct:__anon125
counter	tp_triggers.h	/^	int						counter;$/;"	m	struct:pcre_trigger_s
cp1251towc	textencoding.c	/^static wchar cp1251towc (char c)$/;"	f	file:
cp_dist	asm_draw.h	99;"	d
cp_initialized	console.c	/^qbool cp_initialized = false;$/;"	v
cp_leftedge	asm_draw.h	101;"	d
cp_next	asm_draw.h	100;"	d
cp_normal	asm_draw.h	98;"	d
cp_reserved	asm_draw.h	103;"	d
cp_rightedge	asm_draw.h	102;"	d
cp_size	asm_draw.h	104;"	d
cp_texture_s	console.c	/^typedef struct cp_texture_s {$/;"	s	file:
cp_texture_t	console.c	/^} cp_texture_t;$/;"	t	typeref:struct:cp_texture_s	file:
cp_textures	console.c	/^static cp_texture_t cp_textures[num_cptextures];$/;"	v	file:
cp_time	console.c	/^double cp_time;$/;"	v
cptex_drop	console.c	/^	cptex_drop,$/;"	e	enum:__anon9	file:
cpu_features	cpu.c	/^unsigned int cpu_features = 0;$/;"	v
crand	r_part.c	/^float crand(void)$/;"	f
crc	gl_model.h	/^	unsigned short		crc;$/;"	m	struct:model_s
crc	gl_texture.c	/^	unsigned	crc;$/;"	m	struct:__anon28	file:
crc	pr_comp.h	/^	int		crc;			\/\/ check of header file$/;"	m	struct:__anon251
crc	r_model.h	/^	unsigned short		crc;$/;"	m	struct:model_s
crctable	crc.c	/^static unsigned short crctable[256] =$/;"	v	file:
createDisplayDC	vid_win.c	/^MGLDC *createDisplayDC(int forcemem) {$/;"	f
create_game_options	menu_multiplayer.c	/^static settings_page create_game_options;$/;"	v	file:
create_game_options_arr	menu_multiplayer.c	/^static setting create_game_options_arr[] = {$/;"	v	file:
crosshair	cl_view.c	/^cvar_t	crosshair = {"crosshair", "3", CVAR_ARCHIVE};$/;"	v
crosshaircolor	cl_view.c	/^cvar_t	crosshaircolor = {"crosshaircolor", "255 255 255", CVAR_ARCHIVE | CVAR_COLOR};$/;"	v
crosshairdata	gl_draw.c	/^static byte crosshairdata[NUMCROSSHAIRS][64] = {$/;"	v	file:
crosshairdata	r_draw.c	/^static qbool crosshairdata[NUMCROSSHAIRS][64] = {$/;"	v	file:
crosshairpic	gl_draw.c	/^mpic_t		crosshairpic;$/;"	v
crosshairsize	cl_view.c	/^cvar_t	crosshairsize	= {"crosshairsize", "1"};$/;"	v
crosshairtexture_txt	gl_draw.c	/^int			crosshairtexture_txt;$/;"	v
crosshairtextures	gl_draw.c	/^int			crosshairtextures[NUMCROSSHAIRS];$/;"	v
crouch	client.h	/^	float		crouch;				\/\/\/< local amount for smoothing stepups$/;"	m	struct:__anon125
cs_connected	server.h	/^	cs_connected,	\/\/ has been assigned to a client_t, but not in game yet$/;"	e	enum:__anon265
cs_free	server.h	/^	cs_free,		\/\/ can be reused for a new connection$/;"	e	enum:__anon265
cs_spawned	server.h	/^	cs_spawned		\/\/ client is fully in game$/;"	e	enum:__anon265
cs_zombie	server.h	/^	cs_zombie,		\/\/ client has been disconnected, but don't reuse$/;"	e	enum:__anon265
cshift_empty	cl_view.c	/^cshift_t	cshift_empty = { {130,80,50}, 0 };$/;"	v
cshift_lava	cl_view.c	/^cshift_t	cshift_lava = { {255,80,0}, 150 };$/;"	v
cshift_slime	cl_view.c	/^cshift_t	cshift_slime = { {0,25,5}, 150 };$/;"	v
cshift_t	client.h	/^} cshift_t;$/;"	t	typeref:struct:__anon116
cshift_water	cl_view.c	/^cshift_t	cshift_water = { {130,80,50}, 128 };$/;"	v
cshifts	client.h	/^	cshift_t	cshifts[NUM_CSHIFTS];	\/\/\/< color shifts for damage, powerups and content types$/;"	m	struct:__anon125
ctime	mvd_utils_common.h	/^	double ctime;$/;"	m	struct:mvd_pw_s
ctrlDown	in_linux.c	/^int ctrlDown = 0;$/;"	v
ctrlDown	vid_mac.c	/^int ctrlDown = 0;$/;"	v
ctrlpoints	mvd_cam.h	/^	vec3_t ctrlpoints[20];$/;"	m	struct:c_curve_s
ctx	linux_glimp.c	/^static GLXContext ctx = NULL;$/;"	v	file:
ctx	vid_glx.c	/^static GLXContext ctx = NULL;$/;"	v	file:
curView_height	gl_bloom.c	/^static int  curView_height;$/;"	v	file:
curView_width	gl_bloom.c	/^static int  curView_width;$/;"	v	file:
curView_x	gl_bloom.c	/^static int  curView_x;$/;"	v	file:
curView_y	gl_bloom.c	/^static int  curView_y;$/;"	v	file:
curpos	Ctrl.h	/^    double curpos;                      $/;"	m	struct:ScrollBar_s
current	client.h	/^	entity_state_t	current;$/;"	m	struct:__anon115
current	console.h	/^	int		current;		\/\/ line where next message will be printed$/;"	m	struct:__anon136
current	cvar.c	/^static cvar_group_t *current = NULL;$/;"	v	file:
current_archive	EX_FileList.h	/^	char			current_archive[MAX_PATH+1];$/;"	m	struct:filelist_s
current_cam	mosdm.c	/^c_curve_t	*current_cam;$/;"	v
current_dir	EX_FileList.h	/^    char			current_dir[MAX_PATH+1];$/;"	m	struct:filelist_s
current_entry	EX_FileList.h	/^    int				current_entry;$/;"	m	struct:filelist_s
current_framebuffer	vid_x11.c	/^int current_framebuffer;$/;"	v
current_iv	r_edge.c	/^int	current_iv;$/;"	v
current_line	Ctrl_PageViewer.h	/^    int current_line;$/;"	m	struct:CPageViewer_page_s
current_link_index	Ctrl_PageViewer.h	/^    int current_link_index;$/;"	m	struct:CPageViewer_s
current_links	Ctrl_PageViewer.h	/^    document_rendered_link_t **current_links;$/;"	m	struct:CPageViewer_s
current_links_total	Ctrl_PageViewer.h	/^    int current_links_total;$/;"	m	struct:CPageViewer_s
current_mode	vid_svgalib.c	/^static int current_mode = 0;$/;"	v	file:
current_pal	cl_view.c	/^byte		current_pal[768];	\/\/ Tonik: used for screenshots$/;"	v
current_palette	vid_x11.c	/^static byte current_palette[768];$/;"	v	file:
current_point	mosdm.c	/^int *current_point;$/;"	v
current_pos	in_win.c	/^POINT		current_pos;$/;"	v
current_section	document_rendering.c	/^    document_rendered_section_t *current_section;$/;"	m	struct:document_rendering_context_s	file:
current_skill	sv_main.c	/^int			current_skill;			\/\/ for entity spawnflags checking$/;"	v
current_texture	gl_texture.c	/^static gltexture_t *current_texture = NULL;$/;"	v	file:
current_view	mosdm.c	/^c_curve_t	*current_view;$/;"	v
current_view_point	mosdm.c	/^int *current_view_point;$/;"	v
currentammo	progdefs.h	/^	float	currentammo;$/;"	m	struct:__anon253
currententity	gl_rmain.c	/^entity_t	*currententity;$/;"	v
currententity	r_bsp.c	/^entity_t		*currententity;$/;"	v
currentenum	snd_win.c	/^static int	currentenum = 0;$/;"	v	file:
currentfile	vfs_zip.c	/^	vfsfile_t *currentfile;	\/\/our unzip.c can only handle one active file at any one time$/;"	m	struct:zipfile_s	file:
currentgammaramp	linux_glimp.c	/^static unsigned short *currentgammaramp = NULL;$/;"	v	file:
currentgammaramp	vid_glx.c	/^unsigned short *currentgammaramp = NULL;$/;"	v
currentgammaramp	vid_mac.c	/^unsigned short		*currentgammaramp = NULL;$/;"	v
currentgammaramp	vid_wgl.c	/^unsigned short *currentgammaramp = NULL;$/;"	v
currentgammaramp	win_glimp.c	/^unsigned short *currentgammaramp = NULL;$/;"	v
currentmodel	gl_rsurf.c	/^model_t		*currentmodel;$/;"	v
currentplayer_num	mvd_autotrack.c	/^static int currentplayer_num;$/;"	v	file:
currentpos	image.c	/^	int currentpos;$/;"	m	struct:__anon34	file:
currentpos	vfs_gzip.c	/^	unsigned long currentpos;$/;"	m	struct:__anon73	file:
currentpos	vfs_pak.c	/^    unsigned long currentpos;$/;"	m	struct:__anon77	file:
currentpos	vfs_tar.c	/^	unsigned long currentpos;$/;"	m	struct:__anon78	file:
currenttexture	gl_texture.c	/^int currenttexture = -1;$/;"	v
currteam	cl_main.c	/^char	currteam[MAX_INFO_STRING];	\/\/ The name of the current team being tracked in multiview mode.$/;"	v
cursize	q_shared.h	/^	int		cursize;$/;"	m	struct:sizebuf_s
cursor_sensitivity	cl_input.c	/^cvar_t	cursor_sensitivity = {"scr_cursor_sensitivity", "1", CVAR_ARCHIVE};$/;"	v
cursor_t	mgraph.h	/^	} cursor_t;$/;"	t	typeref:struct:__anon210
cursor_x	cl_screen.c	/^double cursor_x = 0, cursor_y = 0;$/;"	v
cursor_y	cl_screen.c	/^double cursor_x = 0, cursor_y = 0;$/;"	v
curtime	host.c	/^double		curtime;$/;"	v
custom	gl_rpart.c	/^	float		custom;		$/;"	m	struct:particle_tree_s	file:
customCrosshair_Init	gl_draw.c	/^void customCrosshair_Init(void)$/;"	f
customCrosshair_Init	r_draw.c	/^void customCrosshair_Init(void)$/;"	f
customcrosshair_loaded	gl_draw.c	/^static int customcrosshair_loaded = CROSSHAIR_NONE;$/;"	v	file:
customcrosshair_loaded	r_draw.c	/^static qbool customcrosshair_loaded;$/;"	v	file:
customcrosshairdata	gl_draw.c	/^static byte customcrosshairdata[64];$/;"	v	file:
customcrosshairdata	r_draw.c	/^static qbool customcrosshairdata[64];$/;"	v	file:
customgamma	linux_glimp.c	/^qbool customgamma         = false;$/;"	v
customgamma	vid_glx.c	/^qbool customgamma = false;$/;"	v
customgamma	vid_mac.c	/^static qbool customgamma = false;$/;"	v	file:
customgamma	vid_wgl.c	/^qbool customgamma = false;$/;"	v
customgamma	win_glimp.c	/^qbool customgamma		  = false;$/;"	v
customlight_s	client.h	/^typedef struct customlight_s {$/;"	s
customlight_t	client.h	/^} customlight_t;$/;"	t	typeref:struct:customlight_s
cvar	settings.h	/^	cvar_t* cvar;		\/\/ assigned variable; required for num, bool, named$/;"	m	struct:__anon272
cvar	teamplay.c	/^	cvar_t	*cvar;$/;"	m	struct:__anon69	file:
cvar_group_s	cvar.h	/^typedef struct cvar_group_s {$/;"	s
cvar_group_t	cvar.h	/^} cvar_group_t;$/;"	t	typeref:struct:cvar_group_s
cvar_groups	cvar.c	/^cvar_group_t *cvar_groups = NULL;$/;"	v
cvar_groups_list	cvar_groups.h	/^char *cvar_groups_list[] = {$/;"	v
cvar_hash	cvar.c	/^static cvar_t *cvar_hash[VAR_HASHPOOL_SIZE];$/;"	v	file:
cvar_mp3_player	mp3_player.c	/^cvar_t cvar_mp3_player = {"mp3_player", "",        0, OnChange_MP3_player};$/;"	v
cvar_mp3_player	mp3_player.c	/^cvar_t cvar_mp3_player = {"mp3_player", "mpd",     0, OnChange_MP3_player};$/;"	v
cvar_mp3_player	mp3_player.c	/^cvar_t cvar_mp3_player = {"mp3_player", "winamp",  0, OnChange_MP3_player};$/;"	v
cvar_mp3_player	mp3_player.c	/^cvar_t cvar_mp3_player = {"mp3_player", "xmms",    0, OnChange_MP3_player};$/;"	v
cvar_mp3_player	mp3_player.c	/^cvar_t cvar_mp3_player = {"mp3_player", "xmms2",   0, OnChange_MP3_player};$/;"	v
cvar_mp3_player	mp3_player.c	/^cvar_t cvar_mp3_player = {"mp3_player","audacious",0, OnChange_MP3_player};$/;"	v
cvar_s	cvar.h	/^typedef struct cvar_s {$/;"	s
cvar_seta	cvar.c	/^static qbool cvar_seta = false;$/;"	v	file:
cvar_t	cvar.h	/^} cvar_t;$/;"	t	typeref:struct:cvar_s
cvar_toggle	EX_browser.c	/^void cvar_toggle (cvar_t *var)$/;"	f
cvar_vars	cvar.c	/^cvar_t *cvar_vars;$/;"	v
cvar_viewdefault	cvar.c	/^cvar_t	cvar_viewdefault = {"cvar_viewdefault", "1"};$/;"	v
cvar_viewhelp	cvar.c	/^cvar_t	cvar_viewhelp    = {"cvar_viewhelp",    "1"};$/;"	v
cvar_viewlatched	cvar.c	/^cvar_t  cvar_viewlatched = {"cvar_viewlatched", "1"};$/;"	v
cvartype_t	xsd_variable.h	/^cvartype_t; $/;"	t	typeref:enum:__anon307
cx	block16.h	/^	movw	%cx,2(%edi)$/;"	v
cyr_trans_table	textencoding.c	/^char cyr_trans_table[] = {"ABVGDEZZIJKLMNOPRSTUFHCCSS'Y'EYY"};$/;"	v
d_8to16table	vid_common_gl.c	/^unsigned short d_8to16table[256];$/;"	v
d_8to16table	vid_win.c	/^unsigned short	d_8to16table[256];$/;"	v
d_8to24table	vid_common_gl.c	/^unsigned d_8to24table[256];$/;"	v
d_8to24table	vid_win.c	/^unsigned	d_8to24table[256];$/;"	v
d_8to24table2	vid_common_gl.c	/^unsigned d_8to24table2[256];$/;"	v
d_aflatcolor	d_polyse.c	/^int			d_aflatcolor;$/;"	v
d_aspancount	d_polyse.c	/^int				d_aspancount, d_countextrastep;$/;"	v
d_countextrastep	d_polyse.c	/^int				d_aspancount, d_countextrastep;$/;"	v
d_drawspans	d_init.c	/^void (*d_drawspans) (espan_t *pspan);$/;"	v
d_initial_rover	d_init.c	/^surfcache_t		*d_initial_rover;$/;"	v
d_light	d_polyse.c	/^int						d_sfrac, d_tfrac, d_light, d_zi;$/;"	v
d_lightbasestep	d_polyse.c	/^int						d_lightbasestep, d_pdestbasestep, d_ptexbasestep;$/;"	v
d_lightextrastep	d_polyse.c	/^int						d_tfracextrastep, d_lightextrastep, d_pdestextrastep;$/;"	v
d_lightstylevalue	gl_rmain.c	/^int			d_lightstylevalue[256];	\/\/ 8.8 fraction of base light value$/;"	v
d_lightstylevalue	r_main.c	/^int		d_lightstylevalue[256];	\/\/ 8.8 fraction of base light value$/;"	v
d_minmip	d_init.c	/^int				d_minmip;$/;"	v
d_mipcap	d_init.c	/^cvar_t	d_mipcap = {"d_mipcap", "0"};$/;"	v
d_mipscale	d_init.c	/^cvar_t	d_mipscale = {"d_mipscale", "1"};$/;"	v
d_pcolormap	d_polyse.c	/^byte		*d_pcolormap;$/;"	v
d_pdest	d_polyse.c	/^byte					*d_pdest, *d_ptex;$/;"	v
d_pdestbasestep	d_polyse.c	/^int						d_lightbasestep, d_pdestbasestep, d_ptexbasestep;$/;"	v
d_pdestextrastep	d_polyse.c	/^int						d_tfracextrastep, d_lightextrastep, d_pdestextrastep;$/;"	v
d_pedgespanpackage	d_polyse.c	/^spanpackage_t			*d_pedgespanpackage;$/;"	v
d_pix_max	d_modech.c	/^int	d_y_aspect_shift, d_pix_min, d_pix_max, d_pix_shift;$/;"	v
d_pix_min	d_modech.c	/^int	d_y_aspect_shift, d_pix_min, d_pix_max, d_pix_shift;$/;"	v
d_pix_shift	d_modech.c	/^int	d_y_aspect_shift, d_pix_min, d_pix_max, d_pix_shift;$/;"	v
d_ptex	d_polyse.c	/^byte					*d_pdest, *d_ptex;$/;"	v
d_ptexbasestep	d_polyse.c	/^int						d_lightbasestep, d_pdestbasestep, d_ptexbasestep;$/;"	v
d_ptexextrastep	d_polyse.c	/^int						d_ptexextrastep, d_sfracextrastep;$/;"	v
d_pz	d_polyse.c	/^short					*d_pz;$/;"	v
d_pzbasestep	d_polyse.c	/^int						d_pzextrastep, d_pzbasestep;$/;"	v
d_pzbuffer	d_vars.c	/^short			*d_pzbuffer;$/;"	v
d_pzextrastep	d_polyse.c	/^int						d_pzextrastep, d_pzbasestep;$/;"	v
d_roverwrapped	d_init.c	/^qbool		d_roverwrapped;$/;"	v
d_scalemip	d_init.c	/^float			d_scalemip[NUM_MIPS-1];$/;"	v
d_scantable	d_modech.c	/^int		d_scantable[MAXHEIGHT];$/;"	v
d_sdivzorigin	d_vars.c	/^float	d_sdivzorigin, d_tdivzorigin, d_ziorigin;$/;"	v
d_sdivzstepu	d_vars.c	/^float	d_sdivzstepu, d_tdivzstepu, d_zistepu;$/;"	v
d_sdivzstepv	d_vars.c	/^float	d_sdivzstepv, d_tdivzstepv, d_zistepv;$/;"	v
d_sfrac	d_polyse.c	/^int						d_sfrac, d_tfrac, d_light, d_zi;$/;"	v
d_sfracbasestep	d_polyse.c	/^int						d_sfracbasestep, d_tfracbasestep;$/;"	v
d_sfracextrastep	d_polyse.c	/^int						d_ptexextrastep, d_sfracextrastep;$/;"	v
d_spanpixcount	r_main.c	/^int		d_spanpixcount;$/;"	v
d_subdiv16	d_init.c	/^cvar_t	d_subdiv16 = {"d_subdiv16", "1"};$/;"	v
d_tdivzorigin	d_vars.c	/^float	d_sdivzorigin, d_tdivzorigin, d_ziorigin;$/;"	v
d_tdivzstepu	d_vars.c	/^float	d_sdivzstepu, d_tdivzstepu, d_zistepu;$/;"	v
d_tdivzstepv	d_vars.c	/^float	d_sdivzstepv, d_tdivzstepv, d_zistepv;$/;"	v
d_tfrac	d_polyse.c	/^int						d_sfrac, d_tfrac, d_light, d_zi;$/;"	v
d_tfracbasestep	d_polyse.c	/^int						d_sfracbasestep, d_tfracbasestep;$/;"	v
d_tfracextrastep	d_polyse.c	/^int						d_tfracextrastep, d_lightextrastep, d_pdestextrastep;$/;"	v
d_val	parser.h	/^	double d_val;	\/\/\/< double value$/;"	m	struct:expr_val
d_viewbuffer	d_vars.c	/^pixel_t			*d_viewbuffer;$/;"	v
d_vrectbottom_particle	d_modech.c	/^int	d_vrectx, d_vrecty, d_vrectright_particle, d_vrectbottom_particle;$/;"	v
d_vrectright_particle	d_modech.c	/^int	d_vrectx, d_vrecty, d_vrectright_particle, d_vrectbottom_particle;$/;"	v
d_vrectx	d_modech.c	/^int	d_vrectx, d_vrecty, d_vrectright_particle, d_vrectbottom_particle;$/;"	v
d_vrecty	d_modech.c	/^int	d_vrectx, d_vrecty, d_vrectright_particle, d_vrectbottom_particle;$/;"	v
d_xdenom	d_polyse.c	/^int			d_xdenom;$/;"	v
d_y_aspect_shift	d_modech.c	/^int	d_y_aspect_shift, d_pix_min, d_pix_max, d_pix_shift;$/;"	v
d_zi	d_polyse.c	/^int						d_sfrac, d_tfrac, d_light, d_zi;$/;"	v
d_zibasestep	d_polyse.c	/^int						d_ziextrastep, d_zibasestep;$/;"	v
d_ziextrastep	d_polyse.c	/^int						d_ziextrastep, d_zibasestep;$/;"	v
d_ziorigin	d_vars.c	/^float	d_sdivzorigin, d_tdivzorigin, d_ziorigin;$/;"	v
d_ziorigin	r_shared.h	/^	float		d_ziorigin, d_zistepu, d_zistepv;$/;"	m	struct:surf_s
d_zistepu	d_vars.c	/^float	d_sdivzstepu, d_tdivzstepu, d_zistepu;$/;"	v
d_zistepu	r_shared.h	/^	float		d_ziorigin, d_zistepu, d_zistepv;$/;"	m	struct:surf_s
d_zistepv	d_vars.c	/^float	d_sdivzstepv, d_tdivzstepv, d_zistepv;$/;"	v
d_zistepv	r_shared.h	/^	float		d_ziorigin, d_zistepu, d_zistepv;$/;"	m	struct:surf_s
d_zrowbytes	d_vars.c	/^unsigned int	d_zrowbytes;$/;"	v
d_zwidth	d_vars.c	/^unsigned int	d_zwidth;$/;"	v
daliasframe_t	modelgen.h	/^} daliasframe_t;$/;"	t	typeref:struct:__anon227
daliasframetype_t	modelgen.h	/^} daliasframetype_t;$/;"	t	typeref:struct:__anon232
daliasgroup_t	modelgen.h	/^} daliasgroup_t;$/;"	t	typeref:struct:__anon228
daliasinterval_t	modelgen.h	/^} daliasinterval_t;$/;"	t	typeref:struct:__anon230
daliasskingroup_t	modelgen.h	/^} daliasskingroup_t;$/;"	t	typeref:struct:__anon229
daliasskininterval_t	modelgen.h	/^} daliasskininterval_t;$/;"	t	typeref:struct:__anon231
daliasskintype_t	modelgen.h	/^} daliasskintype_t;$/;"	t	typeref:struct:__anon233
das	mvd_utils_common.h	/^	mvd_ds_t das;			\/\/dead alive stats$/;"	m	struct:mvd_info_s
data	EX_browser_ping.c	/^	byte data[MAX_PACKET];$/;"	m	union:ICMP_Packet_u	file:
data	EX_browser_ping.c	/^	byte data[MAX_PACKET];$/;"	m	union:IP_Packet_u	file:
data	common_draw.h	/^	cachepic_t data;$/;"	m	struct:cachepic_node_s
data	d_local.h	/^	byte				data[4];	\/\/ width*height elements$/;"	m	struct:surfcache_s
data	draw.h	/^	byte		data[4];	\/\/ variable sized$/;"	m	struct:__anon146
data	hash.h	/^	void *data;$/;"	m	struct:bucket_s
data	ignore.c	/^	char data[2048];$/;"	m	struct:flood_s	file:
data	image.c	/^    byte			data;		$/;"	m	struct:pcx_s	file:
data	image.h	/^	byte *data;$/;"	m	struct:__anon166
data	in_raw.h	/^	} data;$/;"	m	struct:tagRAWINPUT	typeref:union:tagRAWINPUT::__anon170
data	in_win.c	/^	long   data;	 \/\/	data (relative axis	pos)$/;"	m	struct:msnap_s	file:
data	net.c	/^	byte	data[MAX_UDP_PACKET];$/;"	m	struct:__anon51	file:
data	new_menu.c	/^	void *data;$/;"	m	struct:MS_Popup_Entry	file:
data	new_menu.c	/^	void *data;$/;"	m	struct:MS_Popup_Menu_Menu	file:
data	q_shared.h	/^	byte	*data;$/;"	m	struct:sizebuf_s
data	qsound.h	/^	unsigned char	data[1];$/;"	m	struct:sfxcache_s
data	r_shared.h	/^	void		*data;				\/\/ associated data like msurface_t$/;"	m	struct:surf_s
data	splines.c	/^	void	*data;$/;"	m	struct:spline	file:
data	splines.c	/^	void	*data;$/;"	m	struct:spline_point	file:
data	wad.h	/^	byte		data[4];			\/\/ variably sized$/;"	m	struct:__anon297
data	zone.h	/^	void *data;$/;"	m	struct:cache_user_s
data	zone2.h	/^	unsigned char *data;$/;"	m	struct:memexpandablearray_array_s
data_p	snd_mem.c	/^static unsigned char *data_p;$/;"	v	file:
datagram	server.h	/^	sizebuf_t	datagram;$/;"	m	struct:__anon264
datagram	server.h	/^	sizebuf_t	datagram;$/;"	m	struct:client_s
datagram_buf	server.h	/^	byte		datagram_buf[MAX_DATAGRAM];$/;"	m	struct:__anon264
datagram_buf	server.h	/^	byte		datagram_buf[MAX_DATAGRAM];$/;"	m	struct:client_s
datalen	net.c	/^	int		datalen;$/;"	m	struct:__anon51	file:
dataofs	bspfile.h	/^	int			dataofs[4];		\/\/ [nummiptex]$/;"	m	struct:__anon101
dataofs	qsound.h	/^	int		dataofs;		\/\/ chunk starts this many bytes from file start$/;"	m	struct:wavinfo_s
date	version.c	/^static char *date = __DATE__ ;$/;"	v	file:
date	xsd_document.h	/^    char *date;$/;"	m	struct:xml_document_s
day	match_tools.c	/^	char day[8];$/;"	m	struct:matchinfo_s	file:
days	console.c	/^char *days[7] = {$/;"	v
dbBufferReady	CarbonSndPlayDB.h	/^  dbBufferReady                 = 0x00000001, \/*double buffer is filled*\/$/;"	e	enum:__anon109
dbFlags	CarbonSndPlayDB.h	/^  long                dbFlags;$/;"	m	struct:SndDoubleBuffer
dbLastBuffer	CarbonSndPlayDB.h	/^  dbLastBuffer                  = 0x00000004  \/*last double buffer to play*\/$/;"	e	enum:__anon109
dbNumFrames	CarbonSndPlayDB.h	/^  long                dbNumFrames;$/;"	m	struct:SndDoubleBuffer
dbSoundData	CarbonSndPlayDB.h	/^  SInt8               dbSoundData[1];$/;"	m	struct:SndDoubleBuffer
dbUserInfo	CarbonSndPlayDB.h	/^  long                dbUserInfo[2];$/;"	m	struct:SndDoubleBuffer
db_time1	r_main.c	/^float	dp_time1, dp_time2, db_time1, db_time2, rw_time1, rw_time2;$/;"	v
db_time2	r_main.c	/^float	dp_time1, dp_time2, db_time1, db_time2, rw_time1, rw_time2;$/;"	v
dbhBufferPtr	CarbonSndPlayDB.h	/^  SndDoubleBufferPtr  dbhBufferPtr[2];$/;"	m	struct:SndDoubleBufferHeader
dbhBufferPtr	CarbonSndPlayDB.h	/^  SndDoubleBufferPtr  dbhBufferPtr[2];$/;"	m	struct:SndDoubleBufferHeader2
dbhCompressionID	CarbonSndPlayDB.h	/^  short               dbhCompressionID;$/;"	m	struct:SndDoubleBufferHeader
dbhCompressionID	CarbonSndPlayDB.h	/^  short               dbhCompressionID;$/;"	m	struct:SndDoubleBufferHeader2
dbhDoubleBack	CarbonSndPlayDB.h	/^  SndDoubleBackUPP    dbhDoubleBack;$/;"	m	struct:SndDoubleBufferHeader
dbhDoubleBack	CarbonSndPlayDB.h	/^  SndDoubleBackUPP    dbhDoubleBack;$/;"	m	struct:SndDoubleBufferHeader2
dbhFormat	CarbonSndPlayDB.h	/^  OSType              dbhFormat;$/;"	m	struct:SndDoubleBufferHeader2
dbhNumChannels	CarbonSndPlayDB.h	/^  short               dbhNumChannels;$/;"	m	struct:SndDoubleBufferHeader
dbhNumChannels	CarbonSndPlayDB.h	/^  short               dbhNumChannels;$/;"	m	struct:SndDoubleBufferHeader2
dbhPacketSize	CarbonSndPlayDB.h	/^  short               dbhPacketSize;$/;"	m	struct:SndDoubleBufferHeader
dbhPacketSize	CarbonSndPlayDB.h	/^  short               dbhPacketSize;$/;"	m	struct:SndDoubleBufferHeader2
dbhSampleRate	CarbonSndPlayDB.h	/^  UnsignedFixed       dbhSampleRate;$/;"	m	struct:SndDoubleBufferHeader
dbhSampleRate	CarbonSndPlayDB.h	/^  UnsignedFixed       dbhSampleRate;$/;"	m	struct:SndDoubleBufferHeader2
dbhSampleSize	CarbonSndPlayDB.h	/^  short               dbhSampleSize;$/;"	m	struct:SndDoubleBufferHeader
dbhSampleSize	CarbonSndPlayDB.h	/^  short               dbhSampleSize;$/;"	m	struct:SndDoubleBufferHeader2
dclipnode_t	bspfile.h	/^} dclipnode_t;$/;"	t	typeref:struct:__anon105
ddef_t	pr_comp.h	/^} ddef_t;$/;"	t	typeref:struct:__anon249
de_time1	r_main.c	/^float	se_time1, se_time2, de_time1, de_time2, dv_time1, dv_time2;$/;"	v
de_time2	r_main.c	/^float	se_time1, se_time2, de_time1, de_time2, dv_time1, dv_time2;$/;"	v
dead	client.h	/^	qbool dead;$/;"	m	struct:player_info_s
deadbodyfilter_enum	menu_options.c	/^const char* deadbodyfilter_enum[] =$/;"	v
deadflag	progdefs.h	/^	float	deadflag;$/;"	m	struct:__anon253
death_s	mvd_utils.c	/^typedef struct death_s	{$/;"	s	file:
death_t	mvd_utils.c	/^} death_t;$/;"	t	typeref:struct:death_s	file:
death_weight	stats_grid.h	/^	float			death_weight;			\/\/ The amount of deaths by this team in this cell (Never fades).$/;"	m	struct:cell_weight_s
deathcount	mvd_utils_common.h	/^	int deathcount;$/;"	m	struct:mvd_ds_s
deathmatch	client.h	/^	int			deathmatch;$/;"	m	struct:__anon125
deathmatch	match_tools.c	/^	int deathmatch;$/;"	m	struct:matchinfo_s	file:
deathmatch	mvd_utils.c	/^	int deathmatch;$/;"	m	struct:mvd_gameinfo_s	file:
deathmatch	mvd_utils_common.h	/^	int deathmatch;$/;"	m	struct:mvd_cg_info_s
deathmatch	sv_main.c	/^cvar_t	deathmatch = {"deathmatch", "1", CVAR_SERVERINFO};			\/\/ 0, 1, or 2$/;"	v
deaths	fragstats.c	/^	int deaths[MAX_CLIENTS];$/;"	m	struct:fragstats_s	file:
deathtrigger_time	teamplay.h	/^	double	deathtrigger_time;$/;"	m	struct:tvars_s
decay	client.h	/^	float			decay;				\/\/ drop this each second$/;"	m	struct:__anon118
decodeFUNC	textencoding.c	/^typedef wchar *(*decodeFUNC) (char *);$/;"	t	file:
decode_cp1251	textencoding.c	/^wchar *decode_cp1251 (char *str) {$/;"	f
decode_koi8q	textencoding.c	/^wchar *decode_koi8q (char *str) {$/;"	f
decode_string	textencoding.c	/^wchar *decode_string (const char *s)$/;"	f
decode_table	textencoding.c	/^} decode_table[] = {$/;"	v	typeref:struct:__anon70	file:
dedge_t	bspfile.h	/^} dedge_t;$/;"	t	typeref:struct:__anon106
dedicated	common.h	307;"	d
dedicated	common.h	309;"	d
dedicated	host.c	/^qbool	dedicated = false;$/;"	v
default_fov	cl_screen.c	/^cvar_t	default_fov				= {"default_fov", "90", CVAR_ARCHIVE, OnDefaultFovChange};$/;"	v
default_pkflags	teamplay.c	2353;"	d	file:
default_pointflags	teamplay.c	2367;"	d	file:
default_tookflags	teamplay.c	2357;"	d	file:
default_track	menu_demo.c	/^char default_track[DEMO_PLAYLIST_NAME_MAX];$/;"	v
defaultvalue	cvar.h	/^	char	*defaultvalue;$/;"	m	struct:cvar_s
defer	vfs_zip.c	/^	vfsfile_t *defer;$/;"	m	struct:__anon79	file:
del_removes	keys.c	/^int del_removes;$/;"	v
delta	client.h	/^    int delta;$/;"	m	struct:net_stat_result_s
delta	client.h	/^    qbool        delta;  \/\/ if deltaying$/;"	m	struct:packet_info_s
delta	in_win.c	/^	volatile int	delta[2];$/;"	m	struct:__anon35	file:
delta_sequence	client.h	/^	int					delta_sequence;		\/\/ Sequence number to delta from, -1 = full update.$/;"	m	struct:__anon114
delta_sequence	client.h	/^	int			delta_sequence;		\/\/\/< sequence number of the packet we can request$/;"	m	struct:__anon125
delta_sequence	server.h	/^	int			delta_sequence;		\/\/ -1 = no compression$/;"	m	struct:client_s
deltalerp	client.h	/^	double			deltalerp;$/;"	m	struct:__anon115
dem_all	protocol.h	414;"	d
dem_cmd	protocol.h	407;"	d
dem_mask	qtv.h	82;"	d
dem_multiple	protocol.h	411;"	d
dem_read	protocol.h	408;"	d
dem_set	protocol.h	409;"	d
dem_single	protocol.h	412;"	d
dem_stats	protocol.h	413;"	d
demo_autotrack	cl_main.c	/^cvar_t demo_autotrack = {"demo_autotrack", "0", CVAR_ARCHIVE}; \/\/ use or not autotrack info from mvd demos$/;"	v
demo_benchmarkdumps	cl_demo.c	/^cvar_t demo_benchmarkdumps = {"demo_benchmarkdumps", "1"};$/;"	v
demo_bookmark	nmenu_demo.c	/^struct demo_bookmark$/;"	s	file:
demo_browser_democolor	menu_demo.c	/^cvar_t	demo_browser_democolor		= {"demo_browser_democolor",	"255 255 255 255", CVAR_COLOR};	\/\/ White.$/;"	v
demo_browser_dircolor	menu_demo.c	/^cvar_t	demo_browser_dircolor		= {"demo_browser_dircolor",		"170 80 0 255", CVAR_COLOR};	\/\/ Redish.$/;"	v
demo_browser_handlers	menu_demo.c	/^CTabPage_Handlers_t demo_browser_handlers = {$/;"	v
demo_browser_interline	menu_demo.c	/^cvar_t  demo_browser_interline		= {"demo_browser_interline",	"0"};$/;"	v
demo_browser_scrollnames	menu_demo.c	/^cvar_t  demo_browser_scrollnames	= {"demo_browser_scrollnames",	"1"};$/;"	v
demo_browser_selectedcolor	menu_demo.c	/^cvar_t	demo_browser_selectedcolor	= {"demo_browser_selectedcolor","0 150 235 255", CVAR_COLOR};	\/\/ Light blue.$/;"	v
demo_browser_showdate	menu_demo.c	/^cvar_t  demo_browser_showdate		= {"demo_browser_showdate",		"1"};$/;"	v
demo_browser_showsize	menu_demo.c	/^cvar_t  demo_browser_showsize		= {"demo_browser_showsize",		"1"};$/;"	v
demo_browser_showstatus	menu_demo.c	/^cvar_t  demo_browser_showstatus		= {"demo_browser_showstatus",	"1"};$/;"	v
demo_browser_showtime	menu_demo.c	/^cvar_t  demo_browser_showtime		= {"demo_browser_showtime",		"0"};$/;"	v
demo_browser_sortmode	menu_demo.c	/^cvar_t  demo_browser_sortmode		= {"demo_browser_sortmode",		"1"};$/;"	v
demo_browser_stripnames	menu_demo.c	/^cvar_t  demo_browser_stripnames		= {"demo_browser_stripnames",	"1"};$/;"	v
demo_browser_zipcolor	menu_demo.c	/^cvar_t	demo_browser_zipcolor		= {"demo_browser_zipcolor",		"255 170 0 255", CVAR_COLOR};	\/\/ Orange.$/;"	v
demo_dir	cl_demo.c	/^cvar_t demo_dir = {"demo_dir", "", 0, OnChange_demo_dir};$/;"	v
demo_entry_handlers	menu_demo.c	/^CTabPage_Handlers_t demo_entry_handlers = {$/;"	v
demo_filelist	menu_demo.c	/^filelist_t demo_filelist;$/;"	v
demo_format	cl_demo.c	/^cvar_t			demo_format = {"demo_format", "qwz", 0, OnChange_demo_format};$/;"	v
demo_getpings	cl_main.c	/^cvar_t  demo_getpings      = {"demo_getpings",    "1"};$/;"	v
demo_keyframe_s	client.h	/^typedef struct demo_keyframe_s$/;"	s
demo_keyframe_t	client.h	/^} demo_keyframe_t;$/;"	t	typeref:struct:demo_keyframe_s
demo_keyframes	cl_demo.c	/^static demo_keyframe_t *demo_keyframes;$/;"	v	file:
demo_menu	nmenu_demo.c	/^struct menu_s *demo_menu;$/;"	v	typeref:struct:menu_s
demo_options_handlers	menu_demo.c	/^CTabPage_Handlers_t demo_options_handlers = {   $/;"	v
demo_playlist	menu_demo.c	/^demo_playlist_t demo_playlist[DEMO_PLAYLIST_MAX];$/;"	v
demo_playlist_base	menu_demo.c	/^static int demo_playlist_base = 0;$/;"	v	file:
demo_playlist_current_played	menu_demo.c	/^static int demo_playlist_current_played = 0;$/;"	v	file:
demo_playlist_cursor	menu_demo.c	/^static int demo_playlist_cursor = 0;$/;"	v	file:
demo_playlist_handlers	menu_demo.c	/^CTabPage_Handlers_t demo_playlist_handlers = {$/;"	v
demo_playlist_loop	menu_demo.c	/^cvar_t    demo_playlist_loop = {"demo_playlist_loop","0"};$/;"	v
demo_playlist_num	menu_demo.c	/^static int demo_playlist_num = 0;$/;"	v	file:
demo_playlist_opt_cursor	menu_demo.c	/^static int demo_playlist_opt_cursor = 0;$/;"	v	file:
demo_playlist_s	menu_demo.c	/^typedef struct demo_playlist_s$/;"	s	file:
demo_playlist_started	menu_demo.c	/^qbool demo_playlist_started = false;$/;"	v
demo_playlist_started_test	menu_demo.c	/^static int demo_playlist_started_test = 0;$/;"	v	file:
demo_playlist_t	menu_demo.c	/^} demo_playlist_t;$/;"	t	typeref:struct:demo_playlist_s	file:
demo_playlist_track_name	menu_demo.c	/^cvar_t    demo_playlist_track_name = {"demo_playlist_track_name",""};$/;"	v
demo_rewindtime	client.h	/^	double		demo_rewindtime;\/\/\/< The time that we should jump to when rewinding.$/;"	m	struct:__anon122
demo_tab	menu_demo.c	/^CTab_t demo_tab;$/;"	v
demo_tab_t	menu_demo.c	/^}	demo_tab_t;$/;"	t	typeref:enum:__anon44	file:
demo_time_length	cl_demo.c	/^float demo_time_length = 0;				\/\/ The length of the demo.$/;"	v
demo_track	menu_demo.c	/^char demo_track[DEMO_PLAYLIST_NAME_MAX];$/;"	v
democache	cl_demo.c	/^static sizebuf_t democache;$/;"	v	file:
democache_available	cl_demo.c	/^static qbool democache_available = false;	\/\/ Has the user opted to use a demo cache?$/;"	v	file:
democontrol_tree	demo_controls.c	/^static ez_tree_t democontrol_tree;$/;"	v	file:
democontrols_on	demo_controls.c	/^static qbool democontrols_on = false;$/;"	v	file:
democontrolskey	keys.c	/^qbool	democontrolskey[UNKNOWN + 256];$/;"	v
democtrl_menu	menu_ingame.c	/^settings_page democtrl_menu;$/;"	v
democtrl_menu_entries	menu_ingame.c	/^setting democtrl_menu_entries[] = {$/;"	v
demoformat_enum	menu_options.c	/^const char* demoformat_enum[] = { "QuakeWorld Demo", "qwd", "Qizmo compressed QWD", "qwz", "MultiViewDemo", "mvd" };$/;"	v
demomessage	client.h	/^	sizebuf_t	demomessage;$/;"	m	struct:__anon122
demomessage_data	client.h	/^	byte		demomessage_data[MAX_MSGLEN * 2];$/;"	m	struct:__anon122
demoname	cl_demo.c	/^static char demoname[2 * MAX_OSPATH];$/;"	v	file:
demoname	client.h	/^	char		demoname[MAX_PATH];$/;"	m	struct:__anon122
demoplayback	client.h	/^	demotype_t	demoplayback;$/;"	m	struct:__anon122
demoplsett	menu_demo.c	/^settings_page demoplsett;$/;"	v
demoplsett_arr	menu_demo.c	/^setting demoplsett_arr[] = {$/;"	v
demoprobe_parse_type_e	cl_demo.c	/^typedef enum demoprobe_parse_type_e$/;"	g	file:
demoprobe_parse_type_t	cl_demo.c	/^} demoprobe_parse_type_t;$/;"	t	typeref:enum:demoprobe_parse_type_e	file:
demorecording	client.h	/^	qbool		demorecording;$/;"	m	struct:__anon122
demorewinding	client.h	/^	qbool		demorewinding;$/;"	m	struct:__anon122
demoseeking	client.h	/^	qbool		demoseeking;$/;"	m	struct:__anon122
demostarttime	cl_demo.c	/^double		demostarttime;$/;"	v
demotest	client.h	/^	qbool		demotest;$/;"	m	struct:__anon122
demotime	client.h	/^	double		demotime;		\/\/\/< Scaled by cl_demospeed, reset when starting a demo.$/;"	m	struct:__anon122
demotype_e	client.h	/^typedef enum demotype_e$/;"	g
demotype_t	client.h	/^} demotype_t;$/;"	t	typeref:enum:demotype_e
depthBits	tr_types.h	/^	int						colorBits, depthBits, stencilBits;$/;"	m	struct:__anon286
depth_buffer	gl_framebuffer.h	/^	GLint	depth_buffer;		\/\/ The GL ID of the depth buffer.$/;"	m	struct:fb_s
depthtex	gl_framebuffer.h	/^	int		depthtex;			\/\/ The depth texture.$/;"	m	struct:fb_s
desc	vid_wgl.c	/^	char	*desc;$/;"	m	struct:__anon83	file:
desc	vid_win.c	/^	char	*desc;$/;"	m	struct:__anon86	file:
descent	mgraph.h	/^	m_int			descent;		\/* Descent value					*\/$/;"	m	struct:__anon214
descent	mgraph.h	/^	short			descent;		\/* Font descent value				*\/$/;"	m	struct:__anon213
description	cl_slist.h	/^	char *description;$/;"	m	struct:__anon128
description	ez_controls.h	/^	char					*description;			\/\/ A short description of the control.$/;"	m	struct:ez_control_s
description	fragstats.c	/^	char		*description;$/;"	m	struct:fragdef_s	file:
description	hud.h	/^    char *description;					\/\/ Little help.$/;"	m	struct:hud_s
description	menu_multiplayer.c	/^	char    *description;$/;"	m	struct:__anon45	file:
description	menu_multiplayer.c	/^	char    *description;$/;"	m	struct:__anon46	file:
description	settings.h	/^	const char* description;	\/\/ manual-like description$/;"	m	struct:__anon272
description	tr_init.c	/^    const char *description;$/;"	m	struct:vidmode_s	file:
description	vx_stuff.c	/^	char *description;$/;"	m	struct:__anon91	file:
description	xsd_command.h	/^    char *description;$/;"	m	struct:command_argument_s
description	xsd_command.h	/^    char *description;$/;"	m	struct:xml_command_s
description	xsd_document.h	/^    document_tag_t *description;$/;"	m	struct:document_tag_di_s
description	xsd_variable.h	/^    char *description;$/;"	m	struct:variable_enum_value_s
description	xsd_variable.h	/^    char *description;$/;"	m	struct:xml_variable_s
desired_position	cl_cam.c	/^static vec3_t desired_position; \/\/ where the camera wants to be.$/;"	v	file:
desktopBitsPixel	tr_types.h	/^	int		 desktopBitsPixel;$/;"	m	struct:__anon287
desktopHeight	tr_types.h	/^	int		 desktopWidth, desktopHeight;$/;"	m	struct:__anon287
desktopWidth	tr_types.h	/^	int		 desktopWidth, desktopHeight;$/;"	m	struct:__anon287
destIP	EX_browser_ping.c	/^    unsigned int destIP;$/;"	m	struct:IP_header_s	file:
destcolor	client.h	/^	int		destcolor[3];$/;"	m	struct:__anon116
destroy	ez_controls.h	/^	ez_destroy_eventhandler_fp		destroy;$/;"	m	union:ez_eventhandlerfunction_u
detail_chain	gl_model.h	/^	struct	glpoly_s	*detail_chain;				\/\/next detail poly in chain$/;"	m	struct:glpoly_s	typeref:struct:glpoly_s::glpoly_s
detail_polys	gl_rsurf.c	/^glpoly_t *detail_polys = NULL;$/;"	v
detailtexture	gl_rmain.c	/^int			underwatertexture, detailtexture;	$/;"	v
developer	common.c	/^cvar_t	developer = {"developer", "0"};$/;"	v
developer_memory	zone2.c	/^cvar_t developer_memory = {"developer_memory", "0"};$/;"	v
developer_memorydebug	zone2.c	/^cvar_t developer_memorydebug = {"developer_memorydebug", "0"};$/;"	v
device	mac.h	/^	video_device_t	*device;$/;"	m	struct:__anon176
device	mac_prefs.h	/^	int	device;				\/\/ Menu selection # for monitor$/;"	m	struct:__anon179
devmajor	vfs_tar.h	/^  char devmajor[8];             \/* 329 *\/$/;"	m	struct:tar_header
devminor	vfs_tar.h	/^  char devminor[8];             \/* 337 *\/$/;"	m	struct:tar_header
df	in_win.c	/^static DIDATAFORMAT	df = {$/;"	v	file:
dface_t	bspfile.h	/^} dface_t;$/;"	t	typeref:struct:__anon107
dfunction_t	pr_comp.h	/^} dfunction_t;$/;"	t	typeref:struct:__anon250
dgakeyb	vid_glx.c	/^static int dgamouse, dgakeyb;$/;"	v	file:
dgamouse	vid_glx.c	/^static int dgamouse, dgakeyb;$/;"	v	file:
dh	block16.h	/^	movb	%dh,%ah$/;"	v
dh	block16.h	/^	movb	%dh,%ch$/;"	v
dh	block8.h	/^	movb	%dh,%ah$/;"	v
dh	block8.h	/^	movb	%dh,%ch$/;"	v
dheader_t	bspfile.h	/^} dheader_t;$/;"	t	typeref:struct:__anon100
dheight	ffmpeg.c	/^int		dwidth, dheight;$/;"	v
dib	vid_wgl.c	/^	int			dib;$/;"	m	struct:__anon81	file:
dib	vid_win.c	/^	int			dib;$/;"	m	struct:__anon85	file:
dibdc	vid_win.c	/^MGLDC		*mgldc = NULL,*memdc = NULL,*dibdc = NULL,*windc = NULL;$/;"	v
dibonly	vid_win.c	/^qbool	dibonly;$/;"	v
dibwindow	vid_wgl.c	/^HWND		mainwindow, dibwindow = NULL;$/;"	v
die	client.h	/^	float			die;				\/\/ stop lighting after this time$/;"	m	struct:__anon118
die	console.c	/^	double		die, start;$/;"	m	struct:conpart_s	file:
die	d_iface.h	/^	float		die;$/;"	m	struct:particle_s
die	gl_rpart.c	/^	float		die;		$/;"	m	struct:particle_s	file:
die	r_part.c	/^	float		die;$/;"	m	struct:particle_s	file:
die	vx_coronas.c	/^	float	die;$/;"	m	struct:__anon89	file:
die	vx_tracker.c	/^	float die;$/;"	m	struct:__anon92	file:
dinput	in_win.c	/^static qbool	dinput;$/;"	v	file:
dinput	in_win.c	231;"	d	file:
dinput_acquired	in_win.c	/^static qbool	dinput_acquired;$/;"	v	file:
dir	mgraph.h	/^	m_int			dir;			\/* Text drawing direction			*\/$/;"	m	struct:__anon215
dir	teamplay.h	/^	vec3_t	dir;		$/;"	m	struct:item_vis_s
dir_color	EX_FileList.h	/^	cvar_t *		dir_color;$/;"	m	struct:filelist_s
direct	vid.h	/^	pixel_t			*direct;		\/\/ direct drawing to framebuffer, if not NULL$/;"	m	struct:__anon294
directory	sys.h	/^    int directory;$/;"	m	struct:sys_dirent_s
dirlen	fs.c	/^    int     dirlen;$/;"	m	struct:__anon17	file:
dirlen	vfs_doomwad.c	/^	int		dirlen;$/;"	m	struct:__anon72	file:
dirlen	vfs_pak.c	/^	int     dirlen;$/;"	m	struct:__anon76	file:
dirofs	fs.c	/^    int     dirofs;$/;"	m	struct:__anon17	file:
dirofs	vfs_doomwad.c	/^	int		dirofs;$/;"	m	struct:__anon72	file:
dirofs	vfs_pak.c	/^	int     dirofs;$/;"	m	struct:__anon76	file:
disallowed	keys.c	/^char disallowed[] = {'\\n', '\\f', '\\\\', '\/', '\\"', ' ' , ';'};$/;"	v
disconnected_mouse	in_mac.c	/^qbool disconnected_mouse = false;$/;"	v
disksize	wad.h	/^	int			disksize;$/;"	m	struct:__anon299
disp	Ctrl_EditBox.h	/^	unsigned int disp;$/;"	m	struct:CEditBox_s
display	EX_FileList.h	/^    char            display[MAX_PATH+1];$/;"	m	struct:filedesc_s
display	EX_browser.h	/^    columns     display;$/;"	m	struct:server_data_s
display	console.h	/^	int		display;		\/\/ bottom of console displays this line$/;"	m	struct:__anon136
displayFrequency	tr_types.h	/^	int						displayFrequency;$/;"	m	struct:__anon286
display_entry	EX_FileList.h	/^    int				display_entry;  \/\/ First item displayed$/;"	m	struct:filelist_s
displayed_entries_count	EX_FileList.h	/^    int             displayed_entries_count;    \/\/ ammount of entries that fit on the screen$/;"	m	struct:filelist_s
dist	bspfile.h	/^	float	dist;$/;"	m	struct:__anon103
dist	cmodel.h	/^	float	dist;$/;"	m	struct:__anon132
dist	cmodel.h	/^	float	dist;$/;"	m	struct:mplane_s
dist	r_local.h	/^	float		dist;$/;"	m	struct:clipplane_s
dist	sv_world.h	/^	float				dist;$/;"	m	struct:areanode_s
dist	teamplay.h	/^	float	dist;		$/;"	m	struct:item_vis_s
dist_mult	qsound.h	/^	vec_t		dist_mult;		\/\/ distance multiplier (attenuation\/clipK)$/;"	m	struct:channel_s
dl_colors	cl_ents.c	/^static dlighttype_t dl_colors[] = {lt_red, lt_blue, lt_redblue, lt_green, lt_redgreen, lt_bluegreen, lt_white};$/;"	v	file:
dl_colors_cnt	cl_ents.c	/^static int dl_colors_cnt = sizeof(dl_colors) \/ sizeof(dl_colors[0]);$/;"	v	file:
dl_model	client.h	/^	dl_model,$/;"	e	enum:__anon121
dl_none	client.h	/^	dl_none,$/;"	e	enum:__anon121
dl_single	client.h	/^	dl_single$/;"	e	enum:__anon121
dl_skin	client.h	/^	dl_skin,$/;"	e	enum:__anon121
dl_sound	client.h	/^	dl_sound,$/;"	e	enum:__anon121
dl_vwep_model	client.h	/^	dl_vwep_model,$/;"	e	enum:__anon121
dleaf_t	bspfile.h	/^} dleaf_t;$/;"	t	typeref:struct:__anon108
dlight	d_local.h	/^	int					dlight;$/;"	m	struct:surfcache_s
dlightColor	cl_ents.c	/^dlighttype_t dlightColor(float f, dlighttype_t def, qbool random) {$/;"	f
dlightColorEx	cl_ents.c	/^customlight_t *dlightColorEx(float f, char *str, dlighttype_t def, qbool random, customlight_t *l) $/;"	f
dlight_color	gl_rmain.c	/^vec3_t dlight_color;$/;"	v
dlight_t	client.h	/^} dlight_t;$/;"	t	typeref:struct:__anon118
dlightbits	gl_model.h	/^	int					dlightbits;$/;"	m	struct:msurface_s
dlightbits	r_model.h	/^	int					dlightbits;$/;"	m	struct:msurface_s
dlightbits	render.h	/^	int						dlightbits;$/;"	m	struct:entity_s
dlightcolor	gl_rsurf.c	/^int dlightcolor[NUM_DLIGHTTYPES][3] = {$/;"	v
dlightframe	gl_model.h	/^	int					dlightframe;$/;"	m	struct:msurface_s
dlightframe	r_model.h	/^	int					dlightframe;$/;"	m	struct:msurface_s
dlightframe	render.h	/^	int						dlightframe;	\/\/ dynamic lighting$/;"	m	struct:entity_s
dlightinfo_s	gl_rsurf.c	/^typedef struct dlightinfo_s {$/;"	s	file:
dlightinfo_s	r_surf.c	/^typedef struct dlightinfo_s {$/;"	s	file:
dlightinfo_t	gl_rsurf.c	/^} dlightinfo_t;$/;"	t	typeref:struct:dlightinfo_s	file:
dlightinfo_t	r_surf.c	/^} dlightinfo_t;$/;"	t	typeref:struct:dlightinfo_s	file:
dlightlist	gl_rsurf.c	/^static dlightinfo_t dlightlist[MAX_DLIGHTS];$/;"	v	file:
dlightlist	r_surf.c	/^static dlightinfo_t dlightlist[MAX_DLIGHTS];$/;"	v	file:
dlightonly	d_iface.h	/^	qbool	dlightonly;	\/\/ only have to recalc dynamic lights$/;"	m	struct:__anon144
dlighttype_t	client.h	/^	lt_white, lt_custom, NUM_DLIGHTTYPES } dlighttype_t;$/;"	t	typeref:enum:__anon117
dltype_t	client.h	/^} dltype_t;		\/\/ download type$/;"	t	typeref:enum:__anon121
dm	tr_types.h	/^	DEVMODE dm;$/;"	m	struct:__anon287
dm_fraglimit	menu_multiplayer.c	/^static int dm_fraglimit = 0;$/;"	v	file:
dm_maxplayers	menu_multiplayer.c	/^static int dm_maxplayers = 2;$/;"	v	file:
dm_maxspectators	menu_multiplayer.c	/^static int dm_maxspectators = 8;$/;"	v	file:
dm_running	nmenu_demo.c	/^int dm_running;$/;"	v
dm_timelimit	menu_multiplayer.c	/^static int dm_timelimit = 10;$/;"	v	file:
dma	snd_mac.c	/^static unsigned char dma[64*1024];$/;"	v	file:
dma_s	qsound.h	/^typedef struct dma_s {$/;"	s
dma_t	qsound.h	/^} dma_t;$/;"	t	typeref:struct:dma_s
dmg_inflictor	progdefs.h	/^	int	dmg_inflictor;$/;"	m	struct:__anon253
dmg_save	progdefs.h	/^	float	dmg_save;$/;"	m	struct:__anon253
dmg_take	progdefs.h	/^	float	dmg_take;$/;"	m	struct:__anon253
dmiptexlump_t	bspfile.h	/^} dmiptexlump_t;$/;"	t	typeref:struct:__anon101
dmodel_t	bspfile.h	/^} dmodel_t;$/;"	t	typeref:struct:__anon99
dnode_t	bspfile.h	/^} dnode_t;$/;"	t	typeref:struct:__anon104
doShm	vid_x11.c	/^static qbool		doShm;$/;"	v	file:
do_color	document_rendering.c	/^    int     do_color;$/;"	m	struct:document_rendering_context_s	file:
do_in	cmd.c	/^static qbool do_in(char *buf, char *orig, char *str, int options)$/;"	f	file:
do_out	cmd.c	/^static qbool do_out(char *orig, char *str, int options)$/;"	f	file:
do_stdin	sv_sys_unix.c	/^int do_stdin = 1;$/;"	v
do_stdin	sys_linux.c	/^int do_stdin = 1;$/;"	v
do_stdin	sys_mac.c	/^int do_stdin = 1;$/;"	v
doc	Ctrl_PageViewer.h	/^    xml_document_t *doc;$/;"	m	struct:CPageViewer_page_s
document	xsd.h	/^    xml_t *document;$/;"	m	struct:xml_parser_stack_s
document_align_t	xsd_document.h	/^document_align_t;$/;"	t	typeref:enum:__anon304
document_parser_specific_s	xsd_document.h	/^typedef struct document_parser_specific_s$/;"	s
document_parser_specific_t	xsd_document.h	/^document_parser_specific_t;$/;"	t	typeref:struct:document_parser_specific_s
document_rendered_link_s	document_rendering.h	/^typedef struct document_rendered_link_s$/;"	s
document_rendered_link_t	document_rendering.h	/^document_rendered_link_t;$/;"	t	typeref:struct:document_rendered_link_s
document_rendered_section_s	document_rendering.h	/^typedef struct document_rendered_section_s$/;"	s
document_rendered_section_t	document_rendering.h	/^document_rendered_section_t;$/;"	t	typeref:struct:document_rendered_section_s
document_rendered_t	document_rendering.h	/^document_rendered_t;$/;"	t	typeref:struct:document_renered_s
document_rendering_context_s	document_rendering.c	/^typedef struct document_rendering_context_s$/;"	s	file:
document_rendering_context_t	document_rendering.c	/^document_rendering_context_t;$/;"	t	typeref:struct:document_rendering_context_s	file:
document_renered_s	document_rendering.h	/^typedef struct document_renered_s$/;"	s
document_tag_a_s	xsd_document.h	/^typedef struct document_tag_a_s$/;"	s
document_tag_a_t	xsd_document.h	/^document_tag_a_t;$/;"	t	typeref:struct:document_tag_a_s
document_tag_br_s	xsd_document.h	/^typedef struct document_tag_br_s$/;"	s
document_tag_br_t	xsd_document.h	/^document_tag_br_t;$/;"	t	typeref:struct:document_tag_br_s
document_tag_color_s	xsd_document.h	/^typedef struct document_tag_color_s$/;"	s
document_tag_color_t	xsd_document.h	/^document_tag_color_t;$/;"	t	typeref:struct:document_tag_color_s
document_tag_di_s	xsd_document.h	/^typedef struct document_tag_di_s$/;"	s
document_tag_di_t	xsd_document.h	/^document_tag_di_t;$/;"	t	typeref:struct:document_tag_di_s
document_tag_dict_s	xsd_document.h	/^typedef struct document_tag_dict_s$/;"	s
document_tag_dict_t	xsd_document.h	/^document_tag_dict_t;$/;"	t	typeref:struct:document_tag_dict_s
document_tag_em_s	xsd_document.h	/^typedef struct document_tag_em_s$/;"	s
document_tag_em_t	xsd_document.h	/^document_tag_em_t;$/;"	t	typeref:struct:document_tag_em_s
document_tag_h_s	xsd_document.h	/^typedef struct document_tag_h_s$/;"	s
document_tag_h_t	xsd_document.h	/^document_tag_h_t;$/;"	t	typeref:struct:document_tag_h_s
document_tag_hr_s	xsd_document.h	/^typedef struct document_tag_hr_s$/;"	s
document_tag_hr_t	xsd_document.h	/^document_tag_hr_t;$/;"	t	typeref:struct:document_tag_hr_s
document_tag_img_s	xsd_document.h	/^typedef struct document_tag_img_s$/;"	s
document_tag_img_t	xsd_document.h	/^document_tag_img_t;$/;"	t	typeref:struct:document_tag_img_s
document_tag_li_s	xsd_document.h	/^typedef struct document_tag_li_s$/;"	s
document_tag_li_t	xsd_document.h	/^document_tag_li_t;$/;"	t	typeref:struct:document_tag_li_s
document_tag_list_s	xsd_document.h	/^typedef struct document_tag_list_s$/;"	s
document_tag_list_t	xsd_document.h	/^document_tag_list_t;$/;"	t	typeref:struct:document_tag_list_s
document_tag_p_s	xsd_document.h	/^typedef struct document_tag_p_s$/;"	s
document_tag_p_t	xsd_document.h	/^document_tag_p_t;$/;"	t	typeref:struct:document_tag_p_s
document_tag_pre_s	xsd_document.h	/^typedef struct document_tag_pre_s$/;"	s
document_tag_pre_t	xsd_document.h	/^document_tag_pre_t;$/;"	t	typeref:struct:document_tag_pre_s
document_tag_s	xsd_document.h	/^typedef struct document_tag_s$/;"	s
document_tag_section_s	xsd_document.h	/^typedef struct document_tag_section_s$/;"	s
document_tag_section_t	xsd_document.h	/^document_tag_section_t;$/;"	t	typeref:struct:document_tag_section_s
document_tag_sp_s	xsd_document.h	/^typedef struct document_tag_sp_s$/;"	s
document_tag_sp_t	xsd_document.h	/^document_tag_sp_t;$/;"	t	typeref:struct:document_tag_sp_s
document_tag_t	xsd_document.h	/^document_tag_t;$/;"	t	typeref:struct:document_tag_s
document_tag_text_s	xsd_document.h	/^typedef struct document_tag_text_s$/;"	s
document_tag_text_t	xsd_document.h	/^document_tag_text_t;$/;"	t	typeref:struct:document_tag_text_s
document_tag_type_t	xsd_document.h	/^document_tag_type_t;$/;"	t	typeref:enum:__anon303
document_type	xsd.c	/^    char *document_type;$/;"	m	struct:xsd_mapping_s	file:
document_type	xsd.h	/^    char *document_type;$/;"	m	struct:xml_s
document_type	xsd_command.h	/^    char *document_type;$/;"	m	struct:xml_command_s
document_type	xsd_document.h	/^    char *document_type;$/;"	m	struct:xml_document_s
document_type	xsd_variable.h	/^    char *document_type;$/;"	m	struct:xml_variable_s
dof_modifier_start	mvd_cam.h	/^	double dof_modifier_start;$/;"	m	struct:c_curve_s
dof_modifier_stop	mvd_cam.h	/^	double dof_modifier_stop;$/;"	m	struct:c_curve_s
done	cam_event_system.c	/^	int done;$/;"	m	struct:event_list_entry_value	file:
done	ffmpeg.c	/^	int done;$/;"	m	struct:frames_list_s	file:
done	mvd_cam.h	/^	int		done;$/;"	m	struct:c_event_s
dontrender	render.h	/^	int						dontrender;$/;"	m	struct:entity_s
doomwadfilefuncs	vfs_doomwad.c	/^searchpathfuncs_t doomwadfilefuncs = {$/;"	v
down	client.h	/^	qbool forward, back, left, right, jump, attack, up, down;$/;"	m	struct:__anon126
down	gl_model.h	/^	float				up, down, left, right;$/;"	m	struct:mspriteframe_s
down	input.h	/^	int		down[2];		\/\/ key nums holding it down$/;"	m	struct:__anon167
down	r_model.h	/^	float				up, down, left, right;$/;"	m	struct:mspriteframe_s
down	vid_x11.c	/^	int down;$/;"	m	struct:__anon88	file:
download	client.h	/^	FILE		*download;			\/\/\/< file transfer from server$/;"	m	struct:__anon122
download	server.h	/^	FILE		*download;			\/\/ file being downloaded$/;"	m	struct:client_s
download	server.h	/^	vfsfile_t   *download;			\/\/ file being downloaded$/;"	m	struct:client_s
download_chunks_perframe	server.h	/^	int			download_chunks_perframe;$/;"	m	struct:client_s
download_position	server.h	/^	int			download_position; \/\/ chunked download used fseek(), since this is may be pak file, we need offset in pak file$/;"	m	struct:client_s
downloadcount	server.h	/^	int			downloadcount;		\/\/ bytes sent$/;"	m	struct:client_s
downloadmethod	client.h	/^	enum {DL_NONE = 0, DL_QW             } downloadmethod;$/;"	m	struct:__anon122	typeref:enum:__anon122::__anon124
downloadmethod	client.h	/^	enum {DL_NONE = 0, DL_QW, DL_QWCHUNKS} downloadmethod;$/;"	m	struct:__anon122	typeref:enum:__anon122::__anon123
downloadname	client.h	/^	char		downloadname[MAX_PATH];$/;"	m	struct:__anon122
downloadnumber	client.h	/^	int			downloadnumber;$/;"	m	struct:__anon122
downloadpercent	client.h	/^	int			downloadpercent;$/;"	m	struct:__anon122
downloadrate	client.h	/^	int			downloadrate;$/;"	m	struct:__anon122
downloadsize	cl_parse.c	/^int downloadsize;$/;"	v
downloadsize	server.h	/^	int			downloadsize;		\/\/ total bytes$/;"	m	struct:client_s
downloadstarttime	client.h	/^	double		downloadstarttime;$/;"	m	struct:__anon122
downloadtempname	client.h	/^	char		downloadtempname[MAX_PATH];$/;"	m	struct:__anon122
downloadtype	client.h	/^	dltype_t	downloadtype;$/;"	m	struct:__anon122
dp_time1	r_main.c	/^float	dp_time1, dp_time2, db_time1, db_time2, rw_time1, rw_time2;$/;"	v
dp_time2	r_main.c	/^float	dp_time1, dp_time2, db_time1, db_time2, rw_time1, rw_time2;$/;"	v
dpackfile_t	fs.c	/^} dpackfile_t;$/;"	t	typeref:struct:__anon16	file:
dpackfile_t	vfs_pak.c	/^} dpackfile_t;$/;"	t	typeref:struct:__anon75	file:
dpackheader_t	fs.c	/^} dpackheader_t;$/;"	t	typeref:struct:__anon17	file:
dpackheader_t	vfs_pak.c	/^} dpackheader_t;$/;"	t	typeref:struct:__anon76	file:
dplane_t	bspfile.h	/^} dplane_t;$/;"	t	typeref:struct:__anon103
dprograms_t	pr_comp.h	/^} dprograms_t;$/;"	t	typeref:struct:__anon251
dptr	new_menu.c	/^	double	**dptr;$/;"	m	struct:menu_ct	file:
dpy	linux_glimp.c	/^static Display *dpy = NULL;$/;"	v	file:
draw	Ctrl_Tab.h	/^    CTabPage_DrawType   draw;$/;"	m	struct:CTabPage_Handlers_s
draw	cam_new.c	/^	int draw;$/;"	m	struct:CamSys_Spline_Data	file:
draw_backtile	gl_draw.c	/^static mpic_t	*draw_backtile;$/;"	v	file:
draw_backtile	r_draw.c	/^mpic_t		*draw_backtile;$/;"	v
draw_chars	gl_draw.c	/^byte			*draw_chars;						\/\/ 8*8 graphic characters$/;"	v
draw_chars	r_draw.c	/^byte		*draw_chars[MAX_CHARSETS];		\/\/ 8*8 graphic characters$/;"	v
draw_compass	mosdm.c	/^int draw_compass;$/;"	v
draw_disc	gl_draw.c	/^mpic_t			*draw_disc;$/;"	v
draw_disc	r_draw.c	/^mpic_t		*draw_disc;$/;"	v
draw_func	hud.h	/^    void (*draw_func) (struct hud_s *);	\/\/ Drawing function.$/;"	m	struct:hud_s
draw_order	ez_controls.h	/^	int						draw_order;				\/\/ The order the control is drawn in.$/;"	m	struct:ez_control_s
draw_snd_cam	mosdm.c	/^int draw_snd_cam = 0;$/;"	v
drawfullbrights	gl_rsurf.c	/^qbool drawfullbrights = false, drawlumas = false;$/;"	v
drawlist	ez_controls.h	/^	ez_double_linked_list_t	drawlist;				\/\/ A list with the controls ordered in their drawing order.$/;"	m	struct:ez_tree_s
drawlumas	gl_rsurf.c	/^qbool drawfullbrights = false, drawlumas = false;$/;"	v
drawn	new_menu.c	/^	int		drawn;$/;"	m	struct:menu_ct	file:
drawnode	r_bsp.c	/^typedef enum {touchessolid, drawnode, nodrawnode} solidstate_t;$/;"	e	enum:__anon57	file:
drawsurf_t	d_iface.h	/^} drawsurf_t;$/;"	t	typeref:struct:__anon144
drawtype	d_iface.h	/^	int					drawtype;$/;"	m	struct:__anon140
drawtype	gl_rpart.c	/^	part_draw_t	drawtype;$/;"	m	struct:particle_tree_s	file:
driftmove	client.h	/^	float		driftmove;$/;"	m	struct:__anon125
driver	vid_win.c	/^int			driver = grDETECT,mode;$/;"	v
driverType	tr_types.h	/^	glDriverType_t			driverType;$/;"	m	struct:__anon286
drop	server.h	/^	qbool		drop;				\/\/ lose this guy next opportunity$/;"	m	struct:client_s
drop_count	net.h	/^	int			drop_count;			\/\/ dropped packets, cleared each level$/;"	m	struct:__anon240
dropped	net.h	/^	int			dropped;			\/\/ between last packet and previous$/;"	m	struct:__anon240
ds_start	mvd_cam.h	/^	double ds_start;$/;"	m	struct:c_curve_s
ds_stop	mvd_cam.h	/^	double ds_stop;$/;"	m	struct:c_curve_s
dsdevice	snd_win.c	/^static LPGUID	dsdevice = NULL;$/;"	v	file:
dsound_init	snd_win.c	/^static qbool	dsound_init;$/;"	v	file:
dsprite_t	spritegn.h	/^} dsprite_t;$/;"	t	typeref:struct:__anon277
dspriteframe_t	spritegn.h	/^} dspriteframe_t;$/;"	t	typeref:struct:__anon278
dspriteframetype_t	spritegn.h	/^} dspriteframetype_t;$/;"	t	typeref:struct:__anon282
dspritegroup_t	spritegn.h	/^} dspritegroup_t;$/;"	t	typeref:struct:__anon279
dspriteinterval_t	spritegn.h	/^} dspriteinterval_t;$/;"	t	typeref:struct:__anon280
dstatement_t	pr_comp.h	/^} dstatement_t;$/;"	t	typeref:struct:statement_s
dtriangle_s	modelgen.h	/^typedef struct dtriangle_s {$/;"	s
dtriangle_t	modelgen.h	/^} dtriangle_t;$/;"	t	typeref:struct:dtriangle_s
dummy	mvd_cam.c	/^c_event_t	dummy;$/;"	v
dummy_double	cam_event_system.c	/^double dummy_double;$/;"	v
dummy_double	cam_new.c	/^double dummy_double;$/;"	v
dummy_float	cam_new.c	/^float dummy_float;$/;"	v
dummy_int	cam_new.c	/^int dummy_int;$/;"	v
dv_time1	r_main.c	/^float	se_time1, se_time2, de_time1, de_time2, dv_time1, dv_time2;$/;"	v
dv_time2	r_main.c	/^float	se_time1, se_time2, de_time1, de_time2, dv_time1, dv_time2;$/;"	v
dvertex_t	bspfile.h	/^} dvertex_t;$/;"	t	typeref:struct:__anon102
dwAxisFlags	in_win.c	/^DWORD	dwAxisFlags[JOY_MAX_AXES] = {$/;"	v
dwAxisMap	in_win.c	/^DWORD	dwAxisMap[JOY_MAX_AXES];$/;"	v
dwControlMap	in_win.c	/^DWORD	dwControlMap[JOY_MAX_AXES];$/;"	v
dwCount	in_raw.h	/^	DWORD dwCount;$/;"	m	struct:tagRAWHID
dwExtraInfo	winquake.h	/^    ULONG_PTR dwExtraInfo;$/;"	m	struct:__anon300
dwFlags	in_raw.h	/^	DWORD dwFlags;$/;"	m	struct:tagRAWINPUTDEVICE
dwSize	in_raw.h	/^	DWORD dwSize;$/;"	m	struct:tagRAWINPUTHEADER
dwSizeHid	in_raw.h	/^	DWORD dwSizeHid;$/;"	m	struct:tagRAWHID
dwThreadIdArray	thread_win.c	/^DWORD   dwThreadIdArray[MAX_THREADS];$/;"	v
dwType	in_raw.h	/^	DWORD dwType;$/;"	m	struct:tagRAWINPUTDEVICELIST
dwType	in_raw.h	/^	DWORD dwType;$/;"	m	struct:tagRAWINPUTHEADER
dwadfile_t	vfs_doomwad.c	/^} dwadfile_t;$/;"	t	typeref:struct:__anon71	file:
dwadheader_t	vfs_doomwad.c	/^} dwadheader_t;$/;"	t	typeref:struct:__anon72	file:
dwidth	ffmpeg.c	/^int		dwidth, dheight;$/;"	v
e	cmodel.h	/^	} e;$/;"	m	struct:__anon133	typeref:union:__anon133::__anon134
easyrecording	cl_demo.c	/^static qbool easyrecording = false;$/;"	v	file:
ebp	block16.h	/^	addl	%ebp,%edx$/;"	v
ebp	block8.h	/^	addl	%ebp,%edx$/;"	v
edge_aftertail	r_edge.c	/^edge_t	edge_aftertail;$/;"	v
edge_head	r_edge.c	/^edge_t	edge_head;$/;"	v
edge_head_u_shift20	r_edge.c	/^int	edge_head_u_shift20, edge_tail_u_shift20;$/;"	v
edge_max	r_edge.c	/^edge_t	*r_edges, *edge_p, *edge_max;$/;"	v
edge_p	r_edge.c	/^edge_t	*r_edges, *edge_p, *edge_max;$/;"	v
edge_s	r_shared.h	/^typedef struct edge_s {$/;"	s
edge_sentinel	r_edge.c	/^edge_t	edge_sentinel;$/;"	v
edge_t	r_shared.h	/^} edge_t;$/;"	t	typeref:struct:edge_s
edge_tail	r_edge.c	/^edge_t	edge_tail;$/;"	v
edge_tail_u_shift20	r_edge.c	/^int	edge_head_u_shift20, edge_tail_u_shift20;$/;"	v
edges	gl_model.h	/^	medge_t				*edges;$/;"	m	struct:model_s
edges	r_model.h	/^	medge_t				*edges;$/;"	m	struct:model_s
edgetable	d_polyse.c	/^} edgetable;$/;"	t	typeref:struct:__anon11	file:
edgetables	d_polyse.c	/^edgetable	edgetables[12] = {$/;"	v
edict	progs.h	/^	int				edict;$/;"	m	union:eval_s
edict	server.h	/^	edict_t		*edict;				\/\/ EDICT_NUM(clientnum+1)$/;"	m	struct:client_s
edict_s	progs.h	/^typedef struct edict_s {$/;"	s
edict_t	progs.h	/^} edict_t;$/;"	t	typeref:struct:edict_s
edicts	server.h	/^	edict_t		*edicts;			\/\/ can NOT be array indexed, because$/;"	m	struct:__anon264
edit1	EX_browser.c	/^CEditBox edit1, edit2;$/;"	v
edit2	EX_browser.c	/^CEditBox edit1, edit2;$/;"	v
edit_line	keys.c	/^int		edit_line=0;$/;"	v
edit_plane	mosdm.c	/^int edit_plane = 0;$/;"	v
editbox	settings_page.c	/^CEditBox editbox;$/;"	v
editbox_lasttime	new_menu.c	/^float	editbox_lasttime;$/;"	v
effects	client.h	/^	int			effects;$/;"	m	struct:__anon112
effects	progdefs.h	/^	float	effects;$/;"	m	struct:__anon253
effects	protocol.h	/^	int		effects;$/;"	m	struct:entity_state_s
effects	render.h	/^	int						effects;		\/\/ EF_ flags like EF_BLUE and etc, atm this used for powerup shells$/;"	m	struct:entity_s
efrag	render.h	/^	struct efrag_s			*efrag;			\/\/ linked list of efrags (FIXME)$/;"	m	struct:entity_s	typeref:struct:entity_s::efrag_s
efrag_s	render.h	/^typedef struct efrag_s {$/;"	s
efrag_t	render.h	/^} efrag_t;$/;"	t	typeref:struct:efrag_s
efrags	gl_model.h	/^	struct efrag_s		*efrags;$/;"	m	struct:mleaf_s	typeref:struct:mleaf_s::efrag_s
efrags	r_model.h	/^	struct efrag_s		*efrags;$/;"	m	struct:mleaf_s	typeref:struct:mleaf_s::efrag_s
email	fragstats.c	/^	char		*email;$/;"	m	struct:fragdef_s	file:
email	xsd_document.h	/^    char *email;$/;"	m	struct:xml_document_author_s
emitpoint_t	d_iface.h	/^} emitpoint_t;$/;"	t	typeref:struct:__anon138
emodel_name	cl_main.c	/^char emodel_name[] = { 'e'^0xe5, 'm'^0xe5, 'o'^0xe5, 'd'^0xe5, 'e'^0xe5, 'l'^0xe5, 0 };$/;"	v
empty_is_000	vx_tracker.c	/^static char *empty_is_000(char *str)$/;"	f	file:
enable	cam_new.c	/^	int		show, enable, resolution, number;$/;"	m	struct:CamSys_Spline	file:
enable	cam_new.h	/^	int		show, enable, resolution, number;$/;"	m	struct:CamSys_Spline
enable	mvd_cam.h	/^	int			enable;$/;"	m	struct:tele_plane_s
enable	mvd_cam.h	/^	int enable;$/;"	m	struct:c_curve_s
enabled	cd_linux.c	/^static qbool	enabled = true;$/;"	v	file:
enabled	cd_win.c	/^static qbool	enabled = false;$/;"	v	file:
encode_say	textencoding.c	/^char *encode_say (wchar *in)$/;"	f
encoding	image.c	/^    char			encoding;$/;"	m	struct:pcx_s	file:
end	cl_tent.c	/^	vec3_t start, end;$/;"	m	struct:__anon6	file:
end	document_rendering.h	/^    int end;$/;"	m	struct:document_rendered_link_s
end	mosdm.c	/^	int end;$/;"	m	struct:menu_llist_s	file:
end	qsound.h	/^	int		end;			\/\/ end time in global paintsamples$/;"	m	struct:channel_s
end	sv_world.c	/^	float		*start, *end;$/;"	m	struct:__anon66	file:
endX	mgraph.h	/^	m_int	endX,endY;				\/* Ending point on arc				*\/$/;"	m	struct:__anon209
endY	mgraph.h	/^	m_int	endX,endY;				\/* Ending point on arc				*\/$/;"	m	struct:__anon209
endorg	gl_rpart.c	/^	vec3_t		org, endorg;$/;"	m	struct:particle_s	file:
endpos	cmodel.h	/^	vec3_t	endpos;				\/\/ final position$/;"	m	struct:__anon133
endtime	cl_tent.c	/^	float endtime;$/;"	m	struct:__anon6	file:
endtime	ffmpeg.c	/^	double		endtime;$/;"	m	struct:ffm	file:
endtime	match_tools.c	/^	float endtime;$/;"	m	struct:mt_matchtstate_s	file:
endtime	mvd_utils.c	/^	double endtime;$/;"	m	struct:runs_s	file:
enemy	progdefs.h	/^	int	enemy;$/;"	m	struct:__anon253
enemy_powerups	teamplay.h	/^	int enemy_powerups;$/;"	m	struct:tvars_s
enemy_powerups_time	teamplay.h	/^	double enemy_powerups_time;$/;"	m	struct:tvars_s
enemyforceskins	skin.c	/^cvar_t  enemyforceskins = {"enemyforceskins", "0", 0, OnChangeSkinForcing};$/;"	v
enemyforceskins_enum	menu_options.c	/^const char *enemyforceskins_enum[] = { "off", "use player's name", "use player's userid", "set e1, e2, e3, ..." };$/;"	v
ent	cmodel.h	/^		struct edict_s	*ent;	\/\/ for sv_world$/;"	m	union:__anon133::__anon134	typeref:struct:__anon133::__anon134::edict_s
entchannel	qsound.h	/^	int		entchannel;		\/\/$/;"	m	struct:channel_s
enter_handler	menu.c	/^	void (* enter_handler) (void);$/;"	m	struct:bigmenu_items_s	file:
entertime	client.h	/^	float	entertime;$/;"	m	struct:player_info_s
entgravity	client.h	/^	float		entgravity;$/;"	m	struct:__anon125
entgravity	pmove.h	/^	float	entgravity;$/;"	m	struct:__anon246
entgravity	server.h	/^	float		entgravity;			\/\/ localized ent gravity$/;"	m	struct:client_s
entities	protocol.h	/^	entity_state_t	entities[MAX_MVD_PACKET_ENTITIES];$/;"	m	struct:packet_entities_s
entities	protocol.h	/^	entity_state_t	entities[MAX_PACKET_ENTITIES];$/;"	m	struct:packet_entities_s
entities	server.h	/^	packet_entities_t	entities;$/;"	m	struct:__anon266
entity	cl_tent.c	/^	int entity;$/;"	m	struct:__anon6	file:
entity	nmenu_trackentity.c	/^	entity_t	*entity;$/;"	m	struct:te_data	file:
entity	r_shared.h	/^	entity_t	*entity;$/;"	m	struct:surf_s
entity	render.h	/^	struct entity_s		*entity;$/;"	m	struct:efrag_s	typeref:struct:efrag_s::entity_s
entity_clipplanes	r_rast.c	/^clipplane_t	*entity_clipplanes;$/;"	v
entity_popups	nmenu_trackentity.c	/^struct MS_Popup_Menu_Menu **entity_popups;$/;"	v	typeref:struct:MS_Popup_Menu_Menu
entity_rotation	r_bsp.c	/^float			entity_rotation[3][3];$/;"	v
entity_s	render.h	/^typedef struct entity_s {$/;"	s
entity_state_s	protocol.h	/^typedef struct entity_state_s {$/;"	s
entity_state_t	protocol.h	/^} entity_state_t;$/;"	t	typeref:struct:entity_state_s
entity_t	render.h	/^} entity_t;$/;"	t	typeref:struct:entity_s
entity_translation_t	server.h	/^} entity_translation_t;$/;"	t	typeref:struct:__anon262
entityfields	pr_comp.h	/^	int		entityfields;$/;"	m	struct:__anon251
entmap	server.h	/^	int			entmap[SV_MAX_EDICTS];	\/\/ because QW protocol only handles 512 entities,$/;"	m	struct:__anon264
entnext	render.h	/^	struct efrag_s		*entnext;$/;"	m	struct:efrag_s	typeref:struct:efrag_s::efrag_s
entnum	cmodel.h	/^		int		entnum;			\/\/ for pmove$/;"	m	union:__anon133::__anon134
entnum	qsound.h	/^	int		entnum;			\/\/ to allow overriding a specific sound$/;"	m	struct:channel_s
entorg	teamplay.h	/^	vec3_t	entorg;$/;"	m	struct:item_vis_s
entries	EX_FileList.h	/^    filedesc_t		entries[MAX_FILELIST_ENTRIES];$/;"	m	struct:filelist_s
entries	linked_list.c	/^	int entries;$/;"	m	struct:linked_list	file:
entry	new_menu.c	/^	struct MS_Popup_Entry *entry;$/;"	m	struct:MS_Popup_Menu_Menu	typeref:struct:MS_Popup_Menu_Menu::MS_Popup_Entry	file:
entry_value_compare	cam_event_system.c	/^int entry_value_compare(void *data1, void *data2)$/;"	f
entvars_t	progdefs.h	/^} entvars_t;$/;"	t	typeref:struct:__anon253
enum_readfnc	settings.h	/^typedef const char* (*enum_readfnc) (void);$/;"	t
enum_togglefnc	settings.h	/^typedef void (*enum_togglefnc) (qbool);$/;"	t
enum_value	xsd_variable.h	/^        variable_enum_value_t *enum_value;$/;"	m	union:xml_variable_s::__anon308
episode_t	menu_multiplayer.c	/^} episode_t;$/;"	t	typeref:struct:__anon46	file:
episodes	menu_multiplayer.c	/^episode_t    episodes[] = {$/;"	v
error	EX_FileList.h	/^    qbool			error;          \/\/ Error reading dir$/;"	m	struct:filelist_s
error	parser.c	/^    int error;					\/\/ first error$/;"	m	struct:__anon53	file:
erroradjustdown	d_edge.c	/^int			ubasestep, errorterm, erroradjustup, erroradjustdown;$/;"	v
erroradjustup	d_edge.c	/^int			ubasestep, errorterm, erroradjustup, erroradjustdown;$/;"	v
errorterm	d_edge.c	/^int			ubasestep, errorterm, erroradjustup, erroradjustdown;$/;"	v
espan_s	r_shared.h	/^typedef struct espan_s {$/;"	s
espan_t	r_shared.h	/^} espan_t;$/;"	t	typeref:struct:espan_s
espan_t_count	asm_draw.h	41;"	d
espan_t_pnext	asm_draw.h	42;"	d
espan_t_size	asm_draw.h	43;"	d
espan_t_u	asm_draw.h	39;"	d
espan_t_v	asm_draw.h	40;"	d
et_nearzi	asm_draw.h	72;"	d
et_next	asm_draw.h	69;"	d
et_nextremove	asm_draw.h	71;"	d
et_owner	asm_draw.h	73;"	d
et_prev	asm_draw.h	68;"	d
et_size	asm_draw.h	74;"	d
et_surfs	asm_draw.h	70;"	d
et_u	asm_draw.h	66;"	d
et_u_step	asm_draw.h	67;"	d
etrack_active	mosdm.c	/^int		etrack_active;$/;"	v
etrack_time	mosdm.c	/^double	etrack_time;$/;"	v
etype_t	pr_comp.h	/^typedef enum {ev_void, ev_string, ev_float, ev_vector, ev_entity, ev_field, ev_function, ev_pointer} etype_t;$/;"	t	typeref:enum:__anon247
ev_entity	pr_comp.h	/^typedef enum {ev_void, ev_string, ev_float, ev_vector, ev_entity, ev_field, ev_function, ev_pointer} etype_t;$/;"	e	enum:__anon247
ev_field	pr_comp.h	/^typedef enum {ev_void, ev_string, ev_float, ev_vector, ev_entity, ev_field, ev_function, ev_pointer} etype_t;$/;"	e	enum:__anon247
ev_float	pr_comp.h	/^typedef enum {ev_void, ev_string, ev_float, ev_vector, ev_entity, ev_field, ev_function, ev_pointer} etype_t;$/;"	e	enum:__anon247
ev_function	pr_comp.h	/^typedef enum {ev_void, ev_string, ev_float, ev_vector, ev_entity, ev_field, ev_function, ev_pointer} etype_t;$/;"	e	enum:__anon247
ev_pointer	pr_comp.h	/^typedef enum {ev_void, ev_string, ev_float, ev_vector, ev_entity, ev_field, ev_function, ev_pointer} etype_t;$/;"	e	enum:__anon247
ev_string	pr_comp.h	/^typedef enum {ev_void, ev_string, ev_float, ev_vector, ev_entity, ev_field, ev_function, ev_pointer} etype_t;$/;"	e	enum:__anon247
ev_vector	pr_comp.h	/^typedef enum {ev_void, ev_string, ev_float, ev_vector, ev_entity, ev_field, ev_function, ev_pointer} etype_t;$/;"	e	enum:__anon247
ev_void	pr_comp.h	/^typedef enum {ev_void, ev_string, ev_float, ev_vector, ev_entity, ev_field, ev_function, ev_pointer} etype_t;$/;"	e	enum:__anon247
eval_s	progs.h	/^typedef union eval_s {$/;"	u
eval_t	progs.h	/^} eval_t;	$/;"	t	typeref:union:eval_s
evdev_device	vid_glx.c	/^static char evdev_device[32];$/;"	v	file:
evdev_fd	linux_glimp.c	/^static int evdev_fd = 0;$/;"	v	file:
evdev_fd	vid_glx.c	/^static int evdev_fd;$/;"	v	file:
evdev_mouse	vid_glx.c	/^static int evdev_mouse;$/;"	v	file:
evdev_mt	linux_glimp.c	/^static int evdev_mt = 0;$/;"	v	file:
evdev_mt	vid_glx.c	/^static int evdev_mt;$/;"	v	file:
evdev_thread	linux_glimp.c	/^static pthread_t evdev_thread;$/;"	v	file:
evdev_thread	vid_glx.c	/^static pthread_t evdev_thread;$/;"	v	file:
event	mvd_utils_common.h	/^	mvd_event_t		*event;$/;"	m	struct:mvd_new_info_s
event_color	mvd_cam.c	/^cvar_t	event_color			=	{"event_color","255 255 255"};$/;"	v
event_count	mvd_cam.h	/^	int		event_count;$/;"	m	struct:c_curve_s
event_handlers	ez_button.h	/^	ez_button_eventhandlers_t event_handlers;	\/\/ Specific event handlers for the button control.$/;"	m	struct:ez_button_s
event_handlers	ez_controls.h	/^	ez_control_eventhandlers_t	event_handlers;$/;"	m	struct:ez_control_s
event_handlers	ez_label.h	/^	ez_label_eventhandlers_t event_handlers;			\/\/ Specific event handlers for the label control.$/;"	m	struct:ez_label_s
event_handlers	ez_scrollbar.h	/^	ez_scrollbar_eventhandlers_t event_handlers;$/;"	m	struct:ez_scrollbar_s
event_handlers	ez_scrollpane.h	/^	ez_scrollpane_eventhandlers_t event_handlers;$/;"	m	struct:ez_scrollpane_s
event_handlers	ez_slider.h	/^	ez_slider_eventhandlers_t event_handlers;	\/\/ Slider specific event handlers.$/;"	m	struct:ez_slider_s
event_list	cam_event_system.c	/^struct event_list$/;"	s	file:
event_list	cam_event_system.h	/^struct event_list$/;"	s
event_list	cam_new.c	/^	struct	event_list *event_list;$/;"	m	struct:CamSys_Spline	typeref:struct:CamSys_Spline::event_list	file:
event_list_entry	cam_event_system.c	/^struct event_list_entry$/;"	s	file:
event_list_entry	cam_event_system.h	/^struct event_list_entry$/;"	s
event_list_entry_value	cam_event_system.c	/^struct event_list_entry_value$/;"	s	file:
event_t	mgraph.h	/^	} event_t;$/;"	t	typeref:struct:__anon219
events	cam_event_system.c	/^	struct linked_list *events;$/;"	m	struct:event_list	typeref:struct:event_list::linked_list	file:
events	ez_button.h	/^	ez_button_events_t		events;				\/\/ Specific events for the button control.$/;"	m	struct:ez_button_s
events	ez_controls.h	/^	ez_control_events_t			events;				\/\/ The base reaction for events. Is only set at initialization.$/;"	m	struct:ez_control_s
events	ez_label.h	/^	ez_label_events_t		events;						\/\/ Specific events for the label control.$/;"	m	struct:ez_label_s
events	ez_scrollbar.h	/^	ez_scrollbar_events_t		events;$/;"	m	struct:ez_scrollbar_s
events	ez_scrollpane.h	/^	ez_scrollpane_events_t		events;$/;"	m	struct:ez_scrollpane_s
events	ez_slider.h	/^	ez_slider_events_t		events;				\/\/ Slider specific events.$/;"	m	struct:ez_slider_s
events	mvd_cam.h	/^	struct c_event_s *events;$/;"	m	struct:c_curve_s	typeref:struct:c_curve_s::c_event_s
events_count	cam_event_system.c	/^	int events_count;$/;"	m	struct:event_list	file:
evert_t	r_rast.c	/^} evert_t;$/;"	t	typeref:struct:__anon60	file:
exename	sys_win.c	/^static char exename[1024] = {0};$/;"	v	file:
explosion_s	cl_tent.c	/^typedef struct explosion_s $/;"	s	file:
explosion_t	cl_tent.c	/^} explosion_t;$/;"	t	typeref:struct:explosion_s	file:
explosionflashtexture1	vx_stuff.h	/^int	explosionflashtexture1;$/;"	v
explosionflashtexture2	vx_stuff.h	/^int	explosionflashtexture2;$/;"	v
explosionflashtexture3	vx_stuff.h	/^int	explosionflashtexture3;$/;"	v
explosionflashtexture4	vx_stuff.h	/^int	explosionflashtexture4;$/;"	v
explosionflashtexture5	vx_stuff.h	/^int	explosionflashtexture5;$/;"	v
explosionflashtexture6	vx_stuff.h	/^int	explosionflashtexture6;$/;"	v
explosionflashtexture7	vx_stuff.h	/^int	explosionflashtexture7;$/;"	v
explosiontype_enum	menu_options.c	/^const char* explosiontype_enum[] =$/;"	v
expr_parser_t	parser.c	/^} expr_parser_t, *EParser;$/;"	t	typeref:struct:__anon53	file:
expr_type	parser.h	/^} expr_type;$/;"	t	typeref:enum:__anon241
expr_val	parser.h	/^typedef struct expr_val {$/;"	s
expr_val	parser.h	/^} expr_val;$/;"	t	typeref:struct:expr_val
ext_flags	ez_button.h	/^	ez_button_flags_t		ext_flags;$/;"	m	struct:ez_button_s
ext_flags	ez_controls.h	/^	ez_control_flags_t		ext_flags;				\/\/ External flags that decide how the control should behave. Movable, resizeable and such.$/;"	m	struct:ez_control_s
ext_flags	ez_label.h	/^	ez_label_flags_t		ext_flags;					\/\/ External flags for how the text in the label is formatted.$/;"	m	struct:ez_label_s
ext_flags	ez_scrollbar.h	/^	ez_scrollbar_flags_t		ext_flags;			\/\/ External flags for the scrollbar.$/;"	m	struct:ez_scrollbar_s
ext_flags	ez_scrollpane.h	/^	ez_scrollpane_flags_t		ext_flags;			\/\/ External flags for the scrollbar.$/;"	m	struct:ez_scrollpane_s
extension	EX_FileList.h	/^    char        extension [MAX_EXTENSION_LENGTH+1];$/;"	m	struct:filetype_s
extensions	server.h	/^	int			extensions;			\/\/ what ZQuake extensions the client supports$/;"	m	struct:client_s
extensions_string	tr_types.h	/^	char					extensions_string[BIG_INFO_STRING];$/;"	m	struct:__anon286
extents	gl_model.h	/^	short				extents[2];$/;"	m	struct:msurface_s
extents	r_model.h	/^	short				extents[2];$/;"	m	struct:msurface_s
eyeposition	gl_model.h	/^	vec3_t				eyeposition;$/;"	m	struct:aliashdr_s
eyeposition	modelgen.h	/^	vec3_t		eyeposition;$/;"	m	struct:__anon224
eyes_player_checksum	server.h	/^	unsigned	eyes_player_checksum;$/;"	m	struct:__anon264
ez_anchor_e	ez_controls.h	/^typedef enum ez_anchor_e$/;"	g
ez_anchor_t	ez_controls.h	/^} ez_anchor_t;$/;"	t	typeref:enum:ez_anchor_e
ez_button_eventcount_s	ez_button.h	/^typedef struct ez_button_eventcount_s$/;"	s
ez_button_eventcount_t	ez_button.h	/^} ez_button_eventcount_t;$/;"	t	typeref:struct:ez_button_eventcount_s
ez_button_eventhandlers_s	ez_button.h	/^typedef struct ez_button_eventhandlers_s$/;"	s
ez_button_eventhandlers_t	ez_button.h	/^} ez_button_eventhandlers_t;$/;"	t	typeref:struct:ez_button_eventhandlers_s
ez_button_events_s	ez_button.h	/^typedef struct ez_button_events_s$/;"	s
ez_button_events_t	ez_button.h	/^} ez_button_events_t;$/;"	t	typeref:struct:ez_button_events_s
ez_button_flags_e	ez_button.h	/^typedef enum ez_button_flags_e$/;"	g
ez_button_flags_t	ez_button.h	/^} ez_button_flags_t;$/;"	t	typeref:enum:ez_button_flags_e
ez_button_s	ez_button.h	/^typedef struct ez_button_s$/;"	s
ez_button_t	ez_button.h	/^} ez_button_t;$/;"	t	typeref:struct:ez_button_s
ez_control_eventcount_s	ez_controls.h	/^typedef struct ez_control_eventcount_s$/;"	s
ez_control_eventcount_t	ez_controls.h	/^} ez_control_eventcount_t;$/;"	t	typeref:struct:ez_control_eventcount_s
ez_control_eventhandlers_s	ez_controls.h	/^typedef struct ez_control_eventhandlers_s$/;"	s
ez_control_eventhandlers_t	ez_controls.h	/^} ez_control_eventhandlers_t;$/;"	t	typeref:struct:ez_control_eventhandlers_s
ez_control_events_s	ez_controls.h	/^typedef struct ez_control_events_s$/;"	s
ez_control_events_t	ez_controls.h	/^} ez_control_events_t;$/;"	t	typeref:struct:ez_control_events_s
ez_control_flags_e	ez_controls.h	/^typedef enum ez_control_flags_e$/;"	g
ez_control_flags_t	ez_controls.h	/^} ez_control_flags_t;$/;"	t	typeref:enum:ez_control_flags_e
ez_control_id_e	ez_controls.h	/^typedef enum ez_control_id_e$/;"	g
ez_control_id_t	ez_controls.h	/^} ez_control_id_t;$/;"	t	typeref:enum:ez_control_id_e
ez_control_iflags_e	ez_controls.h	/^typedef enum ez_control_iflags_e$/;"	g
ez_control_iflags_t	ez_controls.h	/^} ez_control_iflags_t;$/;"	t	typeref:enum:ez_control_iflags_e
ez_control_s	ez_controls.h	/^typedef struct ez_control_s$/;"	s
ez_control_t	ez_controls.h	/^} ez_control_t;$/;"	t	typeref:struct:ez_control_s
ez_destroy_event_fp	ez_controls.h	/^typedef int (*ez_destroy_event_fp) (struct ez_control_s *self, qbool destroy_children);$/;"	t
ez_destroy_eventhandler_fp	ez_controls.h	/^typedef int (*ez_destroy_eventhandler_fp) (struct ez_control_s *self, void *payload, qbool destroy_children);$/;"	t
ez_dllist_node_s	ez_controls.h	/^typedef struct ez_dllist_node_s$/;"	s
ez_dllist_node_t	ez_controls.h	/^} ez_dllist_node_t;$/;"	t	typeref:struct:ez_dllist_node_s
ez_double_linked_list_s	ez_controls.h	/^typedef struct ez_double_linked_list_s$/;"	s
ez_double_linked_list_t	ez_controls.h	/^} ez_double_linked_list_t;$/;"	t	typeref:struct:ez_double_linked_list_s
ez_event_fp	ez_controls.h	/^typedef int (*ez_event_fp) (struct ez_control_s *self);$/;"	t
ez_eventhandler_fp	ez_controls.h	/^typedef int (*ez_eventhandler_fp) (struct ez_control_s *self, void *payload);$/;"	t
ez_eventhandler_s	ez_controls.h	/^typedef struct ez_eventhandler_s$/;"	s
ez_eventhandler_t	ez_controls.h	/^} ez_eventhandler_t;$/;"	t	typeref:struct:ez_eventhandler_s
ez_eventhandlerfunction_t	ez_controls.h	/^} ez_eventhandlerfunction_t;$/;"	t	typeref:union:ez_eventhandlerfunction_u
ez_eventhandlerfunction_u	ez_controls.h	/^typedef union ez_eventhandlerfunction_u$/;"	u
ez_key_event_fp	ez_controls.h	/^typedef int (*ez_key_event_fp) (struct ez_control_s *self, int key, int unichar, qbool down);$/;"	t
ez_key_eventhandler_fp	ez_controls.h	/^typedef int (*ez_key_eventhandler_fp) (struct ez_control_s *self, void *payload, int key, int unichar, qbool down);$/;"	t
ez_keyspecific_event_fp	ez_controls.h	/^typedef int (*ez_keyspecific_event_fp) (struct ez_control_s *self, int key, int unichar);$/;"	t
ez_keyspecific_eventhandler_fp	ez_controls.h	/^typedef int (*ez_keyspecific_eventhandler_fp) (struct ez_control_s *self, void *payload, int key, int unichar);$/;"	t
ez_label_eventcount_s	ez_label.h	/^typedef struct ez_label_eventcount_s$/;"	s
ez_label_eventcount_t	ez_label.h	/^} ez_label_eventcount_t;$/;"	t	typeref:struct:ez_label_eventcount_s
ez_label_eventhandlers_s	ez_label.h	/^typedef struct ez_label_eventhandlers_s$/;"	s
ez_label_eventhandlers_t	ez_label.h	/^} ez_label_eventhandlers_t;$/;"	t	typeref:struct:ez_label_eventhandlers_s
ez_label_events_s	ez_label.h	/^typedef struct ez_label_events_s$/;"	s
ez_label_events_t	ez_label.h	/^} ez_label_events_t;$/;"	t	typeref:struct:ez_label_events_s
ez_label_flags_e	ez_label.h	/^typedef enum ez_label_flags_e$/;"	g
ez_label_flags_t	ez_label.h	/^} ez_label_flags_t;$/;"	t	typeref:enum:ez_label_flags_e
ez_label_iflags_e	ez_label.h	/^typedef enum ez_label_iflags_e$/;"	g
ez_label_iflags_t	ez_label.h	/^} ez_label_iflags_t;$/;"	t	typeref:enum:ez_label_iflags_e
ez_label_s	ez_label.h	/^typedef struct ez_label_s$/;"	s
ez_label_t	ez_label.h	/^} ez_label_t;$/;"	t	typeref:struct:ez_label_s
ez_label_textpos_s	ez_label.h	/^typedef struct ez_label_textpos_s$/;"	s
ez_label_textpos_t	ez_label.h	/^} ez_label_textpos_t;$/;"	t	typeref:struct:ez_label_textpos_s
ez_mouse_event_fp	ez_controls.h	/^typedef int (*ez_mouse_event_fp) (struct ez_control_s *self, mouse_state_t *mouse_state);$/;"	t
ez_mouse_eventhandler_fp	ez_controls.h	/^typedef int (*ez_mouse_eventhandler_fp) (struct ez_control_s *self, void *payload, mouse_state_t *mouse_state);$/;"	t
ez_orientation_s	ez_scrollbar.h	/^typedef enum ez_orientation_s$/;"	g
ez_orientation_t	ez_scrollbar.h	/^} ez_orientation_t;$/;"	t	typeref:enum:ez_orientation_s
ez_scrollbar_eventcount_s	ez_scrollbar.h	/^typedef struct ez_scrollbar_eventcount_s$/;"	s
ez_scrollbar_eventcount_t	ez_scrollbar.h	/^} ez_scrollbar_eventcount_t;$/;"	t	typeref:struct:ez_scrollbar_eventcount_s
ez_scrollbar_eventhandlers_s	ez_scrollbar.h	/^typedef struct ez_scrollbar_eventhandlers_s$/;"	s
ez_scrollbar_eventhandlers_t	ez_scrollbar.h	/^} ez_scrollbar_eventhandlers_t;$/;"	t	typeref:struct:ez_scrollbar_eventhandlers_s
ez_scrollbar_events_s	ez_scrollbar.h	/^typedef struct ez_scrollbar_events_s$/;"	s
ez_scrollbar_events_t	ez_scrollbar.h	/^} ez_scrollbar_events_t;$/;"	t	typeref:struct:ez_scrollbar_events_s
ez_scrollbar_flags_e	ez_scrollbar.h	/^typedef enum ez_scrollbar_flags_e$/;"	g
ez_scrollbar_flags_t	ez_scrollbar.h	/^} ez_scrollbar_flags_t;$/;"	t	typeref:enum:ez_scrollbar_flags_e
ez_scrollbar_iflags_e	ez_scrollbar.h	/^typedef enum ez_scrollbar_iflags_e$/;"	g
ez_scrollbar_iflags_t	ez_scrollbar.h	/^} ez_scrollbar_iflags_t;$/;"	t	typeref:enum:ez_scrollbar_iflags_e
ez_scrollbar_s	ez_scrollbar.h	/^typedef struct ez_scrollbar_s$/;"	s
ez_scrollbar_t	ez_scrollbar.h	/^} ez_scrollbar_t;$/;"	t	typeref:struct:ez_scrollbar_s
ez_scrollpane_eventcount_s	ez_scrollpane.h	/^typedef struct ez_scrollpane_eventcount_s$/;"	s
ez_scrollpane_eventcount_t	ez_scrollpane.h	/^} ez_scrollpane_eventcount_t;$/;"	t	typeref:struct:ez_scrollpane_eventcount_s
ez_scrollpane_eventhandlers_s	ez_scrollpane.h	/^typedef struct ez_scrollpane_eventhandlers_s$/;"	s
ez_scrollpane_eventhandlers_t	ez_scrollpane.h	/^} ez_scrollpane_eventhandlers_t;$/;"	t	typeref:struct:ez_scrollpane_eventhandlers_s
ez_scrollpane_events_s	ez_scrollpane.h	/^typedef struct ez_scrollpane_events_s$/;"	s
ez_scrollpane_events_t	ez_scrollpane.h	/^} ez_scrollpane_events_t;$/;"	t	typeref:struct:ez_scrollpane_events_s
ez_scrollpane_flags_e	ez_scrollpane.h	/^typedef enum ez_scrollpane_flags_e$/;"	g
ez_scrollpane_flags_t	ez_scrollpane.h	/^} ez_scrollpane_flags_t;		$/;"	t	typeref:enum:ez_scrollpane_flags_e
ez_scrollpane_iflags_e	ez_scrollpane.h	/^typedef enum ez_scrollpane_iflags_e$/;"	g
ez_scrollpane_iflags_t	ez_scrollpane.h	/^} ez_scrollpane_iflags_t;$/;"	t	typeref:enum:ez_scrollpane_iflags_e
ez_scrollpane_s	ez_scrollpane.h	/^typedef struct ez_scrollpane_s$/;"	s
ez_scrollpane_t	ez_scrollpane.h	/^} ez_scrollpane_t;$/;"	t	typeref:struct:ez_scrollpane_s
ez_slider_eventcount_s	ez_slider.h	/^typedef struct ez_slider_eventcount_s$/;"	s
ez_slider_eventcount_t	ez_slider.h	/^} ez_slider_eventcount_t;$/;"	t	typeref:struct:ez_slider_eventcount_s
ez_slider_eventhandlers_s	ez_slider.h	/^typedef struct ez_slider_eventhandlers_s$/;"	s
ez_slider_eventhandlers_t	ez_slider.h	/^} ez_slider_eventhandlers_t;$/;"	t	typeref:struct:ez_slider_eventhandlers_s
ez_slider_events_s	ez_slider.h	/^typedef struct ez_slider_events_s$/;"	s
ez_slider_events_t	ez_slider.h	/^} ez_slider_events_t;$/;"	t	typeref:struct:ez_slider_events_s
ez_slider_iflags_e	ez_slider.h	/^typedef enum ez_slider_iflags_e$/;"	g
ez_slider_iflags_t	ez_slider.h	/^} ez_slider_iflags_t;$/;"	t	typeref:enum:ez_slider_iflags_e
ez_slider_s	ez_slider.h	/^typedef struct ez_slider_s$/;"	s
ez_slider_t	ez_slider.h	/^} ez_slider_t;$/;"	t	typeref:struct:ez_slider_s
ez_textalign_e	ez_button.h	/^typedef enum ez_textalign_e$/;"	g
ez_textalign_t	ez_button.h	/^} ez_textalign_t;$/;"	t	typeref:enum:ez_textalign_e
ez_tree_s	ez_controls.h	/^typedef struct ez_tree_s$/;"	s
ez_tree_t	ez_controls.h	/^} ez_tree_t;$/;"	t	typeref:struct:ez_tree_s
ez_window_s	ez_window.h	/^typedef struct ez_window_s$/;"	s
ez_window_t	ez_window.h	/^} ez_window_t;$/;"	t	typeref:struct:ez_window_s
ezquake_server_mailslot	sys_win.c	/^HANDLE ezquake_server_mailslot;$/;"	v
f	pr_exec.c	/^	dfunction_t	*f;$/;"	m	struct:__anon55	file:
f_button	cl_screen.c	/^	char					*f_hover, *f_button;$/;"	m	struct:hud_element_s	file:
f_cmdline_reply_time	fchecks.c	/^f_cmdline_reply_time,$/;"	v	file:
f_fshaft_reply_time	fchecks.c	/^f_fshaft_reply_time,$/;"	v	file:
f_hover	cl_screen.c	/^	char					*f_hover, *f_button;$/;"	m	struct:hud_element_s	file:
f_mod_reply_time	fchecks.c	/^f_mod_reply_time,$/;"	v	file:
f_reply_time	fchecks.c	/^f_reply_time,$/;"	v	file:
f_rnd	utils.c	/^float f_rnd( float from, float to )$/;"	f
f_ruleset_reply_time	fchecks.c	/^f_ruleset_reply_time,$/;"	v	file:
f_scripts_reply_time	fchecks.c	/^f_scripts_reply_time,$/;"	v	file:
f_server	client.h	/^	char	f_server[16];			\/\/ for f_server responses$/;"	m	struct:player_info_s
f_server_reply_time	fchecks.c	/^f_server_reply_time;$/;"	v	file:
f_skins_reply_time	fchecks.c	/^f_skins_reply_time,$/;"	v	file:
f_skins_reply_time	teamplay.h	/^	float	f_skins_reply_time;$/;"	m	struct:tvars_s
f_system_reply_time	fchecks.c	/^f_system_reply_time,$/;"	v	file:
f_system_string	host.c	/^char f_system_string[1024] = "";$/;"	v
f_trigger_s	tp_triggers.c	/^typedef struct f_trigger_s {$/;"	s	file:
f_trigger_t	tp_triggers.c	/^} f_trigger_t;$/;"	t	typeref:struct:f_trigger_s	file:
f_triggers	tp_triggers.c	/^f_trigger_t f_triggers[] = {$/;"	v
f_version_reply_time	fchecks.c	/^f_version_reply_time,$/;"	v	file:
f_version_reply_time	teamplay.h	/^	float	f_version_reply_time;$/;"	m	struct:tvars_s
fabsf	vx_vertexlights.c	23;"	d	file:
faceanimtime	client.h	/^	float		faceanimtime;		\/\/\/< use anim frame if cl.time < this$/;"	m	struct:__anon125
facesfront	gl_model.h	/^	int					facesfront;$/;"	m	struct:mtriangle_s
facesfront	modelgen.h	/^	int					facesfront;$/;"	m	struct:dtriangle_s
facesfront	r_model.h	/^	int					facesfront;$/;"	m	struct:mtriangle_s
fade	vx_coronas.c	/^	float fade;$/;"	m	struct:__anon89	file:
fade	vx_motiontrail.c	/^	float fade;$/;"	m	struct:__anon90	file:
failedload	client.h	/^	qbool			failedload;		\/\/ the name isn't a valid skin$/;"	m	struct:__anon111
fakeshaft_policy	cl_tent.c	/^static float fakeshaft_policy (void)$/;"	f	file:
falloff_interval	stats_grid.h	/^	float			falloff_interval;		\/\/ The duration since the last weight change$/;"	m	struct:stats_weight_grid_s
falloff_value	stats_grid.h	/^	float			falloff_value;			\/\/ The amount the cell weight should decrease by$/;"	m	struct:stats_weight_grid_s
false	debug.h	267;"	d
false	debug.h	275;"	d
false	debug.h	282;"	d
false	q_shared.h	/^typedef enum {false, true} qbool;$/;"	e	enum:__anon254
false	q_shared.h	56;"	d
false_description	xsd_variable.h	/^            char *false_description;$/;"	m	struct:xml_variable_s::__anon308::__anon309
fatal_error	net.h	/^	qbool		fatal_error;$/;"	m	struct:__anon240
fatbytes	cmodel.c	/^static int	fatbytes;$/;"	v	file:
fatpvs	cmodel.c	/^static byte	fatpvs[MAX_MAP_LEAFS\/8];$/;"	v	file:
fatpvs_org	cmodel.c	/^static vec3_t	fatpvs_org;$/;"	v	file:
fb_chain	gl_model.h	/^	struct	glpoly_s	*fb_chain;					\/\/next fb poly in chain$/;"	m	struct:glpoly_s	typeref:struct:glpoly_s::glpoly_s
fb_s	gl_framebuffer.h	/^typedef struct fb_s $/;"	s
fb_t	gl_framebuffer.h	/^} fb_t;$/;"	t	typeref:struct:fb_s
fb_texturenum	gl_model.h	/^	int					fb_texturenum;				\/\/index of fullbright mask or 0$/;"	m	struct:texture_s
fb_texturenum	gl_model.h	/^	int					fb_texturenum[MAX_SKINS][4];$/;"	m	struct:aliashdr_s
fclose	mgraph.h	/^	int 	(*fclose)(FILE *f);$/;"	m	struct:__anon220
ffm	ffmpeg.c	/^struct ffm	*ffm;$/;"	v	typeref:struct:ffm
ffm	ffmpeg.c	/^struct ffm$/;"	s	file:
ffm_audio_bit_rate	ffmpeg.c	/^cvar_t	ffm_audio_bit_rate	=	{"ffm_audio_bit_rate", "64000"};$/;"	v
ffm_audio_channels	ffmpeg.c	/^cvar_t	ffm_audio_channels	=	{"ffm_audio_channels", "2"};$/;"	v
ffm_audio_codec	ffmpeg.c	/^cvar_t	ffm_audio_codec 	=	{"ffm_audio_codec", "pcm_u16le", 0, OnChangeffmaudio};$/;"	v
ffm_audio_sample_rate	ffmpeg.c	/^cvar_t	ffm_audio_sample_rate	=	{"ffm_audio_sample_rate", "44100"};$/;"	v
ffm_av_codec_get_id	ffmpeg.c	/^enum CodecID           (*ffm_av_codec_get_id)                  (const struct AVCodecTag **tags, unsigned int tag);$/;"	v	typeref:enum:ffm_av_codec_get_id
ffm_av_codec_get_tag	ffmpeg.c	/^unsigned int           (*ffm_av_codec_get_tag)                 (const struct AVCodecTag **tags, enum CodecID id);$/;"	v
ffm_av_codec_next	ffmpeg.c	/^AVCodec *	(*ffm_av_codec_next)			(AVCodec *c);$/;"	v
ffm_av_find_default_stream_index	ffmpeg.c	/^int 			(*ffm_av_find_default_stream_index)	(AVFormatContext *s);$/;"	v
ffm_av_init_packet	ffmpeg.c	/^void			(*ffm_av_init_packet)			(AVPacket *pkt);$/;"	v
ffm_av_interleaved_write_frame	ffmpeg.c	/^int			(*ffm_av_interleaved_write_frame)		(AVFormatContext *s, AVPacket *pkt);$/;"	v
ffm_av_log_set_callback	ffmpeg.c	/^void 			(*ffm_av_log_set_callback)	(void (*)(void*, int, const char*, va_list));$/;"	v
ffm_av_new_stream	ffmpeg.c	/^AVStream *		(*ffm_av_new_stream)			(AVFormatContext *s, int id);$/;"	v
ffm_av_oformat_next	ffmpeg.c	/^AVOutputFormat *	(*ffm_av_oformat_next)			(AVOutputFormat *f);$/;"	v
ffm_av_register_all	ffmpeg.c	/^void			(*ffm_av_register_all)			(void);$/;"	v
ffm_av_rescale_q	ffmpeg.c	/^int64_t 	(*ffm_av_rescale_q)			(int64_t a, AVRational bq, AVRational cq);$/;"	v
ffm_av_set_parameters	ffmpeg.c	/^int			(*ffm_av_set_parameters)		(AVFormatContext *s, AVFormatParameters *ap);$/;"	v
ffm_av_write_frame	ffmpeg.c	/^int			(*ffm_av_write_frame)			(AVFormatContext *s, AVPacket *pkt);$/;"	v
ffm_av_write_header	ffmpeg.c	/^int			(*ffm_av_write_header)			(AVFormatContext *s);$/;"	v
ffm_av_write_trailer	ffmpeg.c	/^int			(*ffm_av_write_trailer)			(AVFormatContext *s);$/;"	v
ffm_avcodec_alloc_frame	ffmpeg.c	/^AVFrame *	(*ffm_avcodec_alloc_frame)		(void);$/;"	v
ffm_avcodec_close	ffmpeg.c	/^int 		(*ffm_avcodec_close)			(AVCodecContext *avctx);$/;"	v
ffm_avcodec_encode_audio	ffmpeg.c	/^int		(*ffm_avcodec_encode_audio)			(AVCodecContext *avctx, uint8_t *buf, int buf_size, const short *samples);$/;"	v
ffm_avcodec_encode_video	ffmpeg.c	/^int 		(*ffm_avcodec_encode_video)		(AVCodecContext *avctx, uint8_t *buf, int buf_size, const AVFrame *pict);$/;"	v
ffm_avcodec_find_encoder	ffmpeg.c	/^AVCodec *	(*ffm_avcodec_find_encoder)		(enum CodecID id);$/;"	v
ffm_avcodec_find_encoder_by_name	ffmpeg.c	/^AVCodec *	(*ffm_avcodec_find_encoder_by_name)	(const char *name);$/;"	v
ffm_avcodec_init	ffmpeg.c	/^void		(*ffm_avcodec_init)			(void);$/;"	v
ffm_avcodec_open	ffmpeg.c	/^int		(*ffm_avcodec_open)			(AVCodecContext *avctx, AVCodec *codec);$/;"	v
ffm_avcodec_register_all	ffmpeg.c	/^void		(*ffm_avcodec_register_all)		(void);$/;"	v
ffm_avformat_alloc_context	ffmpeg.c	/^AVFormatContext *	(*ffm_avformat_alloc_context)		(void);$/;"	v
ffm_avpicture_alloc	ffmpeg.c	/^int		(*ffm_avpicture_alloc)			(AVPicture *picture, int pix_fmt, int width, int height);$/;"	v
ffm_avpicture_fill	ffmpeg.c	/^int		(*ffm_avpicture_fill)			(AVPicture *picture, uint8_t *ptr, int pix_fmt, int width, int height);$/;"	v
ffm_avpicture_get_size	ffmpeg.c	/^int		(*ffm_avpicture_get_size)		(int pix_fmt, int width, int height);$/;"	v
ffm_debug	ffmpeg.c	/^cvar_t	ffm_debug			=	{"ffm_debug", "1"};$/;"	v
ffm_dump_format	ffmpeg.c	/^void 			(*ffm_dump_format)			(AVFormatContext *ic, int index, const char *url, int is_output);$/;"	v
ffm_fps	ffmpeg.c	/^cvar_t	ffm_fps				=	{"ffm_fps", "30", 0, OnChangeffmfps};$/;"	v
ffm_output_format	ffmpeg.c	/^cvar_t	ffm_output_format	=	{"ffm_outputformat", "avi", 0, OnChangeffmoutputformat};$/;"	v
ffm_record_duration	ffmpeg.c	/^cvar_t	ffm_record_duration	=	{"ffm_record_duration", "0", 0, OnChangeffmrd};$/;"	v
ffm_sws_getContext	ffmpeg.c	/^struct SwsContext *(*ffm_sws_getContext)				(int srcW, int srcH, enum PixelFormat srcFormat, int dstW, int dstH, enum PixelFormat dstFormat, int flags, SwsFilter *srcFilter, SwsFilter *dstFilter, double *param);$/;"	v	typeref:struct:ffm_sws_getContext
ffm_sws_scale	ffmpeg.c	/^int 		(*ffm_sws_scale)				(struct SwsContext *context, uint8_t* srcSlice[], int srcStride[], int srcSliceY, int srcSliceH, uint8_t* dst[], int dstStride[]);$/;"	v
ffm_thread	ffmpeg.c	/^cvar_t	ffm_thread			=	{"ffm_thread", "1"};$/;"	v
ffm_url_fclose	ffmpeg.c	/^int 			(*ffm_url_fclose)			(ByteIOContext *s);$/;"	v
ffm_url_fopen	ffmpeg.c	/^int 			(*ffm_url_fopen)			(ByteIOContext **s, const char *filename, int flags);$/;"	v
ffm_video_bitrate	ffmpeg.c	/^cvar_t	ffm_video_bitrate	=	{"ffm_video_bitrate", "100000"};$/;"	v
ffm_video_codec	ffmpeg.c	/^cvar_t	ffm_video_codec 	=	{"ffm_video_codec", "ffv1", 0, OnChangeffmvideo};$/;"	v
ffm_video_height	ffmpeg.c	/^cvar_t	ffm_video_height 	=	{"ffm_video_height", "600", 0, OnChangeffmres};$/;"	v
ffm_video_height	ffmpeg.c	/^cvar_t	ffm_video_width, ffm_video_height;$/;"	v
ffm_video_width	ffmpeg.c	/^cvar_t	ffm_video_width 	=	{"ffm_video_width", "800", 0, OnChangeffmres};$/;"	v
ffm_video_width	ffmpeg.c	/^cvar_t	ffm_video_width, ffm_video_height;$/;"	v
fifo_pipe	sys_linux.c	/^FILE *fifo_pipe;$/;"	v
file	ffmpeg.c	/^	FILE		*file;$/;"	m	struct:ffm	file:
file	vfs_gzip.c	/^	packfile_t file; \/\/ Only one file can be stored in a gzip file$/;"	m	struct:gzipfile_s	file:
file	wad.c	/^	FILE *file;$/;"	m	struct:__anon95	file:
file	wad.c	/^	vfsfile_t *file;$/;"	m	struct:__anon95	file:
file_color	EX_FileList.h	/^	cvar_t *		file_color;$/;"	m	struct:filelist_s
file_from_gamedir	fs.c	/^qbool	file_from_gamedir;	\/\/ global indicating file came from a gamedir (and gamedir wasn't id1\/qw)$/;"	v
file_from_pak	fs.c	/^qbool	file_from_pak;		\/\/ global indicating file came from a packfile$/;"	v
filedesc_s	EX_FileList.h	/^typedef struct filedesc_s$/;"	s
filedesc_t	EX_FileList.h	/^filedesc_t;$/;"	t	typeref:struct:filedesc_s
fileio_t	mgraph.h	/^	} fileio_t;$/;"	t	typeref:struct:__anon220
filelen	bspfile.h	/^	int		fileofs, filelen;$/;"	m	struct:__anon98
filelen	fs.c	/^    int     filepos, filelen;$/;"	m	struct:__anon16	file:
filelen	vfs.h	/^	int		filepos, filelen;$/;"	m	struct:__anon291
filelen	vfs_doomwad.c	/^	int		filepos, filelen;$/;"	m	struct:__anon71	file:
filelen	vfs_pak.c	/^	int     filepos, filelen;$/;"	m	struct:__anon75	file:
filelength	sys_mac.c	/^int filelength (int h)$/;"	f
fileline	zone2.h	/^	int fileline;$/;"	m	struct:memheader_s
fileline	zone2.h	/^	int fileline;$/;"	m	struct:mempool_s
filelist_s	EX_FileList.h	/^typedef struct filelist_s$/;"	s
filelist_t	EX_FileList.h	/^filelist_t;$/;"	t	typeref:struct:filelist_s
filename	EX_browser.h	/^        char        filename[200];      \/\/ filename for file type$/;"	m	union:source_data_s::__anon149
filename	ffmpeg.c	/^	char		*filename;$/;"	m	struct:ffm	file:
filename	fs.c	/^	char    filename[MAX_OSPATH];$/;"	m	struct:pack_s	file:
filename	vfs.h	/^	char    filename[MAX_OSPATH]; 	 $/;"	m	struct:searchpath_s
filename	vfs_gzip.c	/^	char filename[MAX_QPATH];$/;"	m	struct:gzipfile_s	file:
filename	vfs_pak.c	/^	char    filename[MAX_OSPATH];$/;"	m	struct:pack_s	file:
filename	vfs_tar.c	/^	char filename[MAX_QPATH];$/;"	m	struct:tarfile_s	file:
filename	vfs_zip.c	/^	char filename[MAX_QPATH];$/;"	m	struct:zipfile_s	file:
filename	zone2.h	/^	const char *filename;$/;"	m	struct:memheader_s
filename	zone2.h	/^	const char *filename;$/;"	m	struct:mempool_s
filenameeb	menu_options.c	/^CEditBox filenameeb;$/;"	v
fileofs	bspfile.h	/^	int		fileofs, filelen;$/;"	m	struct:__anon98
filepos	client.h	/^	unsigned long			filepos;	\/\/ The position in the demo file where the keyframe can be found.$/;"	m	struct:demo_keyframe_s
filepos	fs.c	/^    int     filepos, filelen;$/;"	m	struct:__anon16	file:
filepos	vfs.h	/^	int		filepos, filelen;$/;"	m	struct:__anon291
filepos	vfs_doomwad.c	/^	int		filepos, filelen;$/;"	m	struct:__anon71	file:
filepos	vfs_gzip.c	/^	unsigned long filepos;$/;"	m	struct:gzipfile_s	file:
filepos	vfs_pak.c	/^	int     filepos, filelen;$/;"	m	struct:__anon75	file:
filepos	vfs_pak.c	/^	unsigned int filepos;   \/\/ the pos the subfiles left it at $/;"	m	struct:pack_s	file:
filepos	vfs_tar.c	/^	unsigned long filepos;$/;"	m	struct:tarfile_s	file:
filepos	wad.h	/^	int			filepos;$/;"	m	struct:__anon299
files	fs.c	/^	packfile_t  *files;$/;"	m	struct:pack_s	file:
files	vfs_pak.c	/^	packfile_t  *files;$/;"	m	struct:pack_s	file:
files	vfs_tar.c	/^	packfile_t  *files;$/;"	m	struct:tarfile_s	file:
files	vfs_zip.c	/^	packfile_t	*files;$/;"	m	struct:zipfile_s	file:
filesystemchanged	fs.c	/^qbool filesystemchanged = true;$/;"	v
filesystemhash	fs.c	/^hashtable_t *filesystemhash;$/;"	v
filetype_s	EX_FileList.h	/^typedef struct filetype_s$/;"	s
filetype_t	EX_FileList.h	/^filetype_t;$/;"	t	typeref:struct:filetype_s
filetypes	EX_FileList.h	/^    filetype_t		filetypes[MAX_FILELIST_TYPES];$/;"	m	struct:filelist_s
filler	image.c	/^    char			filler[58];$/;"	m	struct:pcx_s	file:
filter_strings	teamplay.c	/^char filter_strings[8][MAX_FILTER_LENGTH + 1];$/;"	v
filterban	sv_main.c	/^cvar_t	filterban = {"filterban", "1"};$/;"	v
finalvert_s	d_iface.h	/^typedef struct finalvert_s {$/;"	s
finalvert_t	d_iface.h	/^} finalvert_t;$/;"	t	typeref:struct:finalvert_s
findtrack	client.h	/^	qbool		findtrack;$/;"	m	struct:__anon122
firstLevel	menu_multiplayer.c	/^	int        firstLevel;$/;"	m	struct:__anon46	file:
first_statement	pr_comp.h	/^	int		first_statement;	\/\/ negative numbers are builtins$/;"	m	struct:__anon250
firstblock	cl_parse.c	/^int firstblock;$/;"	v
firstclipnode	cmodel.h	/^	int			firstclipnode;$/;"	m	struct:__anon131
firstedge	bspfile.h	/^	int			firstedge;		\/\/ we must support > 64k edges$/;"	m	struct:__anon107
firstedge	gl_model.h	/^	int					firstedge;					\/\/ look up in model->surfedges[], negative numbers$/;"	m	struct:msurface_s
firstedge	r_model.h	/^	int					firstedge;					\/\/ look up in model->surfedges[], negative numbers$/;"	m	struct:msurface_s
firstface	bspfile.h	/^	int			firstface, numfaces;$/;"	m	struct:__anon99
firstface	bspfile.h	/^	unsigned short	firstface;$/;"	m	struct:__anon104
firstmarksurface	bspfile.h	/^	unsigned short		firstmarksurface;$/;"	m	struct:__anon108
firstmarksurface	gl_model.h	/^	msurface_t			**firstmarksurface;$/;"	m	struct:mleaf_s
firstmarksurface	r_model.h	/^	msurface_t			**firstmarksurface;$/;"	m	struct:mleaf_s
firstmodelsurface	gl_model.h	/^	int					firstmodelsurface, nummodelsurfaces;$/;"	m	struct:model_s
firstmodelsurface	r_model.h	/^	int					firstmodelsurface, nummodelsurfaces;$/;"	m	struct:model_s
firstnode	gl_model.h	/^	int					firstnode;$/;"	m	struct:model_s
firstnode	r_model.h	/^	int					firstnode;$/;"	m	struct:model_s
firstpose	gl_model.h	/^	int					firstpose;$/;"	m	struct:maliasframedesc_s
firstrun	mvd_utils_common.h	/^	int firstrun;$/;"	m	struct:mvd_info_s
firstsurface	gl_model.h	/^	unsigned short		firstsurface;$/;"	m	struct:mnode_s
firstsurface	r_model.h	/^	unsigned short		firstsurface;$/;"	m	struct:mnode_s
firstupdate	vid_win.c	/^static int		firstupdate = 1;$/;"	v	file:
fix32_t	mgraph.h	/^typedef	long			fix32_t;$/;"	t
fix32_t	mgraph.h	579;"	d
fixangle	progdefs.h	/^	float	fixangle;$/;"	m	struct:__anon253
fixed16_t	mathlib.h	/^typedef	int	fixed16_t;$/;"	t
fixed4_t	mathlib.h	/^typedef	int	fixed4_t;$/;"	t
fixed8_t	mathlib.h	/^typedef	int	fixed8_t;$/;"	t
flag_captured	fragstats.c	/^static qbool flag_dropped, flag_touched, flag_captured;$/;"	v	file:
flag_dropped	fragstats.c	/^static qbool flag_dropped, flag_touched, flag_captured;$/;"	v	file:
flag_touched	fragstats.c	/^static qbool flag_dropped, flag_touched, flag_captured;$/;"	v	file:
flagalerts	fragstats.c	/^	qbool	flagalerts;$/;"	m	struct:fragdef_s	file:
flags	bspfile.h	/^	int			flags;$/;"	m	struct:texinfo_s
flags	cl_ents.c	/^	int flags;$/;"	m	struct:predicted_player	file:
flags	cl_screen.c	/^	int			flags;$/;"	m	struct:ci_player_s	file:
flags	cl_screen.c	/^	unsigned				flags;$/;"	m	struct:hud_element_s	file:
flags	client.h	/^	int				flags;$/;"	m	struct:__anon115
flags	client.h	/^	int			flags;			\/\/ Dead, gib, etc.$/;"	m	struct:__anon112
flags	cmd.h	/^	int					flags;$/;"	m	struct:cmd_alias_s
flags	cvar.h	/^	int		flags;$/;"	m	struct:cvar_s
flags	d_iface.h	/^	int		flags;$/;"	m	struct:finalvert_s
flags	fmod.c	/^	int			flags;$/;"	m	struct:check_models_s	file:
flags	fs.c	/^	unsigned char flags;$/;"	m	struct:__anon20	file:
flags	gl_md3.h	/^	int			flags;	\/\/Does anyone know what these are?$/;"	m	struct:__anon154
flags	gl_md3.h	/^	int		flags;$/;"	m	struct:__anon155
flags	gl_model.h	/^	int					flags;$/;"	m	struct:aliashdr_s
flags	gl_model.h	/^	int					flags;$/;"	m	struct:model_s
flags	gl_model.h	/^	int					flags;$/;"	m	struct:msurface_s
flags	gl_model.h	/^	int					flags;$/;"	m	struct:mtexinfo_s
flags	hud.h	/^    unsigned   flags;$/;"	m	struct:hud_s
flags	modelgen.h	/^	int			flags;$/;"	m	struct:__anon224
flags	progdefs.h	/^	float	flags;$/;"	m	struct:__anon253
flags	protocol.h	/^	int		flags;			\/\/ nolerp, etc$/;"	m	struct:entity_state_s
flags	r_model.h	/^	int					flags;$/;"	m	struct:model_s
flags	r_model.h	/^	int					flags;$/;"	m	struct:msurface_s
flags	r_model.h	/^	int					flags;$/;"	m	struct:mtexinfo_s
flags	r_shared.h	/^	int			flags;				\/\/ currentface flags$/;"	m	struct:surf_s
flags	teamplay.c	/^	unsigned int		flags;		\/\/ TODO: "NOPICKUP" (disp), "TEAMENEMY" (flag, disp)$/;"	m	struct:__anon69	file:
flags	tp_triggers.h	/^	unsigned						flags;$/;"	m	struct:pcre_internal_trigger_s
flags	tp_triggers.h	/^	unsigned				flags;$/;"	m	struct:pcre_trigger_s
flags	winquake.h	/^    DWORD   flags;$/;"	m	struct:__anon300
flags	zone2.h	/^	int flags;$/;"	m	struct:mempool_s
flash_contrast	cl_view.c	367;"	d	file:
flash_gamma	cl_view.c	366;"	d	file:
flashed	cl_view.c	/^qbool flashed = false; \/\/ it should be used for f_flashout tirgger$/;"	v
flatcolor3ub	gl_model.h	/^	unsigned			flatcolor3ub;				\/\/just for r_fastturb's sake$/;"	m	struct:texture_s
flatcolor3ub	r_model.h	/^	int					flatcolor3ub;				\/\/ hetman: r_drawflat for software builds$/;"	m	struct:texture_s
flip	ffmpeg.c	/^static void flip(byte *in, byte *out){$/;"	f	file:
float_description	xsd_variable.h	/^        char *float_description;$/;"	m	union:xml_variable_s::__anon308
floating_point_exception_handler	sys_linux.c	/^void floating_point_exception_handler (int whatever) {$/;"	f
floatptr	mvd_cam.h	/^	double					**floatptr;$/;"	m	struct:mvd_menu_s
flocation_t	vfs.h	/^} flocation_t;$/;"	t	typeref:struct:__anon288
flood_s	ignore.c	/^typedef struct flood_s {$/;"	s	file:
flood_t	ignore.c	/^} flood_t;$/;"	t	typeref:struct:flood_s	file:
floodfill_t	gl_model.c	/^} floodfill_t;$/;"	t	typeref:struct:__anon23	file:
floodindex	ignore.c	/^static int		floodindex;$/;"	v	file:
floodlist	ignore.c	/^static flood_t floodlist[FLOODLIST_SIZE];$/;"	v	file:
fmod_warn_time	fmod.c	/^static float fmod_warn_time = 0.0f;$/;"	v	file:
fmodf	vx_vertexlights.c	26;"	d	file:
fname	sys.h	/^    char fname[MAX_PATH_LENGTH];$/;"	m	struct:sys_dirent_s
fname	vfs_tar.h	/^  char              *fname;$/;"	m	struct:attr_item
focused_image	ez_button.h	/^	mpic_t					*focused_image;		\/\/ The image for the button when it is focused.$/;"	m	struct:ez_button_s
focused_node	ez_controls.h	/^	ez_dllist_node_t		*focused_node;			\/\/ The node of focused control (from the tablist). $/;"	m	struct:ez_tree_s
focused_text_color	ez_button.h	/^	clrinfo_t				focused_text_color;	\/\/ Text color when the button is focused.$/;"	m	struct:ez_button_s
fofs_brokenankle	pr_edict.c	/^int fofs_maxspeed, fofs_gravity, fofs_brokenankle, fofs_items2;$/;"	v
fofs_gravity	pr_edict.c	/^int fofs_maxspeed, fofs_gravity, fofs_brokenankle, fofs_items2;$/;"	v
fofs_items2	pr_edict.c	/^int fofs_maxspeed, fofs_gravity, fofs_brokenankle, fofs_items2;$/;"	v
fofs_maxspeed	pr_edict.c	/^int fofs_maxspeed, fofs_gravity, fofs_brokenankle, fofs_items2;$/;"	v
font	mgraph.h	/^	font_t 			*font;			\/* Currently selected font			*\/$/;"	m	struct:__anon215
fontHeight	mgraph.h	/^	m_int			fontHeight;		\/* Height of the font				*\/$/;"	m	struct:__anon214
fontHeight	mgraph.h	/^	short			fontHeight;		\/* Font height						*\/$/;"	m	struct:__anon213
fontType	mgraph.h	/^	short			fontType;		\/* Type of font						*\/$/;"	m	struct:__anon213
fontWidth	mgraph.h	/^	m_int			fontWidth;		\/* Character width (tightest fit)	*\/$/;"	m	struct:__anon214
fontWidth	mgraph.h	/^	short			fontWidth;		\/* Font width						*\/$/;"	m	struct:__anon213
font_t	mgraph.h	/^	} font_t;$/;"	t	typeref:struct:__anon213
fopen	mgraph.h	/^	FILE *	(*fopen)(const char *filename,const char *mode);$/;"	m	struct:__anon220
forceOptions	sys_mac.c	/^qbool forceOptions = false;$/;"	v
forceTextureReload	gl_texture.c	/^static qbool no24bit, forceTextureReload;$/;"	v	file:
force_minimized	vid_win.c	/^static qbool	force_minimized, in_mode_set, is_mode0x13, force_mode_set;$/;"	v	file:
force_mode_set	vid_win.c	/^static qbool	force_minimized, in_mode_set, is_mode0x13, force_mode_set;$/;"	v	file:
force_retouch	progdefs.h	/^	float	force_retouch;$/;"	m	struct:__anon252
forcewindowed	sys_mac.c	/^qbool forcewindowed = false;$/;"	v
forked	ffmpeg.c	/^qbool forked;$/;"	v
format	match_tools.c	/^	cvar_t		*format;$/;"	m	struct:matchcvar_s	file:
format	qsound.h	/^	snd_format_t	format;$/;"	m	struct:dma_s
format	qsound.h	/^	snd_format_t	format;$/;"	m	struct:sfxcache_s
format_context	ffmpeg.c	/^	AVFormatContext	*format_context;$/;"	m	struct:ffm	file:
formatted_comms_commands	cmd.c	/^char *formatted_comms_commands[] = {$/;"	v
forward	client.h	/^	qbool forward, back, left, right, jump, attack, up, down;$/;"	m	struct:__anon126
forward	ez_scrollbar.h	/^	ez_button_t					*forward;			\/\/ Down \/ right button.$/;"	m	struct:ez_scrollbar_s
forward	teamplay.h	/^	vec3_t	forward;$/;"	m	struct:item_vis_s
forwardmove	protocol.h	/^	short	forwardmove, sidemove, upmove;$/;"	m	struct:usercmd_s
found_floor	d_edge.c	/^qbool found_floor = false;$/;"	v
found_secrets	progdefs.h	/^	float	found_secrets;$/;"	m	struct:__anon252
found_wall	d_edge.c	/^qbool found_wall = false;$/;"	v
fov_start	mvd_cam.h	/^	double fov_start;$/;"	m	struct:c_curve_s
fov_stop	mvd_cam.h	/^	double fov_stop;$/;"	m	struct:c_curve_s
fov_x	render.h	/^	float		fov_x, fov_y;$/;"	m	struct:__anon256
fov_y	render.h	/^	float		fov_x, fov_y;$/;"	m	struct:__anon256
fp_messages	sv_ccmds.c	/^int fp_messages = 4, fp_persecond = 4, fp_secondsdead = 10;$/;"	v
fp_persecond	sv_ccmds.c	/^int fp_messages = 4, fp_persecond = 4, fp_secondsdead = 10;$/;"	v
fp_secondsdead	sv_ccmds.c	/^int fp_messages = 4, fp_persecond = 4, fp_secondsdead = 10;$/;"	v
fpd	client.h	/^	int			fpd;				\/\/\/< FAQ proxy flags$/;"	m	struct:__anon125
fps	client.h	/^	double		fps;$/;"	m	struct:__anon122
fps	client.h	/^    int    fps;						\/\/ > 0 - fps, < 0 - invalid, 0 - collecting$/;"	m	struct:player_info_s
fps_count	cl_main.c	/^int		fps_count;$/;"	v
fps_frames	client.h	/^    int    fps_frames;$/;"	m	struct:player_info_s
fps_measure_time	client.h	/^    double fps_measure_time;$/;"	m	struct:player_info_s
fps_mode	menu_options.c	/^enum {mode_fastest, mode_default, mode_undef} fps_mode = mode_default;$/;"	v	typeref:enum:__anon49
fps_mode	menu_options.c	/^enum {mode_fastest, mode_faithful, mode_higheyecandy, mode_eyecandy, mode_undef} fps_mode = mode_undef;$/;"	v	typeref:enum:__anon48
fps_msec	client.h	/^    int    fps_msec;$/;"	m	struct:player_info_s
fptr	new_menu.c	/^	float	**fptr;$/;"	m	struct:menu_ct	file:
fraction	cmodel.h	/^	float	fraction;			\/\/ time completed, 1.0 = didn't hit anything$/;"	m	struct:__anon133
frag_and_flags	EX_browser_ping.c	/^    unsigned short frag_and_flags; \/\/ flags$/;"	m	struct:IP_header_s	file:
fragdef_s	fragstats.c	/^typedef struct fragdef_s {$/;"	s	file:
fragdef_t	fragstats.c	/^} fragdef_t;$/;"	t	typeref:struct:fragdef_s	file:
fragdefs	fragstats.c	/^static fragdef_t fragdefs;$/;"	v	file:
fraglimit	EX_browser.h	/^    char fraglimit [COL_FRAGLIMIT + 1];$/;"	m	struct:column_s
fraglimit	client.h	/^	int			fraglimit;$/;"	m	struct:__anon125
fraglimit	match_tools.c	/^	int fraglimit;$/;"	m	struct:matchinfo_s	file:
fraglimit	sv_main.c	/^cvar_t	fraglimit = {"fraglimit", "0", CVAR_SERVERINFO};$/;"	v
fragmsg1_indexes	fragstats.c	/^static int fragmsg1_indexes[26];$/;"	v	file:
fragmsg_s	fragstats.c	/^typedef struct fragmsg_s {$/;"	s	file:
fragmsg_t	fragstats.c	/^} fragmsg_t;$/;"	t	typeref:struct:fragmsg_s	file:
fragmsgs	fragstats.c	/^	fragmsg_t	*fragmsgs[MAX_FRAG_DEFINITIONS];$/;"	m	struct:fragdef_s	file:
frags	EX_browser.h	/^    int frags;$/;"	m	struct:playerinfo_s
frags	client.h	/^	int		frags;$/;"	m	struct:player_info_s
frags	hud_common.c	/^    int  frags;$/;"	m	struct:sort_teams_info_s	file:
frags	mvd_utils_common.h	/^	int frags;$/;"	m	struct:mvd_runs_s
frags	progdefs.h	/^	float	frags;$/;"	m	struct:__anon253
frags	sbar.c	/^	int frags;$/;"	m	struct:__anon62	file:
frags	vx_tracker.c	/^	int frags;$/;"	m	struct:__anon94	file:
fragsort	sbar.c	/^int		fragsort[MAX_CLIENTS];$/;"	v
fragstats	fragstats.c	/^static fragstats_t fragstats[MAX_CLIENTS];$/;"	v	file:
fragstats_s	fragstats.c	/^typedef struct fragstats_s {$/;"	s	file:
fragstats_t	fragstats.c	/^} fragstats_t;$/;"	t	typeref:struct:fragstats_s	file:
frame	client.h	/^	int			frame;$/;"	m	struct:__anon112
frame	gl_model.h	/^	int					frame;$/;"	m	struct:maliasframedesc_s
frame	gl_model.h	/^	int					frame;$/;"	m	struct:maliasgroupframedesc_s
frame	gl_model.h	/^	mspriteframe_t		frame;$/;"	m	struct:mspriteframe2_s
frame	hud.h	/^    cvar_t *frame;						\/\/ Frame cvar.$/;"	m	struct:hud_s
frame	progdefs.h	/^	float	frame;$/;"	m	struct:__anon253
frame	protocol.h	/^	int		frame;$/;"	m	struct:entity_state_s
frame	r_model.h	/^	int					frame;$/;"	m	struct:maliasframedesc_s
frame	r_model.h	/^	int					frame;$/;"	m	struct:maliasgroupframedesc_s
frame	render.h	/^	int						frame;$/;"	m	struct:entity_s
frame	vx_motiontrail.c	/^	int frame;$/;"	m	struct:__anon90	file:
frame_buffer	gl_framebuffer.h	/^	GLint	frame_buffer;		\/\/ The GL ID of the frame buffer.$/;"	m	struct:fb_s
frame_color	hud.h	/^	cvar_t *frame_color;				\/\/ Frame color cvar.$/;"	m	struct:hud_s
frame_color_cache	hud.h	/^	byte frame_color_cache[4];			\/\/ Cache for parsed frame color.$/;"	m	struct:hud_s
frame_latency	net.h	/^	float		frame_latency;		\/\/ rolling average$/;"	m	struct:__anon240
frame_rate	net.h	/^	float		frame_rate;$/;"	m	struct:__anon240
frame_t	client.h	/^} frame_t;$/;"	t	typeref:struct:__anon114
framebuffer	gl_framebuffer.c	/^cvar_t	framebuffer		= {"framebuffer", "0"};$/;"	v
framebuffer_ptr	vid_svgalib.c	/^static unsigned char *framebuffer_ptr;$/;"	v	file:
framecount	client.h	/^	int			framecount;		\/\/\/< Incremented every frame, never reset.$/;"	m	struct:__anon122
framecount	ffmpeg.c	/^	unsigned int	framecount;$/;"	m	struct:ffm	file:
framelerp	render.h	/^	float					framelerp;$/;"	m	struct:entity_s
framenumb	mvd_cam.c	/^int framenumb= -1;$/;"	v
frameptr	gl_model.h	/^	mspriteframe_t		*frameptr;$/;"	m	struct:mspriteframedesc_s
frameptr	r_model.h	/^	mspriteframe_t		*frameptr;$/;"	m	struct:mspriteframedesc_s
frames	client.h	/^	frame_t		frames[UPDATE_BACKUP];$/;"	m	struct:__anon125
frames	ffmpeg.c	/^struct frames_list_s	*frames;$/;"	v	typeref:struct:frames_list_s
frames	gl_model.h	/^	maliasframedesc_t	frames[1];	\/\/ variable sized$/;"	m	struct:aliashdr_s
frames	gl_model.h	/^	maliasgroupframedesc_t frames[1];$/;"	m	struct:maliasgroup_s
frames	gl_model.h	/^	mspriteframe_t		*frames[1];$/;"	m	struct:mspritegroup_s
frames	gl_model.h	/^	mspriteframedesc2_t	frames[MAX_SPRITE_FRAMES];$/;"	m	struct:msprite2_s
frames	gl_model.h	/^	mspriteframedesc_t	frames[1];$/;"	m	struct:msprite_s
frames	r_model.h	/^	maliasframedesc_t	frames[1];$/;"	m	struct:aliashdr_s
frames	r_model.h	/^	maliasgroupframedesc_t frames[1];$/;"	m	struct:maliasgroup_s
frames	r_model.h	/^	mspriteframe_t		*frames[1];$/;"	m	struct:mspritegroup_s
frames	r_model.h	/^	mspriteframedesc_t	frames[1];$/;"	m	struct:msprite_s
frames	server.h	/^	client_frame_t	frames[UPDATE_BACKUP];	\/\/ updates can be deltad from here$/;"	m	struct:client_s
frames_list_s	ffmpeg.c	/^struct frames_list_s {$/;"	s	file:
frametime	client.h	/^	double			frametime;$/;"	m	struct:__anon115
frametime	client.h	/^	double		frametime;		\/\/\/< Time since last frame, scaled by cl_demospeed.$/;"	m	struct:__anon122
frametime	progdefs.h	/^	float	frametime;$/;"	m	struct:__anon252
fread	mgraph.h	/^	size_t	(*fread)(void *ptr,size_t size,size_t n,FILE *f);$/;"	m	struct:__anon220
free	progs.h	/^	qbool	free;$/;"	m	struct:edict_s
free	snd_mac.c	87;"	d	file:
free_data	linked_list.c	/^	void (*free_data)(void *data);$/;"	m	struct:linked_list	file:
free_efrags	client.h	/^	struct efrag_s	*free_efrags;$/;"	m	struct:__anon125	typeref:struct:__anon125::efrag_s
free_function	xsd.c	/^    XSD_DocumentFreeType free_function;$/;"	m	struct:xsd_mapping_s	file:
free_particles	gl_rpart.c	/^static particle_t *particles, *free_particles;$/;"	v	file:
free_particles	r_part.c	/^static particle_t	*particles, *active_particles, *free_particles;$/;"	v	file:
freelook	cl_input.c	/^cvar_t	freelook = {"freelook","1",CVAR_ARCHIVE};$/;"	v
freetime	progs.h	/^	float		freetime;			\/\/ sv.time when the object was freed$/;"	m	struct:edict_s
freq	menu_options.c	/^	cvar_t freq;	\/\/ this is not an int just because we need to fool settings_page module$/;"	m	struct:menu_video_settings_s	file:
frequency	vid_win.c	/^	int			frequency;$/;"	m	struct:__anon85	file:
friction	pmove.h	/^	float	friction;$/;"	m	struct:__anon246
frustum	gl_rmain.c	/^mplane_t	frustum[4];$/;"	v
fs_base_searchpaths	fs.c	/^searchpath_t	*fs_base_searchpaths = NULL;	\/\/ without gamedirs$/;"	v
fs_cache	fs.c	/^cvar_t fs_cache = {"fs_cache", "1"};$/;"	v
fs_filepos	fs.c	/^int		fs_filepos;$/;"	v
fs_hash_dups	fs.c	/^int fs_hash_dups;$/;"	v
fs_hash_files	fs.c	/^int fs_hash_files;$/;"	v
fs_netpath	fs.c	/^char	fs_netpath[MAX_OSPATH];$/;"	v
fs_purepaths	fs.c	/^searchpath_t	*fs_purepaths;$/;"	v
fs_searchpaths	fs.c	/^searchpath_t	*fs_searchpaths = NULL;$/;"	v
fseek	mgraph.h	/^	int 	(*fseek)(FILE *f,long offset,int whence);$/;"	m	struct:__anon220
ftell	mgraph.h	/^	long 	(*ftell)(FILE *f);$/;"	m	struct:__anon220
fteprotocolextensions	client.h	/^	unsigned int fteprotocolextensions; \/\/\/< the extensions we told the server that we support.$/;"	m	struct:__anon122
fteprotocolextensions	server.h	/^	unsigned int	fteprotocolextensions;$/;"	m	struct:client_s
fteprotocolextensions	server.h	/^	unsigned int fteprotocolextensions;$/;"	m	struct:__anon269
full_light	gl_rmain.c	/^qbool	full_light;$/;"	v
fullbright_polys	gl_rsurf.c	/^glpoly_t *fullbright_polys[MAX_GLTEXTURES];$/;"	v
fulldemoname	cl_demo.c	/^static char fulldemoname[MAX_PATH];$/;"	v	file:
fullscreen	menu_options.c	/^	qbool fullscreen;$/;"	m	struct:menu_video_settings_s	file:
fullscreen	vid_wgl.c	/^	int			fullscreen;$/;"	m	struct:__anon81	file:
fullscreen	vid_win.c	/^	int			fullscreen;$/;"	m	struct:__anon85	file:
fullscreenX	vid_mac.c	/^int 	fullscreenX = 0;$/;"	v
fumbles	fragstats.c	/^	int fumbles;$/;"	m	struct:fragstats_s	file:
func	cl_cmd.c	/^	void	(*func) (void);$/;"	m	struct:__anon2	file:
func	cmd.h	/^	char *(*func) (void);$/;"	m	struct:__anon129
func	sv_user.c	/^	void		(*func) (void);$/;"	m	struct:__anon65	file:
func	textencoding.c	/^	decodeFUNC func;$/;"	m	struct:__anon70	file:
func	tp_triggers.h	/^	internal_trigger_func			*func;$/;"	m	struct:pcre_internal_trigger_s
func_t	pr_comp.h	/^typedef int	func_t;$/;"	t
funcharsmode_enum	menu_options.c	/^const char* funcharsmode_enum[] = { "ctrl+key", "ctrl+y" };$/;"	v
funcmp	utils.c	/^int funcmp(const char *s1, const char *s2)$/;"	f
funcs	fs.c	/^	searchpathfuncs_t *funcs;$/;"	m	struct:__anon21	file:
funcs	vfs.h	/^	vfsfile_t funcs; \/\/ <= must be at top\/begining of struct$/;"	m	struct:__anon290
funcs	vfs_gzip.c	/^	vfsfile_t funcs; \/\/ <= must be at top\/begining of struct$/;"	m	struct:__anon73	file:
funcs	vfs_mmap.c	/^	vfsfile_t funcs; \/\/ <= must be at top\/begining of struct$/;"	m	struct:__anon74	file:
funcs	vfs_pak.c	/^    vfsfile_t funcs; \/\/ <= must be at top\/begining of struct$/;"	m	struct:__anon77	file:
funcs	vfs_tar.c	/^	vfsfile_t funcs; \/\/ <= must be at top\/begining of struct$/;"	m	struct:__anon78	file:
funcs	vfs_tcp.c	/^	vfsfile_t funcs; \/\/ <= must be at top\/begining of struct$/;"	m	struct:tcpfile_s	file:
funcs	vfs_zip.c	/^	vfsfile_t funcs;$/;"	m	struct:__anon79	file:
function	cmd.h	/^	xcommand_t				function;$/;"	m	struct:cmd_function_s
function	ez_controls.h	/^	ez_eventhandlerfunction_t	function;$/;"	m	struct:ez_eventhandler_s
function	modules.h	/^	void **function;$/;"	m	struct:qlib_dllfunction_s
function	mvd_cam.h	/^	void			(*function)(void);$/;"	m	struct:mvd_menu_s
function	new_menu.c	/^	void	(*function)(void);$/;"	m	struct:menu_ct	file:
function	new_menu.c	/^	void (*function)(void *data);$/;"	m	struct:MS_Popup_Entry	file:
function	new_menu.c	/^	void (*function)(void *data);$/;"	m	struct:MS_Popup_Menu_Menu	file:
function	progs.h	/^	func_t			function;$/;"	m	union:eval_s
function	timer.c	/^	void (*function)(void);$/;"	m	struct:timer	file:
function_type	ez_controls.h	/^	int							function_type;$/;"	m	struct:ez_eventhandler_s
functions	ffmpeg.c	/^	struct lib_functions *functions;$/;"	m	struct:libs	typeref:struct:libs::lib_functions	file:
fv	r_aclip.c	/^static finalvert_t		fv[2][8];$/;"	v	file:
fv	r_edge.c	/^float	fv;$/;"	v
fv	r_local.h	/^	float	fv[3];		\/\/ viewspace x, y$/;"	m	struct:__anon258
fv_flags	d_ifacea.h	66;"	d
fv_reserved	d_ifacea.h	67;"	d
fv_shift	d_ifacea.h	69;"	d
fv_size	d_ifacea.h	68;"	d
fv_v	d_ifacea.h	63;"	d
fvrectbottom	render.h	/^	float		fvrectbottom;			\/\/ bottommost edge, for Alias clamping$/;"	m	struct:__anon256
fvrectbottom_adj	render.h	/^	float		fvrectright_adj, fvrectbottom_adj;$/;"	m	struct:__anon256
fvrectright	render.h	/^	float		fvrectright;			\/\/ rightmost edge, for Alias clamping$/;"	m	struct:__anon256
fvrectright_adj	render.h	/^	float		fvrectright_adj, fvrectbottom_adj;$/;"	m	struct:__anon256
fvrectx	render.h	/^	float		fvrectx, fvrecty;		\/\/ for floating-point compares$/;"	m	struct:__anon256
fvrectx_adj	render.h	/^	float		fvrectx_adj, fvrecty_adj; \/\/ left and top edges, for clamping$/;"	m	struct:__anon256
fvrecty	render.h	/^	float		fvrectx, fvrecty;		\/\/ for floating-point compares$/;"	m	struct:__anon256
fvrecty_adj	render.h	/^	float		fvrectx_adj, fvrecty_adj; \/\/ left and top edges, for clamping$/;"	m	struct:__anon256
fwrite	mgraph.h	/^	size_t	(*fwrite)(const void *ptr,size_t size,size_t n,FILE *f);$/;"	m	struct:__anon220
fxcolor_t	mgraph.h	/^typedef	fix32_t			fxcolor_t;$/;"	t
fxpoint_t	mgraph.h	/^	} fxpoint_t;$/;"	t	typeref:struct:__anon198
fxpointc_t	mgraph.h	/^	} fxpointc_t;$/;"	t	typeref:struct:__anon201
fxpointcz_t	mgraph.h	/^	} fxpointcz_t;$/;"	t	typeref:struct:__anon204
fxpointrgb_t	mgraph.h	/^	} fxpointrgb_t;$/;"	t	typeref:struct:__anon202
fxpointrgbz_t	mgraph.h	/^	} fxpointrgbz_t;$/;"	t	typeref:struct:__anon205
fxpointz_t	mgraph.h	/^	} fxpointz_t;$/;"	t	typeref:struct:__anon203
fxrgb_t	mgraph.h	/^	} fxrgb_t;$/;"	t	typeref:struct:__anon199
fxtex_t	mgraph.h	/^	} fxtex_t;$/;"	t	typeref:struct:__anon200
g	cam_new.c	/^	float	r,g,b,a;$/;"	m	struct:CamSys_Spline	file:
g	cam_new.h	/^	float	r,g,b,a;$/;"	m	struct:CamSys_Spline
g	gl_local.h	/^	float	r, g, b;$/;"	m	struct:__anon153
g	mgraph.h	/^	fxcolor_t	r,g,b;$/;"	m	struct:__anon199
gCGNumDevices	vid_mac.c	/^CGDisplayCount 		gCGNumDevices;$/;"	v
gCGoriginalMode	vid_mac.c	/^CFDictionaryRef 	gCGoriginalMode;$/;"	v
gCarbonSndPlayDoubleBufferCallBackUPP	CarbonSndPlayDB.c	/^static SndCallBackUPP				gCarbonSndPlayDoubleBufferCallBackUPP = nil;$/;"	v	file:
gCarbonSndPlayDoubleBufferCleanUpUPP	CarbonSndPlayDB.c	/^static SndCallBackUPP				gCarbonSndPlayDoubleBufferCleanUpUPP = nil;$/;"	v	file:
gChannel	snd_mac.c	/^SndChannelPtr  			gChannel = nil;            \/\/ pointer to the sound channel$/;"	v
gContext	vid_mac.c	/^AGLContext 			gContext = NULL;$/;"	v
gFreeList	CarbonSndPlayDB.c	/^	QHdrPtr							gFreeList;$/;"	v
gFrequency	snd_mac.c	/^int gFrequency;$/;"	v
gHeader	snd_mac.c	/^SndDoubleBufferHeader 	gHeader;             \/\/ the double buffer header$/;"	v
gNMRecBusy	CarbonSndPlayDB.c	/^	Boolean							gNMRecBusy;$/;"	v
gNMRecPtr	CarbonSndPlayDB.c	/^	NMRecPtr						gNMRecPtr;$/;"	v
gOriginalBlueTable	vid_mac.c	/^CGGammaValue 		gOriginalBlueTable[256];$/;"	v
gOriginalGreenTable	vid_mac.c	/^CGGammaValue 		gOriginalGreenTable[256];$/;"	v
gOriginalRedTable	vid_mac.c	/^CGGammaValue 		gOriginalRedTable[256];$/;"	v
gScreen	vid_mac.c	/^video_ptr_t		gScreen;$/;"	v
gSilenceOnes	CarbonSndPlayDB.c	/^	Ptr								gSilenceOnes;$/;"	v
gSilenceTwos	CarbonSndPlayDB.c	/^	Ptr								gSilenceTwos;$/;"	v
gSndBufSize	snd_win.c	/^DWORD		gSndBufSize;$/;"	v
gSprocketContext	vid_mac.c	/^DSpContextReference gSprocketContext = NULL;$/;"	v
gWindowRect	vid_mac.c	/^Rect 				gWindowRect;$/;"	v
g_mask	vid_x11.c	/^static unsigned long r_mask,g_mask,b_mask;$/;"	v	file:
g_pMouse	in_win.c	/^static LPDIRECTINPUTDEVICE7	g_pMouse;$/;"	v	file:
g_pdi	in_win.c	/^static LPDIRECTINPUT7		g_pdi;$/;"	v	file:
g_shift	vid_x11.c	/^static long r_shift,g_shift,b_shift;$/;"	v	file:
ga_val	mvd_autotrack.c	62;"	d	file:
game_map_group	menu_multiplayer.c	/^	GENERATE_ENUM_MENU_FUNC(game_map_group);$/;"	v
game_map_group_desc	menu_multiplayer.c	/^	static const char* game_map_group_desc[game_map_group_max] = {$/;"	v	file:
game_map_group_e	menu_multiplayer.c	/^	typedef enum game_map_group_e {$/;"	g	file:
game_map_group_max	menu_multiplayer.c	/^		game_map_group_max$/;"	e	enum:game_map_group_e	file:
game_map_group_t	menu_multiplayer.c	/^	} game_map_group_t;$/;"	t	typeref:enum:game_map_group_e	file:
game_skill	menu_multiplayer.c	/^	GENERATE_ENUM_MENU_FUNC(game_skill);$/;"	v
game_skill_desc	menu_multiplayer.c	/^	static const char* game_skill_desc[game_skill_max] = {$/;"	v	file:
game_skill_e	menu_multiplayer.c	/^	typedef enum game_skill_e {$/;"	g	file:
game_skill_max	menu_multiplayer.c	/^		game_skill_max$/;"	e	enum:game_skill_e	file:
game_skill_t	menu_multiplayer.c	/^	} game_skill_t;$/;"	t	typeref:enum:game_skill_e	file:
game_starttime	mvd_utils.c	/^	double game_starttime;$/;"	m	struct:mvd_new_info_cg_s	file:
gamedir	EX_browser.h	/^    char gamedir [COL_GAMEDIR + 1];$/;"	m	struct:column_s
gamedir	client.h	/^	char		gamedir[MAX_OSPATH];$/;"	m	struct:__anon122
gamedir	fragstats.c	/^	char		*gamedir;$/;"	m	struct:fragdef_s	file:
gamedir	match_tools.c	/^	char gamedir[MAX_OSPATH];$/;"	m	struct:matchinfo_s	file:
gamedirfile	client.h	/^	char		gamedirfile[MAX_QPATH];$/;"	m	struct:__anon122
gamepausetime	client.h	/^	double		gamepausetime;		\/\/\/< this gets increased during the pause$/;"	m	struct:__anon125
gamestart_time	mvd_utils.c	/^double gamestart_time ;$/;"	v
gamestarttime	client.h	/^	double		gamestarttime;		\/\/\/< this gets saved on match start$/;"	m	struct:__anon125
gametime	client.h	/^	double		gametime;			\/\/\/< match duration$/;"	m	struct:__anon125
gametype	client.h	/^	int			gametype;			\/\/\/< GAME_COOP or GAME_DEATHMATCH$/;"	m	struct:__anon125
gametype	mvd_utils.c	/^	int gametype;$/;"	m	struct:mvd_gameinfo_s	file:
gametype	mvd_utils_common.h	/^	int gametype;$/;"	m	struct:mvd_cg_info_s
gammatable	cl_view.c	/^byte		gammatable[256];	\/\/ palette is sent through this$/;"	v
gap_size	ez_slider.h	/^	float					gap_size;			\/\/ The pixel gap between each value.$/;"	m	struct:ez_slider_s
gdevmode	vid_wgl.c	/^static DEVMODE	gdevmode;$/;"	v	file:
gdevmode	vid_win.c	/^static DEVMODE	gdevmode;$/;"	v	file:
gelmap	d_polyse.c	/^byte gelmap[256];$/;"	v
get	net.c	/^	unsigned int	get, send;$/;"	m	struct:__anon52	file:
getGLVendorInfo	vid_mac.c	/^static int getGLVendorInfo (GDHandle screen)$/;"	f	file:
get_mode	vid_svgalib.c	/^static int get_mode (char *name, int width, int height, int depth)$/;"	f	file:
get_z_ext_list	cl_cmd.c	/^int get_z_ext_list(int bits, char *buf, int bufsize)$/;"	f
getoct	vfs_tar.c	/^static int getoct (char *p,int width)$/;"	f	file:
gfx_colormap_lmp_FMOD_DM_FMOD_TF	fmod.c	/^static const int gfx_colormap_lmp_FMOD_DM_FMOD_TF[5]			= {0xa93b3795, 0x17016397, 0x0a761d38, 0x4866e67d, 0x3c2a2a75};$/;"	v	file:
gfx_palette_lmp_FMOD_DM_FMOD_TF	fmod.c	/^static const int gfx_palette_lmp_FMOD_DM_FMOD_TF[5]				= {0xa6a2e242, 0xbad0f7da, 0xe263351f, 0x6d51f8ad, 0x49a45d4a};$/;"	v	file:
gid	vfs_tar.h	/^  char gid[8];                  \/* 116 *\/$/;"	m	struct:tar_header
glActiveTextureEXT	gl_framebuffer.c	/^extern PFNGLACTIVETEXTUREARBPROC       glActiveTextureEXT       = NULL;$/;"	v
glBindFramebufferEXT	gl_framebuffer.c	/^extern PFNGLBINDFRAMEBUFFEREXTPROC						glBindFramebufferEXT						= NULL; \/\/ void BindFramebufferEXT(enum target, uint framebuffer);$/;"	v
glBindRenderbufferEXT	gl_framebuffer.c	/^extern PFNGLBINDRENDERBUFFEREXTPROC						glBindRenderbufferEXT						= NULL; \/\/ void BindRenderbufferEXT(enum target, uint renderbuffer);$/;"	v
glCheckFramebufferStatusEXT	gl_framebuffer.c	/^extern PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC				glCheckFramebufferStatusEXT					= NULL; \/\/ enum CheckFramebufferStatusEXT(enum target);$/;"	v
glClientActiveTextureEXT	gl_framebuffer.c	/^extern PFNGLCLIENTACTIVETEXTUREARBPROC glClientActiveTextureEXT = NULL;$/;"	v
glConfig	tr_init.c	/^glconfig_t	glConfig;$/;"	v
glDeleteFramebuffersEXT	gl_framebuffer.c	/^extern PFNGLDELETEFRAMEBUFFERSEXTPROC					glDeleteFramebuffersEXT						= NULL; \/\/ void DeleteFramebuffersEXT(sizei n, const uint *framebuffers);$/;"	v
glDeleteRenderbuffersEXT	gl_framebuffer.c	/^extern PFNGLDELETERENDERBUFFERSEXTPROC					glDeleteRenderbuffersEXT					= NULL; \/\/ void DeleteRenderbuffersEXT(sizei n, const uint *renderbuffers);$/;"	v
glDriverType_t	tr_types.h	/^} glDriverType_t;$/;"	t	typeref:enum:__anon284
glFramebufferRenderbufferEXT	gl_framebuffer.c	/^extern PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC				glFramebufferRenderbufferEXT				= NULL; \/\/ void FramebufferRenderbufferEXT(enum target, enum attachment, enum renderbuffertarget, uint renderbuffer);$/;"	v
glFramebufferTexture1DEXT	gl_framebuffer.c	/^extern PFNGLFRAMEBUFFERTEXTURE1DEXTPROC					glFramebufferTexture1DEXT					= NULL; \/\/ void FramebufferTexture1DEXT(enum target, enum attachment, enum textarget, uint texture, int level);$/;"	v
glFramebufferTexture2DEXT	gl_framebuffer.c	/^extern PFNGLFRAMEBUFFERTEXTURE2DEXTPROC					glFramebufferTexture2DEXT					= NULL; \/\/ void FramebufferTexture2DEXT(enum target, enum attachment, enum textarget, uint texture, int level);$/;"	v
glFramebufferTexture3DEXT	gl_framebuffer.c	/^extern PFNGLFRAMEBUFFERTEXTURE3DEXTPROC					glFramebufferTexture3DEXT					= NULL; \/\/ void FramebufferTexture3DEXT(enum target, enum attachment, enum textarget, uint texture, int level, int zoffset);$/;"	v
glFullWindow	vid_mac.c	/^WindowRef 			glFullWindow = NULL;	\/\/ Fullscreen window for classic$/;"	v
glGenFramebuffersEXT	gl_framebuffer.c	/^extern PFNGLGENFRAMEBUFFERSEXTPROC						glGenFramebuffersEXT						= NULL; \/\/ void GenFramebuffersEXT(sizei n, uint *framebuffers)$/;"	v
glGenRenderbuffersEXT	gl_framebuffer.c	/^extern PFNGLGENRENDERBUFFERSEXTPROC						glGenRenderbuffersEXT						= NULL; \/\/ void GenRenderbuffersEXT(sizei n, uint *renderbuffers);$/;"	v
glGenerateMipmapEXT	gl_framebuffer.c	/^extern PFNGLGENERATEMIPMAPEXTPROC						glGenerateMipmapEXT							= NULL; \/\/ void GenerateMipmapEXT(enum target);$/;"	v
glGetFramebufferAttachmentParameterivEXT	gl_framebuffer.c	/^extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	glGetFramebufferAttachmentParameterivEXT	= NULL; \/\/ void GetFramebufferAttachmentParameterivEXT(enum target, enum attachment, enum pname, int *params);$/;"	v
glGetRenderbufferParameterivEXT	gl_framebuffer.c	/^extern PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC			glGetRenderbufferParameterivEXT				= NULL; \/\/ void GetRenderbufferParameterivEXT(enum target, enum pname, int *params);$/;"	v
glHardwareType_t	tr_types.h	/^} glHardwareType_t;$/;"	t	typeref:enum:__anon285
glIsFramebufferEXT	gl_framebuffer.c	/^extern PFNGLISFRAMEBUFFEREXTPROC						glIsFramebufferEXT							= NULL; \/\/ boolean IsFramebufferEXT(uint framebuffer);$/;"	v
glIsRenderbufferEXT	gl_framebuffer.c	/^extern PFNGLISRENDERBUFFEREXTPROC						glIsRenderbufferEXT							= NULL; \/\/ boolean IsRenderbufferEXT(uint renderbuffer);$/;"	v
glMultiTexCoord2fEXT	gl_framebuffer.c	/^extern PFNGLMULTITEXCOORD2FARBPROC     glMultiTexCoord2fEXT     = NULL;$/;"	v
glRect_s	gl_rsurf.c	/^typedef struct glRect_s {$/;"	s	file:
glRect_t	gl_rsurf.c	/^} glRect_t;$/;"	t	typeref:struct:glRect_s	file:
glRenderbufferStorageEXT	gl_framebuffer.c	/^extern PFNGLRENDERBUFFERSTORAGEEXTPROC					glRenderbufferStorageEXT					= NULL; \/\/ void RenderbufferStorageEXT(enum target, enum internalformat, sizei width, sizei height);$/;"	v
glWindow	vid_mac.c	/^WindowRef 			glWindow = NULL;	\/\/ Used in windowed mode$/;"	v
glWindowPos	vid_mac.c	/^Point 				glWindowPos;		\/\/ glWindow's position$/;"	v
gl_add_ext	vid_common_gl.c	/^qbool gl_add_ext = false;$/;"	v
gl_affinemodels	gl_rmain.c	/^cvar_t	gl_affinemodels = {"gl_affinemodels", "0"};$/;"	v
gl_allow_ztrick	vid_common_gl.c	/^qbool gl_allow_ztrick = true;$/;"	v
gl_alpha_format	gl_texture.c	/^int	gl_lightmap_format = 3, gl_solid_format = 3, gl_alpha_format = 4;$/;"	v
gl_alphafont	gl_draw.c	/^cvar_t	gl_alphafont		= {"gl_alphafont", "1"};$/;"	v
gl_anisotropy	gl_texture.c	/^cvar_t	gl_anisotropy		= {"gl_anisotropy","1", 0, OnChange_gl_anisotropy};$/;"	v
gl_bounceparticles	gl_rpart.c	/^cvar_t gl_bounceparticles = {"gl_bounceparticles", "1"};$/;"	v
gl_buffer	ffmpeg.c	/^	uint8_t		*gl_buffer;$/;"	m	struct:ffm	file:
gl_caustics	gl_rmain.c	/^cvar_t	gl_caustics			= {"gl_caustics", "0"}; \/\/ 1		$/;"	v
gl_clear	gl_rmain.c	/^cvar_t	gl_clear = {"gl_clear", "0"};$/;"	v
gl_clearColor	gl_rmain.c	/^cvar_t	gl_clearColor = {"gl_clearColor", "0 0 0", CVAR_COLOR, OnChange_gl_clearColor};$/;"	v
gl_clipparticles	gl_rpart.c	/^cvar_t gl_clipparticles = {"gl_clipparticles", "1"};$/;"	v
gl_colorlights	gl_rmain.c	/^cvar_t	gl_colorlights = {"gl_colorlights", "1"};$/;"	v
gl_combine	vid_common_gl.c	/^qbool gl_combine = false;$/;"	v
gl_consolefont	gl_draw.c	/^cvar_t	gl_consolefont		= {"gl_consolefont", "povo5", 0, OnChange_gl_consolefont};$/;"	v
gl_crosshairalpha	gl_draw.c	/^cvar_t	gl_crosshairalpha	= {"crosshairalpha", "1"};$/;"	v
gl_crosshairimage	gl_draw.c	/^cvar_t	gl_crosshairimage   = {"crosshairimage", "", 0, OnChange_gl_crosshairimage};$/;"	v
gl_cshiftpercent	cl_view.c	/^cvar_t		gl_cshiftpercent = {"gl_cshiftpercent", "100"};$/;"	v
gl_cull	gl_rmain.c	/^cvar_t	gl_cull = {"gl_cull", "1"};$/;"	v
gl_detail	gl_rmain.c	/^cvar_t	gl_detail			= {"gl_detail","0"};			$/;"	v
gl_ext_anisotropic_max	vid_mac.c	/^GLfloat gl_ext_anisotropic_max = 0;$/;"	v
gl_ext_compiled_vertex_array	vid_mac.c	/^qbool gl_ext_compiled_vertex_array = false;$/;"	v
gl_ext_multitexture_units	vid_mac.c	/^GLint gl_ext_multitexture_units = 0;$/;"	v
gl_ext_packedpixel	vid_mac.c	/^qbool gl_ext_packedpixel = false;$/;"	v
gl_ext_texture_compression	vid_common_gl.c	/^cvar_t	gl_ext_texture_compression = {"gl_ext_texture_compression", "0", CVAR_SILENT, OnChange_gl_ext_texture_compression};$/;"	v
gl_ext_texture_env_add	vid_mac.c	/^qbool gl_ext_texture_env_add = false;$/;"	v
gl_ext_texture_env_combine	vid_mac.c	/^qbool gl_ext_texture_env_combine = false;$/;"	v
gl_extensions	vid_common_gl.c	/^const char *gl_extensions;$/;"	v
gl_externalTextures_bmodels	gl_texture.c	/^cvar_t	gl_externalTextures_bmodels	= {"gl_externalTextures_bmodels", "1"};$/;"	v
gl_externalTextures_world	gl_texture.c	/^cvar_t	gl_externalTextures_world	= {"gl_externalTextures_world", "1"};$/;"	v
gl_fb_bmodels	gl_rmain.c	/^cvar_t	gl_fb_bmodels = {"gl_fb_bmodels", "1"};$/;"	v
gl_fb_models	gl_rmain.c	/^cvar_t	gl_fb_models = {"gl_fb_models", "1"};$/;"	v
gl_filter_max	gl_texture.c	/^static int gl_filter_max = GL_LINEAR;$/;"	v	file:
gl_filter_min	gl_texture.c	/^static int gl_filter_min = GL_LINEAR_MIPMAP_NEAREST;$/;"	v	file:
gl_finish	gl_rmain.c	/^cvar_t	gl_finish = {"gl_finish", "0"};$/;"	v
gl_flashblend	gl_rmain.c	/^cvar_t	gl_flashblend = {"gl_flashblend", "0"};$/;"	v
gl_fogblue	gl_rmain.c	/^cvar_t  gl_fogblue			= {"gl_fogblue", "0.4"};$/;"	v
gl_fogenable	gl_rmain.c	/^cvar_t  gl_fogenable		= {"gl_fog", "0"};$/;"	v
gl_fogend	gl_rmain.c	/^cvar_t  gl_fogend			= {"gl_fogend", "800.0"};$/;"	v
gl_foggreen	gl_rmain.c	/^cvar_t  gl_foggreen			= {"gl_foggreen", "0.5"};$/;"	v
gl_fogred	gl_rmain.c	/^cvar_t  gl_fogred			= {"gl_fogred", "0.6"};$/;"	v
gl_fogsky	gl_rmain.c	/^cvar_t  gl_fogsky			= {"gl_fogsky", "1"}; $/;"	v
gl_fogstart	gl_rmain.c	/^cvar_t  gl_fogstart			= {"gl_fogstart", "50.0"};$/;"	v
gl_hwblend	cl_view.c	/^cvar_t		gl_hwblend = {"gl_hwblend", "1"};$/;"	v
gl_ignore_max_size	gl_texture.c	/^cvar_t	gl_ignore_max_size			= {"gl_ignore_max_size", "none"};$/;"	v
gl_ignore_max_size_size	gl_texture.c	/^cvar_t	gl_ignore_max_size_size		= {"gl_ignore_max_size_size", "2048", 0, OnChange_gl_max_size};$/;"	v
gl_invlightmaps	gl_rsurf.c	/^static qbool	gl_invlightmaps = true;$/;"	v	file:
gl_lerpimages	gl_texture.c	/^cvar_t	gl_lerpimages		= {"gl_lerpimages", "1"};$/;"	v
gl_lightmap_format	gl_texture.c	/^int	gl_lightmap_format = 3, gl_solid_format = 3, gl_alpha_format = 4;$/;"	v
gl_lightmode	gl_rmain.c	/^cvar_t	gl_lightmode = {"gl_lightmode", "2"};$/;"	v
gl_loadlitfiles	gl_rmain.c	/^cvar_t	gl_loadlitfiles = {"gl_loadlitfiles", "1"};$/;"	v
gl_lumaTextures	gl_rmain.c	/^cvar_t  gl_lumaTextures = {"gl_lumaTextures", "1"};	$/;"	v
gl_max_size	gl_texture.c	/^cvar_t	gl_max_size			= {"gl_max_size", "2048", 0, OnChange_gl_max_size};$/;"	v
gl_max_size_default	gl_texture.c	/^int	gl_max_size_default;$/;"	v
gl_max_size_enum	menu_options.c	/^const char* gl_max_size_enum[] = {$/;"	v
gl_maxtmu2	vid_common_gl.c	/^cvar_t  gl_maxtmu2 = {"gl_maxtmu2", "0", CVAR_LATCH};$/;"	v
gl_miptexLevel	gl_texture.c	/^cvar_t	gl_miptexLevel		= {"gl_miptexLevel", "0", 0, OnChange_gl_miptexLevel};$/;"	v
gl_mtexable	vid_common_gl.c	/^qbool gl_mtexable = false;$/;"	v
gl_no24bit	gl_texture.c	/^cvar_t  gl_no24bit                  = {"gl_no24bit", "0", CVAR_LATCH};$/;"	v
gl_nocolors	gl_rmain.c	/^cvar_t	gl_nocolors = {"gl_nocolors", "0"};$/;"	v
gl_part_blobs	gl_rmain.c	/^cvar_t gl_part_blobs = {"gl_part_blobs", "0"}; \/\/ 1$/;"	v
gl_part_blood	gl_rmain.c	/^cvar_t gl_part_blood = {"gl_part_blood", "0"}; \/\/ 1$/;"	v
gl_part_explosions	gl_rmain.c	/^cvar_t gl_part_explosions = {"gl_part_explosions", "0"}; \/\/ 1$/;"	v
gl_part_gunshots	gl_rmain.c	/^cvar_t gl_part_gunshots = {"gl_part_gunshots", "0"}; \/\/ 1$/;"	v
gl_part_inferno	gl_rmain.c	/^cvar_t gl_part_inferno = {"gl_part_inferno", "0"}; \/\/ 1$/;"	v
gl_part_lavasplash	gl_rmain.c	/^cvar_t gl_part_lavasplash = {"gl_part_lavasplash", "0"}; \/\/ 1$/;"	v
gl_part_spikes	gl_rmain.c	/^cvar_t gl_part_spikes = {"gl_part_spikes", "0"}; \/\/ 1$/;"	v
gl_part_telesplash	gl_rmain.c	/^cvar_t gl_part_telesplash = {"gl_part_telesplash", "0"}; \/\/ 1$/;"	v
gl_part_tracer1_color	gl_rmain.c	/^cvar_t gl_part_tracer1_color = {"gl_part_tracer1_color", "0 124 0", CVAR_COLOR};$/;"	v
gl_part_tracer2_color	gl_rmain.c	/^cvar_t gl_part_tracer2_color = {"gl_part_tracer2_color", "255 77 0", CVAR_COLOR};$/;"	v
gl_part_trails	gl_rmain.c	/^cvar_t gl_part_trails = {"gl_part_trails", "0"}; \/\/ 1$/;"	v
gl_picmip	gl_texture.c	/^cvar_t	gl_picmip			= {"gl_picmip", "0"};$/;"	v
gl_picture	ffmpeg.c	/^	AVFrame		*gl_picture;$/;"	m	struct:ffm	file:
gl_playermip	gl_rmain.c	/^cvar_t	gl_playermip = {"gl_playermip", "0"};$/;"	v
gl_polyblend	gl_rmain.c	/^cvar_t	gl_polyblend = {"gl_polyblend", "1"}; \/\/ 0$/;"	v
gl_powerupshells	gl_rmain.c	/^cvar_t gl_powerupshells = {"gl_powerupshells", "1"};$/;"	v
gl_powerupshells_size	gl_rmain.c	/^cvar_t gl_powerupshells_size = {"gl_powerupshells_size", "5"};$/;"	v
gl_powerupshells_style	gl_rmain.c	/^cvar_t gl_powerupshells_style = {"gl_powerupshells_style", "0"};$/;"	v
gl_renderer	vid_common_gl.c	/^const char *gl_renderer;$/;"	v
gl_rl_globe	gl_rmain.c	/^cvar_t	gl_rl_globe = {"gl_rl_globe", "0"};$/;"	v
gl_scaleModelTextures	gl_texture.c	/^cvar_t	gl_scaleModelTextures		= {"gl_scaleModelTextures", "0"};$/;"	v
gl_scaleTurbTextures	gl_texture.c	/^cvar_t	gl_scaleTurbTextures		= {"gl_scaleTurbTextures", "1"};$/;"	v
gl_shaftlight	gl_rmain.c	/^cvar_t	gl_shaftlight = {"gl_shaftlight", "1"};$/;"	v
gl_smoothfont	gl_draw.c	/^cvar_t gl_smoothfont = {"gl_smoothfont", "1", 0, OnChange_gl_smoothfont};$/;"	v
gl_smoothmodels	gl_rmain.c	/^cvar_t	gl_smoothmodels = {"gl_smoothmodels", "1"};$/;"	v
gl_solid_format	gl_texture.c	/^int	gl_lightmap_format = 3, gl_solid_format = 3, gl_alpha_format = 4;$/;"	v
gl_solidparticles	gl_rmain.c	/^cvar_t gl_solidparticles = {"gl_solidparticles", "0"}; \/\/ 1$/;"	v
gl_strings	vid_common_gl.c	/^cvar_t	gl_strings = {"gl_strings", "", CVAR_ROM | CVAR_SILENT};$/;"	v
gl_subdivide_size	gl_rmain.c	/^cvar_t	gl_subdivide_size = {"gl_subdivide_size", "64", CVAR_ARCHIVE};$/;"	v
gl_swap_buffer	ffmpeg.c	/^	uint8_t		*gl_swap_buffer;$/;"	m	struct:ffm	file:
gl_texturebits	vid_mac.c	/^cvar_t	gl_texturebits	= {"gl_texturebits", "32", 0, OnTextureBitsChange};$/;"	v
gl_textureless	gl_rmain.c	/^cvar_t	gl_textureless = {"gl_textureless", "0", 0, OnChange_r_drawflat}; \/\/Qrack$/;"	v
gl_texturemode	gl_texture.c	/^cvar_t	gl_texturemode		= {"gl_texturemode", "GL_LINEAR_MIPMAP_NEAREST", 0, OnChange_gl_texturemode};$/;"	v
gl_texturemode_enum	menu_options.c	/^const char* gl_texturemode_enum[] = {$/;"	v
gl_texturenum	gl_model.h	/^	int					gl_texturenum;$/;"	m	struct:mspriteframe_s
gl_texturenum	gl_model.h	/^	int					gl_texturenum;$/;"	m	struct:texture_s
gl_texturenum	gl_model.h	/^	int					gl_texturenum[MAX_SKINS][4];$/;"	m	struct:aliashdr_s
gl_textureunits	vid_common_gl.c	/^int gl_textureunits = 1;$/;"	v
gl_triplebuffer	cl_screen.c	/^cvar_t	gl_triplebuffer			= {"gl_triplebuffer", "1", CVAR_ARCHIVE};$/;"	v
gl_val	mvd_autotrack.c	59;"	d	file:
gl_vendor	vid_common_gl.c	/^const char *gl_vendor;$/;"	v
gl_version	vid_common_gl.c	/^const char *gl_version;$/;"	v
gl_vid_colorbits	vid_mac.c	/^cvar_t	gl_vid_colorbits = {"gl_vid_colorbits", "32", false};\/\/ Saved in prefs, not config$/;"	v
gl_vid_screen	vid_mac.c	/^cvar_t	gl_vid_screen = {"gl_vid_screen", "0", false};\/\/ Saved in prefs, not config$/;"	v
gl_vid_windowed	vid_mac.c	/^cvar_t	gl_vid_windowed = {"gl_vid_windowed", "0", false};\/\/ Saved in prefs, not config - 1 = in a window$/;"	v
gl_waterfog	gl_rmain.c	/^cvar_t  gl_waterfog			= {"gl_turbfog", "0"}; \/\/ 2			$/;"	v
gl_waterfog_density	gl_rmain.c	/^cvar_t  gl_waterfog_density = {"gl_turbfogDensity", "1"};	$/;"	v
gl_ztrick	gl_rmain.c	/^cvar_t	gl_ztrick = {"gl_ztrick", "0"};$/;"	v
gl_ztrickframe	gl_rmain.c	/^int gl_ztrickframe = 0;$/;"	v
glconfig_t	tr_types.h	/^} glconfig_t;$/;"	t	typeref:struct:__anon286
gldepthmax	gl_rmain.c	/^float		gldepthmin, gldepthmax;	\/\/ for gl_ztrick$/;"	v
gldepthmin	gl_rmain.c	/^float		gldepthmin, gldepthmax;	\/\/ for gl_ztrick$/;"	v
glheight	cl_screen.c	/^int				glx, gly, glwidth, glheight;$/;"	v
glmode_t	gl_texture.c	/^} glmode_t;$/;"	t	typeref:struct:__anon29	file:
glmodes	menu_options.c	/^const char* glmodes[] = { "320x240", "400x300", "512x384", "640x480", "800x600", "960x720", "1024x768", "1152x864", "1280x1024", "1600x1200", "2048x1536" };$/;"	v
glmodes_size	menu_options.c	/^int glmodes_size = sizeof(glmodes) \/ sizeof(char*);$/;"	v
glob_rot	mvd_cam.c	/^double glob_rot;$/;"	v
global_hInstance	sys_win.c	/^HINSTANCE	global_hInstance;$/;"	v
globalvars_t	progdefs.h	/^} globalvars_t;$/;"	t	typeref:struct:__anon252
glpoly_s	gl_model.h	/^typedef struct glpoly_s {$/;"	s
glpoly_t	gl_model.h	/^} glpoly_t;$/;"	t	typeref:struct:glpoly_s
gltexture_t	gl_texture.c	/^} gltexture_t;$/;"	t	typeref:struct:__anon28	file:
gltextures	gl_texture.c	/^static gltexture_t	gltextures[MAX_GLTEXTURES];$/;"	v	file:
glv	vid_mac.c	/^glvert_t glv;$/;"	v
glv	vid_wgl.c	/^glvert_t glv;$/;"	v
glvert_t	gl_local.h	/^} glvert_t;$/;"	t	typeref:struct:__anon153
glw_state	linux_glimp.c	/^glwstate_t glw_state;$/;"	v
glw_state	win_glimp.c	/^glwstate_t glw_state;$/;"	v
glwidth	cl_screen.c	/^int				glx, gly, glwidth, glheight;$/;"	v
glwindowpos	mac_prefs.h	/^	Point	glwindowpos;			\/\/ Last position of window in windowed mode$/;"	m	struct:__anon179
glwstate_t	tr_types.h	/^} glwstate_t;$/;"	t	typeref:struct:__anon287
glx	cl_screen.c	/^int				glx, gly, glwidth, glheight;$/;"	v
glx_extensions	vid_glx.c	/^const char *glx_extensions=NULL;$/;"	v
gly	cl_screen.c	/^int				glx, gly, glwidth, glheight;$/;"	v
gmode_t	mgraph.h	/^	} gmode_t;$/;"	t	typeref:struct:__anon217
gname	vfs_tar.h	/^  char gname[32];               \/* 297 *\/$/;"	m	struct:tar_header
goalentity	progdefs.h	/^	int	goalentity;$/;"	m	struct:__anon253
good_count	net.h	/^	int			good_count;			\/\/ cleared each level$/;"	m	struct:__anon240
grACCEL	mgraph.h	/^	grACCEL,				\/* Accelerated SuperVGA						*\/$/;"	e	enum:__anon182
grBadDriver	mgraph.h	/^	grBadDriver		= -4,	\/* File loaded was not a graphics driver	*\/$/;"	e	enum:__anon184
grBadFontFile	mgraph.h	/^	grBadFontFile	= -13,	\/* File loaded was not a font file			*\/$/;"	e	enum:__anon184
grBitmapNotFound	mgraph.h	/^	grBitmapNotFound= -23,	\/* Bitmap file was not found				*\/$/;"	e	enum:__anon184
grCursorNotFound	mgraph.h	/^	grCursorNotFound= -19,	\/* Cursor file was not found				*\/$/;"	e	enum:__anon184
grDDRAW	mgraph.h	/^	grDDRAW,				\/* Unaccelerated DirectDraw					*\/$/;"	e	enum:__anon182
grDDRAW3D	mgraph.h	/^	grDDRAW3D,				\/* 3D Accelerated DirectDraw 				*\/$/;"	e	enum:__anon182
grDDRAWACCEL	mgraph.h	/^	grDDRAWACCEL,			\/* Accelerated DirectDraw 					*\/$/;"	e	enum:__anon182
grDETECT	mgraph.h	/^	grDETECT		= -1,	\/* Auto detect the graphics subsystem		*\/$/;"	e	enum:__anon182
grDriverNotFound	mgraph.h	/^	grDriverNotFound= -3,	\/* Graphics driver file not found			*\/$/;"	e	enum:__anon184
grError	mgraph.h	/^	grError			= -8,	\/* General graphics error					*\/$/;"	e	enum:__anon184
grFontNotFound	mgraph.h	/^	grFontNotFound	= -14,	\/* Font file was not found					*\/$/;"	e	enum:__anon184
grIconNotFound	mgraph.h	/^	grIconNotFound	= -21,	\/* Icon file was not found					*\/$/;"	e	enum:__anon184
grInvalidBitmap	mgraph.h	/^	grInvalidBitmap = -22,	\/* Invalid bitmap file						*\/$/;"	e	enum:__anon184
grInvalidCursor	mgraph.h	/^	grInvalidCursor	= -18,	\/* Invalid cursor file						*\/$/;"	e	enum:__anon184
grInvalidDC	mgraph.h	/^	grInvalidDC		= -17,	\/* Invalid device context					*\/$/;"	e	enum:__anon184
grInvalidDevice	mgraph.h	/^	grInvalidDevice	= -16,	\/* Invalid device for selected operation	*\/$/;"	e	enum:__anon184
grInvalidFont	mgraph.h	/^	grInvalidFont	= -12,	\/* Invalid font data						*\/$/;"	e	enum:__anon184
grInvalidIcon	mgraph.h	/^	grInvalidIcon	= -20,	\/* Invalid icon file						*\/$/;"	e	enum:__anon184
grInvalidMode	mgraph.h	/^	grInvalidMode	= -6,	\/* Invalid graphics mode for selected driver*\/$/;"	e	enum:__anon184
grInvalidName	mgraph.h	/^	grInvalidName	= -9,	\/* Invalid driver name						*\/$/;"	e	enum:__anon184
grInvalidPF	mgraph.h	/^	grInvalidPF		= -30,	\/* Invalid pixel format for memory DC		*\/$/;"	e	enum:__anon184
grLastError	mgraph.h	/^	grLastError		= -31,	\/* Last error number in list				*\/$/;"	e	enum:__anon184
grLoadMem	mgraph.h	/^	grLoadMem		= -5,	\/* Not enough memory to load graphics driver*\/$/;"	e	enum:__anon184
grMAXDRIVER	mgraph.h	/^	grMAXDRIVER,			\/* Maximum driver number					*\/$/;"	e	enum:__anon182
grMAXMODE	mgraph.h	/^	grMAXMODE,					\/* Maximum mode number					*\/$/;"	e	enum:__anon183
grNONE	mgraph.h	/^	grNONE			= 0,	\/* No graphics hardware detected			*\/$/;"	e	enum:__anon182
grNewFontFile	mgraph.h	/^	grNewFontFile	= -25,	\/* Only Windows 2.x font files supported	*\/$/;"	e	enum:__anon184
grNoDoubleBuff	mgraph.h	/^	grNoDoubleBuff  = -26,	\/* Double buffering is not available		*\/$/;"	e	enum:__anon184
grNoHardwareBlt	mgraph.h	/^	grNoHardwareBlt	= -28,	\/* No hardware bitBlt for OffscreenDC		*\/$/;"	e	enum:__anon184
grNoInit	mgraph.h	/^	grNoInit		= -1,	\/* Graphics driver has not been installed	*\/$/;"	e	enum:__anon184
grNoMem	mgraph.h	/^	grNoMem			= -10,	\/* Not enough memory to perform operation	*\/$/;"	e	enum:__anon184
grNoModeSupport	mgraph.h	/^	grNoModeSupport	= -11,	\/* Select video mode not supported by hard.	*\/$/;"	e	enum:__anon184
grNoOffscreenMem	mgraph.h	/^	grNoOffscreenMem= -29,	\/* No available offscreen memory			*\/$/;"	e	enum:__anon184
grNotDetected	mgraph.h	/^	grNotDetected	= -2,	\/* Graphics hardware was not detected		*\/$/;"	e	enum:__anon184
grOK	mgraph.h	/^	grOK			= 0,	\/* No error									*\/$/;"	e	enum:__anon184
grOldDriver	mgraph.h	/^	grOldDriver     = -15,	\/* Driver file is an old version			*\/$/;"	e	enum:__anon184
grSVGA	mgraph.h	/^	grSVGA,					\/* Unaccelerated SuperVGA					*\/$/;"	e	enum:__anon182
grSVGA_1024x768x16m	mgraph.h	/^	grSVGA_1024x768x16m,$/;"	e	enum:__anon183
grSVGA_1024x768x256	mgraph.h	/^	grSVGA_1024x768x256,$/;"	e	enum:__anon183
grSVGA_1024x768x32k	mgraph.h	/^    grSVGA_1024x768x32k,$/;"	e	enum:__anon183
grSVGA_1024x768x4G	mgraph.h	/^	grSVGA_1024x768x4G,$/;"	e	enum:__anon183
grSVGA_1024x768x64k	mgraph.h	/^	grSVGA_1024x768x64k,$/;"	e	enum:__anon183
grSVGA_1152x864x16m	mgraph.h	/^	grSVGA_1152x864x16m,$/;"	e	enum:__anon183
grSVGA_1152x864x256	mgraph.h	/^	grSVGA_1152x864x256,$/;"	e	enum:__anon183
grSVGA_1152x864x32k	mgraph.h	/^	grSVGA_1152x864x32k,$/;"	e	enum:__anon183
grSVGA_1152x864x4G	mgraph.h	/^	grSVGA_1152x864x4G,$/;"	e	enum:__anon183
grSVGA_1152x864x64k	mgraph.h	/^	grSVGA_1152x864x64k,$/;"	e	enum:__anon183
grSVGA_1280x1024x16m	mgraph.h	/^	grSVGA_1280x1024x16m,$/;"	e	enum:__anon183
grSVGA_1280x1024x256	mgraph.h	/^	grSVGA_1280x1024x256,$/;"	e	enum:__anon183
grSVGA_1280x1024x32k	mgraph.h	/^	grSVGA_1280x1024x32k,$/;"	e	enum:__anon183
grSVGA_1280x1024x4G	mgraph.h	/^	grSVGA_1280x1024x4G,$/;"	e	enum:__anon183
grSVGA_1280x1024x64k	mgraph.h	/^	grSVGA_1280x1024x64k,$/;"	e	enum:__anon183
grSVGA_1280x960x16m	mgraph.h	/^	grSVGA_1280x960x16m,$/;"	e	enum:__anon183
grSVGA_1280x960x256	mgraph.h	/^	grSVGA_1280x960x256,$/;"	e	enum:__anon183
grSVGA_1280x960x32k	mgraph.h	/^	grSVGA_1280x960x32k,$/;"	e	enum:__anon183
grSVGA_1280x960x4G	mgraph.h	/^	grSVGA_1280x960x4G,$/;"	e	enum:__anon183
grSVGA_1280x960x64k	mgraph.h	/^	grSVGA_1280x960x64k,$/;"	e	enum:__anon183
grSVGA_1600x1200x16m	mgraph.h	/^	grSVGA_1600x1200x16m,$/;"	e	enum:__anon183
grSVGA_1600x1200x256	mgraph.h	/^	grSVGA_1600x1200x256,$/;"	e	enum:__anon183
grSVGA_1600x1200x32k	mgraph.h	/^    grSVGA_1600x1200x32k,$/;"	e	enum:__anon183
grSVGA_1600x1200x4G	mgraph.h	/^	grSVGA_1600x1200x4G,$/;"	e	enum:__anon183
grSVGA_1600x1200x64k	mgraph.h	/^	grSVGA_1600x1200x64k,$/;"	e	enum:__anon183
grSVGA_320x200x16m	mgraph.h	/^	grSVGA_320x200x16m,$/;"	e	enum:__anon183
grSVGA_320x200x256	mgraph.h	/^	grSVGA_320x200x256,$/;"	e	enum:__anon183
grSVGA_320x200x32k	mgraph.h	/^    grSVGA_320x200x32k,$/;"	e	enum:__anon183
grSVGA_320x200x4G	mgraph.h	/^	grSVGA_320x200x4G,$/;"	e	enum:__anon183
grSVGA_320x200x64k	mgraph.h	/^    grSVGA_320x200x64k,$/;"	e	enum:__anon183
grSVGA_320x240x16m	mgraph.h	/^	grSVGA_320x240x16m,$/;"	e	enum:__anon183
grSVGA_320x240x256	mgraph.h	/^	grSVGA_320x240x256,$/;"	e	enum:__anon183
grSVGA_320x240x32k	mgraph.h	/^	grSVGA_320x240x32k,$/;"	e	enum:__anon183
grSVGA_320x240x4G	mgraph.h	/^	grSVGA_320x240x4G,$/;"	e	enum:__anon183
grSVGA_320x240x64k	mgraph.h	/^	grSVGA_320x240x64k,$/;"	e	enum:__anon183
grSVGA_320x400x16m	mgraph.h	/^	grSVGA_320x400x16m,$/;"	e	enum:__anon183
grSVGA_320x400x256	mgraph.h	/^	grSVGA_320x400x256,$/;"	e	enum:__anon183
grSVGA_320x400x32k	mgraph.h	/^	grSVGA_320x400x32k,$/;"	e	enum:__anon183
grSVGA_320x400x4G	mgraph.h	/^	grSVGA_320x400x4G,$/;"	e	enum:__anon183
grSVGA_320x400x64k	mgraph.h	/^	grSVGA_320x400x64k,$/;"	e	enum:__anon183
grSVGA_320x480x16m	mgraph.h	/^	grSVGA_320x480x16m,$/;"	e	enum:__anon183
grSVGA_320x480x256	mgraph.h	/^	grSVGA_320x480x256,$/;"	e	enum:__anon183
grSVGA_320x480x32k	mgraph.h	/^	grSVGA_320x480x32k,$/;"	e	enum:__anon183
grSVGA_320x480x4G	mgraph.h	/^	grSVGA_320x480x4G,$/;"	e	enum:__anon183
grSVGA_320x480x64k	mgraph.h	/^	grSVGA_320x480x64k,$/;"	e	enum:__anon183
grSVGA_400x300x16m	mgraph.h	/^	grSVGA_400x300x16m,$/;"	e	enum:__anon183
grSVGA_400x300x256	mgraph.h	/^	grSVGA_400x300x256,$/;"	e	enum:__anon183
grSVGA_400x300x32k	mgraph.h	/^	grSVGA_400x300x32k,$/;"	e	enum:__anon183
grSVGA_400x300x4G	mgraph.h	/^	grSVGA_400x300x4G,$/;"	e	enum:__anon183
grSVGA_400x300x64k	mgraph.h	/^	grSVGA_400x300x64k,$/;"	e	enum:__anon183
grSVGA_512x384x16m	mgraph.h	/^	grSVGA_512x384x16m,$/;"	e	enum:__anon183
grSVGA_512x384x256	mgraph.h	/^	grSVGA_512x384x256,$/;"	e	enum:__anon183
grSVGA_512x384x32k	mgraph.h	/^	grSVGA_512x384x32k,$/;"	e	enum:__anon183
grSVGA_512x384x4G	mgraph.h	/^	grSVGA_512x384x4G,$/;"	e	enum:__anon183
grSVGA_512x384x64k	mgraph.h	/^	grSVGA_512x384x64k,$/;"	e	enum:__anon183
grSVGA_640x350x16m	mgraph.h	/^	grSVGA_640x350x16m,$/;"	e	enum:__anon183
grSVGA_640x350x256	mgraph.h	/^	grSVGA_640x350x256,$/;"	e	enum:__anon183
grSVGA_640x350x32k	mgraph.h	/^	grSVGA_640x350x32k,$/;"	e	enum:__anon183
grSVGA_640x350x4G	mgraph.h	/^	grSVGA_640x350x4G,$/;"	e	enum:__anon183
grSVGA_640x350x64k	mgraph.h	/^	grSVGA_640x350x64k,$/;"	e	enum:__anon183
grSVGA_640x400x16m	mgraph.h	/^	grSVGA_640x400x16m,$/;"	e	enum:__anon183
grSVGA_640x400x256	mgraph.h	/^	grSVGA_640x400x256,$/;"	e	enum:__anon183
grSVGA_640x400x32k	mgraph.h	/^    grSVGA_640x400x32k,$/;"	e	enum:__anon183
grSVGA_640x400x4G	mgraph.h	/^	grSVGA_640x400x4G,$/;"	e	enum:__anon183
grSVGA_640x400x64k	mgraph.h	/^	grSVGA_640x400x64k,$/;"	e	enum:__anon183
grSVGA_640x480x16m	mgraph.h	/^	grSVGA_640x480x16m,$/;"	e	enum:__anon183
grSVGA_640x480x256	mgraph.h	/^	grSVGA_640x480x256,$/;"	e	enum:__anon183
grSVGA_640x480x32k	mgraph.h	/^    grSVGA_640x480x32k,$/;"	e	enum:__anon183
grSVGA_640x480x4G	mgraph.h	/^	grSVGA_640x480x4G,$/;"	e	enum:__anon183
grSVGA_640x480x64k	mgraph.h	/^	grSVGA_640x480x64k,$/;"	e	enum:__anon183
grSVGA_800x600x16	mgraph.h	/^	grSVGA_800x600x16,$/;"	e	enum:__anon183
grSVGA_800x600x16m	mgraph.h	/^	grSVGA_800x600x16m,$/;"	e	enum:__anon183
grSVGA_800x600x256	mgraph.h	/^	grSVGA_800x600x256,$/;"	e	enum:__anon183
grSVGA_800x600x32k	mgraph.h	/^    grSVGA_800x600x32k,$/;"	e	enum:__anon183
grSVGA_800x600x4G	mgraph.h	/^	grSVGA_800x600x4G,$/;"	e	enum:__anon183
grSVGA_800x600x64k	mgraph.h	/^	grSVGA_800x600x64k,$/;"	e	enum:__anon183
grVESA	mgraph.h	/^	grVESA,					\/* VESA VBE compliant SuperVGA				*\/$/;"	e	enum:__anon182
grVGA	mgraph.h	/^	grVGA,					\/* Standard VGA								*\/$/;"	e	enum:__anon182
grVGAX_320x200x256	mgraph.h	/^	grVGAX_320x200x256,$/;"	e	enum:__anon183
grVGAX_320x240x256	mgraph.h	/^	grVGAX_320x240x256,$/;"	e	enum:__anon183
grVGAX_320x400x256	mgraph.h	/^	grVGAX_320x400x256,$/;"	e	enum:__anon183
grVGAX_320x480x256	mgraph.h	/^	grVGAX_320x480x256,$/;"	e	enum:__anon183
grVGA_320x200x16	mgraph.h	/^	grVGA_320x200x16,$/;"	e	enum:__anon183
grVGA_320x200x256	mgraph.h	/^	grVGA_320x200x256,$/;"	e	enum:__anon183
grVGA_640x200x16	mgraph.h	/^	grVGA_640x200x16,$/;"	e	enum:__anon183
grVGA_640x350x16	mgraph.h	/^	grVGA_640x350x16,$/;"	e	enum:__anon183
grVGA_640x400x16	mgraph.h	/^	grVGA_640x400x16,$/;"	e	enum:__anon183
grVGA_640x480x16	mgraph.h	/^	grVGA_640x480x16,$/;"	e	enum:__anon183
grWINDOWED	mgraph.h	/^	grWINDOWED,$/;"	e	enum:__anon183
grZbufferTooBig	mgraph.h	/^	grZbufferTooBig	= -24,	\/* Zbuffer allocation is too large			*\/$/;"	e	enum:__anon184
graphval	r_misc.c	/^int		graphval;$/;"	v
grav	console.c	/^	float		accel, grav;$/;"	m	struct:conpart_s	file:
grav	gl_rpart.c	/^	float		grav;$/;"	m	struct:particle_tree_s	file:
gravity	pmove.h	/^	float	gravity;$/;"	m	struct:__anon246
green	mgraph.h	/^	uchar	green;				\/* Green component of color				*\/$/;"	m	struct:__anon207
greenAdjust	mgraph.h	/^	m_int	greenPos,greenAdjust;	\/* Green position and adjustment	*\/$/;"	m	struct:__anon208
greenFieldPosition	mgraph.h	/^	char    greenFieldPosition;     \/* Bit posn of lsb of green mask    *\/$/;"	m	struct:__anon217
greenMask	mgraph.h	/^	uchar	redMask,greenMask;		\/* Mask values for pixels			*\/$/;"	m	struct:__anon208
greenMaskSize	mgraph.h	/^	char    greenMaskSize;          \/* Size of direct color green mask  *\/$/;"	m	struct:__anon217
greenPos	mgraph.h	/^	m_int	greenPos,greenAdjust;	\/* Green position and adjustment	*\/$/;"	m	struct:__anon208
grenadetrail_enum	menu_options.c	/^const char* grenadetrail_enum[] = { "off", "normal", "grenade", "alt normal", "slight blood", "big blood", "tracer 1", "tracer 2", "plasma", "lavaball", "fuel rod", "plasma rocket" };$/;"	v
groundent	pmove.h	/^	int			groundent; \/\/ index in physents array, only valid when onground is true$/;"	m	struct:__anon245
groundentity	progdefs.h	/^	int	groundentity;$/;"	m	struct:__anon253
groundplane	pmove.c	/^plane_t	groundplane;$/;"	v
group	cvar.h	/^	struct cvar_group_s *group;		$/;"	m	struct:cvar_s	typeref:struct:cvar_s::cvar_group_s
groupname	match_tools.c	/^	char groupname[MAX_QPATH];$/;"	m	struct:mapgroup_s	file:
groupname	match_tools.c	/^	char groupname[MAX_QPATH];$/;"	m	struct:skygroup_s	file:
growth	console.c	/^	float		size, growth;$/;"	m	struct:conpart_s	file:
growth	gl_rpart.c	/^	float		growth;		$/;"	m	struct:particle_s	file:
growth	vx_coronas.c	/^	float growth;$/;"	m	struct:__anon89	file:
gt_1on1	mvd_utils_common.h	176;"	d
gt_2on2	mvd_utils_common.h	175;"	d
gt_3on3	mvd_utils_common.h	174;"	d
gt_4on4	mvd_utils_common.h	173;"	d
gt_unknown	mvd_utils_common.h	172;"	d
gtf	cmd.c	/^static int gtf = 0; \/\/ global trigger flag$/;"	v	file:
gunflashtexture	vx_stuff.h	/^int	gunflashtexture;$/;"	v
gzheader_t	fs.c	/^} gzheader_t;$/;"	t	typeref:struct:__anon20	file:
gzipfile_s	vfs_gzip.c	/^typedef struct gzipfile_s$/;"	s	file:
gzipfile_t	vfs_gzip.c	/^} gzipfile_t;$/;"	t	typeref:struct:gzipfile_s	file:
gzipfilefuncs	vfs.h	/^searchpathfuncs_t gzipfilefuncs;$/;"	v
gzipfilefuncs	vfs_gzip.c	/^searchpathfuncs_t gzipfilefuncs = {$/;"	v
h	EX_browser.h	/^	int x, y, w, h;$/;"	m	struct:serverbrowser_window_s
h	gl_rsurf.c	/^	unsigned char l, t, w, h;$/;"	m	struct:glRect_s	file:
h	menu.c	/^	int h;$/;"	m	struct:menu_window_s	file:
hDC	tr_types.h	/^	HDC     hDC;			\/\/ handle to device context$/;"	m	struct:__anon287
hData	snd_win.c	/^HANDLE		hData;$/;"	v
hDevice	in_raw.h	/^	HANDLE hDevice;$/;"	m	struct:tagRAWINPUTDEVICELIST
hDevice	in_raw.h	/^	HANDLE hDevice;$/;"	m	struct:tagRAWINPUTHEADER
hGLRC	tr_types.h	/^	HGLRC   hGLRC;			\/\/ handle to GL rendering context$/;"	m	struct:__anon287
hIcon	vid_wgl.c	/^static HICON	hIcon;$/;"	v	file:
hIcon	vid_win.c	/^static HICON	hIcon;$/;"	v	file:
hInstDI	in_win.c	/^static HINSTANCE hInstDI;$/;"	v	file:
hMsgBoxHook	sys_win.c	/^HHOOK hMsgBoxHook;$/;"	v
hQizmoProcess	cl_demo.c	/^static HANDLE hQizmoProcess = NULL;$/;"	v	file:
hSecurity	modules.c	/^static HINSTANCE hSecurity = NULL;$/;"	v	file:
hSecurity	modules.c	/^static void *hSecurity = NULL;$/;"	v	file:
hThreadArray	thread_win.c	/^HANDLE  hThreadArray[MAX_THREADS]; $/;"	v
hWaveHdr	snd_win.c	/^HGLOBAL		hWaveHdr;$/;"	v
hWaveOut	snd_win.c	/^HWAVEOUT	hWaveOut;$/;"	v
h_len	EX_browser_ping.c	/^    unsigned int   h_len:4;        \/\/ length of the header$/;"	m	struct:IP_header_s	file:
h_scrollbar	ez_scrollpane.h	/^	ez_scrollbar_t				*h_scrollbar;		\/\/ The horizontal scrollbar.$/;"	m	struct:ez_scrollpane_s
hacked_avcodec_encode_video	ffmpeg.c	/^static int hacked_avcodec_encode_video($/;"	f	file:
had	movie_avi.c	/^HACMDRIVER	had;$/;"	v
halfscreen	vid_wgl.c	/^	int			halfscreen;$/;"	m	struct:__anon81	file:
halfscreen	vid_win.c	/^	int			halfscreen;$/;"	m	struct:__anon85	file:
handle	fs.c	/^	FILE    *handle;$/;"	m	struct:pack_s	file:
handle	mac.h	/^	GDHandle		handle;$/;"	m	struct:__anon174
handle	vfs.h	/^	FILE *handle;$/;"	m	struct:__anon290
handle	vfs_gzip.c	/^	vfsfile_t *handle;$/;"	m	struct:gzipfile_s	file:
handle	vfs_mmap.c	/^	byte *handle;$/;"	m	struct:__anon74	file:
handle	vfs_pak.c	/^	vfsfile_t    *handle;$/;"	m	struct:pack_s	file:
handle	vfs_pak.c	/^    FILE *handle;$/;"	m	struct:__anon77	file:
handle	vfs_zip.c	/^	unzFile handle;$/;"	m	struct:zipfile_s	file:
handle_acm	movie_avi.c	/^static HINSTANCE handle_avi = NULL, handle_acm = NULL;$/;"	v	file:
handle_avi	movie_avi.c	/^static HINSTANCE handle_avi = NULL, handle_acm = NULL;$/;"	v	file:
handlers	Ctrl_Tab.h	/^	CTabPage_Handlers_t handlers;$/;"	m	struct:CTabPage_s
hardwareType	tr_types.h	/^	glHardwareType_t		hardwareType;$/;"	m	struct:__anon286
has	mvd_utils_common.h	/^	int has;$/;"	m	struct:mvd_pw_s
has_audio	ffmpeg.c	/^	qbool	has_audio;$/;"	m	struct:frames_list_s	file:
hash	fmod.c	/^	const unsigned int hash[5];$/;"	m	struct:check_models_hashes_entry_s	file:
hash	fmod.c	/^	const void*	hash;$/;"	m	struct:check_models_s	file:
hash	vfs_tar.c	/^	hashtable_t hash;$/;"	m	struct:tarfile_s	file:
hash	vfs_zip.c	/^	hashtable_t hash;$/;"	m	struct:zipfile_s	file:
hash_alt	fmod.c	/^				hash_alt;$/;"	m	struct:check_models_s	file:
hash_next	cmd.h	/^	struct cmd_alias_s	*hash_next;$/;"	m	struct:cmd_alias_s	typeref:struct:cmd_alias_s::cmd_alias_s
hash_next	cmd.h	/^	struct cmd_function_s	*hash_next;$/;"	m	struct:cmd_function_s	typeref:struct:cmd_function_s::cmd_function_s
hash_next	cvar.h	/^	struct cvar_s *hash_next;$/;"	m	struct:cvar_s	typeref:struct:cvar_s::cvar_s
hashtable_s	hash.h	/^typedef struct hashtable_s {$/;"	s
hashtable_t	hash.h	/^} hashtable_t;$/;"	t	typeref:struct:hashtable_s
hdr	EX_browser_ping.c	/^	ICMP_header_t hdr;$/;"	m	union:ICMP_Packet_u	file:
hdr	EX_browser_ping.c	/^	IP_header_t hdr;$/;"	m	union:IP_Packet_u	file:
head	cvar.h	/^	cvar_t	*head;$/;"	m	struct:cvar_group_s
head	ez_controls.h	/^	ez_dllist_node_t *head;$/;"	m	struct:ez_double_linked_list_s
header	in_raw.h	/^	RAWINPUTHEADER header;$/;"	m	struct:tagRAWINPUT
header	vfs_tar.h	/^  struct tar_header  header;$/;"	m	union:tar_buffer	typeref:struct:tar_buffer::tar_header
headnode	bspfile.h	/^	int			headnode[MAX_MAP_HULLS];$/;"	m	struct:__anon99
health	cl_screen.c	/^	int			health;$/;"	m	struct:ti_player_s	file:
health	progdefs.h	/^	float	health;$/;"	m	struct:__anon253
health	teamplay.h	/^	int		health;$/;"	m	struct:tvars_s
heartbeat_sequence	server.h	/^	int			heartbeat_sequence;$/;"	m	struct:__anon269
height	Ctrl.h	/^    int width, height;$/;"	m	struct:ScrollBar_s
height	Ctrl_Tab.h	/^	int			height;$/;"	m	struct:CTab_s
height	bspfile.h	/^	unsigned	width, height;$/;"	m	struct:miptex_s
height	cl_screen.c	/^	int height;$/;"	m	struct:mv_viewrect_s	file:
height	client.h	/^	int				width, height;	\/\/ this is valid for pcx too, but used for 32bit skins only$/;"	m	struct:__anon111
height	d_local.h	/^	unsigned			height;		\/\/ DEBUG only needed for debug$/;"	m	struct:surfcache_s
height	draw.h	/^	int			width, height;$/;"	m	struct:__anon145
height	draw.h	/^	short		height;$/;"	m	struct:__anon146
height	ez_controls.h	/^	int						height;$/;"	m	struct:ez_control_s
height	gl_framebuffer.h	/^	int		height;				\/\/ Height the frame buffer is drawn at.$/;"	m	struct:fb_s
height	gl_model.h	/^	int					height;$/;"	m	struct:mspriteframe_s
height	gl_model.h	/^	unsigned			width, height;$/;"	m	struct:texture_s
height	gl_texture.c	/^	int			width, height;$/;"	m	struct:__anon28	file:
height	hud_editor.c	/^	int						height;$/;"	m	struct:hud_grephandle_s	file:
height	hud_editor.c	/^	int height;$/;"	m	struct:hud_resize_handle_s	file:
height	image.c	/^	unsigned short	xOrigin, yOrigin, width, height;$/;"	m	struct:TGAHeader_s	file:
height	mac.h	/^	UInt16	height;$/;"	m	struct:__anon175
height	mgraph.h	/^	m_int		height;				\/* Height of bitmap in pixels		*\/$/;"	m	struct:__anon211
height	r_draw.c	/^	int		height;$/;"	m	struct:__anon58	file:
height	r_model.h	/^	int					height;$/;"	m	struct:mspriteframe_s
height	r_model.h	/^	unsigned			width, height;$/;"	m	struct:texture_s
height	settings.h	/^    int width, height;  \/\/ last drawed width and height$/;"	m	struct:__anon273
height	spritegn.h	/^	int			height;$/;"	m	struct:__anon277
height	spritegn.h	/^	int			height;$/;"	m	struct:__anon278
height	stats_grid.h	/^	int				height;					\/\/ The height of the grid.$/;"	m	struct:stats_weight_grid_s
height	tr_init.c	/^    int         width, height;$/;"	m	struct:vidmode_s	file:
height	vid.h	/^	int x,y,width,height;$/;"	m	struct:vrect_s
height	vid.h	/^	unsigned		height;$/;"	m	struct:__anon294
height	vid_wgl.c	/^	int			height;$/;"	m	struct:__anon81	file:
height	vid_wgl.c	/^	int			height;$/;"	m	struct:__anon82	file:
height	vid_win.c	/^	int			height;$/;"	m	struct:__anon85	file:
height	vid_win.c	/^	int		height;$/;"	m	struct:__anon84	file:
height	wad.h	/^	int			width, height;$/;"	m	struct:__anon297
height_max	ez_controls.h	/^	int						height_max;$/;"	m	struct:ez_control_s
height_min	ez_controls.h	/^	int						height_min;$/;"	m	struct:ez_control_s
help_browser_handlers	help_files.c	/^CTabPage_Handlers_t help_browser_handlers = {$/;"	v
help_control_tree	hud_editor.c	/^ez_tree_t help_control_tree;$/;"	v
help_files_dircolor	help_files.c	/^cvar_t  help_files_dircolor		= {"help_files_dircolor",		"255 255 255 255", CVAR_COLOR};$/;"	v
help_files_filecolor	help_files.c	/^cvar_t  help_files_filecolor	= {"help_files_filecolor",		"255 255 255 255", CVAR_COLOR};$/;"	v
help_files_interline	help_files.c	/^cvar_t  help_files_interline	= {"help_files_interline",		"0"};$/;"	v
help_files_scrollnames	help_files.c	/^cvar_t  help_files_scrollnames	= {"help_files_scrollnames",	"0"};$/;"	v
help_files_selectedcolor	help_files.c	/^cvar_t	help_files_selectedcolor= {"help_files_selectedcolor",	"255 255 255 255", CVAR_COLOR};$/;"	v
help_files_showdate	help_files.c	/^cvar_t  help_files_showdate		= {"help_files_showdate",		"1"};$/;"	v
help_files_showsize	help_files.c	/^cvar_t  help_files_showsize		= {"help_files_showsize",		"1"};$/;"	v
help_files_showstatus	help_files.c	/^cvar_t  help_files_showstatus	= {"help_files_showstatus",		"1"};$/;"	v
help_files_showtime	help_files.c	/^cvar_t  help_files_showtime		= {"help_files_showtime",		"0"};$/;"	v
help_files_sortmode	help_files.c	/^cvar_t  help_files_sortmode		= {"help_files_sortmode",		"1"};$/;"	v
help_files_stripnames	help_files.c	/^cvar_t  help_files_stripnames	= {"help_files_stripnames",		"1"};$/;"	v
help_index_fl	help_files.c	/^filelist_t help_index_fl;$/;"	v
help_index_handlers	help_files.c	/^CTabPage_Handlers_t help_index_handlers = {$/;"	v
help_page	menu.c	/^int        help_page;$/;"	v
help_tab	help_files.c	/^CTab_t help_tab;$/;"	v
help_tutorials_dircolor	help_files.c	/^cvar_t  help_tutorials_dircolor		= {"help_tutorials_dircolor",		"255 255 255 255", CVAR_COLOR};$/;"	v
help_tutorials_filecolor	help_files.c	/^cvar_t  help_tutorials_filecolor	= {"help_tutorials_filecolor",		"255 255 255 255", CVAR_COLOR};$/;"	v
help_tutorials_fl	help_files.c	/^filelist_t help_tutorials_fl;$/;"	v
help_tutorials_handlers	help_files.c	/^CTabPage_Handlers_t help_tutorials_handlers = {$/;"	v
help_tutorials_interline	help_files.c	/^cvar_t  help_tutorials_interline	= {"help_tutorials_interline",		"0"};$/;"	v
help_tutorials_scrollnames	help_files.c	/^cvar_t  help_tutorials_scrollnames	= {"help_tutorials_scrollnames",	"0"};$/;"	v
help_tutorials_selectedcolor	help_files.c	/^cvar_t	help_tutorials_selectedcolor= {"help_tutorials_selectedcolor",	"255 255 255 255", CVAR_COLOR};$/;"	v
help_tutorials_showdate	help_files.c	/^cvar_t  help_tutorials_showdate		= {"help_tutorials_showdate",		"1"};$/;"	v
help_tutorials_showsize	help_files.c	/^cvar_t  help_tutorials_showsize		= {"help_tutorials_showsize",		"1"};$/;"	v
help_tutorials_showstatus	help_files.c	/^cvar_t  help_tutorials_showstatus	= {"help_tutorials_showstatus",		"1"};$/;"	v
help_tutorials_showtime	help_files.c	/^cvar_t  help_tutorials_showtime		= {"help_tutorials_showtime",		"0"};$/;"	v
help_tutorials_sortmode	help_files.c	/^cvar_t  help_tutorials_sortmode		= {"help_tutorials_sortmode",		"1"};$/;"	v
help_tutorials_stripnames	help_files.c	/^cvar_t  help_tutorials_stripnames	= {"help_tutorials_stripnames",		"1"};$/;"	v
help_viewer	help_files.c	/^CPageViewer_t help_viewer;$/;"	v
hid	in_raw.h	/^		RAWHID      hid;$/;"	m	union:tagRAWINPUT::__anon170
hidden	sys.h	/^    int hidden;$/;"	m	struct:sys_dirent_s
hide_window	vid_win.c	/^static qbool	palette_changed, syscolchg, vid_mode_set, hide_window, pal_is_nostatic;$/;"	v	file:
highlighted	hud_editor.c	/^	qbool					highlighted;	\/\/ Should this grephandle be drawn highlighted?$/;"	m	struct:hud_grephandle_s	file:
hinput	sys_win.c	/^static HANDLE	hinput, houtput;$/;"	v	file:
hinstOpenGL	tr_types.h	/^	HINSTANCE hinstOpenGL;	\/\/ HINSTANCE for the OpenGL library$/;"	m	struct:__anon287
history_line	keys.c	/^int		history_line=0;$/;"	v
hit	gl_rpart.c	/^	byte		hit;		$/;"	m	struct:particle_s	file:
hits	cl_screen.c	/^	int hits;			\/\/ hits with this weapon, for SG and SSG this is count of bullets$/;"	m	struct:wpType_s	file:
hold_count	stats_grid.h	/^	int		hold_count;						\/\/ The amount of visited cells that this team "holds".$/;"	m	struct:stats_team_s
hold_radius	stats_grid.h	/^	float			hold_radius;$/;"	m	struct:__anon283
hold_threshold	stats_grid.h	/^	float			hold_threshold;			\/\/ The threshold for the weight that is required before$/;"	m	struct:stats_weight_grid_s
horizJust	mgraph.h	/^	m_int			horizJust;		\/* Horizontal justfication			*\/$/;"	m	struct:__anon215
horizontal	ez_scrollbar.h	/^	horizontal	= 1$/;"	e	enum:ez_orientation_s
horizontalFieldOfView	render.h	/^	float		horizontalFieldOfView;	\/\/ at Z = 1.0, this many X is visible $/;"	m	struct:__anon256
host_abort	host.c	/^static jmp_buf 	host_abort;$/;"	v	file:
host_basepal	cl_main.c	/^byte		*host_basepal = NULL;$/;"	v
host_colormap	cl_main.c	/^byte		*host_colormap = NULL;$/;"	v
host_hunklevel	host.c	/^static int	host_hunklevel;$/;"	v	file:
host_initialized	host.c	/^qbool	host_initialized;	\/\/ true if into command execution$/;"	v
host_mapname	common.c	/^cvar_t	host_mapname = {"mapname", "", CVAR_ROM};$/;"	v
host_membase	host.c	/^static void	*host_membase;$/;"	v	file:
host_memsize	host.c	/^int			host_memsize;$/;"	v
host_screenupdatecount	cl_screen.c	/^int	host_screenupdatecount; \/\/ kazik - HUD -> hexum$/;"	v
host_skipframe	cl_main.c	/^qbool	host_skipframe;			\/\/ used in demo playback$/;"	v
hostname	mvd_utils.c	/^	char hostname[1024];$/;"	m	struct:mvd_gameinfo_s	file:
hostname	mvd_utils_common.h	/^	char hostname[1024];$/;"	m	struct:mvd_cg_info_s
hostname	sv_main.c	/^cvar_t	hostname = {"hostname", "unnamed", CVAR_SERVERINFO};$/;"	v
hosts	EX_browser_ping.c	/^	pinghost_t *hosts;$/;"	m	struct:__anon14	file:
houtput	sys_win.c	/^static HANDLE	hinput, houtput;$/;"	v	file:
hover_image	ez_button.h	/^	mpic_t					*hover_image;		\/\/ The image that is shown for the button when the mouse is over it.$/;"	m	struct:ez_button_s
hover_text_color	ez_button.h	/^	clrinfo_t				hover_text_color;	\/\/ Text color when the button is hovered.$/;"	m	struct:ez_button_s
hoveredPage	Ctrl_Tab.h	/^	int			hoveredPage;$/;"	m	struct:CTab_s
hoverend_content	new_menu.c	/^struct menu_ct	*hoverend_content = NULL;$/;"	v	typeref:struct:menu_ct
hovertime	new_menu.c	/^	double	hovertime;$/;"	m	struct:menu_ct	file:
href	xsd_document.h	/^    char *href;$/;"	m	struct:document_tag_a_s
hres	image.c	/^    unsigned short	hres,vres;$/;"	m	struct:pcx_s	file:
hstr	movie_avi.c	/^HACMSTREAM	hstr;$/;"	v
hu_clip_maxs	asm_i386.h	55;"	d
hu_clip_mins	asm_i386.h	54;"	d
hu_clipnodes	asm_i386.h	50;"	d
hu_firstclipnode	asm_i386.h	52;"	d
hu_lastclipnode	asm_i386.h	53;"	d
hu_planes	asm_i386.h	51;"	d
hu_size	asm_i386.h	56;"	d
hud	hud_editor.c	/^	hud_t					*hud;			\/\/ HUD associated with this grep handle.$/;"	m	struct:hud_grephandle_s	file:
hud_align_bottom	hud_editor.c	/^	hud_align_bottom,$/;"	e	enum:hud_alignmode_s	file:
hud_align_bottom_poly	hud_editor.c	/^vec3_t hud_align_bottom_poly[HUD_ALIGN_POLYCOUNT_EDGE];$/;"	v
hud_align_bottomleft	hud_editor.c	/^	hud_align_bottomleft,$/;"	e	enum:hud_alignmode_s	file:
hud_align_bottomleft_poly	hud_editor.c	/^vec3_t hud_align_bottomleft_poly[HUD_ALIGN_POLYCOUNT_CORNER];$/;"	v
hud_align_bottomright	hud_editor.c	/^	hud_align_bottomright,$/;"	e	enum:hud_alignmode_s	file:
hud_align_bottomright_poly	hud_editor.c	/^vec3_t hud_align_bottomright_poly[HUD_ALIGN_POLYCOUNT_CORNER];$/;"	v
hud_align_center	hud_editor.c	/^	hud_align_center,$/;"	e	enum:hud_alignmode_s	file:
hud_align_center_poly	hud_editor.c	/^vec3_t hud_align_center_poly[HUD_ALIGN_POLYCOUNT_CENTER];$/;"	v
hud_align_console	hud_editor.c	/^	hud_align_console$/;"	e	enum:hud_alignmode_s	file:
hud_align_console_poly	hud_editor.c	/^vec3_t hud_align_console_poly[HUD_ALIGN_POLYCOUNT_CONSOLE];$/;"	v
hud_align_consoleleft	hud_editor.c	/^	hud_align_consoleleft,$/;"	e	enum:hud_alignmode_s	file:
hud_align_consoleleft_poly	hud_editor.c	/^vec3_t hud_align_consoleleft_poly[HUD_ALIGN_POLYCOUNT_CONSOLE];$/;"	v
hud_align_consoleright	hud_editor.c	/^	hud_align_consoleright,$/;"	e	enum:hud_alignmode_s	file:
hud_align_consoleright_poly	hud_editor.c	/^vec3_t hud_align_consoleright_poly[HUD_ALIGN_POLYCOUNT_CONSOLE];$/;"	v
hud_align_current_poly	hud_editor.c	/^vec3_t *hud_align_current_poly = NULL;	\/\/ The current alignment polygon when in alignment mode.$/;"	v
hud_align_current_polycount	hud_editor.c	/^int hud_align_current_polycount = 0;	\/\/ Number of vertices in teh polygon.$/;"	v
hud_align_left	hud_editor.c	/^	hud_align_left,$/;"	e	enum:hud_alignmode_s	file:
hud_align_left_poly	hud_editor.c	/^vec3_t hud_align_left_poly[HUD_ALIGN_POLYCOUNT_EDGE];$/;"	v
hud_align_right	hud_editor.c	/^	hud_align_right,$/;"	e	enum:hud_alignmode_s	file:
hud_align_right_poly	hud_editor.c	/^vec3_t hud_align_right_poly[HUD_ALIGN_POLYCOUNT_EDGE];$/;"	v
hud_align_top	hud_editor.c	/^	hud_align_top,$/;"	e	enum:hud_alignmode_s	file:
hud_align_top_poly	hud_editor.c	/^vec3_t hud_align_top_poly[HUD_ALIGN_POLYCOUNT_EDGE];$/;"	v
hud_align_topleft	hud_editor.c	/^	hud_align_topleft,$/;"	e	enum:hud_alignmode_s	file:
hud_align_topleft_poly	hud_editor.c	/^vec3_t hud_align_topleft_poly[HUD_ALIGN_POLYCOUNT_CORNER];$/;"	v
hud_align_topright	hud_editor.c	/^	hud_align_topright,$/;"	e	enum:hud_alignmode_s	file:
hud_align_topright_poly	hud_editor.c	/^vec3_t hud_align_topright_poly[HUD_ALIGN_POLYCOUNT_CORNER];$/;"	v
hud_alignmode	hud_editor.c	/^hud_alignmode_t	hud_alignmode = hud_align_center;$/;"	v
hud_alignmode_s	hud_editor.c	/^typedef enum hud_alignmode_s$/;"	g	file:
hud_alignmode_t	hud_editor.c	/^} hud_alignmode_t;$/;"	t	typeref:enum:hud_alignmode_s	file:
hud_centerranking	sbar.c	/^cvar_t  hud_centerranking   = {"scr_scoreboard_centered",   "1"};$/;"	v
hud_containers	hud_editor.c	/^hud_grephandle_t	hud_containers[MAX_HUD_ELEMENTS];	\/\/ List of HUDs which have been hovered.$/;"	v
hud_digits_trim	hud_common.c	/^cvar_t hud_digits_trim = {"hud_digits_trim", "1"};$/;"	v
hud_editmode_align	hud_editor.h	/^	hud_editmode_align,$/;"	e	enum:__anon165
hud_editmode_hoverlist	hud_editor.h	/^	hud_editmode_hoverlist,$/;"	e	enum:__anon165
hud_editmode_hudmenu	hud_editor.h	/^	hud_editmode_hudmenu,$/;"	e	enum:__anon165
hud_editmode_menu	hud_editor.h	/^	hud_editmode_menu,$/;"	e	enum:__anon165
hud_editmode_move_lockedaxis	hud_editor.h	/^	hud_editmode_move_lockedaxis,$/;"	e	enum:__anon165
hud_editmode_move_resize	hud_editor.h	/^	hud_editmode_move_resize,$/;"	e	enum:__anon165
hud_editmode_normal	hud_editor.h	/^	hud_editmode_normal$/;"	e	enum:__anon165
hud_editmode_off	hud_editor.h	/^	hud_editmode_off,$/;"	e	enum:__anon165
hud_editmode_place	hud_editor.h	/^	hud_editmode_place,$/;"	e	enum:__anon165
hud_editmode_resize	hud_editor.h	/^	hud_editmode_resize,$/;"	e	enum:__anon165
hud_editor	hud_editor.c	/^qbool				hud_editor				= false;				\/\/ If we're in HUD editor mode or not.$/;"	v
hud_editor_align_icon	hud_editor.c	/^mpic_t				*hud_editor_align_icon	= NULL;$/;"	v
hud_editor_allowalign	hud_editor.c	/^cvar_t				hud_editor_allowalign	= {"hud_editor_allowalign", "1"};	\/\/ Allow aligning HUDs.$/;"	v
hud_editor_allowmove	hud_editor.c	/^cvar_t				hud_editor_allowmove	= {"hud_editor_allowmove", "1"};	\/\/ Allow moving.$/;"	v
hud_editor_allowplace	hud_editor.c	/^cvar_t				hud_editor_allowplace	= {"hud_editor_allowplace", "1"};	\/\/ Allow placing HUDs.$/;"	v
hud_editor_allowresize	hud_editor.c	/^cvar_t				hud_editor_allowresize	= {"hud_editor_allowresize", "1"};	\/\/ Show resize handles \/ allow resizing.$/;"	v
hud_editor_finding_lockaxis	hud_editor.c	/^static qbool hud_editor_finding_lockaxis = false;	\/\/ Are we in the process of finding the lock axis?$/;"	v	file:
hud_editor_lockaxis_found	hud_editor.c	/^static qbool hud_editor_lockaxis_found= false;		\/\/ Have we found what axist to lock on to?$/;"	v	file:
hud_editor_locked_axis_is_x	hud_editor.c	/^static qbool hud_editor_locked_axis_is_x = true;	\/\/ Are we locking X- or Y-axis movement?$/;"	v	file:
hud_editor_mode	hud_editor.c	/^hud_editor_mode_t	hud_editor_mode			= hud_editmode_off;		\/\/ The current mode the HUD editor is in.$/;"	v
hud_editor_mode_t	hud_editor.h	/^} hud_editor_mode_t;$/;"	t	typeref:enum:__anon165
hud_editor_move_icon	hud_editor.c	/^mpic_t				*hud_editor_move_icon	= NULL;$/;"	v
hud_editor_place_icon	hud_editor.c	/^mpic_t				*hud_editor_place_icon	= NULL;$/;"	v
hud_editor_prevmode	hud_editor.c	/^hud_editor_mode_t	hud_editor_prevmode		= hud_editmode_off;		\/\/ The previous mode the HUD editor was in.$/;"	v
hud_editor_resize_icon	hud_editor.c	/^mpic_t				*hud_editor_resize_icon	= NULL;$/;"	v
hud_editor_showhelp	hud_editor.c	/^qbool				hud_editor_showhelp		= false;				\/\/ Show the help plaque or not?$/;"	v
hud_editor_showoutlines	hud_editor.c	/^qbool				hud_editor_showoutlines	= true;					\/\/ Show guidelines around the HUD elements.$/;"	v
hud_element_s	cl_screen.c	/^typedef struct hud_element_s {$/;"	s	file:
hud_element_t	cl_screen.c	/^} hud_element_t;$/;"	t	typeref:struct:hud_element_s	file:
hud_enum	menu_options.c	/^const char* hud_enum[] = { "classic", "new", "combined" };$/;"	v
hud_faderankings	sbar.c	/^cvar_t  hud_faderankings    = {"scr_scoreboard_fadescreen", "0"};$/;"	v
hud_frags_extra_spec_info	hud_common.c	/^static qbool hud_frags_extra_spec_info	= true;$/;"	v	file:
hud_frags_show_armor	hud_common.c	/^static qbool hud_frags_show_armor		= true;$/;"	v	file:
hud_frags_show_health	hud_common.c	/^static qbool hud_frags_show_health		= true;$/;"	v	file:
hud_frags_show_powerup	hud_common.c	/^static qbool hud_frags_show_powerup		= true;$/;"	v	file:
hud_frags_show_rl	hud_common.c	/^static qbool hud_frags_show_rl			= true;$/;"	v	file:
hud_frags_textonly	hud_common.c	/^static qbool hud_frags_textonly			= false;$/;"	v	file:
hud_func_type	hud.h	/^typedef  void (*hud_func_type) (struct hud_s *);$/;"	t
hud_grephandle_s	hud_editor.c	/^typedef struct hud_grephandle_s$/;"	s	file:
hud_grephandle_t	hud_editor.c	/^} hud_grephandle_t;$/;"	t	typeref:struct:hud_grephandle_s	file:
hud_greppos_s	hud_editor.c	/^typedef enum hud_greppos_s$/;"	g	file:
hud_greppos_t	hud_editor.c	/^} hud_greppos_t;$/;"	t	typeref:enum:hud_greppos_s	file:
hud_greps	hud_editor.c	/^hud_grephandle_t	*hud_greps = NULL;					\/\/ The list of "grep handles" that are shown if a HUD element is moved offscreen.$/;"	v
hud_hoverlist	hud_editor.c	/^hud_grephandle_t	*hud_hoverlist = NULL;				\/\/ The list of HUDs the mouse is hovering.$/;"	v
hud_hoverlist_count	hud_editor.c	/^int					hud_hoverlist_count = 0;			\/\/ The number of hovered HUDs.$/;"	v
hud_hoverlist_pos_is_set	hud_editor.c	/^qbool				hud_hoverlist_pos_is_set = false;	\/\/ Has the coordinates been set for the hoverlist yet?$/;"	v
hud_hoverlist_x	hud_editor.c	/^float				hud_hoverlist_x;					\/\/ The x position of the hover list.$/;"	v
hud_hoverlist_y	hud_editor.c	/^float				hud_hoverlist_y;					\/\/ The y position of the hover list.$/;"	v
hud_huds	hud.c	/^hud_t *hud_huds = NULL;$/;"	v
hud_list	cl_screen.c	/^static hud_element_t *hud_list=NULL;$/;"	v	file:
hud_mouse_x	hud_editor.c	/^float				hud_mouse_x;									\/\/ The screen coordinates of the mouse cursor.$/;"	v
hud_mouse_y	hud_editor.c	/^float				hud_mouse_y;$/;"	v
hud_netgraph	hud_common.c	/^hud_t *hud_netgraph = NULL;$/;"	v
hud_pic_group1	hud_common.c	/^mpic_t *hud_pic_group1;$/;"	v
hud_pic_group2	hud_common.c	/^mpic_t *hud_pic_group2;$/;"	v
hud_pic_group3	hud_common.c	/^mpic_t *hud_pic_group3;$/;"	v
hud_pic_group4	hud_common.c	/^mpic_t *hud_pic_group4;$/;"	v
hud_pic_group5	hud_common.c	/^mpic_t *hud_pic_group5;$/;"	v
hud_pic_group6	hud_common.c	/^mpic_t *hud_pic_group6;$/;"	v
hud_pic_group7	hud_common.c	/^mpic_t *hud_pic_group7;$/;"	v
hud_pic_group8	hud_common.c	/^mpic_t *hud_pic_group8;$/;"	v
hud_pic_group9	hud_common.c	/^mpic_t *hud_pic_group9;$/;"	v
hud_planmode	hud_common.c	/^cvar_t hud_planmode = {"hud_planmode",   "0"};$/;"	v
hud_radar_highlight_color	hud_common.c	/^byte hud_radar_highlight_color[4] = {255, 255, 0, HUD_COLOR_DEFAULT_TRANSPARENCY};$/;"	v
hud_rankingpos	sbar.c	/^cvar_t  hud_rankingpos      = {"scr_scoreboard_posy",       "0"};$/;"	v
hud_resize_handle_s	hud_editor.c	/^typedef struct hud_resize_handle_s$/;"	s	file:
hud_resize_handle_t	hud_editor.c	/^} hud_resize_handle_t;$/;"	t	typeref:struct:hud_resize_handle_s	file:
hud_s	hud.h	/^typedef struct hud_s$/;"	s
hud_stats	hud_common.c	/^int hud_stats[MAX_CL_STATS];$/;"	v
hud_t	hud.h	/^} hud_t;$/;"	t	typeref:struct:hud_s
hud_tp_need	hud_common.c	/^cvar_t hud_tp_need = {"hud_tp_need",   "0"};$/;"	v
hudeditorkeys	keys.c	/^qbool	hudeditorkeys[UNKNOWN + 256];	\/\/ if true, can't be rebound while in hud editor$/;"	v
hull	cmodel.c	/^	hull_t *hull;$/;"	m	struct:__anon8	file:
hull_t	cmodel.h	/^} hull_t;$/;"	t	typeref:struct:__anon131
hulls	cmodel.h	/^	hull_t	hulls[MAX_MAP_HULLS];$/;"	m	struct:__anon135
hulltrace_local_t	cmodel.c	/^} hulltrace_local_t;$/;"	t	typeref:struct:__anon8	file:
hunk_base	zone.c	/^byte	*hunk_base;$/;"	v
hunk_high_used	zone.c	/^int		hunk_high_used;$/;"	v
hunk_low_used	zone.c	/^int		hunk_low_used;$/;"	v
hunk_size	zone.c	/^int		hunk_size;$/;"	v
hunk_t	zone.c	/^} hunk_t;$/;"	t	typeref:struct:__anon97	file:
hunk_tempactive	zone.c	/^qbool	hunk_tempactive;$/;"	v
hunk_tempmark	zone.c	/^int		hunk_tempmark;$/;"	v
hwndTarget	in_raw.h	/^	HWND hwndTarget;$/;"	m	struct:tagRAWINPUTDEVICE
hwtimer	sys_win.c	/^static qbool hwtimer = false;$/;"	v	file:
i	draw.h	/^	int i;		\/\/ Index when this colors starts.$/;"	m	struct:clrinfo_s
i_cksum	EX_browser_ping.c	/^    unsigned short i_cksum;$/;"	m	struct:ICMP_header_s	file:
i_code	EX_browser_ping.c	/^    byte i_code; \/* type sub code *\/$/;"	m	struct:ICMP_header_s	file:
i_id	EX_browser_ping.c	/^    unsigned short i_id;$/;"	m	struct:ICMP_header_s	file:
i_rnd	utils.c	/^int i_rnd( int from, int to )$/;"	f
i_seq	EX_browser_ping.c	/^    unsigned short i_seq;$/;"	m	struct:ICMP_header_s	file:
i_type	EX_browser_ping.c	/^    byte i_type;$/;"	m	struct:ICMP_header_s	file:
i_val	parser.h	/^	int i_val;		\/\/\/< integer value$/;"	m	struct:expr_val
ibool	debug.h	/^typedef int             ibool;		\/* Integer boolean type			*\/$/;"	t
icon_t	mgraph.h	/^	} icon_t;$/;"	t	typeref:struct:__anon212
id	Ctrl_Tab.h	/^    int     id;$/;"	m	struct:CTabPage_s
id	EX_FileList.h	/^    int         id;$/;"	m	struct:filetype_s
id	EX_browser.h	/^    int id;$/;"	m	struct:playerinfo_s
id	EX_browser_ping.c	/^    u_long id;   \/\/ ip$/;"	m	struct:ICMP_header_s	file:
id	ffmpeg.c	/^	enum CodecID id;$/;"	m	struct:AVCodecTag	typeref:enum:AVCodecTag::CodecID	file:
id	fs.c	/^    char    id[4];$/;"	m	struct:__anon17	file:
id	gl_rpart.c	/^	part_type_t	id;$/;"	m	struct:particle_tree_s	file:
id	mac.h	/^	DisplayIDType 	id;$/;"	m	struct:__anon174
id	modules.c	/^	qlib_id_t id;$/;"	m	struct:registeredModule_s	file:
id	mvd_utils.c	/^	int id;$/;"	m	struct:bp_var_s	file:
id	mvd_utils.c	/^	int id;$/;"	m	struct:death_s	file:
id	mvd_utils_common.h	/^	int		id;$/;"	m	struct:mvd_wp_info_s
id	mvd_utils_common.h	/^	int id;							\/\/id cl.players[id]$/;"	m	struct:mvd_new_info_s
id	mvd_utils_common.h	/^	int id;$/;"	m	struct:mvd_gt_info_s
id	qtv.h	/^	int					id;								\/\/ unique user id$/;"	m	struct:qtvuser_s
id	vfs_doomwad.c	/^	char	id[4];$/;"	m	struct:__anon72	file:
id	vfs_pak.c	/^	char    id[4];$/;"	m	struct:__anon76	file:
id	xsd_document.h	/^    char *id;$/;"	m	struct:document_tag_section_s
id386	quakeasm.h	33;"	d
idLength	image.c	/^	byte			idLength, colormapType, imageType;$/;"	m	struct:TGAHeader_s	file:
ideal_punchangle	client.h	/^	float		ideal_punchangle;	\/\/\/< temporary view kick from weapon firing$/;"	m	struct:__anon125
ideal_track	cl_cam.c	/^int		ideal_track = 0;		\/\/ The currently tracked player.$/;"	v
ideal_yaw	progdefs.h	/^	float	ideal_yaw;$/;"	m	struct:__anon253
ident	EX_browser_ping.c	/^    unsigned short ident;          \/\/ unique identifier$/;"	m	struct:IP_header_s	file:
ident	gl_md3.h	/^	int			ident;$/;"	m	struct:__anon154
ident	gl_md3.h	/^	int		ident;				\/\/ $/;"	m	struct:__anon155
ident	gl_model.h	/^	int					ident;$/;"	m	struct:aliashdr_s
ident	modelgen.h	/^	int			ident;$/;"	m	struct:__anon224
ident	spritegn.h	/^	int			ident;$/;"	m	struct:__anon277
ident1	fs.c	/^	unsigned char ident1;$/;"	m	struct:__anon20	file:
ident2	fs.c	/^	unsigned char ident2;$/;"	m	struct:__anon20	file:
identification	wad.h	/^	char		identification[4];		\/\/ should be WAD2 or 2DAW$/;"	m	struct:__anon298
identifier	gl_texture.c	/^	char		identifier[MAX_QPATH];$/;"	m	struct:__anon28	file:
identifier	mvd_cam.h	/^	char					identifier[32];$/;"	m	struct:mvd_menu_s
identifier	new_menu.c	/^	char	*identifier;$/;"	m	struct:menu_ct	file:
identifier	new_menu.c	/^	char	*identifier;$/;"	m	struct:menu_s	file:
idle	server.h	/^	double	idle;$/;"	m	struct:__anon267
iff_chunk_len	snd_mem.c	/^static int iff_chunk_len;$/;"	v	file:
iff_data	snd_mem.c	/^static unsigned char *iff_data;$/;"	v	file:
iff_end	snd_mem.c	/^static unsigned char *iff_end;$/;"	v	file:
ignore_flood	ignore.c	/^cvar_t		ignore_flood			= {"ignore_flood", "0"};		$/;"	v
ignore_flood_duration	ignore.c	/^cvar_t		ignore_flood_duration	= {"ignore_flood_duration", "4"};$/;"	v
ignore_flood_enum	menu_options.c	/^const char* ignore_flood_enum[] = {$/;"	v
ignore_mode	ignore.c	/^cvar_t		ignore_mode				= {"ignore_mode", "0"};$/;"	v
ignore_opponents	ignore.c	/^cvar_t		ignore_opponents		= {"ignore_opponents", "0"};$/;"	v
ignore_qizmo_spec	ignore.c	/^cvar_t		ignore_qizmo_spec		= {"ignore_qizmo_spec", "0"};$/;"	v
ignore_spec	ignore.c	/^cvar_t		ignore_spec				= {"ignore_spec", "0"};		$/;"	v
ignored	client.h	/^	qbool	ignored;				\/\/ for ignore$/;"	m	struct:player_info_s
ignorenext	vid_x11.c	/^static int ignorenext;$/;"	v	file:
ignoreopponents_enum	menu_options.c	/^const char* ignoreopponents_enum[] = { "off", "always", "on match" };$/;"	v
ignorespec_enum	menu_options.c	/^const char* ignorespec_enum[] = { "off", "on (as player)", "on (always)" };$/;"	v
ignoreteamlist	ignore.c	/^char ignoreteamlist[MAX_TEAMIGNORELIST][16 + 1];$/;"	v
im	xsd_document.h	/^    char *im;$/;"	m	struct:xml_document_author_s
imageType	image.c	/^	byte			idLength, colormapType, imageType;$/;"	m	struct:TGAHeader_s	file:
image_ext	movie.c	/^static char	image_ext[4];$/;"	v	file:
image_format_s	cl_screen.c	/^typedef enum image_format_s {IMAGE_PCX, IMAGE_TGA, IMAGE_JPEG, IMAGE_PNG} image_format_t;$/;"	g	file:
image_format_t	cl_screen.c	/^typedef enum image_format_s {IMAGE_PCX, IMAGE_TGA, IMAGE_JPEG, IMAGE_PNG} image_format_t;$/;"	t	typeref:enum:image_format_s	file:
image_jpeg_quality_level	image.c	/^cvar_t image_jpeg_quality_level = {"image_jpeg_quality_level", "75"};$/;"	v
image_png_compression_level	image.c	/^cvar_t image_png_compression_level = {"image_png_compression_level", "1"};$/;"	v
image_png_dither_onload	image.c	/^cvar_t image_png_dither_onload = {"image_png_dither_onload", "1"}; $/;"	v
imagename	fragstats.c	/^	char	*imagename;$/;"	m	struct:wclass_s	file:
impulse	progdefs.h	/^	float	impulse;$/;"	m	struct:__anon253
impulse	protocol.h	/^	byte	impulse;$/;"	m	struct:usercmd_s
impulse_counter	cmd.c	/^int		impulse_counter;$/;"	v
impulse_time	cmd.c	/^float	impulse_time = -9999;$/;"	v
in_archive	EX_FileList.h	/^	qbool			in_archive;$/;"	m	struct:filelist_s
in_attack	cl_input.c	/^kbutton_t	in_strafe, in_speed, in_use, in_jump, in_attack, in_attack2;$/;"	v
in_attack2	cl_input.c	/^kbutton_t	in_strafe, in_speed, in_use, in_jump, in_attack, in_attack2;$/;"	v
in_back	cl_input.c	/^kbutton_t	in_left, in_right, in_forward, in_back;$/;"	v
in_builtinkeymap	keymap.c	/^cvar_t	in_builtinkeymap = {"in_builtinkeymap", "0"};$/;"	v
in_di_bufsize	in_win.c	/^cvar_t  in_di_bufsize		= {"in_di_bufsize",      "16",  CVAR_LATCH}; \/\/ if you change default, then change DI_BufSize() too$/;"	v
in_down	cl_input.c	/^kbutton_t	in_up, in_down;$/;"	v
in_evdevice	linux_glimp.c	/^cvar_t in_evdevice        = { "in_evdevice",  "", CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
in_forward	cl_input.c	/^kbutton_t	in_left, in_right, in_forward, in_back;$/;"	v
in_impulse	cl_input.c	/^int			in_impulse;$/;"	v
in_joystick	in_win.c	/^cvar_t	in_joystick  = {"joystick","0",CVAR_ARCHIVE};$/;"	v
in_jump	cl_input.c	/^kbutton_t	in_strafe, in_speed, in_use, in_jump, in_attack, in_attack2;$/;"	v
in_klook	cl_input.c	/^kbutton_t	in_mlook, in_klook;$/;"	v
in_left	cl_input.c	/^kbutton_t	in_left, in_right, in_forward, in_back;$/;"	v
in_lookdown	cl_input.c	/^kbutton_t	in_lookup, in_lookdown, in_moveleft, in_moveright;$/;"	v
in_lookup	cl_input.c	/^kbutton_t	in_lookup, in_lookdown, in_moveleft, in_moveright;$/;"	v
in_m_mwhook	in_win.c	/^cvar_t  in_m_mwhook			= {"in_m_mwhook",        "0",   CVAR_LATCH};$/;"	v
in_m_os_parameters	in_win.c	/^cvar_t  in_m_os_parameters	= {"in_m_os_parameters", "0",   CVAR_LATCH};$/;"	v
in_m_os_parameters_enum	menu_options.c	/^const char* in_m_os_parameters_enum[] = { "off", "Keep accel settings", "Keep speed settings", "Keep all settings" };$/;"	v
in_m_smooth	in_win.c	/^cvar_t  in_m_smooth			= {"in_m_smooth",        "0",   CVAR_LATCH};$/;"	v
in_mlook	cl_input.c	/^kbutton_t	in_mlook, in_klook;$/;"	v
in_mmt	linux_glimp.c	/^cvar_t in_mmt             = { "in_mmt",      "1", CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
in_mode_set	vid_win.c	/^static qbool	force_minimized, in_mode_set, is_mode0x13, force_mode_set;$/;"	v	file:
in_mouse	in_win.c	/^cvar_t  in_mouse			= {"in_mouse",           "1",   CVAR_LATCH};  \/\/ NOTE: "1" is mt_normal$/;"	v
in_mouse	linux_glimp.c	/^cvar_t in_mouse           = { "in_mouse",    "1", CVAR_ARCHIVE | CVAR_LATCH }; \/\/ NOTE: "1" is mt_dga$/;"	v
in_mouse_enum	menu_options.c	/^const char* in_mouse_enum[] = { "off", "DGA Mouse", "X Mouse", "EVDEV Mouse" };$/;"	v
in_mouse_enum	menu_options.c	/^const char* in_mouse_enum[] = { "off", "system", "Direct Input", "Raw Input" };$/;"	v
in_moveleft	cl_input.c	/^kbutton_t	in_lookup, in_lookdown, in_moveleft, in_moveright;$/;"	v
in_moveright	cl_input.c	/^kbutton_t	in_lookup, in_lookdown, in_moveleft, in_moveright;$/;"	v
in_mwheeltype	in_win.c	/^mwheelmsg_t		in_mwheeltype;$/;"	v
in_nograb	linux_glimp.c	/^cvar_t in_nograb          = { "in_nograb",   "0", CVAR_LATCH }; \/\/ this is strictly for developers$/;"	v
in_right	cl_input.c	/^kbutton_t	in_left, in_right, in_forward, in_back;$/;"	v
in_speed	cl_input.c	/^kbutton_t	in_strafe, in_speed, in_use, in_jump, in_attack, in_attack2;$/;"	v
in_strafe	cl_input.c	/^kbutton_t	in_strafe, in_speed, in_use, in_jump, in_attack, in_attack2;$/;"	v
in_tcl	cl_tcl.c	/^int in_tcl;$/;"	v
in_up	cl_input.c	/^kbutton_t	in_up, in_down;$/;"	v
in_use	cl_input.c	/^kbutton_t	in_strafe, in_speed, in_use, in_jump, in_attack, in_attack2;$/;"	v
inbuffer	server.h	/^	char inbuffer[1500];$/;"	m	struct:svtcpstream_s
incoming_acknowledged	net.h	/^	int			incoming_acknowledged;$/;"	m	struct:__anon240
incoming_reliable_acknowledged	net.h	/^	int			incoming_reliable_acknowledged; \/\/ single bit$/;"	m	struct:__anon240
incoming_reliable_sequence	net.h	/^	int			incoming_reliable_sequence; \/\/ single bit, maintained local$/;"	m	struct:__anon240
incoming_sequence	net.h	/^	int			incoming_sequence;$/;"	m	struct:__anon240
indent	xsd_document.h	/^    qbool indent;$/;"	m	struct:document_tag_p_s
indent	xsd_document.h	/^    qbool indent;$/;"	m	struct:document_tag_section_s
index	EX_browser_ping.c	/^    int index;  \/\/ server num$/;"	m	struct:ICMP_header_s	file:
index	ez_label.h	/^	int index;$/;"	m	struct:ez_label_textpos_s
index	vfs.h	/^	int             index;$/;"	m	struct:__anon288
index	vfs_zip.c	/^	int index;$/;"	m	struct:__anon79	file:
index0	r_alias.c	/^	int	index0;$/;"	m	struct:__anon56	file:
index1	r_alias.c	/^	int	index1;$/;"	m	struct:__anon56	file:
indexes	gl_md3.h	/^	int			indexes[3];$/;"	m	struct:__anon157
infile	image.c	/^	byte * infile;				\/\/ Source stream.$/;"	m	struct:__anon34	file:
info	mvd_utils_common.h	/^	int			info;		\/\/ for item on tooks$/;"	m	struct:mvd_event_s
info	mvd_utils_common.h	/^	mvd_info_t info;$/;"	m	struct:mvd_new_info_s
info	mvd_utils_common.h	/^	mvd_pw_t info[15];		\/\/iteam stats$/;"	m	struct:mvd_info_s
info	pmove.h	/^	int			info;		\/\/ for client or server to identify$/;"	m	struct:__anon243
info	server.h	/^	char		info[MAX_SERVERINFO_STRING];$/;"	m	struct:__anon269
infohost	EX_browser_net.c	/^} infohost;$/;"	t	typeref:struct:infohost_s	file:
infohost	EX_browser_sources.c	/^} infohost;$/;"	t	typeref:struct:infohost_s	file:
infohost_s	EX_browser_net.c	/^typedef struct infohost_s$/;"	s	file:
infohost_s	EX_browser_sources.c	/^typedef struct infohost_s$/;"	s	file:
infotableofs	wad.h	/^	int			infotableofs;$/;"	m	struct:__anon298
ingame_menu	menu_ingame.c	/^settings_page ingame_menu;$/;"	v
ingame_menu_entries	menu_ingame.c	/^setting ingame_menu_entries[] = {$/;"	v
inherit_levels	ez_button.h	/^	ez_button_eventcount_t	inherit_levels;$/;"	m	struct:ez_button_s
inherit_levels	ez_controls.h	/^	ez_control_eventcount_t		inherit_levels;		\/\/ The number of times each event has been overriden. $/;"	m	struct:ez_control_s
inherit_levels	ez_label.h	/^	ez_label_eventcount_t	inherit_levels;$/;"	m	struct:ez_label_s
inherit_levels	ez_scrollbar.h	/^	ez_scrollbar_eventcount_t	inherit_levels;$/;"	m	struct:ez_scrollbar_s
inherit_levels	ez_scrollpane.h	/^	ez_scrollpane_eventcount_t	inherit_levels;$/;"	m	struct:ez_scrollpane_s
inherit_levels	ez_slider.h	/^	ez_slider_eventcount_t	inherit_levels;$/;"	m	struct:ez_slider_s
inheritance_level	ez_button.h	/^	int						inheritance_level;$/;"	m	struct:ez_button_s
inheritance_level	ez_slider.h	/^	int						inheritance_level;$/;"	m	struct:ez_slider_s
initFatalError	vid_win.c	/^void initFatalError(void) {$/;"	f
init_source	image.c	/^init_source (j_decompress_ptr cinfo)$/;"	f
inited	mvd_cam.c	/^int inited = 0;$/;"	v
initialized	cd_linux.c	/^static qbool	initialized = false;$/;"	v	file:
initialized	cd_win.c	/^static qbool	initialized = false;$/;"	v	file:
inlen	server.h	/^	int inlen;$/;"	m	struct:svtcpstream_s
inline	ffmpeg.c	7;"	d	file:
inline_links	document_rendering.c	/^    document_rendered_link_t *inline_links; \/\/ current inline links$/;"	m	struct:document_rendering_context_s	file:
inopen	cmodel.h	/^	qbool	inopen, inwater;$/;"	m	struct:__anon133
input	vid_x11.c	/^	int input;$/;"	m	struct:__anon87	file:
input_grabbed	vid_glx.c	/^static qbool input_grabbed = false;$/;"	v	file:
input_initialized	in_win.c	/^qbool   input_initialized = false;$/;"	v
install_grabs	linux_glimp.c	/^static void install_grabs(void)$/;"	f	file:
install_grabs	vid_glx.c	/^static void install_grabs(void) {$/;"	f	file:
insubmodel	r_bsp.c	/^qbool		insubmodel;$/;"	v
insubmodel	r_shared.h	/^	qbool	insubmodel;$/;"	m	struct:surf_s
int_flags	ez_controls.h	/^	ez_control_iflags_t		int_flags;				\/\/ Internal flags that holds the current state of the control, moving, resizing and so on.$/;"	m	struct:ez_control_s
int_flags	ez_label.h	/^	ez_label_iflags_t		int_flags;					\/\/ Internal flags for the current state of the label.$/;"	m	struct:ez_label_s
int_flags	ez_scrollbar.h	/^	ez_scrollbar_iflags_t		int_flags;			\/\/ The internal flags for the scrollbar.$/;"	m	struct:ez_scrollbar_s
int_flags	ez_scrollpane.h	/^	ez_scrollpane_iflags_t		int_flags;			\/\/ The internal flags for the scrollbar.$/;"	m	struct:ez_scrollpane_s
int_flags	ez_slider.h	/^	ez_slider_iflags_t		int_flags;			\/\/ Slider specific flags.$/;"	m	struct:ez_slider_s
int_projectiles	client.h	/^	interpolate_t	int_projectiles[MAX_PROJECTILES];$/;"	m	struct:__anon125
intcmp	localtime_linux.c	/^int intcmp(int i1, int i2)$/;"	f
intcmp	localtime_win.c	/^int intcmp(int i1, int i2)$/;"	f
integer	cvar.h	/^	int		integer;			\/\/ may be set in Cvar_Set(), Cvar_Register(), Cvar_Create()$/;"	m	struct:cvar_s
integer_description	xsd_variable.h	/^        char *integer_description;$/;"	m	union:xml_variable_s::__anon308
interline	EX_FileList.h	/^    cvar_t *		interline;$/;"	m	struct:filelist_s
intermission	client.h	/^	int			intermission;		\/\/\/< don't change view angle, full screen, etc$/;"	m	struct:__anon125
intermission	match_tools.c	/^	int intermission;$/;"	m	struct:mt_matchtstate_s	file:
intermission_hunt	server.h	/^	int			intermission_hunt;		\/\/ looking for WriteCoords to fill in intermission_origin$/;"	m	struct:__anon264
intermission_origin	server.h	/^	vec3_t		intermission_origin;$/;"	m	struct:__anon264
intermission_origin_valid	server.h	/^	qbool		intermission_origin_valid;$/;"	m	struct:__anon264
intermission_running	server.h	/^	qbool		intermission_running;	\/\/ when true, use intermission PVS$/;"	m	struct:__anon264
internal_trigger_func	tp_triggers.h	/^typedef void internal_trigger_func (const char *s);$/;"	t
internal_triggers	tp_triggers.c	/^static pcre_internal_trigger_t *internal_triggers;$/;"	v	file:
interp	cl_tcl.c	/^static Tcl_Interp* interp;$/;"	v	file:
interpolate	client.h	/^	qbool		interpolate;$/;"	m	struct:__anon113
interpolate_t	client.h	/^} interpolate_t;$/;"	t	typeref:struct:__anon113
interval	gl_model.h	/^	float				interval;$/;"	m	struct:maliasframedesc_s
interval	gl_model.h	/^	float				interval;$/;"	m	struct:mspriteframe2_s
interval	modelgen.h	/^	float	interval;$/;"	m	struct:__anon230
interval	modelgen.h	/^	float	interval;$/;"	m	struct:__anon231
interval	spritegn.h	/^	float	interval;$/;"	m	struct:__anon280
interval	timer.c	/^	double interval;$/;"	m	struct:timer	file:
intervals	gl_model.h	/^	float				*intervals;$/;"	m	struct:mspritegroup_s
intervals	gl_model.h	/^	int					intervals;$/;"	m	struct:maliasgroup_s
intervals	r_model.h	/^	float				*intervals;$/;"	m	struct:mspritegroup_s
intervals	r_model.h	/^	int					intervals;$/;"	m	struct:maliasgroup_s
intervals	r_model.h	/^	int					intervals;$/;"	m	struct:maliasskingroup_s
intptr	mvd_cam.h	/^	int						**intptr;$/;"	m	struct:mvd_menu_s
intsintable	r_rast.c	/^int		intsintable[MAXWIDTH + CYCLE];$/;"	v
invalid	client.h	/^	qbool				invalid;			\/\/ True if the packet_entities delta was invalid$/;"	m	struct:__anon114
inwater	cmodel.h	/^	qbool	inopen, inwater;$/;"	m	struct:__anon133
inwindow	vid_mac.c	/^qbool		inwindow = false;\/\/ Can be changed at runtime$/;"	v
ioctlsocket	EX_browser_ping.c	47;"	d	file:
ioctlsocket	net.h	57;"	d
ip	EX_browser.h	/^    char ip [COL_IP + 1];$/;"	m	struct:column_s
ip	EX_browser_ping.c	/^    u_long ip;$/;"	m	struct:pinghost_s	file:
ip	net.h	/^	byte ip[4];$/;"	m	struct:__anon239
ipfilter_t	sv_main.c	/^} ipfilter_t;$/;"	t	typeref:struct:__anon64	file:
ipfilters	sv_main.c	/^ipfilter_t	ipfilters[MAX_IPFILTERS];$/;"	v
iptr	new_menu.c	/^	int		**iptr;$/;"	m	struct:menu_ct	file:
is3dfx	vid_mac.c	/^qbool is3dfx = false;$/;"	v
isATI	vid_mac.c	/^qbool isATI = false;$/;"	v
isAltDown	in_linux.c	/^int isAltDown(void) {return altDown;}$/;"	f
isAltDown	in_win.c	/^int isAltDown(void)$/;"	f
isAltDown	vid_mac.c	/^int isAltDown(void)$/;"	f
isCtrlDown	in_linux.c	/^int isCtrlDown(void) {return ctrlDown;}$/;"	f
isCtrlDown	in_win.c	/^int isCtrlDown(void)$/;"	f
isCtrlDown	vid_mac.c	/^int isCtrlDown(void)$/;"	f
isFragMsg	console.h	/^	qbool isFragMsg; \/\/ true if that was frag msg$/;"	m	struct:cfrags_format_s
isFullscreen	tr_types.h	/^	qbool				isFullscreen;$/;"	m	struct:__anon286
isLumaTexture	gl_model.h	/^	int					isLumaTexture;$/;"	m	struct:texture_s
isPermedia	vid_mac.c	/^qbool isPermedia = false;$/;"	v
isRadeon	vid_mac.c	/^qbool isRadeon = false;$/;"	v
isShiftDown	in_linux.c	/^int isShiftDown(void) {return shiftDown;}$/;"	f
isShiftDown	in_win.c	/^int isShiftDown(void)$/;"	f
isShiftDown	vid_mac.c	/^int isShiftDown(void)$/;"	f
is_archive	EX_FileList.h	/^	qbool			is_archive;$/;"	m	struct:filedesc_s
is_directory	EX_FileList.h	/^    qbool			is_directory;$/;"	m	struct:filedesc_s
is_file	client.h	/^	qbool		is_file;$/;"	m	struct:__anon122
is_mode0x13	vid_win.c	/^static qbool	force_minimized, in_mode_set, is_mode0x13, force_mode_set;$/;"	v	file:
is_monster	cl_ents.c	/^static qbool is_monster (int modelindex)$/;"	f	file:
is_numeric	cmd.c	/^static qbool is_numeric (char *c)$/;"	f	file:
iscompressed	vfs_zip.c	/^	qbool iscompressed;$/;"	m	struct:__anon79	file:
iscur	vid_wgl.c	/^	int		iscur;$/;"	m	struct:__anon83	file:
iscur	vid_win.c	/^	int		iscur;$/;"	m	struct:__anon86	file:
isdead	mvd_utils_common.h	/^	int isdead;$/;"	m	struct:mvd_ds_s
isflattop	d_polyse.c	/^	int		isflattop;$/;"	m	struct:__anon11	file:
iskyspeed	r_sky.c	/^int		iskyspeed = 8;$/;"	v
iskyspeed2	r_sky.c	/^int		iskyspeed2 = 2;$/;"	v
ismode13	vid_win.c	/^	int		ismode13;$/;"	m	struct:__anon86	file:
isnear	client.h	/^    qbool isnear;$/;"	m	struct:player_info_s
isspace2	q_shared.h	81;"	d
isworldmodel	gl_model.h	/^	qbool				isworldmodel;$/;"	m	struct:model_s
isworldmodel	r_model.h	/^	qbool				isworldmodel;$/;"	m	struct:model_s
it	mvd_utils_common.h	/^	int		it;$/;"	m	struct:mvd_wp_info_s
it_ammo	teamplay.h	165;"	d
it_armor	teamplay.h	164;"	d
it_cells	teamplay.h	143;"	d
it_disp	teamplay.h	152;"	d
it_enemy	teamplay.h	149;"	d
it_eyes	teamplay.h	150;"	d
it_flag	teamplay.h	147;"	d
it_ga	teamplay.h	133;"	d
it_gl	teamplay.h	138;"	d
it_health	teamplay.h	135;"	d
it_lg	teamplay.h	136;"	d
it_mh	teamplay.h	134;"	d
it_nails	teamplay.h	145;"	d
it_ng	teamplay.h	140;"	d
it_pack	teamplay.h	142;"	d
it_pent	teamplay.h	128;"	d
it_pented	teamplay.h	154;"	d
it_players	teamplay.h	166;"	d
it_powerups	teamplay.h	162;"	d
it_quad	teamplay.h	127;"	d
it_quaded	teamplay.h	153;"	d
it_ra	teamplay.h	131;"	d
it_ring	teamplay.h	129;"	d
it_rl	teamplay.h	137;"	d
it_rockets	teamplay.h	144;"	d
it_rune1	teamplay.h	155;"	d
it_rune2	teamplay.h	156;"	d
it_rune3	teamplay.h	157;"	d
it_rune4	teamplay.h	158;"	d
it_runes	teamplay.h	161;"	d
it_sentry	teamplay.h	151;"	d
it_shells	teamplay.h	146;"	d
it_sng	teamplay.h	139;"	d
it_ssg	teamplay.h	141;"	d
it_suit	teamplay.h	130;"	d
it_teammate	teamplay.h	148;"	d
it_weapons	teamplay.h	163;"	d
it_ya	teamplay.h	132;"	d
item_gettime	client.h	/^	float		item_gettime[32];	\/\/\/< cl.time of acquiring item, for blinking$/;"	m	struct:__anon125
item_info	mvd_utils_common.h	/^	items_t			item_info[mvd_info_types];$/;"	m	struct:mvd_new_info_s
item_t	teamplay.c	/^} item_t;$/;"	t	typeref:struct:__anon69	file:
item_vis_s	teamplay.h	/^typedef struct item_vis_s {$/;"	s
item_vis_t	teamplay.h	/^} item_vis_t;$/;"	t	typeref:struct:item_vis_s
itemflag	teamplay.c	/^	unsigned int		itemflag;$/;"	m	struct:__anon69	file:
items	cl_screen.c	/^	int			items;$/;"	m	struct:ti_player_s	file:
items	progdefs.h	/^	float	items;$/;"	m	struct:__anon253
items	teamplay.h	/^	int		items;$/;"	m	struct:tvars_s
items	xsd_document.h	/^    document_tag_di_t *items;$/;"	m	struct:document_tag_dict_s
items	xsd_document.h	/^    document_tag_li_t *items;$/;"	m	struct:document_tag_list_s
items_s	mvd_utils_common.h	/^typedef struct items_s {$/;"	s
items_t	mvd_utils_common.h	/^} items_t;$/;"	t	typeref:struct:items_s
its_you	vx_tracker.c	/^static qbool its_you(int player)$/;"	f	file:
ji	in_win.c	/^static JOYINFOEX	ji;$/;"	v	file:
jogi_avail_complete	keys.c	/^jogi_avail_complete_t jogi_avail_complete[1024];$/;"	v
jogi_avail_complete_t	keys.c	/^} jogi_avail_complete_t;$/;"	t	typeref:struct:__anon37	file:
jogi_menu_system	new_menu.c	/^cvar_t	jogi_menu_system		=	{"new_menu_system","0", 0, On_Change_JMS};$/;"	v
jogi_menu_system_background_alpha	new_menu.c	/^cvar_t	jogi_menu_system_background_alpha	=	{"jogi_menu_system_background_alpha","1"};$/;"	v
jogi_menu_system_blue	new_menu.c	/^cvar_t	jogi_menu_system_blue	=	{"jogi_menu_system_blue","0"};$/;"	v
jogi_menu_system_border_alpha	new_menu.c	/^cvar_t	jogi_menu_system_border_alpha	=	{"jogi_menu_system_border_alpha","1"};$/;"	v
jogi_menu_system_debug	new_menu.c	/^cvar_t	jogi_menu_system_debug	=	{"jogi_menu_system_debug","1"};$/;"	v
jogi_menu_system_green	new_menu.c	/^cvar_t	jogi_menu_system_green	=	{"jogi_menu_system_green","1"};$/;"	v
jogi_menu_system_red	new_menu.c	/^cvar_t	jogi_menu_system_red	=	{"jogi_menu_system_red","0"};$/;"	v
jogi_mvd_char_test	mvd_cam.c	/^char *jogi_mvd_char_test = "";$/;"	v
jogi_mvd_entities	mvd_cam.c	/^cvar_t	jogi_mvd_entities = {"jogi_mvd_entities","0"};$/;"	v
jogi_mvd_test	mvd_cam.c	/^cvar_t	jogi_mvd_test = {"jogi_mvd_test","0"};$/;"	v
jogi_mvd_test1	mvd_cam.c	/^cvar_t	jogi_mvd_test1 = {"jogi_mvd_test1","0"};$/;"	v
jogi_mvd_test_a	mvd_cam.c	/^cvar_t	jogi_mvd_test_a = {"jogi_mvd_test_a","-1"};$/;"	v
jogi_mvd_test_b	mvd_cam.c	/^cvar_t	jogi_mvd_test_b = {"jogi_mvd_test_b","1"};$/;"	v
jogi_mvd_test_scale	mvd_cam.c	/^cvar_t	jogi_mvd_test_scale = {"jogi_mvd_test_scale","0"};$/;"	v
jogi_mvd_test_size_x	mvd_cam.c	/^cvar_t	jogi_mvd_test_size_x = {"jogi_mvd_test_size_x","320",0 , ON_Change_Cam};$/;"	v
jogi_mvd_test_size_y	mvd_cam.c	/^cvar_t	jogi_mvd_test_size_y = {"jogi_mvd_test_size_y","200" ,0 , ON_Change_Cam};$/;"	v
jogi_mvd_test_x	mvd_cam.c	/^cvar_t	jogi_mvd_test_x = {"jogi_mvd_test_x","0"};$/;"	v
jogi_mvd_test_y	mvd_cam.c	/^cvar_t	jogi_mvd_test_y = {"jogi_mvd_test_y","0"};$/;"	v
jogi_mvd_track	mvd_cam.c	/^cvar_t	jogi_mvd_track = {"jogi_mvd_track","0"};$/;"	v
joy_advanced	in_win.c	/^cvar_t	joy_advanced = {"joyadvanced", "0"};$/;"	v
joy_advancedinit	in_win.c	/^qbool	joy_avail, joy_advancedinit, joy_haspov;$/;"	v
joy_advaxisr	in_win.c	/^cvar_t	joy_advaxisr = {"joyadvaxisr", "0"};$/;"	v
joy_advaxisu	in_win.c	/^cvar_t	joy_advaxisu = {"joyadvaxisu", "0"};$/;"	v
joy_advaxisv	in_win.c	/^cvar_t	joy_advaxisv = {"joyadvaxisv", "0"};$/;"	v
joy_advaxisx	in_win.c	/^cvar_t	joy_advaxisx = {"joyadvaxisx", "0"};$/;"	v
joy_advaxisy	in_win.c	/^cvar_t	joy_advaxisy = {"joyadvaxisy", "0"};$/;"	v
joy_advaxisz	in_win.c	/^cvar_t	joy_advaxisz = {"joyadvaxisz", "0"};$/;"	v
joy_avail	in_win.c	/^qbool	joy_avail, joy_advancedinit, joy_haspov;$/;"	v
joy_flags	in_win.c	/^DWORD		joy_flags;$/;"	v
joy_flysensitivity	in_win.c	/^cvar_t	joy_flysensitivity = {"joyflysensitivity", "-1.0"};$/;"	v
joy_flythreshold	in_win.c	/^cvar_t  joy_flythreshold = {"joyflythreshold", "0.15"};$/;"	v
joy_forwardsensitivity	in_win.c	/^cvar_t	joy_forwardsensitivity = {"joyforwardsensitivity", "-1.0"};$/;"	v
joy_forwardthreshold	in_win.c	/^cvar_t	joy_forwardthreshold = {"joyforwardthreshold", "0.15"};$/;"	v
joy_haspov	in_win.c	/^qbool	joy_avail, joy_advancedinit, joy_haspov;$/;"	v
joy_id	in_win.c	/^int			joy_id;$/;"	v
joy_name	in_win.c	/^cvar_t	joy_name     = {"joyname", "joystick"};$/;"	v
joy_numbuttons	in_win.c	/^DWORD		joy_numbuttons;$/;"	v
joy_oldbuttonstate	in_win.c	/^DWORD		joy_oldbuttonstate, joy_oldpovstate;$/;"	v
joy_oldpovstate	in_win.c	/^DWORD		joy_oldbuttonstate, joy_oldpovstate;$/;"	v
joy_pitchsensitivity	in_win.c	/^cvar_t	joy_pitchsensitivity = {"joypitchsensitivity", "1.0"};$/;"	v
joy_pitchthreshold	in_win.c	/^cvar_t	joy_pitchthreshold = {"joypitchthreshold", "0.15"};$/;"	v
joy_sidesensitivity	in_win.c	/^cvar_t	joy_sidesensitivity = {"joysidesensitivity", "-1.0"};$/;"	v
joy_sidethreshold	in_win.c	/^cvar_t	joy_sidethreshold = {"joysidethreshold", "0.15"};$/;"	v
joy_wwhack1	in_win.c	/^cvar_t	joy_wwhack1 = {"joywwhack1", "0.0"};$/;"	v
joy_wwhack2	in_win.c	/^cvar_t	joy_wwhack2 = {"joywwhack2", "0.0"};$/;"	v
joy_yawsensitivity	in_win.c	/^cvar_t	joy_yawsensitivity = {"joyyawsensitivity", "-1.0"};$/;"	v
joy_yawthreshold	in_win.c	/^cvar_t	joy_yawthreshold = {"joyyawthreshold", "0.15"};$/;"	v
jpeg_create_compress	image.c	2086;"	d	file:
jpeg_error_exit	image.c	/^void jpeg_error_exit (j_common_ptr cinfo) {	$/;"	f
jpeg_error_exit	image.c	/^void jpeg_error_exit (j_common_ptr cinfo)$/;"	f
jpeg_error_mgr_wrapper	image.c	/^} jpeg_error_mgr_wrapper;$/;"	t	typeref:struct:my_error_mgr	file:
jpeg_handle	image.c	/^static QLIB_HANDLETYPE_T jpeg_handle = NULL;$/;"	v	file:
jpeg_in_error	image.c	/^static qbool jpeg_in_error = false;$/;"	v	file:
jpeg_mem_src	image.c	/^jpeg_mem_src (j_decompress_ptr cinfo, byte * infile, int maxlen)$/;"	f
jpegprocs	image.c	/^qlib_dllfunction_t jpegprocs[] = {$/;"	v
jump	client.h	/^	qbool forward, back, left, right, jump, attack, up, down;$/;"	m	struct:__anon126
jump_held	client.h	/^	qbool		jump_held;$/;"	m	struct:__anon112
jump_held	pmove.h	/^	qbool		jump_held;$/;"	m	struct:__anon245
jump_held	server.h	/^	qbool		jump_held;$/;"	m	struct:client_s
jump_msec	client.h	/^	int			jump_msec;		\/\/ Fix bunny-hop flickering.$/;"	m	struct:__anon112
jump_msec	pmove.h	/^	int			jump_msec; \/\/ msec since last jump$/;"	m	struct:__anon245
kAppName	sys_mac.c	/^char *kAppName = "ezQuake";$/;"	v
kBufSize	CarbonSndPlayDB.c	77;"	d	file:
kCmdLineText	sys_mac.c	/^static const ControlID	kCmdLineText	= { 'PREF', 3 };$/;"	v	file:
kColorsPopup	sys_mac.c	/^static const ControlID	kColorsPopup	= { 'PREF', 2 };$/;"	v	file:
kCommandKey	sys_mac.c	/^	kCommandKey = 0x37,$/;"	e	enum:__anon68	file:
kCreatorType	mac.h	107;"	d
kLShiftKey	sys_mac.c	/^	kLShiftKey = 0x38,$/;"	e	enum:__anon68	file:
kMenuBpp16	mac.h	/^enum { kMenuBpp16, kMenuBpp32 };$/;"	e	enum:__anon178
kMenuBpp32	mac.h	/^enum { kMenuBpp16, kMenuBpp32 };$/;"	e	enum:__anon178
kMenuSound11	mac.h	/^enum { kMenuSound11, kMenuSound22, kMenuSound44 };$/;"	e	enum:__anon177
kMenuSound22	mac.h	/^enum { kMenuSound11, kMenuSound22, kMenuSound44 };$/;"	e	enum:__anon177
kMenuSound44	mac.h	/^enum { kMenuSound11, kMenuSound22, kMenuSound44 };$/;"	e	enum:__anon177
kModePopup	sys_mac.c	/^static const ControlID	kModePopup	 	= { 'PREF', 1 };$/;"	v	file:
kOptionKey	sys_mac.c	/^	kOptionKey = 0x3a,$/;"	e	enum:__anon68	file:
kPrefsName	mac.h	108;"	d
kRShiftKey	sys_mac.c	/^	kRShiftKey = 0x3C$/;"	e	enum:__anon68	file:
kWindowed	sys_mac.c	/^static const ControlID	kWindowed		= { 'PREF', 4 };$/;"	v	file:
k_id	mvd_utils_common.h	/^	int			k_id;		\/\/ userid of the guy we killed$/;"	m	struct:mvd_event_s
kbutton_t	input.h	/^} kbutton_t;$/;"	t	typeref:struct:__anon167
kdmb1	new_menu.c	/^int		kdmb1;$/;"	v
kdmb2	new_menu.c	/^int		kdmb2;$/;"	v
kern	mgraph.h	/^	m_int			kern;			\/* Kern value						*\/$/;"	m	struct:__anon214
key	Ctrl_Tab.h	/^    CTabPage_KeyType    key;$/;"	m	struct:CTabPage_Handlers_s
key	client.h	/^	int				key;				\/\/ so entities can reuse same entry$/;"	m	struct:__anon118
key	ez_controls.h	/^	ez_key_eventhandler_fp			key;$/;"	m	union:ez_eventhandlerfunction_u
key	r_model.h	/^	int					key;						\/\/ BSP sequence number for leaf's contents$/;"	m	struct:mleaf_s
key	r_shared.h	/^	int			key;				\/\/ sorting key (BSP order)$/;"	m	struct:surf_s
key	vid_x11.c	/^	int key;$/;"	m	struct:__anon88	file:
keyEvents	sys_mac.c	510;"	d	file:
key_console	keys.h	/^typedef enum { key_game, key_console, key_message, key_menu, key_hudeditor, key_demo_controls , key_new_menu} keydest_t;$/;"	e	enum:__anon172
key_demo_controls	keys.h	/^typedef enum { key_game, key_console, key_message, key_menu, key_hudeditor, key_demo_controls , key_new_menu} keydest_t;$/;"	e	enum:__anon172
key_dest	keys.c	/^keydest_t	key_dest, key_dest_beforemm, key_dest_beforecon;$/;"	v
key_dest_beforecon	keys.c	/^keydest_t	key_dest, key_dest_beforemm, key_dest_beforecon;$/;"	v
key_dest_beforemm	keys.c	/^keydest_t	key_dest, key_dest_beforemm, key_dest_beforecon;$/;"	v
key_game	keys.h	/^typedef enum { key_game, key_console, key_message, key_menu, key_hudeditor, key_demo_controls , key_new_menu} keydest_t;$/;"	e	enum:__anon172
key_hudeditor	keys.h	/^typedef enum { key_game, key_console, key_message, key_menu, key_hudeditor, key_demo_controls , key_new_menu} keydest_t;$/;"	e	enum:__anon172
key_lastpress	keys.c	/^int		key_lastpress;$/;"	v
key_linepos	keys.c	/^int		key_linepos;$/;"	v
key_lineposorig	keys.c	/^int key_lineposorig;$/;"	v
key_lines	keys.c	/^wchar	key_lines[CMDLINES][MAXCMDLINE];$/;"	v
key_menu	keys.h	/^typedef enum { key_game, key_console, key_message, key_menu, key_hudeditor, key_demo_controls , key_new_menu} keydest_t;$/;"	e	enum:__anon172
key_message	keys.h	/^typedef enum { key_game, key_console, key_message, key_menu, key_hudeditor, key_demo_controls , key_new_menu} keydest_t;$/;"	e	enum:__anon172
key_new_menu	keys.h	/^typedef enum { key_game, key_console, key_message, key_menu, key_hudeditor, key_demo_controls , key_new_menu} keydest_t;$/;"	e	enum:__anon172
key_repeats	keys.c	/^int		key_repeats[UNKNOWN + 256];	\/\/ if > 1, it is autorepeating$/;"	v
key_sp	ez_controls.h	/^	ez_keyspecific_eventhandler_fp	key_sp;$/;"	m	union:ez_eventhandlerfunction_u
keyactive	keys.c	/^qbool	keyactive[UNKNOWN + 256];$/;"	v
keybindings	keys.c	/^char	*keybindings[UNKNOWN + 256];$/;"	v
keyboard	in_raw.h	/^		RAWKEYBOARD keyboard;$/;"	m	union:tagRAWINPUT::__anon170
keydest_t	keys.h	/^typedef enum { key_game, key_console, key_message, key_menu, key_hudeditor, key_demo_controls , key_new_menu} keydest_t;$/;"	t	typeref:enum:__anon172
keydown	keys.c	/^qbool	keydown[UNKNOWN + 256];$/;"	v
keyhandler	vid_svgalib.c	/^static void keyhandler (int scancode, int state)$/;"	f	file:
keymap_active	keymap.c	/^static qbool keymap_active = false; $/;"	v	file:
keymap_name	keymap.c	/^cvar_t	keymap_name = {"keymap_name", "Default"};$/;"	v
keymap_name	keymap_x11.c	/^cvar_t	keymap_name = {"keymap_name", "Default"};$/;"	v
keymap_t	vid_x11.c	/^} keymap_t;$/;"	t	typeref:struct:__anon87	file:
keymaps	keymap.c	/^static byte keymaps[ 3 ][ 256 ]; \/\/ [0]= normal, [1]=shifted, [2]=altgr level$/;"	v	file:
keymaps_default	keymap.c	/^static byte keymaps_default[ 2 ][ 256 ] =$/;"	v	file:
keyname_t	keys.c	/^} keyname_t;$/;"	t	typeref:struct:__anon38	file:
keynames	keys.c	/^keyname_t keynames[] = {$/;"	v
keynum	keys.c	/^	int		keynum;$/;"	m	struct:__anon38	file:
keynum_t	keys.h	/^} keynum_t;$/;"	t	typeref:enum:__anon171
keyq	vid_x11.c	/^} keyq[64];$/;"	v	typeref:struct:__anon88
keyq_head	vid_x11.c	/^static int keyq_head = 0;$/;"	v	file:
keyq_tail	vid_x11.c	/^static int keyq_tail = 0;$/;"	v	file:
keys	EX_browser.h	/^    char *keys[MAX_KEYS], *values[MAX_KEYS];$/;"	m	struct:server_data_s
keyshift	keys.c	/^int		keyshift[UNKNOWN + 256];		\/\/ key to map to if shift held down in console$/;"	v
keysn	EX_browser.h	/^    int keysn;$/;"	m	struct:server_data_s
keystring	hash.h	/^	char *keystring;$/;"	m	struct:bucket_s
keyword	fragstats.c	/^	char	*keyword;$/;"	m	struct:wclass_s	file:
kill_s	mvd_utils.c	/^typedef struct kill_s {$/;"	s	file:
kill_t	mvd_utils.c	/^} kill_t;$/;"	t	typeref:struct:kill_s	file:
killed_monsters	progdefs.h	/^	float	killed_monsters;$/;"	m	struct:__anon252
killer	cl_cam.c	/^static int	killer = -1;		\/\/ id of the player who killed the player we are now tracking$/;"	v	file:
killing_streak_t	vx_tracker.c	/^} killing_streak_t;$/;"	t	typeref:struct:__anon94	file:
kills	fragstats.c	/^	int kills[MAX_CLIENTS];$/;"	m	struct:fragstats_s	file:
kills	mvd_utils_common.h	/^	int kills;$/;"	m	struct:mvd_ks_w_s
killstats	mvd_utils_common.h	/^	mvd_ks_t killstats;		\/\/ killstats$/;"	m	struct:mvd_info_s
known_sfx	snd_dma.c	/^static sfx_t	*known_sfx = NULL; \/\/ hunk allocated [MAX_SFX]$/;"	v	file:
koi2wc	textencoding.c	/^static wchar koi2wc (char c)$/;"	f	file:
koi2wc_table	textencoding.c	/^char koi2wc_table[64] = {$/;"	v
ktjump	pmove.h	/^	float	ktjump;$/;"	m	struct:__anon246
l	gl_rsurf.c	/^	unsigned char l, t, w, h;$/;"	m	struct:glRect_s	file:
lLastX	in_raw.h	/^	LONG lLastX;$/;"	m	struct:tagRAWMOUSE
lLastY	in_raw.h	/^	LONG lLastY;$/;"	m	struct:tagRAWMOUSE
lX	in_win.c	/^	LONG  lX;                   \/\/ X axis goes here$/;"	m	struct:MYDATA	file:
lY	in_win.c	/^	LONG  lY;                   \/\/ Y axis goes here$/;"	m	struct:MYDATA	file:
lZ	in_win.c	/^	LONG  lZ;                   \/\/ Z axis goes here$/;"	m	struct:MYDATA	file:
l_margin	document_rendering.c	/^    int     l_margin;$/;"	m	struct:document_rendering_context_s	file:
label	hud_editor.c	/^ez_label_t *label = NULL;$/;"	v
label	menu.c	/^	const char *label;$/;"	m	struct:bigmenu_items_s	file:
label	settings.h	/^	const char* label;	\/\/ to be displayed on screen; always required$/;"	m	struct:__anon272
label2	hud_editor.c	/^ez_label_t *label2 = NULL;$/;"	v
label_autoellipsis	ez_label.h	/^	label_autoellipsis	= (1 << 2),		\/\/ Show ... at the end of the text if it doesn't fit within the label.$/;"	e	enum:ez_label_flags_e
label_autosize	ez_label.h	/^	label_autosize		= (1 << 1),		\/\/ Autosize the label to fit the text (if it's not wrapped).$/;"	e	enum:ez_label_flags_e
label_largefont	ez_label.h	/^	label_largefont		= (1 << 0),		\/\/ Use the large font.$/;"	e	enum:ez_label_flags_e
label_readonly	ez_label.h	/^	label_readonly		= (1 << 5)		\/\/ Is input allowed?$/;"	e	enum:ez_label_flags_e
label_selectable	ez_label.h	/^	label_selectable	= (1 << 4),		\/\/ Is text selectable?$/;"	e	enum:ez_label_flags_e
label_selecting	ez_label.h	/^	label_selecting		= (1 << 0)		\/\/ Are we selecting text?$/;"	e	enum:ez_label_iflags_e
label_wraptext	ez_label.h	/^	label_wraptext		= (1 << 3),		\/\/ Wrap the text to fit inside the label.$/;"	e	enum:ez_label_flags_e
largestavailable	zone2.h	/^	size_t largestavailable;$/;"	m	struct:memclump_s
largv	common.c	/^static char	*largv[MAX_NUM_ARGVS + 1];$/;"	v	file:
lastViewedPage	Ctrl_Tab.h	/^	int			lastViewedPage;$/;"	m	struct:CTab_s
last_blank	document_rendering.c	/^    int     last_blank;$/;"	m	struct:document_rendering_context_s	file:
last_chunk	snd_mem.c	/^static unsigned char *last_chunk;$/;"	v	file:
last_cmd_length	keys.c	/^int last_cmd_length = 0;$/;"	v
last_draw_sequence	hud.h	/^    int last_draw_sequence;				\/\/ Sequence, at which it was last drawn successfully.$/;"	m	struct:hud_s
last_entity_count	nmenu_trackentity.c	/^int	last_entity_count;$/;"	v
last_fps	client.h	/^	int			last_fps;$/;"	m	struct:__anon125
last_fps	client.h	/^    int    last_fps;$/;"	m	struct:player_info_s
last_heartbeat	server.h	/^	double		last_heartbeat;$/;"	m	struct:__anon269
last_height	Ctrl_PageViewer.h	/^    int last_height;$/;"	m	struct:CPageViewer_page_s
last_hovered	new_menu.c	/^struct menu_ct	*last_hovered = NULL;$/;"	v	typeref:struct:menu_ct
last_lock	cl_cam.c	/^float	last_lock = 0;			\/\/ Last tracked player.$/;"	v
last_lvlshot	gl_draw.c	/^static mpic_t *last_lvlshot = NULL;$/;"	v	file:
last_mapname	gl_draw.c	/^static char last_mapname[MAX_QPATH] = {0};$/;"	v	file:
last_numenemies	teamplay.h	/^	int	last_numenemies;$/;"	m	struct:tvars_s
last_numfriendlies	teamplay.h	/^	int	last_numfriendlies;$/;"	m	struct:tvars_s
last_page_size	EX_FileList.h	/^    int				last_page_size;$/;"	m	struct:filelist_s
last_ping_request	client.h	/^	double		last_ping_request;	\/\/\/< while showing scoreboard$/;"	m	struct:__anon125
last_received	net.h	/^	float		last_received;		\/\/ for timeouts$/;"	m	struct:__anon240
last_reliable_sequence	net.h	/^	int			last_reliable_sequence; \/\/ sequence number of last send$/;"	m	struct:__anon240
last_search_enter_time	EX_FileList.c	/^static double last_search_enter_time = 0.0;$/;"	v	file:
last_stats_time	EX_browser_ping.c	/^double last_stats_time;$/;"	v
last_status	menu_mp3player.c	/^static int last_status;$/;"	v	file:
last_system_mapgroup	match_tools.c	/^static mapgroup_t *last_system_mapgroup = NULL;$/;"	v	file:
last_system_skygroup	match_tools.c	/^static skygroup_t *last_system_skygroup = NULL;$/;"	v	file:
last_track	mvd_autotrack.c	/^int last_track = 0;$/;"	v
last_track_update	mosdm.c	/^double last_track_update;$/;"	v
last_try_sequence	hud.h	/^    int last_try_sequence;				\/\/ Sequence, at which object tried to draw itself.$/;"	m	struct:hud_s
last_tt_m	mvd_cam.c	/^double last_tt_m =0 ;$/;"	v
last_u	r_shared.h	/^	int			last_u;				\/\/ set during tracing$/;"	m	struct:surf_s
last_update	EX_browser.h	/^    SYSTEMTIME last_update;             \/\/ last update time$/;"	m	struct:source_data_s
last_wseq_printed	in_win.c	/^int		 last_wseq_printed = 0;$/;"	v
lastcheck	server.h	/^	int			lastcheck;			\/\/ used by PF_checkclient$/;"	m	struct:__anon264
lastchecksize	zone2.h	/^	size_t lastchecksize;$/;"	m	struct:mempool_s
lastchecktime	server.h	/^	double		lastchecktime;		\/\/ for monster ai $/;"	m	struct:__anon264
lastclipnode	cmodel.h	/^	int			lastclipnode;$/;"	m	struct:__anon131
lastcmd	server.h	/^	usercmd_t	lastcmd;			\/\/ for filling in big drops and partial predictions$/;"	m	struct:client_s
lastdeathloc	teamplay.h	/^	char	lastdeathloc[MAX_LOC_NAME];$/;"	m	struct:tvars_s
lastdrop_time	teamplay.h	/^	double	lastdrop_time;$/;"	m	struct:tvars_s
lastdroploc	teamplay.h	/^	char	lastdroploc[MAX_LOC_NAME];$/;"	m	struct:tvars_s
lastfps	cl_main.c	/^double		lastfps;$/;"	v
lastfrags	mvd_utils_common.h	/^	int lastfrags;$/;"	m	struct:mvd_info_s
lastip	teamplay.c	/^char lastip[32]; \/\/ FIXME: remove it$/;"	v
lastkills	mvd_utils_common.h	/^	int lastkills;$/;"	m	struct:mvd_ks_w_s
lastlink	gl_refrag.c	/^efrag_t		**lastlink;$/;"	v
lastlink	r_efrag.c	/^efrag_t		**lastlink;$/;"	v
lastnamecount	server.h	/^	int			lastnamecount;		\/\/ time of last name change$/;"	m	struct:client_s
lastnametime	server.h	/^	float		lastnametime;		\/\/ time of last name change$/;"	m	struct:client_s
lastposenum	gl_rmain.c	/^int		lastposenum;$/;"	v
lastreportedloc	teamplay.h	/^	char	lastreportedloc[MAX_LOC_NAME];$/;"	m	struct:tvars_s
lastruntime	progdefs.h	/^	float	lastruntime;$/;"	m	struct:__anon253
lastruntime	progs.h	/^	double		lastruntime;		\/\/ sv.time when SV_RunEntity was last$/;"	m	struct:edict_s
lastsenttime	EX_browser_net.c	/^    double lastsenttime;$/;"	m	struct:infohost_s	file:
lastsenttime	EX_browser_sources.c	/^    double lastsenttime;$/;"	m	struct:infohost_s	file:
lastservertimeupdate	server.h	/^	double		lastservertimeupdate;   \/\/ last svs.realtime we sent STAT_TIME to the client$/;"	m	struct:client_s
laststop	client.h	/^	double		laststop;$/;"	m	struct:__anon125
lasttime	mvd_utils.c	/^double lasttime = 0;$/;"	v
lasttime	timer.c	/^	double lasttime;$/;"	m	struct:timer	file:
lasttime	tp_triggers.h	/^	double					lasttime;$/;"	m	struct:pcre_trigger_s
lasttime1	mvd_utils.c	/^double lasttime1 ,lasttime2;$/;"	v
lasttime2	mvd_utils.c	/^double lasttime1 ,lasttime2;$/;"	v
lastto	client.h	/^	int			lastto;			$/;"	m	struct:__anon122
lasttrigger_match	teamplay.h	/^	char	lasttrigger_match[256];$/;"	m	struct:tvars_s
lasttype	client.h	/^	int			lasttype;		\/\/\/< The type of the last demo message.$/;"	m	struct:__anon122
lastused	server.h	/^	double	lastused;	\/\/ last time this slot was used$/;"	m	struct:__anon262
lastuserid	server.h	/^	int			lastuserid;			\/\/ userid of last spawned client$/;"	m	struct:__anon269
latchedString	cvar.h	/^	char	*latchedString;$/;"	m	struct:cvar_s
latched_active	server.h	/^	double	latched_active;$/;"	m	struct:__anon267
latched_idle	server.h	/^	double	latched_idle;$/;"	m	struct:__anon267
latched_packets	server.h	/^	int		latched_packets;$/;"	m	struct:__anon267
latency	client.h	/^	float		latency;		\/\/\/< Rolling average$/;"	m	struct:__anon122
leading	mgraph.h	/^	m_int			leading;		\/* Leading value					*\/$/;"	m	struct:__anon214
leading	mgraph.h	/^	short			leading;		\/* Font leading value				*\/$/;"	m	struct:__anon213
leaf	render.h	/^	struct mleaf_s		*leaf;$/;"	m	struct:efrag_s	typeref:struct:efrag_s::mleaf_s
leafcount	cmodel.c	/^	int leafcount;$/;"	m	struct:__anon8	file:
leafnext	render.h	/^	struct efrag_s		*leafnext;$/;"	m	struct:efrag_s	typeref:struct:efrag_s::efrag_s
leafnums	progs.h	/^	short		leafnums[MAX_ENT_LEAFS];$/;"	m	struct:edict_s
leafs	gl_model.h	/^	mleaf_t				*leafs;$/;"	m	struct:model_s
leafs	r_model.h	/^	mleaf_t				*leafs;$/;"	m	struct:model_s
leafs_count	cmodel.c	/^static int leafs_count;$/;"	v	file:
leafs_list	cmodel.c	/^static int *leafs_list;$/;"	v	file:
leafs_maxcount	cmodel.c	/^static int leafs_maxcount;$/;"	v	file:
leafs_maxs	cmodel.c	/^static vec3_t leafs_mins, leafs_maxs;$/;"	v	file:
leafs_mins	cmodel.c	/^static vec3_t leafs_mins, leafs_maxs;$/;"	v	file:
leafs_topnode	cmodel.c	/^static int leafs_topnode;$/;"	v	file:
leavecurrentmode	vid_wgl.c	/^static qbool	windowed, leavecurrentmode;$/;"	v	file:
left	client.h	/^	qbool forward, back, left, right, jump, attack, up, down;$/;"	m	struct:__anon126
left	gl_model.h	/^	float				up, down, left, right;$/;"	m	struct:mspriteframe_s
left	mgraph.h	/^	m_int	left;$/;"	m	struct:__anon197
left	r_model.h	/^	float				up, down, left, right;$/;"	m	struct:mspriteframe_s
left	snd_mix.c	/^	int left;$/;"	m	struct:portable_samplepair_s	file:
left_edge_gap	ez_controls.h	/^	int						left_edge_gap;			\/\/ The gap to the different edges, used for anchoring$/;"	m	struct:ez_control_s
leftedge	r_local.h	/^	byte		leftedge;$/;"	m	struct:clipplane_s
leftvol	qsound.h	/^	int		leftvol;		\/\/ 0-255 volume$/;"	m	struct:channel_s
legacycmd_s	cmd.c	/^typedef struct legacycmd_s$/;"	s	file:
legacycmd_t	cmd.c	/^} legacycmd_t;$/;"	t	typeref:struct:legacycmd_s	file:
legacycmds	cmd.c	/^static legacycmd_t *legacycmds = NULL;$/;"	v	file:
len	vfs.h	/^	int             len;$/;"	m	struct:__anon288
len	vfs_mmap.c	/^	size_t len;$/;"	m	struct:__anon74	file:
length	client.h	/^	int		length;$/;"	m	struct:__anon119
length	mvd_cam.h	/^	double length;$/;"	m	struct:c_curve_s
length	vfs_gzip.c	/^	unsigned long length;$/;"	m	struct:__anon73	file:
length	vfs_pak.c	/^    unsigned long length;$/;"	m	struct:__anon77	file:
length	vfs_tar.c	/^	unsigned long length;$/;"	m	struct:__anon78	file:
length	vfs_zip.c	/^	int length;	\/\/try and optimise some things$/;"	m	struct:__anon79	file:
lerp_origin	client.h	/^	vec3_t			lerp_origin;$/;"	m	struct:__anon115
lerp_time	cl_pred.c	/^double lerp_time;$/;"	v
level	tp_triggers.c	/^	int		level;$/;"	m	struct:msg_trigger_s	file:
level_t	menu_multiplayer.c	/^} level_t;$/;"	t	typeref:struct:__anon45	file:
levelname	client.h	/^	char		levelname[40];		\/\/\/< for display on solo scoreboard$/;"	m	struct:__anon125
levels	menu_multiplayer.c	/^	int        levels;$/;"	m	struct:__anon46	file:
levels	menu_multiplayer.c	/^level_t        levels[] = {$/;"	v
lf	gl_md3.c	274;"	d	file:
lfw	mvd_utils_common.h	/^    int lfw;				\/\/last fired weapon$/;"	m	struct:mvd_info_s
lg_val	mvd_autotrack.c	61;"	d	file:
lh	hud.h	/^    int lx, ly, lw, lh;					\/\/ Last position.$/;"	m	struct:hud_s
lhrandom	cam_new.c	22;"	d	file:
lhrandom	gl_rpart.c	48;"	d	file:
lib_functions	sys_lib.h	/^struct lib_functions$/;"	s
libaud_handle	mp3_audacious.c	/^static QLIB_HANDLETYPE_T libaud_handle = NULL;$/;"	v	file:
libavcodec_functions	ffmpeg.c	/^struct lib_functions libavcodec_functions[] =$/;"	v	typeref:struct:lib_functions
libavformat_functions	ffmpeg.c	/^struct lib_functions libavformat_functions[] =$/;"	v	typeref:struct:lib_functions
libavutil_functions	ffmpeg.c	/^struct lib_functions libavutil_functions[] =$/;"	v	typeref:struct:lib_functions
libmpd_handle	mp3_mpd.c	/^static QLIB_HANDLETYPE_T libmpd_handle = NULL;$/;"	v	file:
libs	ffmpeg.c	/^struct libs$/;"	s	file:
libstoload	ffmpeg.c	/^char libstoload[][] =$/;"	v
libstoload	ffmpeg.c	/^struct libs libstoload[] =$/;"	v	typeref:struct:libs
libswscale_functions	ffmpeg.c	/^struct lib_functions libswscale_functions[] =$/;"	v	typeref:struct:lib_functions
libvorbis_handle	snd_ov.c	/^static QLIB_HANDLETYPE_T libvorbis_handle = NULL;$/;"	v	file:
libxmms2_handle	mp3_xmms2.c	/^static QLIB_HANDLETYPE_T libxmms2_handle = NULL;$/;"	v	file:
libxmms_handle	mp3_xmms.c	/^static QLIB_HANDLETYPE_T libxmms_handle = NULL;$/;"	v	file:
light	d_polyse.c	/^	int				sfrac, tfrac, light, zi;$/;"	m	struct:__anon10	file:
light_s	gl_model.h	/^	int					light_s, light_t;			\/\/ gl lightmap coordinates$/;"	m	struct:msurface_s
light_t	gl_model.h	/^	int					light_s, light_t;			\/\/ gl lightmap coordinates$/;"	m	struct:msurface_s
lightadj	d_iface.h	/^	fixed8_t	lightadj[MAXLIGHTMAPS];$/;"	m	struct:__anon144
lightadj	d_local.h	/^	int					lightadj[MAXLIGHTMAPS]; \/\/ checked for strobe flush$/;"	m	struct:surfcache_s
lightcolor	gl_rlight.c	/^vec3_t lightcolor; \/\/ LordHavoc: used by model rendering$/;"	v
lightdata	gl_model.h	/^	byte				*lightdata;$/;"	m	struct:model_s
lightdata	r_model.h	/^	byte				*lightdata;$/;"	m	struct:model_s
lightdelta	r_surf.c	/^int				lightdelta, lightdeltastep;$/;"	v
lightdeltastep	r_surf.c	/^int				lightdelta, lightdeltastep;$/;"	v
lightleft	r_surf.c	/^int				lightleft, sourcesstep, blocksize, sourcetstep;$/;"	v
lightleftstep	r_surf.c	/^int				lightright, lightleftstep, lightrightstep, blockdivshift;$/;"	v
lightmap_modified	gl_rsurf.c	/^static qbool	lightmap_modified[MAX_LIGHTMAPS];$/;"	v	file:
lightmap_polys	gl_rsurf.c	/^static glpoly_t	*lightmap_polys[MAX_LIGHTMAPS];$/;"	v	file:
lightmap_rectchange	gl_rsurf.c	/^static glRect_t	lightmap_rectchange[MAX_LIGHTMAPS];$/;"	v	file:
lightmap_textures	gl_rsurf.c	/^int lightmap_textures;$/;"	v
lightmaps	gl_rsurf.c	/^byte	lightmaps[3 * MAX_LIGHTMAPS * BLOCK_WIDTH * BLOCK_HEIGHT];$/;"	v
lightmaptexturenum	gl_model.h	/^	int					lightmaptexturenum;$/;"	m	struct:msurface_s
lightmode	gl_rmain.c	/^int		lightmode = 2;$/;"	v
lightnormalindex	modelgen.h	/^	byte	lightnormalindex;$/;"	m	struct:__anon226
lightofs	bspfile.h	/^	int			lightofs;		\/\/ start of [numstyles*surfsize] samples$/;"	m	struct:__anon107
lightplane	gl_rlight.c	/^mplane_t		*lightplane;$/;"	v
lightright	r_surf.c	/^int				lightright, lightleftstep, lightrightstep, blockdivshift;$/;"	v
lightrightstep	r_surf.c	/^int				lightright, lightleftstep, lightrightstep, blockdivshift;$/;"	v
lightspot	gl_rlight.c	/^vec3_t			lightspot;$/;"	v
lightstyle_t	client.h	/^} lightstyle_t;$/;"	t	typeref:struct:__anon119
lightstyles	server.h	/^	char		*lightstyles[MAX_LIGHTSTYLES];$/;"	m	struct:__anon264
limit	new_menu.c	/^	float		limit[2];$/;"	m	struct:menu_ct	file:
limited_cvar_max_s	rulesets.c	/^typedef struct limited_cvar_max_s$/;"	s	file:
limited_cvar_max_t	rulesets.c	/^} limited_cvar_max_t;$/;"	t	typeref:struct:limited_cvar_max_s	file:
limited_cvar_min_s	rulesets.c	/^typedef struct limited_cvar_min_s$/;"	s	file:
limited_cvar_min_t	rulesets.c	/^} limited_cvar_min_t;$/;"	t	typeref:struct:limited_cvar_min_s	file:
line	document_rendering.c	/^    int     line;$/;"	m	struct:document_rendering_context_s	file:
lineStipple	mgraph.h	/^	ushort			lineStipple;	\/* Line stipple						*\/$/;"	m	struct:__anon216
lineStyle	mgraph.h	/^	m_int			lineStyle;		\/* Line style						*\/$/;"	m	struct:__anon216
line_buf	document_rendering.c	/^    char line_buf[LINE_MAX_LEN];$/;"	m	struct:document_rendering_context_s	file:
line_pos	document_rendering.c	/^    int     line_pos;$/;"	m	struct:document_rendering_context_s	file:
link_s	progs.h	/^typedef struct link_s {$/;"	s
link_t	progs.h	/^} link_t;$/;"	t	typeref:struct:link_s
linked_list	linked_list.c	/^struct linked_list$/;"	s	file:
linked_list	linked_list.h	/^struct linked_list$/;"	s
linked_list_node	linked_list.c	/^struct linked_list_node$/;"	s	file:
linked_list_node	linked_list.h	/^struct linked_list_node$/;"	s
linkname	vfs_tar.h	/^  char linkname[100];           \/* 157 *\/$/;"	m	struct:tar_header
links	document_rendering.c	/^    document_rendered_link_t *links;$/;"	m	struct:document_rendering_context_s	file:
links	document_rendering.h	/^    document_rendered_link_t *links;$/;"	m	struct:document_renered_s
list	client.h	/^	entity_t	*list;$/;"	m	struct:visentlist_s
list	protocol.h	/^	temp_entity_t	list[MAX_TEMP_ENTITIES];$/;"	m	struct:temp_entity_list_s
list	stats_grid.h	/^	stats_entity_t	*list;$/;"	m	struct:__anon283
list_bullet_bigletter	xsd_document.h	/^    list_bullet_bigletter$/;"	e	enum:__anon305
list_bullet_dot	xsd_document.h	/^    list_bullet_dot,$/;"	e	enum:__anon305
list_bullet_letter	xsd_document.h	/^    list_bullet_letter,$/;"	e	enum:__anon305
list_bullet_none	xsd_document.h	/^    list_bullet_none,$/;"	e	enum:__anon305
list_bullet_number	xsd_document.h	/^    list_bullet_number,$/;"	e	enum:__anon305
list_bullet_t	xsd_document.h	/^list_bullet_t;$/;"	t	typeref:enum:__anon305
list_count	document_rendering.c	/^    int     list_count;$/;"	m	struct:document_rendering_context_s	file:
list_height	EX_FileList.h	/^	int				list_height;$/;"	m	struct:filelist_s
list_separator_dot	xsd_document.h	/^    list_separator_dot,$/;"	e	enum:__anon306
list_separator_none	xsd_document.h	/^    list_separator_none,$/;"	e	enum:__anon306
list_separator_par	xsd_document.h	/^    list_separator_par$/;"	e	enum:__anon306
list_separator_t	xsd_document.h	/^list_separator_t;$/;"	t	typeref:enum:__anon306
list_width	EX_FileList.h	/^	int				list_width;$/;"	m	struct:filelist_s
list_y_offset	EX_FileList.h	/^    int             list_y_offset;$/;"	m	struct:filelist_s
listener_forward	snd_dma.c	/^static vec3_t	listener_forward;$/;"	v	file:
listener_origin	snd_dma.c	/^static vec3_t	listener_origin;$/;"	v	file:
listener_right	snd_dma.c	/^static vec3_t	listener_right;$/;"	v	file:
listener_up	snd_dma.c	/^static vec3_t	listener_up;$/;"	v	file:
ll	gl_md3.c	273;"	d	file:
lmode_t	vid_wgl.c	/^} lmode_t;$/;"	t	typeref:struct:__anon82	file:
lmode_t	vid_win.c	/^} lmode_t;$/;"	t	typeref:struct:__anon84	file:
lnum	gl_rsurf.c	/^	int lnum; \/\/ reference to cl_dlights[]$/;"	m	struct:dlightinfo_s	file:
load_cursor	menu.c	/^int        load_cursor;        \/\/ 0 < load_cursor < MAX_SAVEGAMES$/;"	v
load_function	xsd.c	/^    XSD_DocumentLoadType load_function;$/;"	m	struct:xsd_mapping_s	file:
load_window	menu.c	/^menu_window_t load_window, save_window;$/;"	v
loadable	menu.c	/^int        loadable[MAX_SAVEGAMES];$/;"	v
loaded	gl_model.h	/^	qbool				loaded;						\/\/help speed up vid_restart, actual only for brush models$/;"	m	struct:texture_s
loaded	modules.c	/^	qbool loaded;$/;"	m	struct:registeredModule_s	file:
loadgame	server.h	/^	qbool		loadgame;			\/\/ handle connections specially$/;"	m	struct:__anon264
loadmodel	gl_model.c	/^model_t	*loadmodel;$/;"	v
loadmodel	r_model.c	/^model_t	*loadmodel;$/;"	v
loadname	cmodel.c	/^static char			loadname[32];	\/\/ for hunk tags$/;"	v	file:
loadname	gl_model.c	/^char	loadname[32];	\/\/ for hunk tags$/;"	v
loadname	r_model.c	/^char	loadname[32];	\/\/ for hunk tags$/;"	v
loc	mvd_utils_common.h	/^	vec3_t		loc;		\/\/ where did it happen ?$/;"	m	struct:mvd_event_s
loc_count	teamplay.c	/^static int loc_count = 0;$/;"	v	file:
loc_loaded	match_tools.c	/^int loc_loaded = 0;$/;"	v
local	gl_rsurf.c	/^	int local[2];$/;"	m	struct:dlightinfo_s	file:
local	r_surf.c	/^	int	local[2];$/;"	m	struct:dlightinfo_s	file:
localOrigin	gl_md3.h	/^	vec3_t		localOrigin;$/;"	m	struct:md3Frame_s
localid	cl_main.c	/^cvar_t  localid = {"localid", ""};$/;"	v
localinfo	sv_init.c	/^char localinfo[MAX_LOCALINFO_STRING + 1];	\/\/ local game info$/;"	v
localmodels	sv_init.c	/^char localmodels[MAX_MODELS][5];			\/\/ inline model names for precache$/;"	v
locals	pr_comp.h	/^	int		locals;				\/\/ total ints of parms + locals$/;"	m	struct:__anon250
localstack	pr_exec.c	/^static int	localstack[LOCALSTACK_SIZE];$/;"	v	file:
localstack_used	pr_exec.c	/^static int	localstack_used;$/;"	v	file:
location	mvd_utils.c	/^	vec3_t	location;$/;"	m	struct:kill_s	file:
location	mvd_utils.c	/^	vec3_t location;$/;"	m	struct:death_s	file:
location	mvd_utils.c	/^	vec3_t location;$/;"	m	struct:spawn_s	file:
locdata	teamplay.c	/^static locdata_t *locdata = NULL;$/;"	v	file:
locdata_s	teamplay.h	/^typedef struct locdata_s {$/;"	s
locdata_t	teamplay.h	/^} locdata_t;$/;"	t	typeref:struct:locdata_s
lockcount	vid_win.c	/^static int		lockcount;$/;"	v	file:
locked	cl_cam.c	/^static qbool locked = false;	\/\/ Is the spectator locked to a players view or free flying.$/;"	v	file:
locked_cvar_s	rulesets.c	/^typedef struct locked_cvar_s$/;"	s	file:
locked_cvar_t	rulesets.c	/^} locked_cvar_t;$/;"	t	typeref:struct:locked_cvar_s	file:
lockedtill	server.h	/^ 	double		lockedtill;$/;"	m	struct:client_s
locmacro_s	teamplay.c	/^typedef struct locmacro_s$/;"	s	file:
locmacro_t	teamplay.c	/^} locmacro_t;$/;"	t	typeref:struct:locmacro_s	file:
locmacros	teamplay.c	/^static locmacro_t locmacros[] = {$/;"	v	file:
log	server.h	/^	sizebuf_t	log[2];$/;"	m	struct:__anon269
log_buf	server.h	/^	byte		log_buf[2][MAX_DATAGRAM];$/;"	m	struct:__anon269
log_dir	logging.c	/^cvar_t		log_dir			= {"log_dir", "", 0, OnChange_log_dir};$/;"	v
log_fp	tr_types.h	/^	FILE *log_fp;$/;"	m	struct:__anon287
log_readable	logging.c	/^cvar_t		log_readable	= {"log_readable", "1"};$/;"	v
logfile	logging.c	/^static FILE		*logfile;				$/;"	v	file:
logfilename	logging.c	/^static char		logfilename[LOG_FILENAME_MAXSIZE];$/;"	v	file:
logsequence	server.h	/^	int			logsequence;	\/\/ the message currently being filled$/;"	m	struct:__anon269
logtime	server.h	/^	double		logtime;		\/\/ time of last swap$/;"	m	struct:__anon269
longest_name	stats_grid.h	/^	int				longest_name;$/;"	m	struct:__anon283
lookahead	parser.c	/^    int lookahead;				\/\/ next token in the string$/;"	m	struct:__anon53	file:
lookat_pos	mvd_cam.c	/^vec3_t	lookat_pos;$/;"	v
lookspring	cl_input.c	/^cvar_t	lookspring = {"lookspring","0",CVAR_ARCHIVE};$/;"	v
lookstrafe	cl_input.c	/^cvar_t	lookstrafe = {"lookstrafe","0",CVAR_ARCHIVE};$/;"	v
loopback_t	net.c	/^} loopback_t;$/;"	t	typeref:struct:__anon52	file:
loopbacks	net.c	/^loopback_t	loopbacks[2];$/;"	v
looping	qsound.h	/^	int		looping;		\/\/ where to loop, -1 = no looping$/;"	m	struct:channel_s
loopmsg_t	net.c	/^} loopmsg_t;$/;"	t	typeref:struct:__anon51	file:
loopstart	qsound.h	/^	int		loopstart;$/;"	m	struct:wavinfo_s
loopstart	qsound.h	/^	int 		loopstart;$/;"	m	struct:sfxcache_s
los	vx_coronas.c	/^	qbool los; \/\/to prevent having to trace a line twice$/;"	m	struct:__anon89	file:
lossage	server.h	/^	int			lossage;			\/\/ loss percentage$/;"	m	struct:client_s
lost	mvd_utils_common.h	/^	int lost ;$/;"	m	struct:mvd_pw_s
lost	mvd_utils_common.h	/^	int lost;$/;"	m	struct:items_s
lost_delta	client.h	/^    float lost_delta;$/;"	m	struct:net_stat_result_s
lost_lost	client.h	/^    float lost_lost;$/;"	m	struct:net_stat_result_s
lost_netlimit	client.h	/^    float lost_netlimit;$/;"	m	struct:net_stat_result_s
lost_rate	client.h	/^    float lost_rate;$/;"	m	struct:net_stat_result_s
lowresmodes	vid_wgl.c	/^lmode_t	lowresmodes[] = {$/;"	v
lowresmodes	vid_win.c	/^lmode_t	lowresmodes[] = {$/;"	v
lpData	snd_win.c	/^HPSTR		lpData, lpData2;$/;"	v
lpData2	snd_win.c	/^HPSTR		lpData, lpData2;$/;"	v
lpMTexFUNC	gl_local.h	/^typedef void (APIENTRY *lpMTexFUNC) (GLenum, GLfloat, GLfloat);$/;"	t
lpSelTexFUNC	gl_local.h	/^typedef void (APIENTRY *lpSelTexFUNC) (GLenum);$/;"	t
lpWaveHdr	snd_win.c	/^LPWAVEHDR	lpWaveHdr;$/;"	v
lru_next	zone.c	/^	struct cache_system_s	*lru_prev, *lru_next; \/\/ for LRU flushing$/;"	m	struct:cache_system_s	typeref:struct:cache_system_s::	file:
lru_prev	zone.c	/^	struct cache_system_s	*lru_prev, *lru_next; \/\/ for LRU flushing$/;"	m	struct:cache_system_s	typeref:struct:cache_system_s::cache_system_s	file:
lt_blue	client.h	/^	lt_red, lt_blue, lt_redblue, lt_green, lt_redgreen, lt_bluegreen,$/;"	e	enum:__anon117
lt_bluegreen	client.h	/^	lt_red, lt_blue, lt_redblue, lt_green, lt_redgreen, lt_bluegreen,$/;"	e	enum:__anon117
lt_custom	client.h	/^	lt_white, lt_custom, NUM_DLIGHTTYPES } dlighttype_t;$/;"	e	enum:__anon117
lt_default	client.h	/^typedef enum {lt_default, lt_muzzleflash, lt_explosion, lt_rocket,$/;"	e	enum:__anon117
lt_explosion	client.h	/^typedef enum {lt_default, lt_muzzleflash, lt_explosion, lt_rocket,$/;"	e	enum:__anon117
lt_green	client.h	/^	lt_red, lt_blue, lt_redblue, lt_green, lt_redgreen, lt_bluegreen,$/;"	e	enum:__anon117
lt_muzzleflash	client.h	/^typedef enum {lt_default, lt_muzzleflash, lt_explosion, lt_rocket,$/;"	e	enum:__anon117
lt_red	client.h	/^	lt_red, lt_blue, lt_redblue, lt_green, lt_redgreen, lt_bluegreen,$/;"	e	enum:__anon117
lt_redblue	client.h	/^	lt_red, lt_blue, lt_redblue, lt_green, lt_redgreen, lt_bluegreen,$/;"	e	enum:__anon117
lt_redgreen	client.h	/^	lt_red, lt_blue, lt_redblue, lt_green, lt_redgreen, lt_bluegreen,$/;"	e	enum:__anon117
lt_rocket	client.h	/^typedef enum {lt_default, lt_muzzleflash, lt_explosion, lt_rocket,$/;"	e	enum:__anon117
lt_white	client.h	/^	lt_white, lt_custom, NUM_DLIGHTTYPES } dlighttype_t;$/;"	e	enum:__anon117
ltime	progdefs.h	/^	float	ltime;$/;"	m	struct:__anon253
lua_functions	lua.c	/^struct lib_functions lua_functions[] =$/;"	v	typeref:struct:lib_functions
luma_chain	gl_model.h	/^	struct	glpoly_s	*luma_chain;				\/\/next luma poly in chain$/;"	m	struct:glpoly_s	typeref:struct:glpoly_s::glpoly_s
luma_polys	gl_rsurf.c	/^glpoly_t *luma_polys[MAX_GLTEXTURES];$/;"	v
lump_t	bspfile.h	/^} lump_t;$/;"	t	typeref:struct:__anon98
lumpinfo_t	wad.h	/^} lumpinfo_t;$/;"	t	typeref:struct:__anon299
lumps	bspfile.h	/^	lump_t		lumps[HEADER_LUMPS];$/;"	m	struct:__anon100
lw	hud.h	/^    int lx, ly, lw, lh;					\/\/ Last position.$/;"	m	struct:hud_s
lwf	mvd_utils.c	/^	int		lwf ;$/;"	m	struct:kill_s	file:
lwf	mvd_utils_common.h	/^	int lwf;						\/\/ last weapon fired$/;"	m	struct:mvd_new_info_s
lx	hud.h	/^    int lx, ly, lw, lh;					\/\/ Last position.$/;"	m	struct:hud_s
lx	new_menu.c	/^	int		lx;$/;"	m	struct:menu_ct	file:
lx	new_menu.c	/^	int		lx;$/;"	m	struct:menu_s	file:
ly	hud.h	/^    int lx, ly, lw, lh;					\/\/ Last position.$/;"	m	struct:hud_s
ly	new_menu.c	/^	int		ly;$/;"	m	struct:menu_ct	file:
ly	new_menu.c	/^	int		ly;$/;"	m	struct:menu_s	file:
m3by3_t	gl_md3.c	/^typedef float m3by3_t[3][3];$/;"	t	file:
m_accel	cl_input.c	/^cvar_t	m_accel = {"m_accel", "0", CVAR_ARCHIVE};$/;"	v
m_audio_frame_counter	movie_avi.c	/^int		m_audio_frame_counter;$/;"	v
m_audio_is_mp3	movie_avi.c	/^qbool	m_audio_is_mp3;$/;"	v
m_audio_stream	movie_avi.c	/^PAVISTREAM	m_audio_stream;$/;"	v
m_codec_fourcc	movie_avi.c	/^unsigned long	m_codec_fourcc;$/;"	v
m_compressed_video_stream	movie_avi.c	/^PAVISTREAM	m_compressed_video_stream;$/;"	v
m_demos	menu.h	/^	m_multiplayer, m_demos, m_multiplayer_submenu,$/;"	e	enum:__anon180
m_entersound	menu.c	/^qbool    m_entersound;          \/\/ play after drawing a frame, so caching$/;"	v
m_event	in_win.c	/^HANDLE m_event;$/;"	v
m_file	movie_avi.c	/^PAVIFILE	m_file;$/;"	v
m_filenames	menu.c	/^char    m_filenames[MAX_SAVEGAMES][SAVEGAME_COMMENT_LENGTH + 1];$/;"	v
m_filter	in_linux.c	/^cvar_t	m_filter        = {"m_filter",       "0", CVAR_SILENT};$/;"	v
m_filter	in_mac.c	/^cvar_t m_filter = {"m_filter","0", true};$/;"	v
m_filter	in_win.c	/^cvar_t	m_filter = {"m_filter", "0", CVAR_ARCHIVE | CVAR_SILENT};$/;"	v
m_forward	cl_input.c	/^cvar_t	m_forward = {"m_forward","1"};$/;"	v
m_help	menu.h	/^	m_help,$/;"	e	enum:__anon180
m_history_x	in_win.c	/^msnap_t	 m_history_x[M_HIST_SIZE];	\/\/ history$/;"	v
m_history_x_rseq	in_win.c	/^int		 m_history_x_rseq =	0;		\/\/ read	sequence$/;"	v
m_history_x_wseq	in_win.c	/^int		 m_history_x_wseq =	0;		\/\/ write sequence$/;"	v
m_history_y	in_win.c	/^msnap_t	 m_history_y[M_HIST_SIZE];$/;"	v
m_history_y_rseq	in_win.c	/^int		 m_history_y_rseq =	0;$/;"	v
m_history_y_wseq	in_win.c	/^int		 m_history_y_wseq =	0;$/;"	v
m_ingame	menu.h	/^	m_quit, m_ingame, $/;"	e	enum:__anon180
m_int	mgraph.h	/^typedef	long			m_int;$/;"	t
m_int	mgraph.h	/^typedef int				m_int;$/;"	t
m_load	menu.h	/^    m_none, m_main, m_proxy, m_singleplayer, m_load, m_save,$/;"	e	enum:__anon180
m_main	menu.h	/^    m_none, m_main, m_proxy, m_singleplayer, m_load, m_save,$/;"	e	enum:__anon180
m_main_cursor	menu.c	/^int    m_main_cursor;$/;"	v
m_main_window	menu.c	/^menu_window_t m_main_window;$/;"	v
m_mp3_control	menu.h	/^    m_mp3_control, m_mp3_playlist$/;"	e	enum:__anon180
m_mp3_playlist	menu.h	/^    m_mp3_control, m_mp3_playlist$/;"	e	enum:__anon180
m_multiplayer	menu.h	/^	m_multiplayer, m_demos, m_multiplayer_submenu,$/;"	e	enum:__anon180
m_multiplayer_cursor	menu.c	/^int    m_multiplayer_cursor;$/;"	v
m_multiplayer_submenu	menu.h	/^	m_multiplayer, m_demos, m_multiplayer_submenu,$/;"	e	enum:__anon180
m_multiplayer_window	menu.c	/^menu_window_t m_multiplayer_window;$/;"	v
m_none	menu.h	/^    m_none, m_main, m_proxy, m_singleplayer, m_load, m_save,$/;"	e	enum:__anon180
m_options	menu.h	/^    m_options,$/;"	e	enum:__anon180
m_pitch	cl_input.c	/^cvar_t	m_pitch = {"m_pitch","0.022", CVAR_ARCHIVE};$/;"	v
m_proxy	menu.h	/^    m_none, m_main, m_proxy, m_singleplayer, m_load, m_save,$/;"	e	enum:__anon180
m_quit	menu.h	/^	m_quit, m_ingame, $/;"	e	enum:__anon180
m_quit_prevstate	menu.c	/^int        m_quit_prevstate;$/;"	v
m_rate	in_win.c	/^cvar_t	m_rate				= {"m_rate",	         "125", CVAR_SILENT};$/;"	v
m_recursiveDraw	menu.c	/^qbool    m_recursiveDraw;$/;"	v
m_save	menu.h	/^    m_none, m_main, m_proxy, m_singleplayer, m_load, m_save,$/;"	e	enum:__anon180
m_showrate	in_win.c	/^cvar_t	m_showrate			= {"m_showrate",         "0",   CVAR_SILENT};$/;"	v
m_side	cl_input.c	/^cvar_t	m_side = {"m_side","0.8"};$/;"	v
m_singleplayer	menu.h	/^    m_none, m_main, m_proxy, m_singleplayer, m_load, m_save,$/;"	e	enum:__anon180
m_singleplayer_big	menu.c	/^static qbool m_singleplayer_big = false;$/;"	v	file:
m_singleplayer_confirm	menu.c	/^qbool m_singleplayer_confirm;$/;"	v
m_singleplayer_cursor	menu.c	/^int    m_singleplayer_cursor;$/;"	v
m_singleplayer_items	menu.c	/^static bigmenu_items_t m_singleplayer_items[] = {$/;"	v	file:
m_singleplayer_notavail	menu.c	/^qbool m_singleplayer_notavail;$/;"	v
m_singleplayer_window	menu.c	/^menu_window_t m_singleplayer_window;$/;"	v
m_start	mvd_cam.h	/^	double m_start;$/;"	m	struct:c_curve_s
m_state	menu.c	/^m_state_t m_state;$/;"	v
m_state_t	menu.h	/^} m_state_t;$/;"	t	typeref:enum:__anon180
m_stop	mvd_cam.h	/^	double m_stop;$/;"	m	struct:c_curve_s
m_topmenu	menu.c	/^int            m_topmenu;       \/\/ set if a submenu was entered via a$/;"	v
m_uint	mgraph.h	/^typedef	unsigned int	m_uint;$/;"	t
m_uint	mgraph.h	/^typedef unsigned long	m_uint;$/;"	t
m_uncompressed_video_stream	movie_avi.c	/^PAVISTREAM	m_uncompressed_video_stream;$/;"	v
m_video_frame_counter	movie_avi.c	/^int		m_video_frame_counter;$/;"	v
m_video_frame_size	movie_avi.c	/^int		m_video_frame_size;$/;"	v
m_wave_format	movie_avi.c	/^WAVEFORMATEX	m_wave_format;$/;"	v
m_yaw	cl_input.c	/^cvar_t	m_yaw = {"m_yaw","0.022", CVAR_ARCHIVE};$/;"	v
m_yofs	menu.c	/^int        m_yofs = 0;$/;"	v
macPrefs	mac_prefs.c	/^prefs_t macPrefs;$/;"	v
mac_h	mac.h	22;"	d
mac_prefs_h	mac_prefs.h	22;"	d
macro	teamplay.c	/^	char *macro;$/;"	m	struct:locmacro_s	file:
macro_buf	teamplay.c	/^static char	macro_buf[MAX_MACRO_VALUE] = "";$/;"	v	file:
macro_command_t	cmd.h	/^} macro_command_t;$/;"	t	typeref:struct:__anon129
macro_commands	cmd.c	/^static macro_command_t macro_commands[MAX_MACROS];$/;"	v	file:
macro_count	cmd.c	/^static int macro_count = 0;$/;"	v	file:
magic	CarbonSndPlayDB.c	/^		OSType						magic;$/;"	m	struct:PerChanInfo	file:
magic	vfs_tar.h	/^  char magic[6];                \/* 257 *\/$/;"	m	struct:tar_header
main	progdefs.h	/^	func_t	main;$/;"	m	struct:__anon252
main	sv_sys_unix.c	/^int main (int argc, char *argv[])$/;"	f
main	sv_sys_win.c	/^int main (int argc, char **argv)$/;"	f
main	sys_lib_linux.c	/^int main (void)$/;"	f
main	sys_lib_win.c	/^int main (void)$/;"	f
main	sys_linux.c	/^int main (int argc, char **argv) {$/;"	f
main	sys_mac.c	/^int main (int argc, char *argv[])$/;"	f
main_fb	gl_framebuffer.c	/^fb_t	main_fb; \/\/ The main framebuffer that can be used generally to draw things offscreen.$/;"	v
main_thread	thread_linux.c	/^static pthread_t main_thread;$/;"	v	file:
maindc	vid_wgl.c	/^HDC		maindc;$/;"	v
mainmenu	mosdm.c	/^mvd_menu_t	mainmenu;$/;"	v
mainmenu_items	menu.c	/^bigmenu_items_t mainmenu_items[] = {$/;"	v
mainwindow	vid_wgl.c	/^HWND		mainwindow, dibwindow = NULL;$/;"	v
mainwindow	vid_win.c	/^HWND		mainwindow;$/;"	v
mainwindow	win_wndproc.c	/^HWND		mainwindow;$/;"	v
makeclippededge	r_bsp.c	/^static qbool		makeclippededge;$/;"	v	file:
makeleftedge	r_rast.c	/^static qbool	makeleftedge, makerightedge;$/;"	v	file:
makerightedge	r_rast.c	/^static qbool	makeleftedge, makerightedge;$/;"	v	file:
maliasframedesc_s	gl_model.h	/^typedef struct maliasframedesc_s {$/;"	s
maliasframedesc_s	r_model.h	/^typedef struct maliasframedesc_s {$/;"	s
maliasframedesc_t	gl_model.h	/^} maliasframedesc_t;$/;"	t	typeref:struct:maliasframedesc_s
maliasframedesc_t	r_model.h	/^} maliasframedesc_t;$/;"	t	typeref:struct:maliasframedesc_s
maliasgroup_s	gl_model.h	/^typedef struct maliasgroup_s {$/;"	s
maliasgroup_s	r_model.h	/^typedef struct maliasgroup_s {$/;"	s
maliasgroup_t	gl_model.h	/^} maliasgroup_t;$/;"	t	typeref:struct:maliasgroup_s
maliasgroup_t	r_model.h	/^} maliasgroup_t;$/;"	t	typeref:struct:maliasgroup_s
maliasgroupframedesc_s	gl_model.h	/^typedef struct maliasgroupframedesc_s {$/;"	s
maliasgroupframedesc_s	r_model.h	/^typedef struct maliasgroupframedesc_s {$/;"	s
maliasgroupframedesc_t	gl_model.h	/^} maliasgroupframedesc_t;$/;"	t	typeref:struct:maliasgroupframedesc_s
maliasgroupframedesc_t	r_model.h	/^} maliasgroupframedesc_t;$/;"	t	typeref:struct:maliasgroupframedesc_s
maliasskindesc_t	r_model.h	/^} maliasskindesc_t;$/;"	t	typeref:struct:__anon259
maliasskingroup_s	r_model.h	/^typedef struct maliasskingroup_s {$/;"	s
maliasskingroup_t	r_model.h	/^} maliasskingroup_t;$/;"	t	typeref:struct:maliasskingroup_s
malloc	snd_mac.c	86;"	d	file:
manufacturer	image.c	/^    char			manufacturer;$/;"	m	struct:pcx_s	file:
map	EX_browser.h	/^    char map [COL_MAP + 1];$/;"	m	struct:column_s
map	client.h	/^	char	map[MAX_STYLESTRING];$/;"	m	struct:__anon119
map_checksum	cmodel.c	/^static unsigned int	map_checksum, map_checksum2;$/;"	v	file:
map_checksum	server.h	/^	unsigned	map_checksum;$/;"	m	struct:__anon264
map_checksum2	client.h	/^	unsigned	map_checksum2;$/;"	m	struct:__anon125
map_checksum2	cmodel.c	/^static unsigned int	map_checksum, map_checksum2;$/;"	v	file:
map_checksum2	server.h	/^	unsigned	map_checksum2;$/;"	m	struct:__anon264
map_clipnodes	cmodel.c	/^static dclipnode_t	*map_clipnodes;$/;"	v	file:
map_cmodels	cmodel.c	/^static cmodel_t		map_cmodels[MAX_MAP_MODELS];$/;"	v	file:
map_entitystring	cmodel.c	/^static char			*map_entitystring;$/;"	v	file:
map_halflife	cmodel.c	/^static qbool		map_halflife;$/;"	v	file:
map_height_diff	hud_common.c	/^static float map_height_diff = 0.0;$/;"	v	file:
map_leafs	cmodel.c	/^static cleaf_t		*map_leafs;$/;"	v	file:
map_name	cmodel.c	/^static char			map_name[MAX_QPATH];$/;"	v	file:
map_nodes	cmodel.c	/^static cnode_t		*map_nodes;$/;"	v	file:
map_novis	cmodel.c	/^static byte			map_novis[MAX_MAP_LEAFS\/8];$/;"	v	file:
map_phs	cmodel.c	/^static byte			*map_phs;					\/\/ only valid if we are the server$/;"	v	file:
map_planes	cmodel.c	/^static mplane_t		*map_planes;$/;"	v	file:
map_pvs	cmodel.c	/^static byte			*map_pvs;					\/\/ fully expanded and decompressed$/;"	v	file:
map_vis_rowbytes	cmodel.c	/^static int			map_vis_rowbytes;			\/\/ for both pvs and phs$/;"	v	file:
map_vis_rowlongs	cmodel.c	/^static int			map_vis_rowlongs;			\/\/ map_vis_rowbytes \/ 4$/;"	v	file:
map_x_intercept	hud_common.c	/^static float map_x_intercept;$/;"	v	file:
map_x_slope	hud_common.c	/^static float map_x_slope;$/;"	v	file:
map_y_intercept	hud_common.c	/^static float map_y_intercept;$/;"	v	file:
map_y_slope	hud_common.c	/^static float map_y_slope;$/;"	v	file:
mapgroup_s	match_tools.c	/^typedef struct mapgroup_s {$/;"	s	file:
mapgroup_t	match_tools.c	/^} mapgroup_t;$/;"	t	typeref:struct:mapgroup_s	file:
mapgroups	match_tools.c	/^static mapgroup_t *mapgroups = NULL;	$/;"	v	file:
mapgroups_init	match_tools.c	/^static qbool mapgroups_init = false;	$/;"	v	file:
mapname	match_tools.c	/^	char mapname[MAX_OSPATH];$/;"	m	struct:matchinfo_s	file:
mapname	mvd_utils.c	/^	char mapname[1024];$/;"	m	struct:mvd_gameinfo_s	file:
mapname	mvd_utils_common.h	/^	char mapname[1024];$/;"	m	struct:mvd_cg_info_s
mapname	progdefs.h	/^	string_t	mapname;$/;"	m	struct:__anon252
mapname	server.h	/^	char		mapname[64];					\/\/ map name$/;"	m	struct:__anon264
maps_b_bh100_bsp_FMOD_DM_FMOD_TF	fmod.c	/^static const int maps_b_bh100_bsp_FMOD_DM_FMOD_TF[5]			= {0x65e7e302, 0x94a85b4d, 0x8092e674, 0xf700e5f0, 0xde667fcc};$/;"	v	file:
marked	settings.h	/^	int marked;			\/\/ currently selected element in settings$/;"	m	struct:__anon273
markerColor	mgraph.h	/^	color_t			markerColor;	\/* Color to draw markers in			*\/$/;"	m	struct:__anon216
markerSize	mgraph.h	/^	m_int			markerSize;		\/* Size of markers in pixels		*\/$/;"	m	struct:__anon216
markerStyle	mgraph.h	/^	m_int			markerStyle;	\/* Style of markers					*\/$/;"	m	struct:__anon216
marksurfaces	gl_model.h	/^	msurface_t			**marksurfaces;$/;"	m	struct:model_s
marksurfaces	r_model.h	/^	msurface_t			**marksurfaces;$/;"	m	struct:model_s
mask	sv_main.c	/^	unsigned	mask;$/;"	m	struct:__anon64	file:
master_adr	sv_master.c	/^static netadr_t	master_adr[MAX_MASTERS];$/;"	v	file:
master_vol	qsound.h	/^	int		master_vol;		\/\/ 0-255 master volume$/;"	m	struct:channel_s
match_auto_logconsole	match_tools.c	/^cvar_t match_auto_logconsole = {"match_auto_logconsole", "1"};$/;"	v
match_auto_minlength	match_tools.c	/^cvar_t match_auto_minlength = {"match_auto_minlength", "30"};$/;"	v
match_auto_record	match_tools.c	/^cvar_t match_auto_record = {"match_auto_record", "0"};$/;"	v
match_auto_spectating	match_tools.c	/^cvar_t match_auto_spectating = {"match_auto_spectating", "0"};$/;"	v
match_auto_sshot	match_tools.c	/^cvar_t match_auto_sshot = {"match_auto_sshot", "0"};$/;"	v
match_format_2on2	match_tools.c	/^cvar_t match_format_2on2 = {"match_format_2on2", "2on2\/%n - [%k%v%l] - [%M]"};$/;"	v
match_format_3on3	match_tools.c	/^cvar_t match_format_3on3 = {"match_format_3on3", "tdm\/%n - [%Oon%E_%t%v%e] - [%M]"};$/;"	v
match_format_4on4	match_tools.c	/^cvar_t match_format_4on4 = {"match_format_4on4", "tdm\/%n - [%Oon%E_%t%v%e] - [%M]"};$/;"	v
match_format_arena	match_tools.c	/^cvar_t match_format_arena = {"match_format_arena", "arena\/%n - %p%v%e - [%F_frags] - [%M]"};$/;"	v
match_format_coop	match_tools.c	/^cvar_t match_format_coop = {"match_format_coop", "coop\/%n - [%C_player_coop] - [%M]"};$/;"	v
match_format_duel	match_tools.c	/^cvar_t match_format_duel = {"match_format_duel", "duel\/%n - %p%v%e - [dmm%D] - [%M]"};$/;"	v
match_format_ffa	match_tools.c	/^cvar_t match_format_ffa = {"match_format_ffa", "ffa\/%n - [%C_player_ffa] - [%M]"};$/;"	v
match_format_multiteam	match_tools.c	/^cvar_t match_format_multiteam = {"match_format_multiteam", "tdm\/%n - [%a_%b] - [%M]"};$/;"	v
match_format_race	match_tools.c	/^cvar_t match_format_race = {"match_format_race", "race\/%n - [race] - [%M]"};$/;"	v
match_format_solo	match_tools.c	/^cvar_t match_format_solo = {"match_format_solo", "solo\/%n - [%M]"};$/;"	v
match_format_tdm	match_tools.c	/^cvar_t match_format_tdm = {"match_format_tdm", "tdm\/%n - [%Oon%E_%t%v%e] - [%M]"};$/;"	v
match_format_tf_clanwar	match_tools.c	/^cvar_t match_format_tf_clanwar = {"match_format_tf_clanwar", "tfwar\/%n - [%Oon%E_%t%v%e] - [%M]"};$/;"	v
match_format_tf_duel	match_tools.c	/^cvar_t match_format_tf_duel = {"match_format_tf_duel", "tfduel\/%n - %p%v%e [%M]"};$/;"	v
match_name_and	match_tools.c	/^cvar_t match_name_and = {"match_name_and", "_&_"};			$/;"	v
match_name_nick	match_tools.c	/^cvar_t match_name_nick = {"match_name_nick", ""};			$/;"	v
match_name_on	match_tools.c	/^cvar_t match_name_on = {"match_name_on", "on"};				$/;"	v
match_name_spec	match_tools.c	/^cvar_t match_name_spec = {"match_name_spec", "(SPEC)"};		$/;"	v
match_name_versus	match_tools.c	/^cvar_t match_name_versus = {"match_name_versus", "_vs_"};	$/;"	v
matchcvar_s	match_tools.c	/^typedef struct matchcvar_s {$/;"	s	file:
matchcvar_t	match_tools.c	/^} matchcvar_t;$/;"	t	typeref:struct:matchcvar_s	file:
matchcvars	match_tools.c	/^static matchcvar_t matchcvars[mt_numtypes] = {$/;"	v	file:
matchinfo_s	match_tools.c	/^typedef struct matchinfo_s {$/;"	s	file:
matchinfo_t	match_tools.c	/^} matchinfo_t;$/;"	t	typeref:struct:matchinfo_s	file:
matchname	match_tools.c	/^	char matchname[2 * MAX_OSPATH];$/;"	m	struct:mt_matchtstate_s	file:
matchstate	match_tools.c	/^static mt_matchstate_t matchstate;$/;"	v	file:
matchtype	match_tools.c	/^	matchtype_t matchtype;$/;"	m	struct:matchcvar_s	file:
matchtype	match_tools.c	/^	matchtype_t matchtype;$/;"	m	struct:matchinfo_s	file:
matchtype	match_tools.c	/^	matchtype_t matchtype;$/;"	m	struct:mt_matchtstate_s	file:
matchtype_t	match_tools.c	/^} matchtype_t;$/;"	t	typeref:enum:__anon42	file:
max	Ctrl_EditBox.h	/^	unsigned int max;$/;"	m	struct:CEditBox_s
max	client.h	/^	int			max;$/;"	m	struct:visentlist_s
max	mvd_cam.h	/^	double						max;$/;"	m	struct:mvd_menu_s
max	q_shared.h	74;"	d
max	settings.h	/^	float max;			\/\/ maximal value; required for num, named$/;"	m	struct:__anon272
maxColor	mgraph.h	/^	color_t	maxColor;		\/* Maximum number of colors - 1				*\/$/;"	m	struct:__anon217
maxKern	mgraph.h	/^	short			maxKern;		\/* Maximum character kern			*\/$/;"	m	struct:__anon213
maxPage	mgraph.h	/^	m_int	maxPage;		\/* Maximum number of video pages - 1		*\/$/;"	m	struct:__anon217
maxTextureSize	tr_types.h	/^	int						maxTextureSize;			\/\/ queried from GL$/;"	m	struct:__anon286
maxTrack	cd_linux.c	/^static byte		maxTrack;$/;"	v	file:
maxTrack	cd_win.c	/^static byte		maxTrack;$/;"	v	file:
maxWidth	mgraph.h	/^	short			maxWidth;		\/* Maximum character width			*\/$/;"	m	struct:__anon213
max_active_tracks	vx_tracker.c	/^static int max_active_tracks = 0;$/;"	v	file:
max_cameras	mvd_cam.h	3;"	d
max_fbskins	render.h	/^	float			max_fbskins;	\/\/ max player skin brightness 0..1$/;"	m	struct:__anon257
max_health	progdefs.h	/^	float	max_health;$/;"	m	struct:__anon253
max_mvd_cams	mvd_cam.h	4;"	d
max_mvd_resolutions	mvd_cam.h	5;"	d
max_ping	hud_common.c	/^    int  max_ping;$/;"	m	struct:sort_teams_info_s	file:
max_span_p	r_edge.c	/^espan_t	*span_p, *max_span_p;$/;"	v
max_submenus	mvd_cam.h	6;"	d
max_tokens	pr_cmds.c	/^static int max_tokens, num_tokens = 0;$/;"	v	file:
max_value	ez_slider.h	/^	int						max_value;			\/\/ The max value allowed for the slider.$/;"	m	struct:ez_slider_s
max_watervis	render.h	/^	float			max_watervis;	\/\/ how much water transparency we allow: 0..1 (reverse of alpha)$/;"	m	struct:__anon257
maxarrays	zone2.h	/^	size_t maxarrays;$/;"	m	struct:memexpandablearray_s
maxclients	sv_main.c	/^cvar_t	maxclients = {"maxclients","8",CVAR_SERVERINFO, OnChange_maxclients};$/;"	v
maxfps	client.h	/^	float		maxfps;$/;"	m	struct:__anon125
maxfps	rulesets.c	/^	float maxfps;$/;"	m	struct:rulesetDef_s	file:
maxheight	gl_model.h	/^	int					maxheight;$/;"	m	struct:msprite2_s
maxheight	gl_model.h	/^	int					maxheight;$/;"	m	struct:msprite_s
maxheight	r_model.h	/^	int					maxheight;$/;"	m	struct:msprite_s
maximize	gl_texture.c	/^	int	minimize, maximize;$/;"	m	struct:__anon29	file:
maxindex	d_sprite.c	/^static int		minindex, maxindex;$/;"	v	file:
maxlen	image.c	/^	int maxlen;$/;"	m	struct:__anon34	file:
maxmenu	mvd_cam.h	/^	int						maxmenu;$/;"	m	struct:mvd_menu_s
maxpitch	client.h	/^	float		maxpitch;$/;"	m	struct:__anon125
maxrulesetvalue	cvar.h	/^	float	maxrulesetvalue;$/;"	m	struct:cvar_s
maxrulesetvalue	rulesets.c	/^	char *maxrulesetvalue;$/;"	m	struct:limited_cvar_max_s	file:
maxs	bspfile.h	/^	float		mins[3], maxs[3];$/;"	m	struct:__anon99
maxs	bspfile.h	/^	short		maxs[3];$/;"	m	struct:__anon104
maxs	bspfile.h	/^	short		maxs[3];$/;"	m	struct:__anon108
maxs	cmodel.h	/^	vec3_t	mins, maxs;$/;"	m	struct:__anon135
maxs	gl_model.h	/^	vec3_t				mins, maxs;$/;"	m	struct:model_s
maxs	pmove.h	/^	vec3_t		mins, maxs;	\/\/ only for non-bsp models$/;"	m	struct:__anon243
maxs	progdefs.h	/^	vec3_t	maxs;$/;"	m	struct:__anon253
maxs	r_model.h	/^	vec3_t				mins, maxs;$/;"	m	struct:model_s
maxs	sv_world.c	/^	float		*mins, *maxs; \/\/ size of the moving object$/;"	m	struct:__anon66	file:
maxs2	sv_world.c	/^	vec3_t		mins2, maxs2; \/\/ size when clipping against mosnters$/;"	m	struct:__anon66	file:
maxsize	cmd.h	/^	int		maxsize;$/;"	m	struct:cbuf_s
maxsize	console.h	/^	int		maxsize;$/;"	m	struct:__anon136
maxsize	q_shared.h	/^	int		maxsize;$/;"	m	struct:sizebuf_s
maxspectators	sv_main.c	/^cvar_t	maxspectators = {"maxspectators","8",CVAR_SERVERINFO, OnChange_maxclients};$/;"	v
maxspeed	client.h	/^	float		maxspeed;$/;"	m	struct:__anon125
maxspeed	pmove.h	/^	float	maxspeed;$/;"	m	struct:__anon246
maxspeed	server.h	/^	float		maxspeed;			\/\/ localized maxspeed$/;"	m	struct:client_s
maxteamsize	match_tools.c	/^	int maxteamsize;$/;"	m	struct:matchinfo_s	file:
maxwidth	gl_model.h	/^	int					maxwidth;$/;"	m	struct:msprite2_s
maxwidth	gl_model.h	/^	int					maxwidth;$/;"	m	struct:msprite_s
maxwidth	r_model.h	/^	int					maxwidth;$/;"	m	struct:msprite_s
maybe_transliterate	textencoding.c	/^wchar *maybe_transliterate (wchar *src)$/;"	f
md3Frame_s	gl_md3.h	/^typedef struct md3Frame_s {$/;"	s
md3Frame_t	gl_md3.h	/^} md3Frame_t;$/;"	t	typeref:struct:md3Frame_s
md3Header_t	gl_md3.h	/^} md3Header_t;$/;"	t	typeref:struct:__anon154
md3Shader_t	gl_md3.h	/^} md3Shader_t;$/;"	t	typeref:struct:__anon159
md3St_t	gl_md3.h	/^} md3St_t;$/;"	t	typeref:struct:__anon158
md3Surface_t	gl_md3.h	/^} md3Surface_t;$/;"	t	typeref:struct:__anon155
md3Triangle_t	gl_md3.h	/^} md3Triangle_t;$/;"	t	typeref:struct:__anon157
md3XyzNormal_t	gl_md3.h	/^} md3XyzNormal_t;$/;"	t	typeref:struct:__anon156
md3model	gl_md3.h	/^	int md3model;	\/\/ofs md3Header_t$/;"	m	struct:__anon162
md3model_t	gl_md3.h	/^} md3model_t;$/;"	t	typeref:struct:__anon162
md3tag_t	gl_md3.h	/^} md3tag_t;$/;"	t	typeref:struct:__anon160
md4	gl_model.c	/^	int md4;$/;"	m	struct:__anon22	file:
mdl_t	modelgen.h	/^} mdl_t;$/;"	t	typeref:struct:__anon224
mdlhash_debug_armor	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_armor = { {0x8d264ffc, 0xfabb1e7c, 0xc81128bc, 0x21633d32, 0xfa0b594f}, NULL };$/;"	v	file:
mdlhash_debug_backpack	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_backpack = { {0xe7c1f382, 0x0c3dc22e, 0xd31a04c0, 0x7251ed52, 0x45baf223}, NULL };$/;"	v	file:
mdlhash_debug_flame	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_flame = { {0xcfd8e629, 0x143a35a7, 0x4781ad82, 0x4254f247, 0xe07cd565}, NULL };$/;"	v	file:
mdlhash_debug_g_light	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_g_light = { {0x9d78b478, 0xfb44c849, 0xc56b6d9d, 0xab737839, 0x1fcfd848}, NULL };$/;"	v	file:
mdlhash_debug_g_nail	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_g_nail = { {0xc6619f5d, 0x55511a85, 0x6de0cc63, 0xef61171a, 0x36b1b173}, NULL };$/;"	v	file:
mdlhash_debug_g_nail2	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_g_nail2 = { {0x9cd58369, 0xe54c8527, 0xcea234b4, 0x472bd93e, 0x7dfa8655}, NULL };$/;"	v	file:
mdlhash_debug_g_rock	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_g_rock = { {0x334e9253, 0xa5a5a252, 0x68b9a856, 0x5e226647, 0xe4baeec7}, NULL };$/;"	v	file:
mdlhash_debug_g_rock2	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_g_rock2 = { {0xe24e10f9, 0x0f53bc41, 0x6043ee2b, 0x3d577eec, 0xbc75124c}, NULL };$/;"	v	file:
mdlhash_debug_g_shot	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_g_shot = { {0x7bbba828, 0x99438f98, 0x975e3747, 0x6cbc8a2b, 0xd3a64db7}, NULL };$/;"	v	file:
mdlhash_debug_gib1	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_gib1 = { {0x69ee06fd, 0x8bac8483, 0xf9c5a43e, 0xd7513722, 0x55d5a4ff}, NULL };$/;"	v	file:
mdlhash_debug_gib2	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_gib2 = { {0x3251a1df, 0x50e68208, 0xeff0f797, 0x89894e71, 0x65505be3}, NULL };$/;"	v	file:
mdlhash_debug_gib3	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_gib3 = { {0x798f0b46, 0xe55c7250, 0x882ff3f5, 0x75495a80, 0x19a3ed99}, NULL };$/;"	v	file:
mdlhash_debug_grenade	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_grenade = { {0xdaf5db12, 0x41d4fc02, 0x764dd35a, 0xa4490888, 0xd5d26cea}, NULL };$/;"	v	file:
mdlhash_debug_h_player	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_h_player = { {0x22ee657b, 0x31ac0cb9, 0x8ce678cc, 0xb174b570, 0x1a102fd9}, NULL };$/;"	v	file:
mdlhash_debug_invisibl	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_invisibl = { {0xe5acae60, 0x8b2fe8fd, 0xb8ef8e78, 0x8d236ae4, 0xc3db0be3}, NULL };$/;"	v	file:
mdlhash_debug_invulner	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_invulner = { {0x57b00a3e, 0x009afa6d, 0xa4c2c8cb, 0xa7b0eccc, 0xa9e57049}, NULL };$/;"	v	file:
mdlhash_debug_missile	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_missile = { {0x2ae7a078, 0xc39393d4, 0x73576788, 0x242699d2, 0x8f190bfd}, NULL };$/;"	v	file:
mdlhash_debug_quaddama	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_quaddama = { {0x9010a156, 0x1b63addb, 0xbc9bd9e3, 0xff8d6e4e, 0xcecd1260}, NULL };$/;"	v	file:
mdlhash_debug_s_spike	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_s_spike = { {0xb159e4cc, 0xbc5dccf0, 0x656e93ab, 0x3e72dd24, 0x10446fc6}, NULL };$/;"	v	file:
mdlhash_debug_spike	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_spike = { {0xe78bb944, 0x92a753e4, 0x435c226b, 0x4021a65e, 0xef388c6b}, NULL };$/;"	v	file:
mdlhash_debug_v_axe	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_v_axe = { {0x77c9f8d4, 0x66d8b9e8, 0xaa75b3ce, 0xe6325d71, 0x70f57eea}, NULL };$/;"	v	file:
mdlhash_debug_v_light	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_v_light = { {0xf1ac7d77, 0x9ff2321d, 0x4ad3b6f0, 0x4372d11e, 0x46765fa7}, NULL };$/;"	v	file:
mdlhash_debug_v_nail	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_v_nail = { {0x2322c673, 0xd5ec1e41, 0xe762d27e, 0x89c6ae72, 0x9006bd90}, NULL };$/;"	v	file:
mdlhash_debug_v_nail2	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_v_nail2 = { {0x636a9adb, 0xaeca483a, 0x284f0999, 0x3198b142, 0xd174e963}, NULL };$/;"	v	file:
mdlhash_debug_v_rock	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_v_rock = { {0xf13c7070, 0xecc5c390, 0x22412e14, 0x51b13f01, 0x3c803dee}, NULL };$/;"	v	file:
mdlhash_debug_v_rock2	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_v_rock2 = { {0xda85f801, 0xa8bd2523, 0xa338f574, 0xa0466a00, 0xc5dc3964}, NULL };$/;"	v	file:
mdlhash_debug_v_shot	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_v_shot = { {0x67e9aa5b, 0x294674a8, 0x553aea03, 0x13165b3c, 0x161e851e}, NULL };$/;"	v	file:
mdlhash_debug_v_shot2	fmod.c	/^static check_models_hashes_entry_t mdlhash_debug_v_shot2 = { {0x309594be, 0xe11e461a, 0x92cfcfdd, 0xe9b78788, 0x650daa89}, NULL };$/;"	v	file:
mdlhash_plaguespak_armor	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_armor = { {0x5647e7b2, 0x52465746, 0xc10320fa, 0x1e92c90c, 0x27577c72}, NULL };$/;"	v	file:
mdlhash_plaguespak_b_g_key	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_b_g_key = { {0x3f9779fe, 0x5ec019b7, 0xa25fe622, 0x6e217fa6, 0xe84cee45}, NULL };$/;"	v	file:
mdlhash_plaguespak_b_s_key	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_b_s_key = { {0x370e1810, 0xb9bc0a5b, 0x4bb3fb54, 0x1573b0f5, 0x351207ab}, NULL };$/;"	v	file:
mdlhash_plaguespak_g_light	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_g_light = { {0x6231b892, 0x1f39d616, 0x1442715d, 0xfbfc2826, 0xc866d8d6}, NULL };$/;"	v	file:
mdlhash_plaguespak_g_nail	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_g_nail = { {0xcb2e31c6, 0x1f1064ab, 0x5e0be681, 0x5e658642, 0xd9411ef4}, NULL };$/;"	v	file:
mdlhash_plaguespak_g_nail2	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_g_nail2 = { {0x7d3fe401, 0x738a4344, 0x4ab62439, 0xba7313eb, 0x6a6f8536}, NULL };$/;"	v	file:
mdlhash_plaguespak_g_rock	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_g_rock = { {0xe31fc7b0, 0x35200618, 0x8ba6973c, 0x1296c555, 0xb2541bde}, NULL };$/;"	v	file:
mdlhash_plaguespak_g_rock2	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_g_rock2 = { {0x674eb3e9, 0xde325927, 0xdabd4337, 0xc97a755c, 0x97f4f1f9}, NULL };$/;"	v	file:
mdlhash_plaguespak_g_shot	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_g_shot = { {0xd3486358, 0x4a3a3d37, 0x0efc43e4, 0x55a42f89, 0xf8078519}, NULL };$/;"	v	file:
mdlhash_plaguespak_grenade	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_grenade = { {0xe3a1b910, 0x28c4e36a, 0x1af69321, 0x9d19df99, 0x5bcebfcb}, NULL };$/;"	v	file:
mdlhash_plaguespak_missile	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_missile = { {0xe047b3ec, 0xad03d2e2, 0x2a146207, 0x99e1f2df, 0xfb229f42}, NULL };$/;"	v	file:
mdlhash_plaguespak_s_spike	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_s_spike = { {0xe7c61b11, 0x703a7f30, 0x0051a5da, 0xb84a5bd1, 0xe23645ac}, NULL };$/;"	v	file:
mdlhash_plaguespak_spike	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_spike = { {0x28f1cb95, 0xafb8ed91, 0x6a8300ff, 0xeb29c03f, 0x28a2bbcb}, NULL };$/;"	v	file:
mdlhash_plaguespak_v_light	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_v_light = { {0x3c9ca1d7, 0x77303f95, 0x0ad05a82, 0x64a83757, 0x8257cf75}, NULL };$/;"	v	file:
mdlhash_plaguespak_v_nail	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_v_nail = { {0x71876b6d, 0x934d5f0a, 0x322763f9, 0x924fb71c, 0x5027e3b4}, NULL };$/;"	v	file:
mdlhash_plaguespak_v_nail2	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_v_nail2 = { {0x0b154635, 0x5a49f995, 0x9671641a, 0x2dfb1212, 0xe2631d44}, NULL };$/;"	v	file:
mdlhash_plaguespak_v_rock	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_v_rock = { {0xbac51d54, 0x884906a3, 0xa7ebec69, 0xe994be29, 0xdd326508}, NULL };$/;"	v	file:
mdlhash_plaguespak_v_rock2	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_v_rock2 = { {0x170a3ecf, 0x5cd131ab, 0xfcecd4fb, 0x62151b89, 0x3bc663b7}, NULL };$/;"	v	file:
mdlhash_plaguespak_v_shot	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_v_shot = { {0x93dc8f24, 0x6739d838, 0x996b00cc, 0x85c2d98f, 0x430b8e30}, NULL };$/;"	v	file:
mdlhash_plaguespak_v_shot2	fmod.c	/^static check_models_hashes_entry_t mdlhash_plaguespak_v_shot2 = { {0x58e68b33, 0x1127186f, 0xd1bdae79, 0x66fd9ca3, 0x82421f9b}, NULL };$/;"	v	file:
mdlhash_ruohis_armor	fmod.c	/^static check_models_hashes_entry_t mdlhash_ruohis_armor = { {0x7772c52a, 0xdee37c13, 0xbbbc8523, 0x348525ba, 0x6e1bd649}, NULL };$/;"	v	file:
mdlhash_unknown_end2	fmod.c	/^static check_models_hashes_entry_t mdlhash_unknown_end2 = { {0xe3a1b910, 0x28c4e36a, 0x1af69321, 0x9d19df99, 0x5bcebfcb }, NULL };$/;"	v	file:
mdlhash_unknown_end3	fmod.c	/^static check_models_hashes_entry_t mdlhash_unknown_end3 = { {0xe3a1b910, 0x28c4e36a, 0x1af69321, 0x9d19df99, 0x5bcebfcb }, NULL };$/;"	v	file:
mdlhash_unknown_end4	fmod.c	/^static check_models_hashes_entry_t mdlhash_unknown_end4 = { {0xe3a1b910, 0x28c4e36a, 0x1af69321, 0x9d19df99, 0x5bcebfcb }, NULL };$/;"	v	file:
me_cachededgeoffset	asm_draw.h	109;"	d
me_size	asm_draw.h	110;"	d
me_v	asm_draw.h	108;"	d
medge_s	gl_model.h	/^typedef struct medge_s {$/;"	s
medge_s	r_model.h	/^typedef struct medge_s {$/;"	s
medge_t	gl_model.h	/^} medge_t;$/;"	t	typeref:struct:medge_s
medge_t	r_model.h	/^} medge_t;$/;"	t	typeref:struct:medge_s
mediaroot_enum	menu_options.c	/^const char *mediaroot_enum[] = { "relative to exe", "relative to home", "full path" };$/;"	v
mem_upload	client.h	/^	byte		*mem_upload;$/;"	m	struct:__anon122
members	match_tools.c	/^	char members[MAX_GROUP_MEMBERS][MAX_QPATH];$/;"	m	struct:mapgroup_s	file:
members	match_tools.c	/^	char members[MAX_SKYGROUP_MEMBERS][MAX_QPATH];$/;"	m	struct:skygroup_s	file:
memclump_s	zone2.h	/^typedef struct memclump_s$/;"	s
memclump_t	zone2.h	/^} memclump_t;$/;"	t	typeref:struct:memclump_s
memdc	vid_win.c	/^MGLDC		*mgldc = NULL,*memdc = NULL,*dibdc = NULL,*windc = NULL;$/;"	v
memexpandablearray_array_s	zone2.h	/^typedef struct memexpandablearray_array_s$/;"	s
memexpandablearray_array_t	zone2.h	/^} memexpandablearray_array_t;$/;"	t	typeref:struct:memexpandablearray_array_s
memexpandablearray_s	zone2.h	/^typedef struct memexpandablearray_s$/;"	s
memexpandablearray_t	zone2.h	/^} memexpandablearray_t;$/;"	t	typeref:struct:memexpandablearray_s
memheader_s	zone2.h	/^typedef struct memheader_s$/;"	s
memheader_t	zone2.h	/^} memheader_t;$/;"	t	typeref:struct:memheader_s
mempool	zone2.h	/^	mempool_t *mempool;$/;"	m	struct:memexpandablearray_s
mempool_s	zone2.h	/^typedef struct mempool_s$/;"	s
mempool_t	zone2.h	/^} mempool_t;$/;"	t	typeref:struct:mempool_s
mention	mvd_utils_common.h	/^	int mention;$/;"	m	struct:mvd_pw_s
menu	mosdm.c	/^	struct mvd_menu_s	*menu;$/;"	m	struct:menu_llist_s	typeref:struct:menu_llist_s::mvd_menu_s	file:
menu	mvd_cam.h	/^	struct		mvd_menu_s	*menu[max_submenus];$/;"	m	struct:mvd_menu_s	typeref:struct:mvd_menu_s::mvd_menu_s
menu	new_menu.c	/^struct menu_s	*menu = NULL;$/;"	v	typeref:struct:menu_s
menu_active	new_menu.c	/^struct menu_s	*menu_active = NULL;$/;"	v	typeref:struct:menu_s
menu_advanced	menu_options.c	/^cvar_t menu_advanced = {"menu_advanced", "0"};$/;"	v
menu_autosave_interval	nmenu_autosave.c	/^cvar_t	menu_autosave_interval	=	{"menu_autosave_interval", "30"};$/;"	v
menu_autosave_name	nmenu_autosave.c	/^cvar_t	menu_autosave_name	=	{"menu_autosave_name", "none"};$/;"	v
menu_ct	cam_new_menu.c	/^struct menu_ct$/;"	s	file:
menu_ct	new_menu.c	/^struct menu_ct {$/;"	s	file:
menu_ct	new_menu.h	/^struct menu_ct $/;"	s
menu_ingame	menu.c	/^cvar_t     menu_ingame = {"menu_ingame", "1"};$/;"	v
menu_llist_s	mosdm.c	/^typedef struct menu_llist_s {$/;"	s	file:
menu_llist_t	mosdm.c	/^} menu_llist_t;$/;"	t	typeref:struct:menu_llist_s	file:
menu_marked_bgcolor	Ctrl.c	/^cvar_t     menu_marked_bgcolor = {"menu_marked_bgcolor", "0"};$/;"	v
menu_marked_bgcolor	Ctrl.c	/^cvar_t     menu_marked_bgcolor = {"menu_marked_bgcolor", "20 20 20 128", CVAR_COLOR};$/;"	v
menu_marked_fade	Ctrl.c	/^cvar_t     menu_marked_fade = {"menu_marked_fade", "4"};$/;"	v
menu_mouse_x	new_menu.c	/^double menu_mouse_x = 0, menu_mouse_y = 0;$/;"	v
menu_mouse_y	new_menu.c	/^double menu_mouse_x = 0, menu_mouse_y = 0;$/;"	v
menu_s	cam_new_menu.c	/^struct menu_s$/;"	s	file:
menu_s	new_menu.c	/^struct menu_s {$/;"	s	file:
menu_s	new_menu.h	/^struct menu_s$/;"	s
menu_video_settings_s	menu_options.c	/^typedef struct menu_video_settings_s {$/;"	s	file:
menu_video_settings_t	menu_options.c	/^} menu_video_settings_t;$/;"	t	typeref:struct:menu_video_settings_s	file:
menu_window_s	menu.c	/^typedef struct menu_window_s {$/;"	s	file:
menu_window_t	menu.c	/^} menu_window_t;$/;"	t	typeref:struct:menu_window_s	file:
menubound	keys.c	/^qbool	menubound[UNKNOWN + 256];		\/\/ if true, can't be rebound while in menu$/;"	v
menuheight	menu.c	/^int        menuheight = 240;$/;"	v
menuheight	menu.c	132;"	d	file:
menuheight	menu_demo.c	84;"	d	file:
menuheight	menu_multiplayer.c	26;"	d	file:
menuheight	menu_options.c	65;"	d	file:
menus	mosdm.c	/^menu_llist_t	menus;$/;"	v
menuwidth	menu.c	/^int        menuwidth = 320;$/;"	v
menuwidth	menu.c	131;"	d	file:
menuwidth	menu_demo.c	83;"	d	file:
menuwidth	menu_multiplayer.c	25;"	d	file:
menuwidth	menu_options.c	64;"	d	file:
meshpoints	mvd_cam.h	/^	vec3_t		meshpoints[17];$/;"	m	struct:tele_plane_s
message	mgraph.h	/^	ulong		message;		\/* Event specific message				*\/$/;"	m	struct:__anon219
message	net.h	/^	sizebuf_t	message;			\/\/ writing buffer to send to server$/;"	m	struct:__anon240
message	progdefs.h	/^	string_t	message;$/;"	m	struct:__anon253
message_buf	net.h	/^	byte		message_buf[MAX_MSGLEN];$/;"	m	struct:__anon240
messagelevel	server.h	/^	int			messagelevel;		\/\/ for filtering printed messages$/;"	m	struct:client_s
messagenum	client.h	/^	int			messagenum;		\/\/ All players won't be updated each frame.$/;"	m	struct:__anon112
messages_s	cl_parse.c	/^typedef struct messages_s $/;"	s	file:
messages_t	cl_parse.c	/^} messages_t;$/;"	t	typeref:struct:messages_s	file:
metrics_t	mgraph.h	/^	} metrics_t;$/;"	t	typeref:struct:__anon214
mgldc	vid_win.c	/^MGLDC		*mgldc = NULL,*memdc = NULL,*dibdc = NULL,*windc = NULL;$/;"	v
mi	mgraph.h	/^	gmode_t	mi;				\/* Mode specific information block			*\/$/;"	m	struct:__anon218
mi_bubble	client.h	/^	mi_gib1, mi_gib2, mi_gib3, mi_rocket, mi_grenade, mi_bubble,$/;"	e	enum:cl_modelindex_s
mi_explod1	client.h	/^	mi_spike, mi_player, mi_eyes, mi_flag, mi_tf_flag, mi_tf_stan, mi_explod1, mi_explod2, mi_h_player,$/;"	e	enum:cl_modelindex_s
mi_explod2	client.h	/^	mi_spike, mi_player, mi_eyes, mi_flag, mi_tf_flag, mi_tf_stan, mi_explod1, mi_explod2, mi_h_player,$/;"	e	enum:cl_modelindex_s
mi_eyes	client.h	/^	mi_spike, mi_player, mi_eyes, mi_flag, mi_tf_flag, mi_tf_stan, mi_explod1, mi_explod2, mi_h_player,$/;"	e	enum:cl_modelindex_s
mi_flag	client.h	/^	mi_spike, mi_player, mi_eyes, mi_flag, mi_tf_flag, mi_tf_stan, mi_explod1, mi_explod2, mi_h_player,$/;"	e	enum:cl_modelindex_s
mi_flame	client.h	/^	mi_flame,	\/\/joe: for changing flame\/flame0 models$/;"	e	enum:cl_modelindex_s
mi_gib1	client.h	/^	mi_gib1, mi_gib2, mi_gib3, mi_rocket, mi_grenade, mi_bubble,$/;"	e	enum:cl_modelindex_s
mi_gib2	client.h	/^	mi_gib1, mi_gib2, mi_gib3, mi_rocket, mi_grenade, mi_bubble,$/;"	e	enum:cl_modelindex_s
mi_gib3	client.h	/^	mi_gib1, mi_gib2, mi_gib3, mi_rocket, mi_grenade, mi_bubble,$/;"	e	enum:cl_modelindex_s
mi_grenade	client.h	/^	mi_gib1, mi_gib2, mi_gib3, mi_rocket, mi_grenade, mi_bubble,$/;"	e	enum:cl_modelindex_s
mi_h_player	client.h	/^	mi_spike, mi_player, mi_eyes, mi_flag, mi_tf_flag, mi_tf_stan, mi_explod1, mi_explod2, mi_h_player,$/;"	e	enum:cl_modelindex_s
mi_m10	client.h	/^	mi_monster1,mi_m2,mi_m3,mi_m4,mi_m5,mi_m6,mi_m7,mi_m8,mi_m9,mi_m10,mi_m11,mi_m12,$/;"	e	enum:cl_modelindex_s
mi_m11	client.h	/^	mi_monster1,mi_m2,mi_m3,mi_m4,mi_m5,mi_m6,mi_m7,mi_m8,mi_m9,mi_m10,mi_m11,mi_m12,$/;"	e	enum:cl_modelindex_s
mi_m12	client.h	/^	mi_monster1,mi_m2,mi_m3,mi_m4,mi_m5,mi_m6,mi_m7,mi_m8,mi_m9,mi_m10,mi_m11,mi_m12,$/;"	e	enum:cl_modelindex_s
mi_m13	client.h	/^	mi_m13, mi_m14, mi_m15, mi_m16, mi_m17,$/;"	e	enum:cl_modelindex_s
mi_m14	client.h	/^	mi_m13, mi_m14, mi_m15, mi_m16, mi_m17,$/;"	e	enum:cl_modelindex_s
mi_m15	client.h	/^	mi_m13, mi_m14, mi_m15, mi_m16, mi_m17,$/;"	e	enum:cl_modelindex_s
mi_m16	client.h	/^	mi_m13, mi_m14, mi_m15, mi_m16, mi_m17,$/;"	e	enum:cl_modelindex_s
mi_m17	client.h	/^	mi_m13, mi_m14, mi_m15, mi_m16, mi_m17,$/;"	e	enum:cl_modelindex_s
mi_m2	client.h	/^	mi_monster1,mi_m2,mi_m3,mi_m4,mi_m5,mi_m6,mi_m7,mi_m8,mi_m9,mi_m10,mi_m11,mi_m12,$/;"	e	enum:cl_modelindex_s
mi_m3	client.h	/^	mi_monster1,mi_m2,mi_m3,mi_m4,mi_m5,mi_m6,mi_m7,mi_m8,mi_m9,mi_m10,mi_m11,mi_m12,$/;"	e	enum:cl_modelindex_s
mi_m4	client.h	/^	mi_monster1,mi_m2,mi_m3,mi_m4,mi_m5,mi_m6,mi_m7,mi_m8,mi_m9,mi_m10,mi_m11,mi_m12,$/;"	e	enum:cl_modelindex_s
mi_m5	client.h	/^	mi_monster1,mi_m2,mi_m3,mi_m4,mi_m5,mi_m6,mi_m7,mi_m8,mi_m9,mi_m10,mi_m11,mi_m12,$/;"	e	enum:cl_modelindex_s
mi_m6	client.h	/^	mi_monster1,mi_m2,mi_m3,mi_m4,mi_m5,mi_m6,mi_m7,mi_m8,mi_m9,mi_m10,mi_m11,mi_m12,$/;"	e	enum:cl_modelindex_s
mi_m7	client.h	/^	mi_monster1,mi_m2,mi_m3,mi_m4,mi_m5,mi_m6,mi_m7,mi_m8,mi_m9,mi_m10,mi_m11,mi_m12,$/;"	e	enum:cl_modelindex_s
mi_m8	client.h	/^	mi_monster1,mi_m2,mi_m3,mi_m4,mi_m5,mi_m6,mi_m7,mi_m8,mi_m9,mi_m10,mi_m11,mi_m12,$/;"	e	enum:cl_modelindex_s
mi_m9	client.h	/^	mi_monster1,mi_m2,mi_m3,mi_m4,mi_m5,mi_m6,mi_m7,mi_m8,mi_m9,mi_m10,mi_m11,mi_m12,$/;"	e	enum:cl_modelindex_s
mi_monster1	client.h	/^	mi_monster1,mi_m2,mi_m3,mi_m4,mi_m5,mi_m6,mi_m7,mi_m8,mi_m9,mi_m10,mi_m11,mi_m12,$/;"	e	enum:cl_modelindex_s
mi_player	client.h	/^	mi_spike, mi_player, mi_eyes, mi_flag, mi_tf_flag, mi_tf_stan, mi_explod1, mi_explod2, mi_h_player,$/;"	e	enum:cl_modelindex_s
mi_rocket	client.h	/^	mi_gib1, mi_gib2, mi_gib3, mi_rocket, mi_grenade, mi_bubble,$/;"	e	enum:cl_modelindex_s
mi_spike	client.h	/^	mi_spike, mi_player, mi_eyes, mi_flag, mi_tf_flag, mi_tf_stan, mi_explod1, mi_explod2, mi_h_player,$/;"	e	enum:cl_modelindex_s
mi_tf_flag	client.h	/^	mi_spike, mi_player, mi_eyes, mi_flag, mi_tf_flag, mi_tf_stan, mi_explod1, mi_explod2, mi_h_player,$/;"	e	enum:cl_modelindex_s
mi_tf_stan	client.h	/^	mi_spike, mi_player, mi_eyes, mi_flag, mi_tf_flag, mi_tf_stan, mi_explod1, mi_explod2, mi_h_player,$/;"	e	enum:cl_modelindex_s
mi_vaxe	client.h	/^	mi_vaxe, mi_vbio, mi_vgrap, mi_vknife, mi_vknife2, mi_vmedi, mi_vspan,$/;"	e	enum:cl_modelindex_s
mi_vbio	client.h	/^	mi_vaxe, mi_vbio, mi_vgrap, mi_vknife, mi_vknife2, mi_vmedi, mi_vspan,$/;"	e	enum:cl_modelindex_s
mi_vgrap	client.h	/^	mi_vaxe, mi_vbio, mi_vgrap, mi_vknife, mi_vknife2, mi_vmedi, mi_vspan,$/;"	e	enum:cl_modelindex_s
mi_vknife	client.h	/^	mi_vaxe, mi_vbio, mi_vgrap, mi_vknife, mi_vknife2, mi_vmedi, mi_vspan,$/;"	e	enum:cl_modelindex_s
mi_vknife2	client.h	/^	mi_vaxe, mi_vbio, mi_vgrap, mi_vknife, mi_vknife2, mi_vmedi, mi_vspan,$/;"	e	enum:cl_modelindex_s
mi_vmedi	client.h	/^	mi_vaxe, mi_vbio, mi_vgrap, mi_vknife, mi_vknife2, mi_vmedi, mi_vspan,$/;"	e	enum:cl_modelindex_s
mi_vspan	client.h	/^	mi_vaxe, mi_vbio, mi_vgrap, mi_vknife, mi_vknife2, mi_vmedi, mi_vspan,$/;"	e	enum:cl_modelindex_s
mi_weapon1	client.h	/^	mi_weapon1, mi_weapon2, mi_weapon3, mi_weapon4, mi_weapon5, mi_weapon6, mi_weapon7, mi_weapon8,$/;"	e	enum:cl_modelindex_s
mi_weapon2	client.h	/^	mi_weapon1, mi_weapon2, mi_weapon3, mi_weapon4, mi_weapon5, mi_weapon6, mi_weapon7, mi_weapon8,$/;"	e	enum:cl_modelindex_s
mi_weapon3	client.h	/^	mi_weapon1, mi_weapon2, mi_weapon3, mi_weapon4, mi_weapon5, mi_weapon6, mi_weapon7, mi_weapon8,$/;"	e	enum:cl_modelindex_s
mi_weapon4	client.h	/^	mi_weapon1, mi_weapon2, mi_weapon3, mi_weapon4, mi_weapon5, mi_weapon6, mi_weapon7, mi_weapon8,$/;"	e	enum:cl_modelindex_s
mi_weapon5	client.h	/^	mi_weapon1, mi_weapon2, mi_weapon3, mi_weapon4, mi_weapon5, mi_weapon6, mi_weapon7, mi_weapon8,$/;"	e	enum:cl_modelindex_s
mi_weapon6	client.h	/^	mi_weapon1, mi_weapon2, mi_weapon3, mi_weapon4, mi_weapon5, mi_weapon6, mi_weapon7, mi_weapon8,$/;"	e	enum:cl_modelindex_s
mi_weapon7	client.h	/^	mi_weapon1, mi_weapon2, mi_weapon3, mi_weapon4, mi_weapon5, mi_weapon6, mi_weapon7, mi_weapon8,$/;"	e	enum:cl_modelindex_s
mi_weapon8	client.h	/^	mi_weapon1, mi_weapon2, mi_weapon3, mi_weapon4, mi_weapon5, mi_weapon6, mi_weapon7, mi_weapon8,$/;"	e	enum:cl_modelindex_s
mice	vid_svgalib.c	/^} mice[] = {$/;"	v	typeref:struct:__anon80
middle_center	ez_button.h	/^	middle_center,$/;"	e	enum:ez_textalign_e
middle_left	ez_button.h	/^	middle_left,$/;"	e	enum:ez_textalign_e
middle_right	ez_button.h	/^	middle_right,$/;"	e	enum:ez_textalign_e
min	mvd_cam.h	/^	double						min;$/;"	m	struct:mvd_menu_s
min	q_shared.h	71;"	d
min	settings.h	/^	float min;			\/\/ minimal value; required for num, named$/;"	m	struct:__anon272
min_fps	client.h	/^	double		min_fps;$/;"	m	struct:__anon122
min_interval	tp_triggers.h	/^	float					min_interval;$/;"	m	struct:pcre_trigger_s
min_ping	hud_common.c	/^    int  min_ping;$/;"	m	struct:sort_teams_info_s	file:
min_state	hud.h	/^    cactive_t  min_state;				\/\/ At least this state is required$/;"	m	struct:hud_s
min_value	ez_slider.h	/^	int						min_value;			\/\/ The min value allowed for the slider.$/;"	m	struct:ez_slider_s
mini	settings.h	/^	qbool mini;			\/\/ minimalistic version (doesn't display help and has infinite scrolling)$/;"	m	struct:__anon273
minimize	gl_texture.c	/^	int	minimize, maximize;$/;"	m	struct:__anon29	file:
minimized	new_menu.c	/^	int		minimized;$/;"	m	struct:menu_s	file:
minimized_window	vid_glx.c	/^static Window minimized_window;$/;"	v	file:
minindex	d_sprite.c	/^static int		minindex, maxindex;$/;"	v	file:
minlight	client.h	/^	float			minlight;			\/\/ don't add when contributing less$/;"	m	struct:__anon118
minlight	client.h	/^	int			minlight;$/;"	m	struct:__anon125
minlight	gl_rsurf.c	/^	int minlight;	\/\/ rad - minlight$/;"	m	struct:dlightinfo_s	file:
minlight	r_surf.c	/^	int	minlight;	\/\/ rad - minlight$/;"	m	struct:dlightinfo_s	file:
minmaxs	gl_model.h	/^	float				minmaxs[6];					\/\/ for bounding box culling$/;"	m	struct:mleaf_s
minmaxs	gl_model.h	/^	float				minmaxs[6];					\/\/ for bounding box culling$/;"	m	struct:mnode_s
minmaxs	r_model.h	/^	short				minmaxs[6];					\/\/ for bounding box culling$/;"	m	struct:mleaf_s
minmaxs	r_model.h	/^	short				minmaxs[6];					\/\/ for bounding box culling$/;"	m	struct:mnode_s
minpitch	client.h	/^	float		minpitch;$/;"	m	struct:__anon125
minrulesetvalue	cvar.h	/^	float	minrulesetvalue;$/;"	m	struct:cvar_s
minrulesetvalue	rulesets.c	/^	char *minrulesetvalue;$/;"	m	struct:limited_cvar_min_s	file:
mins	bspfile.h	/^	float		mins[3], maxs[3];$/;"	m	struct:__anon99
mins	bspfile.h	/^	short		mins[3];			\/\/ for frustum culling$/;"	m	struct:__anon108
mins	bspfile.h	/^	short		mins[3];		\/\/ for sphere culling$/;"	m	struct:__anon104
mins	cmodel.h	/^	vec3_t	mins, maxs;$/;"	m	struct:__anon135
mins	gl_model.h	/^	vec3_t				mins, maxs;$/;"	m	struct:model_s
mins	pmove.h	/^	vec3_t		mins, maxs;	\/\/ only for non-bsp models$/;"	m	struct:__anon243
mins	progdefs.h	/^	vec3_t	mins;$/;"	m	struct:__anon253
mins	r_model.h	/^	vec3_t				mins, maxs;$/;"	m	struct:model_s
mins	sv_world.c	/^	float		*mins, *maxs; \/\/ size of the moving object$/;"	m	struct:__anon66	file:
mins2	sv_world.c	/^	vec3_t		mins2, maxs2; \/\/ size when clipping against mosnters$/;"	m	struct:__anon66	file:
minx	new_menu.c	/^	int		minx;$/;"	m	struct:menu_s	file:
miny	new_menu.c	/^	int		miny;$/;"	m	struct:menu_s	file:
mipadjust	r_model.h	/^	float				mipadjust;$/;"	m	struct:mtexinfo_s
miplevel	d_edge.c	/^static int	miplevel;$/;"	v	file:
mipscale	d_local.h	/^	float				mipscale;$/;"	m	struct:surfcache_s
miptex	bspfile.h	/^	int			miptex;$/;"	m	struct:texinfo_s
miptex_s	bspfile.h	/^typedef struct miptex_s$/;"	s
miptex_t	bspfile.h	/^} miptex_t;$/;"	t	typeref:struct:miptex_s
mleaf_s	gl_model.h	/^typedef struct mleaf_s {$/;"	s
mleaf_s	r_model.h	/^typedef struct mleaf_s {$/;"	s
mleaf_t	gl_model.h	/^} mleaf_t;$/;"	t	typeref:struct:mleaf_s
mleaf_t	r_model.h	/^} mleaf_t;$/;"	t	typeref:struct:mleaf_s
mlook_active	input.h	79;"	d
mmstarttime	snd_win.c	/^MMTIME		mmstarttime;$/;"	v
mnode_s	gl_model.h	/^typedef struct mnode_s {$/;"	s
mnode_s	r_model.h	/^typedef struct mnode_s {$/;"	s
mnode_t	gl_model.h	/^} mnode_t;$/;"	t	typeref:struct:mnode_s
mnode_t	r_model.h	/^} mnode_t;$/;"	t	typeref:struct:mnode_s
mod_alias	gl_model.h	/^	mod_alias, $/;"	e	enum:__anon163
mod_alias	r_model.h	/^typedef enum {mod_brush, mod_sprite, mod_alias} modtype_t;$/;"	e	enum:__anon260
mod_alias3	gl_model.h	/^	mod_alias3$/;"	e	enum:__anon163
mod_base	gl_model.c	/^byte	*mod_base;$/;"	v
mod_base	r_model.c	/^byte	*mod_base;$/;"	v
mod_brush	gl_model.h	/^	mod_brush, $/;"	e	enum:__anon163
mod_brush	r_model.h	/^typedef enum {mod_brush, mod_sprite, mod_alias} modtype_t;$/;"	e	enum:__anon260
mod_known	gl_model.c	/^model_t	mod_known[MAX_MOD_KNOWN];$/;"	v
mod_known	r_model.c	/^model_t	mod_known[MAX_MOD_KNOWN];$/;"	v
mod_novis	gl_model.c	/^byte	mod_novis[MAX_MAP_LEAFS\/8];$/;"	v
mod_novis	r_model.c	/^byte	mod_novis[MAX_MAP_LEAFS\/8];$/;"	v
mod_numknown	gl_model.c	/^int		mod_numknown;$/;"	v
mod_numknown	r_model.c	/^int		mod_numknown;$/;"	v
mod_spr32	gl_model.h	/^	mod_spr32,$/;"	e	enum:__anon163
mod_sprite	gl_model.h	/^	mod_sprite, $/;"	e	enum:__anon163
mod_sprite	r_model.h	/^typedef enum {mod_brush, mod_sprite, mod_alias} modtype_t;$/;"	e	enum:__anon260
mode	EX_FileList.h	/^	int				mode;			\/\/ Are we deleting\/compressing a file?$/;"	m	struct:filelist_s
mode	mac.h	/^	UInt16	mode;			\/\/ vid_modes[gl_vid_screen.value][gl_vid_mode.value]$/;"	m	struct:__anon173
mode	mac.h	/^	video_mode_t	*mode;$/;"	m	struct:__anon176
mode	settings.h	/^	enum { SPM_NORMAL, SPM_BINDING, SPM_VIEWHELP, SPM_CHOOSESKIN } mode;$/;"	m	struct:__anon273	typeref:enum:__anon273::__anon274
mode	vfs_tar.h	/^  char mode[8];                 \/* 100 *\/$/;"	m	struct:tar_header
mode	vfs_tar.h	/^  int                mode;$/;"	m	struct:attr_item
mode	vid_win.c	/^int			driver = grDETECT,mode;$/;"	v
mode13	vid_win.c	/^	int			mode13;$/;"	m	struct:__anon85	file:
mode_default	menu_options.c	/^enum {mode_fastest, mode_default, mode_undef} fps_mode = mode_default;$/;"	e	enum:__anon49	file:
mode_eyecandy	menu_options.c	/^enum {mode_fastest, mode_faithful, mode_higheyecandy, mode_eyecandy, mode_undef} fps_mode = mode_undef;$/;"	e	enum:__anon48	file:
mode_faithful	menu_options.c	/^enum {mode_fastest, mode_faithful, mode_higheyecandy, mode_eyecandy, mode_undef} fps_mode = mode_undef;$/;"	e	enum:__anon48	file:
mode_fastest	menu_options.c	/^enum {mode_fastest, mode_default, mode_undef} fps_mode = mode_default;$/;"	e	enum:__anon49	file:
mode_fastest	menu_options.c	/^enum {mode_fastest, mode_faithful, mode_higheyecandy, mode_eyecandy, mode_undef} fps_mode = mode_undef;$/;"	e	enum:__anon48	file:
mode_higheyecandy	menu_options.c	/^enum {mode_fastest, mode_faithful, mode_higheyecandy, mode_eyecandy, mode_undef} fps_mode = mode_undef;$/;"	e	enum:__anon48	file:
mode_undef	menu_options.c	/^enum {mode_fastest, mode_default, mode_undef} fps_mode = mode_default;$/;"	e	enum:__anon49	file:
mode_undef	menu_options.c	/^enum {mode_fastest, mode_faithful, mode_higheyecandy, mode_eyecandy, mode_undef} fps_mode = mode_undef;$/;"	e	enum:__anon48	file:
modedesc	vid_wgl.c	/^	char		modedesc[17];$/;"	m	struct:__anon81	file:
modedesc	vid_win.c	/^	char		modedesc[17];$/;"	m	struct:__anon85	file:
modedesc_t	vid_wgl.c	/^} modedesc_t;$/;"	t	typeref:struct:__anon83	file:
modedesc_t	vid_win.c	/^} modedesc_t;$/;"	t	typeref:struct:__anon86	file:
modedescs	vid_wgl.c	/^static modedesc_t	modedescs[MAX_MODEDESCS];$/;"	v	file:
modedescs	vid_win.c	/^static modedesc_t	modedescs[MAX_MODEDESCS];$/;"	v	file:
model	cl_tent.c	/^	model_t *model;$/;"	m	struct:__anon6	file:
model	cl_tent.c	/^	model_t *model;$/;"	m	struct:explosion_s	file:
model	pmove.h	/^	cmodel_t	*model;		\/\/ only for bsp models$/;"	m	struct:__anon243
model	progdefs.h	/^	string_t	model;$/;"	m	struct:__anon253
model	r_model.h	/^	int					model;$/;"	m	struct:aliashdr_s
model	render.h	/^	struct model_s			*model;			\/\/ NULL = no model$/;"	m	struct:entity_s	typeref:struct:entity_s::model_s
model	vx_motiontrail.c	/^	model_t	*model;$/;"	m	struct:__anon90	file:
model2item	teamplay.c	/^item_t *model2item[MAX_MODELS];$/;"	v
model_name	client.h	/^	char		model_name[MAX_MODELS][MAX_QPATH];$/;"	m	struct:__anon125
model_player_checksum	server.h	/^	unsigned	model_player_checksum;$/;"	m	struct:__anon264
model_precache	client.h	/^	struct model_s	*model_precache[MAX_MODELS];$/;"	m	struct:__anon125	typeref:struct:__anon125::model_s
model_precache	server.h	/^	char		*model_precache[MAX_MODELS];	\/\/ NULL terminated$/;"	m	struct:__anon264
model_s	gl_model.h	/^typedef struct model_s {$/;"	s
model_s	r_model.h	/^typedef struct model_s {$/;"	s
model_t	gl_model.h	/^} model_t;$/;"	t	typeref:struct:model_s
model_t	r_model.h	/^} model_t;$/;"	t	typeref:struct:model_s
modelindex	cl_ents.c	/^	int		modelindex;$/;"	m	struct:__anon3	file:
modelindex	client.h	/^	int			modelindex;$/;"	m	struct:__anon112
modelindex	progdefs.h	/^	float	modelindex;$/;"	m	struct:__anon253
modelindex	protocol.h	/^	int		modelindex;$/;"	m	struct:entity_state_s
modelist	vid_wgl.c	/^static vmode_t	modelist[MAX_MODE_LIST];$/;"	v	file:
modelist	vid_win.c	/^static vmode_t	modelist[MAX_MODE_LIST];$/;"	v	file:
modelname	server.h	/^	char		modelname[MAX_QPATH];			\/\/ maps\/<name>.bsp, for model_precache[0]$/;"	m	struct:__anon264
modelname	teamplay.c	/^	char	*modelname;$/;"	m	struct:__anon69	file:
modelorg	gl_rmain.c	/^vec3_t		modelorg, r_entorigin;$/;"	v
modelorg	r_bsp.c	/^vec3_t			modelorg, base_modelorg;$/;"	v
models	server.h	/^	cmodel_t	*models[MAX_MODELS];$/;"	m	struct:__anon264
modenum	vid_wgl.c	/^	int			modenum;$/;"	m	struct:__anon81	file:
modenum	vid_wgl.c	/^	int		modenum;$/;"	m	struct:__anon83	file:
modenum	vid_win.c	/^	int			modenum;$/;"	m	struct:__anon85	file:
modenum	vid_win.c	/^	int		modenum;$/;"	m	struct:__anon86	file:
modes	gl_texture.c	/^glmode_t modes[] = {$/;"	v
modes	vid_svgalib.c	/^static vga_modeinfo *modes;$/;"	v	file:
modestate	vid_wgl.c	/^modestate_t	modestate = MS_UNINIT;$/;"	v
modestate	vid_win.c	/^modestate_t	modestate = MS_UNINIT;$/;"	v
modestate_t	winquake.h	/^typedef enum {MS_WINDOWED, MS_FULLSCREEN, MS_FULLDIB, MS_UNINIT} modestate_t;$/;"	t	typeref:enum:__anon301
modhint	gl_model.h	/^	modhint_t			modhint;$/;"	m	struct:model_s
modhint	r_model.h	/^	modhint_t			modhint;$/;"	m	struct:model_s
modhint_t	gl_model.h	/^} modhint_t;$/;"	t	typeref:enum:__anon164
modhint_t	r_model.h	/^typedef enum {MOD_NORMAL, MOD_PLAYER, MOD_EYES, MOD_FLAME, MOD_THUNDERBOLT, MOD_BACKPACK} modhint_t;$/;"	t	typeref:enum:__anon261
modified	cvar.h	/^	qbool	modified;			\/\/ set to true in Cvar_Set(), Cvar_Register(), Cvar_Create(), reset to false manually in C code$/;"	m	struct:cvar_s
modified	fmod.c	/^	qbool		modified;$/;"	m	struct:check_models_s	file:
modifier	mosdm.c	/^float modifier = 1;$/;"	v
modifier	mvd_cam.h	/^	double						**modifier;$/;"	m	struct:mvd_menu_s
modifiers	mgraph.h	/^	ulong		modifiers;		\/* Modifier flags						*\/$/;"	m	struct:__anon219
modtype_t	gl_model.h	/^} modtype_t;$/;"	t	typeref:enum:__anon163
modtype_t	r_model.h	/^typedef enum {mod_brush, mod_sprite, mod_alias} modtype_t;$/;"	t	typeref:enum:__anon260
mon	version.c	/^static char *mon[12] = $/;"	v	file:
mond	version.c	/^static char mond[12] = $/;"	v	file:
month	match_tools.c	/^	char month[8];$/;"	m	struct:matchinfo_s	file:
months	console.c	/^char *months[12] = {$/;"	v
mosdm_ma	mosdm.c	/^cvar_t mosdm_ma	= {"mosdm_ma","3"};$/;"	v
mosdm_main_x	mosdm.c	/^cvar_t mosdm_main_x = {"mosdm_main_x","0"};$/;"	v
mosdm_main_y	mosdm.c	/^cvar_t mosdm_main_y = {"mosdm_main_y","0"};$/;"	v
mosdm_md	mosdm.c	/^cvar_t mosdm_md	= {"mosdm_md","4"};$/;"	v
mosdm_modifier	mosdm.c	/^cvar_t mosdm_modifier = {"mosdm_modifier","1.0",0,MOSDM_Onchange_Modifier};$/;"	v
mosdm_new_draw	mosdm.c	/^cvar_t	mosdm_new_draw			=	{"mosdm_new_draw","1"};$/;"	v
mosdm_new_edit_menu	mosdm.c	/^cvar_t	mosdm_new_edit_menu		=	{"mosdm_new_edit_menu","0"};$/;"	v
mosdm_new_update_etrack	mosdm.c	/^cvar_t	mosdm_new_update_etrack=	{"mosdm_new_update_etrack","1"};$/;"	v
mosdm_new_update_ptrack	mosdm.c	/^cvar_t	mosdm_new_update_ptrack=	{"mosdm_new_update_ptrack","1"};$/;"	v
mosdm_new_update_track	mosdm.c	/^cvar_t	mosdm_new_update_track	=	{"mosdm_new_update_track","0"};$/;"	v
mosdm_newmenu	mosdm.c	/^cvar_t mosdm_newmenu = {"mosdm_newmenu","1"};$/;"	v
mosdm_sub_x	mosdm.c	/^cvar_t mosdm_sub_x = {"mosdm_sub_x","0"};$/;"	v
mosdm_sub_y	mosdm.c	/^cvar_t mosdm_sub_y = {"mosdm_sub_y","0"};$/;"	v
motionblur_t	vx_motiontrail.c	/^} motionblur_t;$/;"	t	typeref:struct:__anon90	file:
mouse	ez_controls.h	/^	ez_mouse_eventhandler_fp		mouse;$/;"	m	union:ez_eventhandlerfunction_u
mouse	in_raw.h	/^		RAWMOUSE    mouse;$/;"	m	union:tagRAWINPUT::__anon170
mouseResetTime	linux_glimp.c	/^static double mouseResetTime = 0;$/;"	v	file:
mouse_accel_denominator	linux_glimp.c	/^static int mouse_accel_denominator;$/;"	v	file:
mouse_accel_numerator	linux_glimp.c	/^static int mouse_accel_numerator;$/;"	v	file:
mouse_active	linux_glimp.c	/^static qbool mouse_active = false;$/;"	v	file:
mouse_buttons	in_win.c	/^int			mouse_buttons;$/;"	v
mouse_buttons	vid_x11.c	/^static int mouse_buttons = 3;$/;"	v	file:
mouse_buttonstate	vid_x11.c	/^static int mouse_buttonstate;$/;"	v	file:
mouse_moved	in_mac.c	/^static int				mouse_moved = FALSE;$/;"	v	file:
mouse_oldbuttonstate	in_win.c	/^int			mouse_oldbuttonstate;$/;"	v
mouse_oldbuttonstate	vid_x11.c	/^static int mouse_oldbuttonstate;$/;"	v	file:
mouse_pressed_time	ez_controls.h	/^	double					mouse_pressed_time[9];	\/\/ How long the mouse buttons have been pressed. (Used for repeating mouse click events).$/;"	m	struct:ez_tree_s
mouse_repeat_delay	ez_controls.h	/^	double					mouse_repeat_delay;		\/\/ The time to wait before raising a new mouse click event for this control (if control_listen_repeat_mouse is set).$/;"	m	struct:ez_control_s
mouse_state_s	keys.h	/^typedef struct mouse_state_s {$/;"	s
mouse_state_t	keys.h	/^} mouse_state_t;$/;"	t	typeref:struct:mouse_state_s
mouse_threshold	linux_glimp.c	/^static int mouse_threshold;$/;"	v	file:
mouse_x	in_linux.c	/^float mouse_x, mouse_y;$/;"	v
mouse_x	in_mac.c	/^float mouse_x, mouse_y;$/;"	v
mouse_x	in_win.c	/^float mouse_x, mouse_y;$/;"	v
mouse_y	in_linux.c	/^float mouse_x, mouse_y;$/;"	v
mouse_y	in_mac.c	/^float mouse_x, mouse_y;$/;"	v
mouse_y	in_win.c	/^float mouse_x, mouse_y;$/;"	v
mouseactivatetoggle	in_win.c	/^static qbool	mouseparmsvalid, mouseactivatetoggle;$/;"	v	file:
mouseactive	in_win.c	/^qbool	mouseactive;$/;"	v
mousehandler	vid_svgalib.c	/^static void mousehandler (int buttonstate, int dx, int dy, int dz, int drx, int dry, int drz)$/;"	f	file:
mouseinitialized	in_win.c	/^qbool mouseinitialized = false;$/;"	v
mouseinitialized	linux_glimp.c	/^       qbool mouseinitialized = false; \/\/ unfortunately non static, lame...$/;"	v
mouseinitialized	vid_svgalib.c	/^qbool mouseinitialized = false;$/;"	v
mouseinitialized	vid_x11.c	/^qbool mouseinitialized = false;$/;"	v
mouselocked	Ctrl.h	/^    qbool mouselocked;$/;"	m	struct:ScrollBar_s
mousemove	Ctrl_Tab.h	/^	CTabPage_MouseMoveType mousemove;$/;"	m	struct:CTabPage_Handlers_s
mouseparmsvalid	in_win.c	/^static qbool	mouseparmsvalid, mouseactivatetoggle;$/;"	v	file:
mousetype_t	in_win.c	/^typedef enum { mt_none = 0, mt_normal, mt_dinput, mt_raw } mousetype_t;$/;"	t	typeref:enum:__anon36	file:
mousetype_t	linux_glimp.c	/^typedef enum { mt_none = 0, mt_dga, mt_normal } mousetype_t;$/;"	t	typeref:enum:__anon40	file:
mousetype_t	linux_glimp.c	/^typedef enum { mt_none = 0, mt_dga, mt_normal, mt_evdev } mousetype_t;$/;"	t	typeref:enum:__anon39	file:
move	gl_rpart.c	/^	part_move_t	move;$/;"	m	struct:particle_tree_s	file:
moveclip_t	sv_world.c	/^} moveclip_t;$/;"	t	typeref:struct:__anon66	file:
movedir	progdefs.h	/^	vec3_t	movedir;$/;"	m	struct:__anon253
movetype	progdefs.h	/^	float	movetype;$/;"	m	struct:__anon253
movevars	pmove.c	/^movevars_t	movevars;$/;"	v
movevars_t	pmove.h	/^} movevars_t;$/;"	t	typeref:struct:__anon246
movie_acm_loaded	movie.c	/^qbool movie_is_avi = false, movie_avi_loaded, movie_acm_loaded;$/;"	v
movie_avi_loaded	movie.c	/^qbool movie_is_avi = false, movie_avi_loaded, movie_acm_loaded;$/;"	v
movie_codec	movie.c	/^cvar_t   movie_codec		= {"demo_capture_codec", "0"};	\/\/ Capturing to avi$/;"	v
movie_dir	movie.c	/^cvar_t   movie_dir			=  {"demo_capture_dir",  "capture", 0, OnChange_movie_dir};$/;"	v
movie_fps	movie.c	/^cvar_t   movie_fps			=  {"demo_capture_fps", "30.0"};$/;"	v
movie_frame_count	movie.c	/^static int movie_frame_count;$/;"	v	file:
movie_is_avi	movie.c	/^qbool movie_is_avi = false, movie_avi_loaded, movie_acm_loaded;$/;"	v
movie_is_capturing	movie.c	/^static qbool movie_is_capturing = false;$/;"	v	file:
movie_len	movie.c	/^static double movie_start_time, movie_len;$/;"	v	file:
movie_mp3	movie.c	/^cvar_t   movie_mp3			= {"demo_capture_mp3", "0"};$/;"	v
movie_mp3_kbps	movie.c	/^cvar_t   movie_mp3_kbps		= {"demo_capture_mp3_kbps", "128"};$/;"	v
movie_start_date	movie.c	/^	static SYSTEMTIME	movie_start_date;$/;"	v	file:
movie_start_date	movie.c	/^	struct tm			movie_start_date;$/;"	v	typeref:struct:tm
movie_start_time	movie.c	/^static double movie_start_time, movie_len;$/;"	v	file:
movie_steadycam	movie.c	/^cvar_t   movie_steadycam	=  {"demo_capture_steadycam", "0"};$/;"	v
moving	new_menu.c	/^int		moving		=	0;$/;"	v
mp3_cursor	menu_mp3player.c	/^static int mp3_cursor = 0;$/;"	v	file:
mp3_dir	mp3_winamp.c	/^cvar_t mp3_dir = {"mp3_winamp_dir", "c:\/program files\/winamp"};$/;"	v
mp3_dir	mp3_xmms.c	/^cvar_t mp3_dir = {"mp3_xmms_dir", "%%X11BASE%%\/bin"}; \/\/ disconnect: todo: check if %%X11BASE%% is OK for Linux$/;"	v
mp3_driver	movie_avi.c	/^qbool	mp3_driver;$/;"	v
mp3_format	movie_avi.c	/^MPEGLAYER3WAVEFORMAT mp3_format;$/;"	v
mp3_hwnd	mp3_winamp.c	/^static HWND mp3_hwnd = 0;$/;"	v	file:
mp3_player	mp3_player.c	/^const mp3_player_t *mp3_player = &mp3_player_audacious;$/;"	v
mp3_player	mp3_player.c	/^const mp3_player_t *mp3_player = &mp3_player_mpd;$/;"	v
mp3_player	mp3_player.c	/^const mp3_player_t *mp3_player = &mp3_player_none;$/;"	v
mp3_player	mp3_player.c	/^const mp3_player_t *mp3_player = &mp3_player_winamp;$/;"	v
mp3_player	mp3_player.c	/^const mp3_player_t *mp3_player = &mp3_player_xmms2;$/;"	v
mp3_player	mp3_player.c	/^const mp3_player_t *mp3_player = &mp3_player_xmms;$/;"	v
mp3_player_audacious	mp3_audacious.c	/^const mp3_player_t mp3_player_audacious = {$/;"	v
mp3_player_mpd	mp3_mpd.c	/^const mp3_player_t mp3_player_mpd = {$/;"	v
mp3_player_none	mp3_player.c	/^const mp3_player_t mp3_player_none = {$/;"	v
mp3_player_t	mp3_player.h	/^} mp3_player_t;$/;"	t	typeref:struct:__anon236
mp3_player_winamp	mp3_winamp.c	/^const mp3_player_t mp3_player_winamp = $/;"	v
mp3_player_xmms	mp3_xmms.c	/^const mp3_player_t mp3_player_xmms = {$/;"	v
mp3_player_xmms2	mp3_xmms2.c	/^const mp3_player_t mp3_player_xmms2 = {$/;"	v
mp3_players_t	mp3_player.h	/^} mp3_players_t;$/;"	t	typeref:enum:__anon235
mp3_scrolltitle	mp3_player.c	/^cvar_t mp3_scrolltitle = {"mp3_scrolltitle", "1"};$/;"	v
mp3_showtime	mp3_player.c	/^cvar_t mp3_showtime = {"mp3_showtime", "1"};$/;"	v
mp3_xmms_session	mp3_xmms.c	/^cvar_t mp3_xmms_session = {"mp3_xmms_session", "0"};$/;"	v
mpdProcs	mp3_mpd.c	/^static qlib_dllfunction_t mpdProcs[] = {$/;"	v	file:
mpic_t	draw.h	/^} mpic_t;$/;"	t	typeref:struct:__anon145
mpic_t	draw.h	/^} mpic_t;$/;"	t	typeref:struct:__anon146
mplane_s	cmodel.h	/^typedef struct mplane_s {$/;"	s
mplane_t	cmodel.h	/^} mplane_t;$/;"	t	typeref:struct:mplane_s
mscx	new_menu.c	/^int		mscx	=	0;$/;"	v
mscy	new_menu.c	/^int		mscy	=	0;$/;"	v
msec	protocol.h	/^	byte	msec;$/;"	m	struct:usercmd_s
msg	cl_main.c	/^cvar_t	msg = {"msg", "1", CVAR_ARCHIVE|CVAR_USERINFO};$/;"	v
msg	vx_tracker.c	/^	char msg[MAX_TRACKER_MSG_LEN];$/;"	m	struct:__anon92	file:
msg1	fragstats.c	/^	char		*msg1;$/;"	m	struct:fragmsg_s	file:
msg2	fragstats.c	/^	char		*msg2;$/;"	m	struct:fragmsg_s	file:
msgNumber	menu.c	/^int        msgNumber;$/;"	v
msg_badread	com_msg.c	/^qbool msg_badread;$/;"	v
msg_entity	progdefs.h	/^	int	msg_entity;$/;"	m	struct:__anon252
msg_filter	cl_main.c	/^cvar_t  msg_filter = {"msg_filter", "0"};$/;"	v
msg_readcount	com_msg.c	/^int msg_readcount;$/;"	v
msg_suppress_1	vid_win.c	/^qbool msg_suppress_1 = 0;	\/\/ suppresses resolution and cache size console output$/;"	v
msg_trigger_s	tp_triggers.c	/^typedef struct msg_trigger_s$/;"	s	file:
msg_trigger_t	tp_triggers.c	/^} msg_trigger_t;$/;"	t	typeref:struct:msg_trigger_s	file:
msg_triggers	tp_triggers.c	/^static msg_trigger_t *msg_triggers;$/;"	v	file:
msgdata	fragstats.c	/^	fragmsg_t	msgdata[MAX_FRAG_DEFINITIONS];$/;"	m	struct:fragdef_s	file:
msgfilter_enum	menu_options.c	/^const char* msgfilter_enum[] = { "off", "say+spec", "team", "say+team+spec" };$/;"	v
msgs	cl_parse.c	/^	int msgs[NUMMSG];$/;"	m	struct:messages_s	file:
msgs	net.c	/^	loopmsg_t	msgs[MAX_LOOPBACK];$/;"	m	struct:__anon52	file:
msgtrigger_commands	cmd.c	/^char *msgtrigger_commands[] = {$/;"	v
msgtype_s	fragstats.c	/^typedef enum msgtype_s {$/;"	g	file:
msgtype_t	fragstats.c	/^msgtype_t;$/;"	t	typeref:enum:msgtype_s	file:
msnap_s	in_win.c	/^typedef	struct msnap_s {$/;"	s	file:
msnap_t	in_win.c	/^} msnap_t;$/;"	t	typeref:struct:msnap_s	file:
msprite2_s	gl_model.h	/^typedef struct msprite2_s {$/;"	s
msprite2_t	gl_model.h	/^} msprite2_t; \/\/ actual frames follow after struct immidiately$/;"	t	typeref:struct:msprite2_s
msprite_s	gl_model.h	/^typedef struct msprite_s {$/;"	s
msprite_s	r_model.h	/^typedef struct msprite_s {$/;"	s
msprite_t	gl_model.h	/^} msprite_t;$/;"	t	typeref:struct:msprite_s
msprite_t	r_model.h	/^} msprite_t;$/;"	t	typeref:struct:msprite_s
mspriteframe2_s	gl_model.h	/^typedef struct mspriteframe2_s {$/;"	s
mspriteframe2_t	gl_model.h	/^} mspriteframe2_t;$/;"	t	typeref:struct:mspriteframe2_s
mspriteframe_s	gl_model.h	/^typedef struct mspriteframe_s {$/;"	s
mspriteframe_s	r_model.h	/^typedef struct mspriteframe_s {$/;"	s
mspriteframe_t	gl_model.h	/^} mspriteframe_t;$/;"	t	typeref:struct:mspriteframe_s
mspriteframe_t	r_model.h	/^} mspriteframe_t;$/;"	t	typeref:struct:mspriteframe_s
mspriteframedesc2_s	gl_model.h	/^typedef struct mspriteframedesc2_s {$/;"	s
mspriteframedesc2_t	gl_model.h	/^} mspriteframedesc2_t;$/;"	t	typeref:struct:mspriteframedesc2_s
mspriteframedesc_s	gl_model.h	/^typedef struct mspriteframedesc_s {$/;"	s
mspriteframedesc_s	r_model.h	/^typedef struct mspriteframedesc_s {$/;"	s
mspriteframedesc_t	gl_model.h	/^} mspriteframedesc_t;$/;"	t	typeref:struct:mspriteframedesc_s
mspriteframedesc_t	r_model.h	/^} mspriteframedesc_t;$/;"	t	typeref:struct:mspriteframedesc_s
mspritegroup_s	gl_model.h	/^typedef struct mspritegroup_s {$/;"	s
mspritegroup_s	r_model.h	/^typedef struct mspritegroup_s {$/;"	s
mspritegroup_t	gl_model.h	/^} mspritegroup_t;$/;"	t	typeref:struct:mspritegroup_s
mspritegroup_t	r_model.h	/^} mspritegroup_t;$/;"	t	typeref:struct:mspritegroup_s
mstate_di	in_win.c	/^static unsigned int mstate_di;$/;"	v	file:
msurface_s	gl_model.h	/^typedef struct msurface_s {$/;"	s
msurface_s	r_model.h	/^typedef struct msurface_s {$/;"	s
msurface_t	gl_model.h	/^} msurface_t;$/;"	t	typeref:struct:msurface_s
msurface_t	r_model.h	/^} msurface_t;$/;"	t	typeref:struct:msurface_s
mt_2on2	match_tools.c	/^	mt_2on2, mt_3on3, mt_4on4, mt_tdm,$/;"	e	enum:__anon42	file:
mt_3on3	match_tools.c	/^	mt_2on2, mt_3on3, mt_4on4, mt_tdm,$/;"	e	enum:__anon42	file:
mt_4on4	match_tools.c	/^	mt_2on2, mt_3on3, mt_4on4, mt_tdm,$/;"	e	enum:__anon42	file:
mt_arena	match_tools.c	/^	mt_arena,$/;"	e	enum:__anon42	file:
mt_coop	match_tools.c	/^	mt_coop,		$/;"	e	enum:__anon42	file:
mt_death	fragstats.c	/^	mt_death,$/;"	e	enum:msgtype_s	file:
mt_dga	linux_glimp.c	/^typedef enum { mt_none = 0, mt_dga, mt_normal } mousetype_t;$/;"	e	enum:__anon40	file:
mt_dga	linux_glimp.c	/^typedef enum { mt_none = 0, mt_dga, mt_normal, mt_evdev } mousetype_t;$/;"	e	enum:__anon39	file:
mt_dinput	in_win.c	/^typedef enum { mt_none = 0, mt_normal, mt_dinput, mt_raw } mousetype_t;$/;"	e	enum:__anon36	file:
mt_duel	match_tools.c	/^	mt_duel, mt_ffa,$/;"	e	enum:__anon42	file:
mt_empty	match_tools.c	/^	mt_empty,		$/;"	e	enum:__anon42	file:
mt_evdev	linux_glimp.c	/^typedef enum { mt_none = 0, mt_dga, mt_normal, mt_evdev } mousetype_t;$/;"	e	enum:__anon39	file:
mt_ffa	match_tools.c	/^	mt_duel, mt_ffa,$/;"	e	enum:__anon42	file:
mt_flagcap	fragstats.c	/^	mt_flagcap}$/;"	e	enum:msgtype_s	file:
mt_flagdrop	fragstats.c	/^	mt_flagdrop,$/;"	e	enum:msgtype_s	file:
mt_flagtouch	fragstats.c	/^	mt_flagtouch,$/;"	e	enum:msgtype_s	file:
mt_frag	fragstats.c	/^	mt_frag,$/;"	e	enum:msgtype_s	file:
mt_fragged	fragstats.c	/^	mt_fragged,$/;"	e	enum:msgtype_s	file:
mt_frags	fragstats.c	/^	mt_frags,$/;"	e	enum:msgtype_s	file:
mt_matchstate_t	match_tools.c	/^} mt_matchstate_t;$/;"	t	typeref:struct:mt_matchtstate_s	file:
mt_matchtstate_s	match_tools.c	/^typedef struct mt_matchtstate_s {$/;"	s	file:
mt_multiteam	match_tools.c	/^	mt_multiteam,$/;"	e	enum:__anon42	file:
mt_none	in_win.c	/^typedef enum { mt_none = 0, mt_normal, mt_dinput, mt_raw } mousetype_t;$/;"	e	enum:__anon36	file:
mt_none	linux_glimp.c	/^typedef enum { mt_none = 0, mt_dga, mt_normal } mousetype_t;$/;"	e	enum:__anon40	file:
mt_none	linux_glimp.c	/^typedef enum { mt_none = 0, mt_dga, mt_normal, mt_evdev } mousetype_t;$/;"	e	enum:__anon39	file:
mt_normal	in_win.c	/^typedef enum { mt_none = 0, mt_normal, mt_dinput, mt_raw } mousetype_t;$/;"	e	enum:__anon36	file:
mt_normal	linux_glimp.c	/^typedef enum { mt_none = 0, mt_dga, mt_normal } mousetype_t;$/;"	e	enum:__anon40	file:
mt_normal	linux_glimp.c	/^typedef enum { mt_none = 0, mt_dga, mt_normal, mt_evdev } mousetype_t;$/;"	e	enum:__anon39	file:
mt_numtypes	match_tools.c	/^	mt_numtypes,$/;"	e	enum:__anon42	file:
mt_race	match_tools.c	/^	mt_race,		$/;"	e	enum:__anon42	file:
mt_raw	in_win.c	/^typedef enum { mt_none = 0, mt_normal, mt_dinput, mt_raw } mousetype_t;$/;"	e	enum:__anon36	file:
mt_solo	match_tools.c	/^	mt_solo,		$/;"	e	enum:__anon42	file:
mt_suicide	fragstats.c	/^	mt_suicide,$/;"	e	enum:msgtype_s	file:
mt_tdm	match_tools.c	/^	mt_2on2, mt_3on3, mt_4on4, mt_tdm,$/;"	e	enum:__anon42	file:
mt_tf_clanwar	match_tools.c	/^	mt_tf_duel, mt_tf_clanwar,$/;"	e	enum:__anon42	file:
mt_tf_duel	match_tools.c	/^	mt_tf_duel, mt_tf_clanwar,$/;"	e	enum:__anon42	file:
mt_tkill	fragstats.c	/^	mt_tkill,$/;"	e	enum:msgtype_s	file:
mt_tkilled	fragstats.c	/^	mt_tkilled,$/;"	e	enum:msgtype_s	file:
mt_tkilled_unk	fragstats.c	/^	mt_tkilled_unk,$/;"	e	enum:msgtype_s	file:
mt_tkills	fragstats.c	/^	mt_tkills,$/;"	e	enum:msgtype_s	file:
mt_unknown	match_tools.c	/^	mt_unknown,$/;"	e	enum:__anon42	file:
mt_unknown_gamedir	match_tools.c	/^	mt_unknown_gamedir,$/;"	e	enum:__anon42	file:
mtexenabled	gl_texture.c	/^static qbool mtexenabled = false;$/;"	v	file:
mtexinfo_s	gl_model.h	/^typedef struct mtexinfo_s {$/;"	s
mtexinfo_s	r_model.h	/^typedef struct mtexinfo_s {$/;"	s
mtexinfo_t	gl_model.h	/^} mtexinfo_t;$/;"	t	typeref:struct:mtexinfo_s
mtexinfo_t	r_model.h	/^} mtexinfo_t;$/;"	t	typeref:struct:mtexinfo_s
mtime	fs.c	/^	unsigned int mtime;$/;"	m	struct:__anon20	file:
mtime	vfs_tar.h	/^  char mtime[12];               \/* 136 *\/$/;"	m	struct:tar_header
mtri_facesfront	asm_draw.h	146;"	d
mtri_shift	asm_draw.h	150;"	d
mtri_size	asm_draw.h	148;"	d
mtri_vertindex	asm_draw.h	147;"	d
mtriangle_s	gl_model.h	/^typedef struct mtriangle_s {$/;"	s
mtriangle_s	r_model.h	/^typedef struct mtriangle_s {$/;"	s
mtriangle_t	gl_model.h	/^} mtriangle_t;$/;"	t	typeref:struct:mtriangle_s
mtriangle_t	r_model.h	/^} mtriangle_t;$/;"	t	typeref:struct:mtriangle_s
multicast	server.h	/^	sizebuf_t	multicast;$/;"	m	struct:__anon264
multicast_buf	server.h	/^	byte		multicast_buf[MAX_MSGLEN];$/;"	m	struct:__anon264
multiteamcounts	match_tools.c	/^	char multiteamcounts[128];				$/;"	m	struct:matchinfo_s	file:
multiteamnames	match_tools.c	/^	char multiteamnames[MAX_STATIC_STRING];	$/;"	m	struct:matchinfo_s	file:
multitrack_id_1	mvd_autotrack.c	/^int multitrack_id_1 = 0;$/;"	v
multitrack_id_2	mvd_autotrack.c	/^int multitrack_id_2 = 0;$/;"	v
multitrack_id_3	mvd_autotrack.c	/^int multitrack_id_3 = 0;$/;"	v
multitrack_id_4	mvd_autotrack.c	/^int multitrack_id_4 = 0;$/;"	v
multitrack_str	mvd_autotrack.c	/^char *multitrack_str ;$/;"	v
multitrack_val	mvd_autotrack.c	/^char *multitrack_val ;$/;"	v
muzzleflashes_enum	menu_options.c	/^const char* muzzleflashes_enum[] =$/;"	v
mv_hudpos	cl_screen.c	/^int mv_hudpos = MV_HUD_POS_BOTTOM_CENTER;$/;"	v
mv_position	asm_draw.h	114;"	d
mv_size	asm_draw.h	115;"	d
mv_skinsforced	cl_main.c	/^qbool	mv_skinsforced;				\/\/ When using teamcolor\/enemycolor in multiview we can't just assume$/;"	v
mv_trackslots	cl_main.c	/^int		mv_trackslots[4];			\/\/ The different track slots for each view.$/;"	v
mv_viewrect_s	cl_screen.c	/^typedef struct mv_viewrect_s$/;"	s	file:
mv_viewrect_t	cl_screen.c	/^} mv_viewrect_t;$/;"	t	typeref:struct:mv_viewrect_s	file:
mvd_autohud	hud_common.c	/^cvar_t mvd_autohud = {"mvd_autohud", "0", 0, OnAutoHudChange};$/;"	v
mvd_autotrack	mvd_autotrack.c	/^cvar_t mvd_autotrack = {"mvd_autotrack", "0"};$/;"	v
mvd_autotrack_1on1	mvd_autotrack.c	/^cvar_t mvd_autotrack_1on1 = {"mvd_autotrack_1on1", "%a * %A + 50 * %W + %p + %f"};$/;"	v
mvd_autotrack_1on1_values	mvd_autotrack.c	/^cvar_t mvd_autotrack_1on1_values = {"mvd_autotrack_1on1_values", "1 2 3 2 3 5 8 8 1 2 3 0 0 0"};$/;"	v
mvd_autotrack_2on2	mvd_autotrack.c	/^cvar_t mvd_autotrack_2on2 = {"mvd_autotrack_2on2", "%a * %A + 50 * %W + %p + %f"};$/;"	v
mvd_autotrack_2on2_values	mvd_autotrack.c	/^cvar_t mvd_autotrack_2on2_values = {"mvd_autotrack_2on2_values", "1 2 3 2 3 5 8 8 1 2 3 500 900 1000"};$/;"	v
mvd_autotrack_4on4	mvd_autotrack.c	/^cvar_t mvd_autotrack_4on4 = {"mvd_autotrack_4on4", "%a * %A + 50 * %W + %p + %f"};$/;"	v
mvd_autotrack_4on4_values	mvd_autotrack.c	/^cvar_t mvd_autotrack_4on4_values = {"mvd_autotrack_4on4_values", "1 2 4 2 4 6 10 10 1 2 3 500 900 1000"};$/;"	v
mvd_autotrack_custom	mvd_autotrack.c	/^cvar_t mvd_autotrack_custom = {"mvd_autotrack_custom", "%a * %A + 50 * %W + %p + %f"};$/;"	v
mvd_autotrack_custom_values	mvd_autotrack.c	/^cvar_t mvd_autotrack_custom_values = {"mvd_autotrack_custom_values", "1 2 3 2 3 6 6 1 2 3 500 900 1000"};$/;"	v
mvd_autotrack_instant	mvd_autotrack.c	/^cvar_t mvd_autotrack_instant = {"mvd_autotrack_instant", "0"};$/;"	v
mvd_autotrack_lockteam	mvd_autotrack.c	/^cvar_t mvd_autotrack_lockteam = {"mvd_autotrack_lockteam", "0"};$/;"	v
mvd_avgruns_all_s	mvd_utils_common.h	/^typedef struct mvd_avgruns_all_s {$/;"	s
mvd_avgruns_all_t	mvd_utils_common.h	/^} mvd_avgruns_all_t;$/;"	t	typeref:struct:mvd_avgruns_all_s
mvd_avgruns_s	mvd_utils_common.h	/^typedef struct mvd_avgruns_s {$/;"	s
mvd_avgruns_t	mvd_utils_common.h	/^} mvd_avgruns_t;$/;"	t	typeref:struct:mvd_avgruns_s
mvd_cg_info	mvd_utils.c	/^mvd_cg_info_s mvd_cg_info;$/;"	v
mvd_cg_info_s	mvd_utils_common.h	/^typedef struct mvd_cg_info_s {$/;"	s
mvd_cg_info_s	mvd_utils_common.h	/^} mvd_cg_info_s;$/;"	t	typeref:struct:mvd_cg_info_s
mvd_current_cam	mvd_cam.c	/^int mvd_current_cam = -1;$/;"	v
mvd_demo_track_run	mvd_utils.c	/^int mvd_demo_track_run = 0;$/;"	v
mvd_done	mvd_cam.c	/^int mvd_done = 0;$/;"	v
mvd_ds_s	mvd_utils_common.h	/^typedef struct  mvd_ds_s {$/;"	s
mvd_ds_t	mvd_utils_common.h	/^} mvd_ds_t ;$/;"	t	typeref:struct:mvd_ds_s
mvd_event_s	mvd_utils_common.h	/^typedef struct mvd_event_s {$/;"	s
mvd_event_t	mvd_utils_common.h	/^} mvd_event_t;$/;"	t	typeref:struct:mvd_event_s
mvd_fixangle	cl_ents.c	/^int	mvd_fixangle;$/;"	v
mvd_flip	mvd_cam.c	/^int mvd_flip = 0;$/;"	v
mvd_function_exist	mvd_cam.c	/^int mvd_function_exist = 0;$/;"	v
mvd_gameinfo_s	mvd_utils.c	/^typedef struct mvd_gameinfo_s {$/;"	s	file:
mvd_gameinfo_t	mvd_utils.c	/^} mvd_gameinfo_t;$/;"	t	typeref:struct:mvd_gameinfo_s	file:
mvd_gt_info	mvd_utils.c	/^mvd_gt_info_t mvd_gt_info[mvd_gt_types] = {$/;"	v
mvd_gt_info_s	mvd_utils_common.h	/^typedef struct mvd_gt_info_s {$/;"	s
mvd_gt_info_t	mvd_utils_common.h	/^} mvd_gt_info_t;$/;"	t	typeref:struct:mvd_gt_info_s
mvd_gt_types	mvd_utils_common.h	177;"	d
mvd_info	mvd_utils.c	/^cvar_t			mvd_info		= {"mvd_info", "0"};$/;"	v
mvd_info_best_weapon	mvd_utils.c	/^char mvd_info_best_weapon[20];$/;"	v
mvd_info_s	mvd_utils_common.h	/^typedef struct mvd_info_s {$/;"	s
mvd_info_setup	mvd_utils.c	/^cvar_t			mvd_info_setup		= {"mvd_info_setup", "%p%n \\x10%l\\x11 %h\/%a %w"}; \/\/ FIXME: non-ascii chars$/;"	v
mvd_info_show_header	mvd_utils.c	/^cvar_t			mvd_info_show_header	= {"mvd_info_show_header", "0"};$/;"	v
mvd_info_t	mvd_utils_common.h	/^} mvd_info_t;$/;"	t	typeref:struct:mvd_info_s
mvd_info_types	mvd_utils_common.h	40;"	d
mvd_info_x	mvd_utils.c	/^cvar_t			mvd_info_x		= {"mvd_info_x", "0"};$/;"	v
mvd_info_y	mvd_utils.c	/^cvar_t			mvd_info_y		= {"mvd_info_y", "0"};$/;"	v
mvd_ks_s	mvd_utils_common.h	/^typedef struct mvd_ks_s {$/;"	s
mvd_ks_t	mvd_utils_common.h	/^} mvd_ks_t;$/;"	t	typeref:struct:mvd_ks_s
mvd_ks_w_s	mvd_utils_common.h	/^typedef struct mvd_ks_w_s {$/;"	s
mvd_ks_w_t	mvd_utils_common.h	/^} mvd_ks_w_t;$/;"	t	typeref:struct:mvd_ks_w_s
mvd_menu_s	mvd_cam.h	/^typedef struct mvd_menu_s {$/;"	s
mvd_menu_t	mvd_cam.h	/^} mvd_menu_t;$/;"	t	typeref:struct:mvd_menu_s
mvd_moreinfo	mvd_utils.c	/^cvar_t mvd_moreinfo = {"mvd_moreinfo","0"};$/;"	v
mvd_mouse_to_view	mvd_cam.c	/^int		mvd_mouse_to_view;$/;"	v
mvd_mouse_to_view_cnum	mvd_cam.c	/^int		mvd_mouse_to_view_cnum;$/;"	v
mvd_mouse_to_view_cpoint	mvd_cam.c	/^int		mvd_mouse_to_view_cpoint;$/;"	v
mvd_mouse_to_view_time	mvd_cam.c	/^double	mvd_mouse_to_view_time;$/;"	v
mvd_mouse_to_view_vnum	mvd_cam.c	/^int		mvd_mouse_to_view_vnum;$/;"	v
mvd_multitrack_1	mvd_autotrack.c	/^cvar_t mvd_multitrack_1 = {"mvd_multitrack_1", "%f"};$/;"	v
mvd_multitrack_1_values	mvd_autotrack.c	/^cvar_t mvd_multitrack_1_values = {"mvd_multitrack_1_values", "1 2 3 2 3 5 8 8 1 2 3 0 0 0"};$/;"	v
mvd_multitrack_2	mvd_autotrack.c	/^cvar_t mvd_multitrack_2 = {"mvd_multitrack_2", "%W"};$/;"	v
mvd_multitrack_2_values	mvd_autotrack.c	/^cvar_t mvd_multitrack_2_values = {"mvd_multitrack_2_values", "1 2 3 2 3 5 8 8 1 2 3 0 0 0"};$/;"	v
mvd_multitrack_3	mvd_autotrack.c	/^cvar_t mvd_multitrack_3 = {"mvd_multitrack_3", "%h"};$/;"	v
mvd_multitrack_3_values	mvd_autotrack.c	/^cvar_t mvd_multitrack_3_values = {"mvd_multitrack_3_values", "1 2 3 2 3 5 8 8 1 2 3 0 0 0"};$/;"	v
mvd_multitrack_4	mvd_autotrack.c	/^cvar_t mvd_multitrack_4 = {"mvd_multitrack_4", "%A"};$/;"	v
mvd_multitrack_4_values	mvd_autotrack.c	/^cvar_t mvd_multitrack_4_values = {"mvd_multitrack_4_values", "1 2 3 2 3 5 8 8 1 2 3 0 0 0"};$/;"	v
mvd_name_to_xml	mvd_xmlstats.c	/^static char *mvd_name_to_xml(char *s){$/;"	f	file:
mvd_new_info	mvd_utils.c	/^mvd_new_info_t mvd_new_info[MAX_CLIENTS];$/;"	v
mvd_new_info_cg_s	mvd_utils.c	/^typedef struct mvd_new_info_cg_s {$/;"	s	file:
mvd_new_info_cg_t	mvd_utils.c	/^} mvd_new_info_cg_t; \/\/ mvd_new_info_cg;$/;"	t	typeref:struct:mvd_new_info_cg_s	file:
mvd_new_info_s	mvd_utils_common.h	/^typedef struct mvd_new_info_s {$/;"	s
mvd_new_info_t	mvd_utils_common.h	/^} mvd_new_info_t;\/\/ mvd_new_info;$/;"	t	typeref:struct:mvd_new_info_s
mvd_nicks	mosdm.c	/^char	mvd_nicks[32][32];$/;"	v
mvd_nicks_count	mosdm.c	/^int		mvd_nicks_count;$/;"	v
mvd_pars_extra	mvd_autotrack.c	/^static const parser_extra mvd_pars_extra = { MVD_Var_Vals, NULL };$/;"	v	file:
mvd_pc_pent_1	mvd_utils.c	/^cvar_t mvd_pc_pent_1 = {"mvd_pc_pent_1","1010 -300 150 13 135"};$/;"	v
mvd_pc_pent_2	mvd_utils.c	/^cvar_t mvd_pc_pent_2 = {"mvd_pc_pent_2","1010 -300 150 13 135"};$/;"	v
mvd_pc_pent_3	mvd_utils.c	/^cvar_t mvd_pc_pent_3 = {"mvd_pc_pent_3","1010 -300 150 13 135"};$/;"	v
mvd_pc_quad_1	mvd_utils.c	/^cvar_t mvd_pc_quad_1 = {"mvd_pc_quad_1","1010 -300 150 13 135"};$/;"	v
mvd_pc_quad_2	mvd_utils.c	/^cvar_t mvd_pc_quad_2 = {"mvd_pc_quad_2","350 -20 157 34 360"};$/;"	v
mvd_pc_quad_3	mvd_utils.c	/^cvar_t mvd_pc_quad_3 = {"mvd_pc_quad_3","595 360 130 17 360"};$/;"	v
mvd_pc_view_1	mvd_utils.c	/^cvar_t mvd_pc_view_1 = {"mvd_pc_view_1",""};$/;"	v
mvd_pc_view_2	mvd_utils.c	/^cvar_t mvd_pc_view_2 = {"mvd_pc_view_2",""};$/;"	v
mvd_pc_view_3	mvd_utils.c	/^cvar_t mvd_pc_view_3 = {"mvd_pc_view_3",""};$/;"	v
mvd_pc_view_4	mvd_utils.c	/^cvar_t mvd_pc_view_4 = {"mvd_pc_view_4",""};$/;"	v
mvd_picture	mvd_cam.c	/^mpic_t *mvd_picture;$/;"	v
mvd_player_s	mvd_utils.c	/^typedef struct mvd_player_s {$/;"	s	file:
mvd_player_t	mvd_utils.c	/^} mvd_player_t;$/;"	t	typeref:struct:mvd_player_s	file:
mvd_powerup_cam	mvd_utils.c	/^cvar_t mvd_powerup_cam = {"mvd_powerup_cam","0"};$/;"	v
mvd_pw_s	mvd_utils_common.h	/^typedef struct mvd_pw_s {$/;"	s
mvd_pw_t	mvd_utils_common.h	/^} mvd_pw_t;$/;"	t	typeref:struct:mvd_pw_s
mvd_runs_s	mvd_utils_common.h	/^typedef struct mvd_runs_s {$/;"	s
mvd_runs_t	mvd_utils_common.h	/^} mvd_runs_t ;$/;"	t	typeref:struct:mvd_runs_s
mvd_s_e	mvd_xmlstats.c	/^static void mvd_s_e (FILE *f){$/;"	f	file:
mvd_s_h	mvd_xmlstats.c	/^static void mvd_s_h (FILE *f){$/;"	f	file:
mvd_s_p	mvd_xmlstats.c	/^static void mvd_s_p (FILE *f,int i,int k){$/;"	f	file:
mvd_s_t	mvd_xmlstats.c	/^static void mvd_s_t (FILE *f){$/;"	f	file:
mvd_status	mvd_utils.c	/^cvar_t			mvd_status		= {"mvd_status","0"};$/;"	v
mvd_status_x	mvd_utils.c	/^cvar_t			mvd_status_x		= {"mvd_status_x","0"};$/;"	v
mvd_status_y	mvd_utils.c	/^cvar_t			mvd_status_y		= {"mvd_status_y","0"};$/;"	v
mvd_vectoangles	mvd_cam.c	/^void mvd_vectoangles(vec3_t vec, vec3_t ang) {$/;"	f
mvd_wp_info	mvd_utils.c	/^mvd_wp_info_t mvd_wp_info[mvd_info_types] = {$/;"	v
mvd_wp_info_s	mvd_utils_common.h	/^typedef struct mvd_wp_info_s {$/;"	s
mvd_wp_info_t	mvd_utils_common.h	/^} mvd_wp_info_t;$/;"	t	typeref:struct:mvd_wp_info_s
mvdautohud_enum	menu_options.c	/^const char* mvdautohud_enum[] = { "off", "simple", "customizable" };$/;"	v
mvdautotrack_enum	menu_options.c	/^const char* mvdautotrack_enum[] = { "off", "auto", "custom", "multitrack", "simple" };$/;"	v
mvdplayback	client.h	/^	qbool		mvdplayback;	\/\/\/< Playing MVD.$/;"	m	struct:__anon122
mvertex_s	gl_model.h	/^typedef struct mvertex_s {$/;"	s
mvertex_s	r_model.h	/^typedef struct mvertex_s {$/;"	s
mvertex_t	gl_model.h	/^} mvertex_t;$/;"	t	typeref:struct:mvertex_s
mvertex_t	r_model.h	/^} mvertex_t;$/;"	t	typeref:struct:mvertex_s
mvlatch	cl_main.c	/^int		mvlatch;$/;"	v
mvs_askmode	menu_options.c	/^qbool mvs_askmode = false;$/;"	v
mvs_previous	menu_options.c	/^menu_video_settings_t mvs_previous;$/;"	v
mvs_selected	menu_options.c	/^menu_video_settings_t mvs_selected;$/;"	v
mw_hDLL	in_win.c	/^HINSTANCE mw_hDLL;$/;"	v
mw_old_buttons	in_win.c	/^static long mw_old_buttons = 0;$/;"	v	file:
mwheelmsg_t	winquake.h	/^typedef enum { MWHEEL_UNKNOWN, MWHEEL_DINPUT, MWHEEL_WINDOWMSG } mwheelmsg_t;$/;"	t	typeref:enum:__anon302
mwx	linux_glimp.c	/^static int mwx, mwy;$/;"	v	file:
mwy	linux_glimp.c	/^static int mwx, mwy;$/;"	v	file:
mx	linux_glimp.c	/^int mx, my;$/;"	v
mx	vid_glx.c	/^int mx, my;$/;"	v
mx	vid_svgalib.c	/^int mx, my;$/;"	v
mx	vid_x11.c	/^int mx, my;$/;"	v
mx_accum	in_win.c	/^int			mx_accum, my_accum;$/;"	v
my	linux_glimp.c	/^int mx, my;$/;"	v
my	vid_glx.c	/^int mx, my;$/;"	v
my	vid_svgalib.c	/^int mx, my;$/;"	v
my	vid_x11.c	/^int mx, my;$/;"	v
my_accum	in_win.c	/^int			mx_accum, my_accum;$/;"	v
my_dest_ptr	image.c	/^typedef my_destination_mgr *my_dest_ptr;$/;"	t	file:
my_destination_mgr	image.c	/^} my_destination_mgr;$/;"	t	typeref:struct:__anon32	file:
my_destination_mgr	image.c	/^} my_destination_mgr;$/;"	t	typeref:struct:__anon33	file:
my_error_exit	image.c	/^my_error_exit (j_common_ptr cinfo)$/;"	f
my_error_mgr	image.c	/^typedef struct my_error_mgr $/;"	s	file:
my_error_mgr	image.c	/^typedef struct my_error_mgr {$/;"	s	file:
my_error_ptr	image.c	/^typedef struct my_error_mgr * my_error_ptr;$/;"	t	typeref:struct:my_error_mgr	file:
my_source_mgr	image.c	/^} my_source_mgr;$/;"	t	typeref:struct:__anon34	file:
my_sqrt	sys_lib_linux.c	/^double (*my_sqrt)(double x);$/;"	v
my_sqrt	sys_lib_win.c	/^double (*my_sqrt)(double x);$/;"	v
my_sqrtf	sys_lib_linux.c	/^float (*my_sqrtf)(float x);$/;"	v
my_sqrtf	sys_lib_win.c	/^float (*my_sqrtf)(float x);$/;"	v
my_src_ptr	image.c	/^typedef my_source_mgr * my_src_ptr;$/;"	t	file:
myftos	cl_cam.c	/^static char *myftos (float f)$/;"	f	file:
myname	match_tools.c	/^	char myname[MAX_INFO_STRING];$/;"	m	struct:matchinfo_s	file:
myteam	sbar.c	/^	qbool myteam;$/;"	m	struct:__anon62	file:
nBonusflash	cl_main.c	/^int		nBonusflash;				\/\/ v_bonusflash$/;"	v
nContentblend	cl_main.c	/^int		nContentblend;				\/\/ v_contentblend$/;"	v
nContrastExit	cl_main.c	/^float	nContrastExit;				\/\/ v_contrast$/;"	v
nCrosshairExit	cl_main.c	/^float	nCrosshairExit;$/;"	v
nDamageshift	cl_main.c	/^float	nDamageshift;				\/\/ v_damagecshift$/;"	v
nGlClearExit	cl_main.c	/^float	nGlClearExit;				\/\/ gl_clear$/;"	v
nLerpframesExit	cl_main.c	/^int		nLerpframesExit;$/;"	v
nNumViews	cl_main.c	/^int		nNumViews;					\/\/ The number of views in multiview mode.$/;"	v
nPages	Ctrl_Tab.h	/^    int         nPages;$/;"	m	struct:CTab_s
nPentshift	cl_main.c	/^float	nPentshift;					\/\/ v_pentcshift$/;"	v
nPlayernum	cl_main.c	/^int		nPlayernum;$/;"	v
nPolyblendExit	cl_main.c	/^int		nPolyblendExit;				\/\/ gl_polyblend$/;"	v
nQuadshift	cl_main.c	/^float	nQuadshift;					\/\/ v_quadcshift$/;"	v
nRingshift	cl_main.c	/^float	nRingshift;					\/\/ v_ringcshift$/;"	v
nSuitshift	cl_main.c	/^float	nSuitshift;					\/\/ v_suitcshift$/;"	v
nSwapPov	cl_main.c	/^qbool	nSwapPov;					\/\/ When the player presses the JUMP button this is set to true to trigger a tracking swap.$/;"	v
nTrack1duel	cl_main.c	/^int		nTrack1duel;				\/\/ When cl_multiview = 2 and mvinset is on this is the tracking slot for the main view.$/;"	v
nTrack2duel	cl_main.c	/^int		nTrack2duel;				\/\/ When cl_multiview = 2 and mvinset is on this is the tracking slot for the mvinset view.$/;"	v
nViewsizeExit	cl_main.c	/^float nViewsizeExit=100;$/;"	v
nWaterwarp	cl_main.c	/^int		nWaterwarp;					\/\/ r_waterwarp$/;"	v
n_players	hud_common.c	/^static int						n_players;$/;"	v	file:
n_spectators	hud_common.c	/^static int						n_spectators;$/;"	v	file:
n_teams	hud_common.c	/^static int						n_teams;$/;"	v	file:
nails	sv_ents.c	/^edict_t	*nails[MAX_NAILS];$/;"	v
name	Ctrl_Tab.h	/^    char    name[TAB_MAX_NAME_LENGTH+1];$/;"	m	struct:CTabPage_s
name	EX_FileList.h	/^	char            name[MAX_PATH+1];$/;"	m	struct:filedesc_s
name	EX_browser.h	/^    char name [COL_NAME + 1];$/;"	m	struct:column_s
name	EX_browser.h	/^    char name[21];$/;"	m	struct:player_host_s
name	EX_browser.h	/^    char name[21];$/;"	m	struct:playerinfo_s
name	EX_browser.h	/^    char name[MAX_SOURCE_NAME+1];       \/\/ source name$/;"	m	struct:source_data_s
name	bspfile.h	/^	char		name[16];$/;"	m	struct:miptex_s
name	cam_event_system.c	/^	char *name;$/;"	m	struct:event_list_entry	file:
name	cl_cmd.c	/^	char	*name;$/;"	m	struct:__anon2	file:
name	cl_cmd.c	/^	const char	*name;$/;"	m	struct:__anon1	file:
name	cl_main.c	/^cvar_t	name = {"name", "player", CVAR_ARCHIVE|CVAR_USERINFO};$/;"	v
name	cl_screen.c	/^	char					*name;$/;"	m	struct:hud_element_s	file:
name	client.h	/^	char			name[16];$/;"	m	struct:__anon111
name	client.h	/^	char	name[MAX_SCOREBOARDNAME];$/;"	m	struct:player_info_s
name	cmd.h	/^	char					*name;$/;"	m	struct:cmd_function_s
name	cmd.h	/^	char				name[MAX_ALIAS_NAME];$/;"	m	struct:cmd_alias_s
name	cmd.h	/^	char name[MAX_MACRO_NAME];$/;"	m	struct:__anon129
name	common_draw.h	/^	char		name[MAX_QPATH];$/;"	m	struct:cachepic_s
name	cvar.h	/^	char	*name;$/;"	m	struct:cvar_s
name	cvar.h	/^	char	name[65];$/;"	m	struct:cvar_group_s
name	ez_controls.h	/^	char					*name;					\/\/ The name of the control.$/;"	m	struct:ez_control_s
name	ffmpeg.c	/^	char *name;$/;"	m	struct:libs	file:
name	fmod.c	/^	char		name[MAX_QPATH];$/;"	m	struct:check_models_s	file:
name	fragstats.c	/^	char	*name;$/;"	m	struct:wclass_s	file:
name	fs.c	/^    char    name[56];$/;"	m	struct:__anon16	file:
name	gl_md3.h	/^	char			name[MAX_QPATH];$/;"	m	struct:__anon159
name	gl_md3.h	/^	char		name[16];$/;"	m	struct:md3Frame_s
name	gl_md3.h	/^	char		name[MAX_QPATH];$/;"	m	struct:__anon154
name	gl_md3.h	/^	char	name[MAX_QPATH];	\/\/ polyset name$/;"	m	struct:__anon155
name	gl_md3.h	/^	char name[MAX_QPATH];	\/\/FIXME: pointer to shader. Requires model recaching when shader info is wiped though.$/;"	m	struct:__anon161
name	gl_md3.h	/^	char name[MAX_QPATH];$/;"	m	struct:__anon160
name	gl_model.h	/^	char				name[16];$/;"	m	struct:maliasframedesc_s
name	gl_model.h	/^	char				name[16];$/;"	m	struct:texture_s
name	gl_model.h	/^	char				name[MAX_QPATH];$/;"	m	struct:model_s
name	gl_texture.c	/^	char *name;$/;"	m	struct:__anon29	file:
name	hud.h	/^    char *name;							\/\/ Element name.$/;"	m	struct:hud_s
name	hud_common.c	/^    char *name;$/;"	m	struct:sort_teams_info_s	file:
name	keys.c	/^	char	*name;$/;"	m	struct:__anon38	file:
name	keys.c	/^	char *name;$/;"	m	struct:__anon37	file:
name	lua.c	/^	char *name;$/;"	m	struct:L_lua_states	file:
name	menu_demo.c	/^	char name[MAX_PATH];$/;"	m	struct:demo_playlist_s	file:
name	menu_multiplayer.c	/^	char    *name;$/;"	m	struct:__anon45	file:
name	mgraph.h	/^	char			name[_MGL_FNAMESIZE];\/* Name of the font			*\/$/;"	m	struct:__anon213
name	modelgen.h	/^	char		name[16];	\/\/ frame name from grabbing$/;"	m	struct:__anon227
name	modules.h	/^	char *name;$/;"	m	struct:qlib_dllfunction_s
name	mvd_cam.h	/^	char					name[64];$/;"	m	struct:mvd_menu_s
name	mvd_cam.h	/^	char	name[32];$/;"	m	struct:c_event_s
name	mvd_utils_common.h	/^	char	*name;$/;"	m	struct:mvd_wp_info_s
name	mvd_utils_common.h	/^	char *name;$/;"	m	struct:mvd_gt_info_s
name	new_menu.c	/^	char	*name;$/;"	m	struct:menu_ct	file:
name	new_menu.c	/^	char	*name;$/;"	m	struct:menu_s	file:
name	new_menu.c	/^	char *name;$/;"	m	struct:MS_Popup_Entry	file:
name	qsound.h	/^	char  name[MAX_QPATH];$/;"	m	struct:sfx_s
name	qtv.h	/^	char				name[MAX_INFO_KEY];				\/\/ client name, well must be unique too$/;"	m	struct:qtvuser_s
name	r_model.h	/^	char				name[16];$/;"	m	struct:maliasframedesc_s
name	r_model.h	/^	char				name[16];$/;"	m	struct:texture_s
name	r_model.h	/^	char				name[MAX_QPATH];$/;"	m	struct:model_s
name	server.h	/^	char		name[32];			\/\/ for printing to other people$/;"	m	struct:client_s
name	stats_grid.h	/^	char			name[MAX_INFO_STRING];	\/\/ The name of the entity (RA, RL, YA, QUAD).$/;"	m	struct:stats_entity_s
name	stats_grid.h	/^	char	name[MAX_INFO_STRING];			\/\/ Team name.$/;"	m	struct:stats_team_s
name	sv_user.c	/^	char		*name;$/;"	m	struct:__anon65	file:
name	sys_lib.h	/^	char *name;$/;"	m	struct:lib_functions
name	teamplay.h	/^	char *name;$/;"	m	struct:locdata_s
name	textencoding.c	/^	char *name;$/;"	m	struct:__anon70	file:
name	tp_triggers.c	/^	char	name[32];$/;"	m	struct:msg_trigger_s	file:
name	tp_triggers.c	/^	char *name;$/;"	m	struct:f_trigger_s	file:
name	tp_triggers.h	/^	char					*name;$/;"	m	struct:pcre_trigger_s
name	vfs.h	/^	char	name[MAX_QPATH];$/;"	m	struct:__anon291
name	vfs_doomwad.c	/^	char	name[8];$/;"	m	struct:__anon71	file:
name	vfs_pak.c	/^	char    name[56];$/;"	m	struct:__anon75	file:
name	vfs_tar.h	/^  char name[100];               \/*   0 *\/$/;"	m	struct:tar_header
name	vid_svgalib.c	/^	char *name;$/;"	m	struct:__anon80	file:
name	vx_stuff.c	/^	char *name;$/;"	m	struct:__anon91	file:
name	vx_tracker.c	/^	char *name; \/\/internal name$/;"	m	struct:__anon94	file:
name	wad.c	/^	char name[MAX_QPATH];$/;"	m	struct:__anon95	file:
name	wad.h	/^	char		name[16];				\/\/ must be null terminated$/;"	m	struct:__anon299
name	xsd_command.h	/^    char *name;$/;"	m	struct:command_argument_s
name	xsd_command.h	/^    char *name;$/;"	m	struct:xml_command_s
name	xsd_document.h	/^    char *name;$/;"	m	struct:xml_document_author_s
name	xsd_document.h	/^    document_tag_t *name;$/;"	m	struct:document_tag_di_s
name	xsd_variable.h	/^    char *name;$/;"	m	struct:variable_enum_value_s
name	xsd_variable.h	/^    char *name;$/;"	m	struct:xml_variable_s
name	zone.c	/^	char					name[16];$/;"	m	struct:cache_system_s	file:
name	zone.c	/^	char	name[8];$/;"	m	struct:__anon97	file:
name	zone2.h	/^	char name[POOLNAMESIZE];$/;"	m	struct:mempool_s
named_ints	settings.h	/^	const char** named_ints;	\/\/ array of strings; required for sett_named and stt_enum$/;"	m	struct:__anon272
navi_boxes	Ctrl_Tab.h	/^    struct { int x, y, x2, y2; } navi_boxes[TAB_MAX_TABS];$/;"	m	struct:CTab_s	typeref:struct:CTab_s::__anon137
navigation_mode	Ctrl_PageViewer.h	/^    qbool navigation_mode;$/;"	m	struct:CPageViewer_s
nd_children	asm_i386.h	61;"	d
nd_firstface	asm_i386.h	64;"	d
nd_maxs	asm_i386.h	63;"	d
nd_mins	asm_i386.h	62;"	d
nd_numfaces	asm_i386.h	65;"	d
nd_planenum	asm_i386.h	60;"	d
nd_size	asm_i386.h	66;"	d
nearestitemloc	teamplay.h	/^	char	nearestitemloc[MAX_LOC_NAME];$/;"	m	struct:tvars_s
nearzi	d_iface.h	/^	float			nearzi;$/;"	m	struct:__anon142
nearzi	d_iface.h	/^	float		nearzi;$/;"	m	struct:polydesc_s
nearzi	r_shared.h	/^	float			nearzi;$/;"	m	struct:edge_s
nearzi	r_shared.h	/^	float		nearzi;				\/\/ nearest 1\/z on surface, for mipmapping$/;"	m	struct:surf_s
need_refresh	EX_FileList.h	/^    qbool			need_refresh;   \/\/ Dir is reread in draw func$/;"	m	struct:filelist_s
need_resort	EX_FileList.h	/^    qbool			need_resort;    \/\/ Dir is sorted in draw func$/;"	m	struct:filelist_s
need_skin_refresh	teamplay.c	/^static qbool need_skin_refresh;$/;"	v	file:
needflags	teamplay.h	/^	int		needflags;	\/\/ sum of items player needs, updated on TP_GetNeed()$/;"	m	struct:tvars_s
needload	gl_model.h	/^	qbool				needload; \/\/ bmodels and sprites don't cache normally$/;"	m	struct:model_s
needload	r_model.h	/^	qbool				needload; \/\/ bmodels and sprites don't cache normally$/;"	m	struct:model_s
needs_sorting	linked_list.c	/^struct linked_list_node *needs_sorting(struct linked_list *list, int (*compare_function)(void *match, void *against))$/;"	f
nelms	EX_browser_ping.c	/^	int nelms;$/;"	m	struct:__anon14	file:
net	cl_parse.c	/^messages_t net;$/;"	v
net_from	net.c	/^netadr_t	net_from;$/;"	v
net_local_cl_ipadr	net.c	/^netadr_t	net_local_cl_ipadr;$/;"	v
net_local_sv_ipadr	net.c	/^netadr_t	net_local_sv_ipadr;$/;"	v
net_local_sv_tcpipadr	net.c	/^netadr_t	net_local_sv_tcpipadr;$/;"	v
net_message	net.c	/^sizebuf_t	net_message;$/;"	v
net_message_buffer	net.c	/^byte		net_message_buffer[MSG_BUF_SIZE];$/;"	v
net_stat_result_s	client.h	/^typedef struct net_stat_result_s$/;"	s
net_stat_result_t	client.h	/^} net_stat_result_t;$/;"	t	typeref:struct:net_stat_result_s
netadr_t	net.h	/^} netadr_t;$/;"	t	typeref:struct:__anon239
netadrtype_t	net.h	/^typedef enum {NA_INVALID, NA_LOOPBACK, NA_IP} netadrtype_t;$/;"	t	typeref:enum:__anon237
netchan	client.h	/^	netchan_t	netchan;$/;"	m	struct:__anon122
netchan	server.h	/^	netchan_t	netchan;$/;"	m	struct:client_s
netchan_t	net.h	/^} netchan_t;$/;"	t	typeref:struct:__anon240
netgraphtexture	gl_ngraph.c	/^int	netgraphtexture;	\/\/ netgraph texture$/;"	v
netname	progdefs.h	/^	string_t	netname;$/;"	m	struct:__anon253
netsrc_t	net.h	/^typedef enum {NS_CLIENT, NS_SERVER} netsrc_t;$/;"	t	typeref:enum:__anon238
network_stats	cl_parse.c	/^packet_info_t network_stats[NETWORK_STATS_SIZE];$/;"	v
new_menu_sensitivity	new_menu.c	/^cvar_t	new_menu_sensitivity	=	{"jogi_menu_system_sensitivity", "0.1"};$/;"	v
new_vidmode	vid_glx.c	/^static int new_vidmode = 0;$/;"	v	file:
newedges	r_edge.c	/^edge_t	*newedges[MAXHEIGHT];$/;"	v
newmainmenu	menu.c	/^static qbool	newmainmenu = false;$/;"	v	file:
newmis	progdefs.h	/^	int	newmis;$/;"	m	struct:__anon252
newmouseparms	in_win.c	/^static int originalmouseparms[3], newmouseparms[3];$/;"	v	file:
newname	cmd.c	/^	char *oldname, *newname;$/;"	m	struct:legacycmd_s	file:
newname	gl_model.c	/^	char *origname, *newname;$/;"	m	struct:__anon22	file:
newserver_pos	EX_browser.c	/^int newserver_pos;$/;"	v
newsky	r_sky.c	/^byte	newsky[128*256];	\/\/ newsky and topsky both pack in here, 128 bytes$/;"	v
newsource_master	EX_browser.c	/^int newsource_master; \/\/ 0 = file$/;"	v
newsource_pos	EX_browser.c	/^int newsource_pos;$/;"	v
newvmode	vid_glx.c	/^XF86VidModeModeInfo newvmode;$/;"	v
next	Ctrl_PageViewer.h	/^    struct CPageViewer_page_s *next;$/;"	m	struct:CPageViewer_page_s	typeref:struct:CPageViewer_page_s::CPageViewer_page_s
next	cam_new.c	/^	struct	CamSys_Spline *next, *prev;$/;"	m	struct:CamSys_Spline	typeref:struct:CamSys_Spline::CamSys_Spline	file:
next	cam_new.h	/^	struct	CamSys_Spline *next, *prev;$/;"	m	struct:CamSys_Spline	typeref:struct:CamSys_Spline::CamSys_Spline
next	cl_screen.c	/^	struct hud_element_s*	next;$/;"	m	struct:hud_element_s	typeref:struct:hud_element_s::hud_element_s	file:
next	cl_tent.c	/^	struct explosion_s *prev, *next;$/;"	m	struct:explosion_s	typeref:struct:explosion_s::	file:
next	cmd.c	/^	struct legacycmd_s *next;$/;"	m	struct:legacycmd_s	typeref:struct:legacycmd_s::legacycmd_s	file:
next	cmd.h	/^	struct cmd_alias_s	*next;$/;"	m	struct:cmd_alias_s	typeref:struct:cmd_alias_s::cmd_alias_s
next	cmd.h	/^	struct cmd_function_s	*next;$/;"	m	struct:cmd_function_s	typeref:struct:cmd_function_s::cmd_function_s
next	common_draw.h	/^	struct cachepic_node_s *next;$/;"	m	struct:cachepic_node_s	typeref:struct:cachepic_node_s::cachepic_node_s
next	cvar.h	/^	struct cvar_group_s *next;$/;"	m	struct:cvar_group_s	typeref:struct:cvar_group_s::cvar_group_s
next	cvar.h	/^	struct cvar_s *next;$/;"	m	struct:cvar_s	typeref:struct:cvar_s::cvar_s
next	d_iface.h	/^	struct particle_s	*next;$/;"	m	struct:particle_s	typeref:struct:particle_s::particle_s
next	d_local.h	/^	struct surfcache_s	*next;$/;"	m	struct:surfcache_s	typeref:struct:surfcache_s::surfcache_s
next	document_rendering.h	/^    struct document_rendered_link_s *next;$/;"	m	struct:document_rendered_link_s	typeref:struct:document_rendered_link_s::document_rendered_link_s
next	document_rendering.h	/^    struct document_rendered_section_s *next;$/;"	m	struct:document_rendered_section_s	typeref:struct:document_rendered_section_s::document_rendered_section_s
next	ez_controls.h	/^	struct ez_dllist_node_s *next;$/;"	m	struct:ez_dllist_node_s	typeref:struct:ez_dllist_node_s::ez_dllist_node_s
next	ez_controls.h	/^	struct ez_eventhandler_s	*next;$/;"	m	struct:ez_eventhandler_s	typeref:struct:ez_eventhandler_s::ez_eventhandler_s
next	ffmpeg.c	/^	struct frames_list_s *next;$/;"	m	struct:frames_list_s	typeref:struct:frames_list_s::frames_list_s	file:
next	fmod.c	/^	struct check_models_hashes_entry_s* next;$/;"	m	struct:check_models_hashes_entry_s	typeref:struct:check_models_hashes_entry_s::check_models_hashes_entry_s	file:
next	gl_model.h	/^	struct	glpoly_s	*next;$/;"	m	struct:glpoly_s	typeref:struct:glpoly_s::glpoly_s
next	gl_rpart.c	/^	struct particle_s *next;$/;"	m	struct:particle_s	typeref:struct:particle_s::particle_s	file:
next	hash.h	/^	struct bucket_s *next;$/;"	m	struct:bucket_s	typeref:struct:bucket_s::bucket_s
next	hud.h	/^    struct hud_s *next;					\/\/ Next HUD in the list.$/;"	m	struct:hud_s	typeref:struct:hud_s::hud_s
next	hud_editor.c	/^	struct hud_grephandle_s	*next;$/;"	m	struct:hud_grephandle_s	typeref:struct:hud_grephandle_s::hud_grephandle_s	file:
next	linked_list.c	/^	struct linked_list *next, *prev;$/;"	m	struct:linked_list	typeref:struct:linked_list::linked_list	file:
next	linked_list.c	/^	struct linked_list_node *next, *prev;$/;"	m	struct:linked_list_node	typeref:struct:linked_list_node::linked_list_node	file:
next	linked_list.h	/^	struct linked_list_node *next, *prev;$/;"	m	struct:linked_list_node	typeref:struct:linked_list_node::linked_list_node
next	lua.c	/^	struct L_lua_states *next, *prev;$/;"	m	struct:L_lua_states	typeref:struct:L_lua_states::L_lua_states	file:
next	match_tools.c	/^	struct mapgroup_s *next, *prev;$/;"	m	struct:mapgroup_s	typeref:struct:mapgroup_s::mapgroup_s	file:
next	match_tools.c	/^	struct skygroup_s *next, *prev;$/;"	m	struct:skygroup_s	typeref:struct:skygroup_s::skygroup_s	file:
next	mgraph.h	/^	m_int		next;   		\/* Next event in queue					*\/$/;"	m	struct:__anon219
next	mosdm.c	/^	struct	menu_llist_s	*next;$/;"	m	struct:menu_llist_s	typeref:struct:menu_llist_s::menu_llist_s	file:
next	mvd_cam.h	/^	struct	c_event_s *next;$/;"	m	struct:c_event_s	typeref:struct:c_event_s::c_event_s
next	new_menu.c	/^	struct	menu_ct	*next;$/;"	m	struct:menu_ct	typeref:struct:menu_ct::menu_ct	file:
next	new_menu.c	/^	struct	menu_s *next;$/;"	m	struct:menu_s	typeref:struct:menu_s::menu_s	file:
next	new_menu.c	/^	struct MS_Popup_Entry *next, *prev;$/;"	m	struct:MS_Popup_Entry	typeref:struct:MS_Popup_Entry::MS_Popup_Entry	file:
next	new_menu.c	/^	struct MS_Popup_Menu_Menu *next, *prev;$/;"	m	struct:MS_Popup_Menu_Menu	typeref:struct:MS_Popup_Menu_Menu::MS_Popup_Menu_Menu	file:
next	progs.h	/^	struct link_s	*prev, *next;$/;"	m	struct:link_s	typeref:struct:link_s::
next	qtv.h	/^	struct qtvuser_s	*next;							\/\/ next qtvuser_s struct in our list$/;"	m	struct:qtvuser_s	typeref:struct:qtvuser_s::qtvuser_s
next	r_local.h	/^	struct		clipplane_s	*next;$/;"	m	struct:clipplane_s	typeref:struct:clipplane_s::clipplane_s
next	r_part.c	/^	struct particle_s	*next;$/;"	m	struct:particle_s	typeref:struct:particle_s::particle_s	file:
next	r_shared.h	/^	struct edge_s	*prev, *next;$/;"	m	struct:edge_s	typeref:struct:edge_s::
next	r_shared.h	/^	struct surf_s	*next;			\/\/ active surface stack in r_edge.c$/;"	m	struct:surf_s	typeref:struct:surf_s::surf_s
next	server.h	/^	struct svtcpstream_s *next;$/;"	m	struct:svtcpstream_s	typeref:struct:svtcpstream_s::svtcpstream_s
next	splines.c	/^	struct	spline *next, *prev;$/;"	m	struct:spline	typeref:struct:spline::spline	file:
next	splines.c	/^	struct	spline_point *next, *prev;$/;"	m	struct:spline_point	typeref:struct:spline_point::spline_point	file:
next	teamplay.h	/^	struct locdata_s *next;$/;"	m	struct:locdata_s	typeref:struct:locdata_s::locdata_s
next	timer.c	/^	struct timer *next, *prev;$/;"	m	struct:timer	typeref:struct:timer::timer	file:
next	tp_triggers.c	/^	struct msg_trigger_s *next;$/;"	m	struct:msg_trigger_s	typeref:struct:msg_trigger_s::msg_trigger_s	file:
next	tp_triggers.h	/^	struct pcre_internal_trigger_s	*next;$/;"	m	struct:pcre_internal_trigger_s	typeref:struct:pcre_internal_trigger_s::pcre_internal_trigger_s
next	tp_triggers.h	/^	struct pcre_trigger_s*	next;$/;"	m	struct:pcre_trigger_s	typeref:struct:pcre_trigger_s::pcre_trigger_s
next	vfs.h	/^	struct searchpath_s *next;$/;"	m	struct:searchpath_s	typeref:struct:searchpath_s::searchpath_s
next	vfs_tar.h	/^  struct attr_item  *next;$/;"	m	struct:attr_item	typeref:struct:attr_item::attr_item
next	vfs_tcp.c	/^	struct tcpfile_s *next;$/;"	m	struct:tcpfile_s	typeref:struct:tcpfile_s::tcpfile_s	file:
next	xsd_command.h	/^    struct command_argument_s *next;$/;"	m	struct:command_argument_s	typeref:struct:command_argument_s::command_argument_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_a_s	typeref:struct:document_tag_a_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_br_s	typeref:struct:document_tag_br_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_color_s	typeref:struct:document_tag_color_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_di_s	typeref:struct:document_tag_di_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_dict_s	typeref:struct:document_tag_dict_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_em_s	typeref:struct:document_tag_em_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_h_s	typeref:struct:document_tag_h_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_hr_s	typeref:struct:document_tag_hr_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_img_s	typeref:struct:document_tag_img_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_li_s	typeref:struct:document_tag_li_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_list_s	typeref:struct:document_tag_list_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_p_s	typeref:struct:document_tag_p_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_pre_s	typeref:struct:document_tag_pre_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_s	typeref:struct:document_tag_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_section_s	typeref:struct:document_tag_section_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_sp_s	typeref:struct:document_tag_sp_s::document_tag_s
next	xsd_document.h	/^    struct document_tag_s *next;$/;"	m	struct:document_tag_text_s	typeref:struct:document_tag_text_s::document_tag_s
next	xsd_document.h	/^    struct xml_document_author_s *next;$/;"	m	struct:xml_document_author_s	typeref:struct:xml_document_author_s::xml_document_author_s
next	xsd_variable.h	/^    struct variable_enum_value_s *next;$/;"	m	struct:variable_enum_value_s	typeref:struct:variable_enum_value_s::variable_enum_value_s
next	zone.c	/^	struct cache_system_s	*prev, *next;$/;"	m	struct:cache_system_s	typeref:struct:cache_system_s::	file:
next	zone2.h	/^	struct memheader_s *next;$/;"	m	struct:memheader_s	typeref:struct:memheader_s::memheader_s
next	zone2.h	/^	struct mempool_s *next;$/;"	m	struct:mempool_s	typeref:struct:mempool_s::mempool_s
next_in_group	cvar.h	/^	struct cvar_s *next_in_group;	$/;"	m	struct:cvar_s	typeref:struct:cvar_s::cvar_s
next_nonspace	EX_browser_sources.c	/^char * next_nonspace(char *s)$/;"	f
next_quote	EX_browser_sources.c	/^char * next_quote(char *s)$/;"	f
next_space	EX_browser_sources.c	/^char * next_space(char *s)$/;"	f
nextdemotime	cl_demo.c	/^float olddemotime, nextdemotime;$/;"	v
nextremove	r_shared.h	/^	struct edge_s	*nextremove;$/;"	m	struct:edge_s	typeref:struct:edge_s::edge_s
nextthink	progdefs.h	/^	float	nextthink;$/;"	m	struct:__anon253
nfakeshaft	cl_main.c	/^float	nfakeshaft;					\/\/ cl_fakeshaft$/;"	v
ng_val	mvd_autotrack.c	57;"	d	file:
nick	cl_screen.c	/^	char		nick[TEAMINFO_NICKLEN]; \/\/ yeah, nick is nick, must be short$/;"	m	struct:ti_player_s	file:
nickname	match_tools.c	/^	char		*nickname;$/;"	m	struct:matchcvar_s	file:
nil	cam_event_system.h	/^	void *nil;$/;"	m	struct:event_list
nil	cam_event_system.h	/^	void *nil;$/;"	m	struct:event_list_entry
nil	linked_list.h	/^	void *nil;$/;"	m	struct:linked_list
nix	timer.h	/^	void *nix;$/;"	m	struct:timer
no24bit	gl_texture.c	/^static qbool no24bit, forceTextureReload;$/;"	v	file:
noaim	cl_main.c	/^cvar_t  noaim = {"noaim", "1", CVAR_ARCHIVE|CVAR_USERINFO};$/;"	v
noconinput	sys_linux.c	/^int noconinput = 0;$/;"	v
noconinput	sys_mac.c	/^int noconinput = 0;$/;"	v
nocopy	document_rendering.c	/^    int     nocopy;$/;"	m	struct:document_rendering_context_s	file:
node	cam_event_system.c	/^	struct linked_list node;$/;"	m	struct:event_list_entry_value	typeref:struct:event_list_entry_value::linked_list	file:
node	cam_event_system.c	/^	struct linked_list_node node;$/;"	m	struct:event_list_entry	typeref:struct:event_list_entry::linked_list_node	file:
node	linked_list.c	/^	struct linked_list_node *node;$/;"	m	struct:linked_list	typeref:struct:linked_list::linked_list_node	file:
node	nmenu_demo.c	/^	struct linked_list_node node;$/;"	m	struct:demo_bookmark	typeref:struct:demo_bookmark::linked_list_node	file:
nodes	gl_model.h	/^	mnode_t				*nodes;$/;"	m	struct:model_s
nodes	r_model.h	/^	mnode_t				*nodes;$/;"	m	struct:model_s
nodrawnode	r_bsp.c	/^typedef enum {touchessolid, drawnode, nodrawnode} solidstate_t;$/;"	e	enum:__anon57	file:
nodrift	client.h	/^	qbool		nodrift;$/;"	m	struct:__anon125
noise	progdefs.h	/^	string_t	noise;$/;"	m	struct:__anon253
noise1	progdefs.h	/^	string_t	noise1;$/;"	m	struct:__anon253
noise2	progdefs.h	/^	string_t	noise2;$/;"	m	struct:__anon253
noise3	progdefs.h	/^	string_t	noise3;$/;"	m	struct:__anon253
nometadata	document_rendering.c	/^    int     nometadata;$/;"	m	struct:document_rendering_context_s	file:
normal	bspfile.h	/^	float	normal[3];$/;"	m	struct:__anon103
normal	cmodel.h	/^	vec3_t	normal;$/;"	m	struct:__anon132
normal	cmodel.h	/^	vec3_t	normal;$/;"	m	struct:mplane_s
normal	ez_controls.h	/^	ez_eventhandler_fp				normal;$/;"	m	union:ez_eventhandlerfunction_u
normal	gl_md3.h	/^	unsigned short normal;$/;"	m	struct:__anon156
normal	mvd_utils_common.h	/^	mvd_ks_w_t normal[8];	\/\/ weapon kills axe - lg$/;"	m	struct:mvd_ks_s
normal	r_local.h	/^	vec3_t		normal;$/;"	m	struct:clipplane_s
normal_image	ez_button.h	/^	mpic_t					*normal_image;		\/\/ The normal image used for the button.$/;"	m	struct:ez_button_s
normal_text_color	ez_button.h	/^	clrinfo_t				normal_text_color;	\/\/ Text color when the button is in it's normal state.$/;"	m	struct:ez_button_s
noskins	skin.c	/^cvar_t	noskins = {"noskins", "0"};$/;"	v
notKeyEvents	sys_mac.c	511;"	d	file:
notify	vx_stuff.c	/^	qbool notify;$/;"	m	struct:__anon91	file:
nplayers	hud_common.c	/^    int  nplayers;$/;"	m	struct:sort_teams_info_s	file:
nq_drawpings	cl_nqdemo.c	/^qbool	nq_drawpings;	\/\/ for sbar code$/;"	v
nq_forcecdtrack	cl_nqdemo.c	/^static int		nq_forcecdtrack;$/;"	v	file:
nq_last_fixangle	cl_nqdemo.c	/^static vec3_t	nq_last_fixangle;$/;"	v	file:
nq_maxclients	cl_nqdemo.c	/^static int		nq_maxclients;$/;"	v	file:
nq_mtime	cl_nqdemo.c	/^static float	nq_mtime[2];$/;"	v	file:
nq_mvelocity	cl_nqdemo.c	/^static vec3_t	nq_mvelocity[2];$/;"	v	file:
nq_mviewangles	cl_nqdemo.c	/^static vec3_t	nq_mviewangles[2];$/;"	v	file:
nq_mviewangles_temp	cl_nqdemo.c	/^static vec3_t	nq_mviewangles_temp;$/;"	v	file:
nq_num_entities	cl_nqdemo.c	/^static int		nq_num_entities;$/;"	v	file:
nq_player_teleported	cl_nqdemo.c	/^static qbool	nq_player_teleported;	\/\/ hacky$/;"	v	file:
nq_signon	cl_nqdemo.c	/^static int		nq_signon;$/;"	v	file:
nq_svc_clientdata	protocol.h	119;"	d
nq_svc_cutscene	protocol.h	146;"	d
nq_svc_particle	protocol.h	122;"	d
nq_svc_signonnum	protocol.h	131;"	d
nq_svc_time	protocol.h	109;"	d
nq_svc_updatecolors	protocol.h	121;"	d
nq_svc_updatename	protocol.h	117;"	d
nq_svc_version	protocol.h	106;"	d
nq_viewentity	cl_nqdemo.c	/^static int		nq_viewentity;$/;"	v	file:
nqdemoplayback	client.h	/^	qbool		nqdemoplayback;$/;"	m	struct:__anon122
null	cam_new_menu.c	/^	void *null;$/;"	m	struct:MS_Popup_Entry	file:
null	cam_new_menu.c	/^	void *null;$/;"	m	struct:MS_Popup_Menu_Menu	file:
null	new_menu.h	/^	void *null;$/;"	m	struct:MS_Popup_Entry
null	new_menu.h	/^	void *null;$/;"	m	struct:MS_Popup_Menu_Menu
null	new_menu.h	/^	void *null;$/;"	m	struct:menu_ct
null	new_menu.h	/^	void *null;$/;"	m	struct:menu_s
nullcmd	common.c	/^usercmd_t nullcmd; \/\/ guaranteed to be zero$/;"	v
num	cl_ents.c	/^	int		num;	$/;"	m	struct:__anon3	file:
num	mosdm.c	/^int *num;$/;"	v
num	vid_svgalib.c	/^	int num;$/;"	m	struct:__anon80	file:
numDevices	vid_mac.c	/^int numDevices = 0;\/\/ Total devices found (must be at least 1)$/;"	v
numFrames	gl_md3.h	/^	int			numFrames;$/;"	m	struct:__anon154
numFrames	gl_md3.h	/^	int		numFrames;			\/\/ all surfaces in a model should have the same$/;"	m	struct:__anon155
numModes	mac.h	/^	UInt16			numModes;	\/\/ number of valid modes found for this devices$/;"	m	struct:__anon174
numShaders	gl_md3.h	/^	int		numShaders;			\/\/ all surfaces in a model should have the same$/;"	m	struct:__anon155
numSkins	gl_md3.h	/^	int			numSkins;$/;"	m	struct:__anon154
numSurfaces	gl_md3.h	/^	int			numSurfaces;$/;"	m	struct:__anon154
numTags	gl_md3.h	/^	int			numTags;			$/;"	m	struct:__anon154
numTriangles	gl_md3.h	/^	int		numTriangles;$/;"	m	struct:__anon155
numVerts	gl_md3.h	/^	int		numVerts;$/;"	m	struct:__anon155
num_align_strings_x	hud.c	18;"	d	file:
num_align_strings_y	hud.c	27;"	d	file:
num_backbuf	server.h	/^	int			num_backbuf;$/;"	m	struct:client_s
num_citextures	cl_screen.c	/^	num_citextures,$/;"	e	enum:__anon4	file:
num_cols	ez_label.h	/^	int						num_cols;					\/\/ The current number of cols (for the longest row).$/;"	m	struct:ez_label_s
num_cptextures	console.c	/^	num_cptextures,$/;"	e	enum:__anon9	file:
num_edicts	server.h	/^	int			num_edicts;			\/\/ increases towards MAX_EDICTS$/;"	m	struct:__anon264
num_entities	protocol.h	/^	int		num_entities;$/;"	m	struct:packet_entities_s
num_entries	EX_FileList.h	/^    int				num_entries;$/;"	m	struct:filelist_s
num_f_triggers	tp_triggers.c	94;"	d	file:
num_filetypes	EX_FileList.h	/^    int				num_filetypes;$/;"	m	struct:filelist_s
num_filters	teamplay.c	/^int	num_filters = 0;$/;"	v
num_fragmsgs	fragstats.c	/^	int			num_fragmsgs;$/;"	m	struct:fragdef_s	file:
num_leafs	progs.h	/^	int			num_leafs;$/;"	m	struct:edict_s
num_modes	vid_svgalib.c	/^static int num_modes;$/;"	v	file:
num_params	hud.h	/^    int num_params;$/;"	m	struct:hud_s
num_particletextures	gl_rpart.c	/^	num_particletextures,$/;"	e	enum:__anon26	file:
num_particletypes	gl_rpart.c	/^	num_particletypes,$/;"	e	enum:__anon24	file:
num_prstr	pr_exec.c	/^int num_prstr;$/;"	v
num_rows	ez_label.h	/^	int						num_rows;					\/\/ The current number of rows in the label.$/;"	m	struct:ez_label_s
num_sfx	snd_dma.c	/^static int	num_sfx;$/;"	v	file:
num_signon_buffers	server.h	/^	int			num_signon_buffers;$/;"	m	struct:__anon264
num_snap_strings	hud.c	37;"	d	file:
num_static_sounds	client.h	/^	int			num_static_sounds;$/;"	m	struct:__anon125
num_statics	client.h	/^	int			num_statics;		\/\/\/< stored top down in cl_entities$/;"	m	struct:__anon125
num_svc_strings	cl_parse.c	/^const int num_svc_strings = sizeof(svc_strings)\/sizeof(svc_strings[0]);$/;"	v
num_tokens	pr_cmds.c	/^static int max_tokens, num_tokens = 0;$/;"	v	file:
num_vidmodes	linux_glimp.c	/^static int num_vidmodes;$/;"	v	file:
num_vidmodes	vid_glx.c	/^static int num_vidmodes;$/;"	v	file:
num_wclasses	fragstats.c	/^static int num_wclasses;$/;"	v	file:
numarrays	zone2.h	/^	size_t numarrays;$/;"	m	struct:memexpandablearray_s
numbedges	r_bsp.c	/^static int			numbverts, numbedges;$/;"	v	file:
number	cam_new.c	/^	int		show, enable, resolution, number;$/;"	m	struct:CamSys_Spline	file:
number	cam_new.h	/^	int		show, enable, resolution, number;$/;"	m	struct:CamSys_Spline
number	protocol.h	/^	int		number;			\/\/ edict index$/;"	m	struct:entity_state_s
number	splines.c	/^	int		number;$/;"	m	struct:spline_point	file:
number	vx_stuff.c	/^	char *number;$/;"	m	struct:__anon91	file:
numberOfPlanes	mgraph.h	/^	m_int	numberOfPlanes;	\/* Number of planes in image				*\/$/;"	m	struct:__anon217
numbuckets	hash.h	/^	int numbuckets;$/;"	m	struct:hashtable_s
numbuttons	in_win.c	/^	int				numbuttons;$/;"	m	struct:__anon35	file:
numbverts	r_bsp.c	/^static int			numbverts, numbedges;$/;"	v	file:
numclipnodes	cmodel.c	/^static int			numclipnodes;$/;"	v	file:
numcmodels	cmodel.c	/^static int			numcmodels;$/;"	v	file:
numcommands	gl_mesh.c	/^int		numcommands;$/;"	v
numdlights	gl_rsurf.c	/^static int numdlights;$/;"	v	file:
numdlights	r_surf.c	/^static int	numdlights;$/;"	v	file:
numedges	bspfile.h	/^	short		numedges;	$/;"	m	struct:__anon107
numedges	gl_model.h	/^	int					numedges;					\/\/ are backwards edges$/;"	m	struct:msurface_s
numedges	gl_model.h	/^	int					numedges;$/;"	m	struct:model_s
numedges	r_model.h	/^	int					numedges;					\/\/ are backwards edges$/;"	m	struct:msurface_s
numedges	r_model.h	/^	int					numedges;$/;"	m	struct:model_s
numenemies	teamplay.h	/^	int	numenemies;$/;"	m	struct:tvars_s
numfaces	bspfile.h	/^	int			firstface, numfaces;$/;"	m	struct:__anon99
numfaces	bspfile.h	/^	unsigned short	numfaces;	\/\/ counting both sides$/;"	m	struct:__anon104
numfielddefs	pr_comp.h	/^	int		numfielddefs;$/;"	m	struct:__anon251
numfiles	fs.c	/^	int     numfiles;$/;"	m	struct:pack_s	file:
numfiles	vfs_pak.c	/^	int     numfiles;$/;"	m	struct:pack_s	file:
numfiles	vfs_tar.c	/^	int numfiles;$/;"	m	struct:tarfile_s	file:
numfiles	vfs_zip.c	/^	int		numfiles;$/;"	m	struct:zipfile_s	file:
numflaggedrecords	zone2.h	/^	size_t numflaggedrecords;$/;"	m	struct:memexpandablearray_array_s
numframes	gl_md3.h	/^	int numframes;$/;"	m	struct:__anon162
numframes	gl_model.h	/^	int					numframes;			\/\/ always 1 for type == SPR_SINGLE$/;"	m	struct:mspriteframedesc2_s
numframes	gl_model.h	/^	int					numframes;$/;"	m	struct:aliashdr_s
numframes	gl_model.h	/^	int					numframes;$/;"	m	struct:maliasgroup_s
numframes	gl_model.h	/^	int					numframes;$/;"	m	struct:model_s
numframes	gl_model.h	/^	int					numframes;$/;"	m	struct:msprite2_s
numframes	gl_model.h	/^	int					numframes;$/;"	m	struct:msprite_s
numframes	gl_model.h	/^	int					numframes;$/;"	m	struct:mspritegroup_s
numframes	modelgen.h	/^	int			numframes;$/;"	m	struct:__anon224
numframes	modelgen.h	/^	int			numframes;$/;"	m	struct:__anon228
numframes	r_model.h	/^	int					numframes;$/;"	m	struct:maliasgroup_s
numframes	r_model.h	/^	int					numframes;$/;"	m	struct:model_s
numframes	r_model.h	/^	int					numframes;$/;"	m	struct:msprite_s
numframes	r_model.h	/^	int					numframes;$/;"	m	struct:mspritegroup_s
numframes	spritegn.h	/^	int			numframes;$/;"	m	struct:__anon277
numframes	spritegn.h	/^	int			numframes;$/;"	m	struct:__anon279
numfriendlies	teamplay.h	/^	int	numfriendlies;$/;"	m	struct:tvars_s
numfunctions	pr_comp.h	/^	int		numfunctions;	\/\/ function 0 is an empty$/;"	m	struct:__anon251
numglobaldefs	pr_comp.h	/^	int		numglobaldefs;$/;"	m	struct:__anon251
numglobals	pr_comp.h	/^	int		numglobals;$/;"	m	struct:__anon251
numgltextures	gl_texture.c	/^static int			numgltextures = 0;$/;"	v	file:
numipfilters	sv_main.c	/^int			numipfilters;$/;"	v
numleafs	cmodel.c	/^static int			numleafs;$/;"	v	file:
numleafs	gl_model.h	/^	int					numleafs; \/\/ number of visible leafs, not counting 0$/;"	m	struct:model_s
numleafs	r_model.h	/^	int					numleafs; \/\/ number of visible leafs, not counting 0$/;"	m	struct:model_s
numleftedges	d_polyse.c	/^	int		numleftedges;$/;"	m	struct:__anon11	file:
numlines	console.h	/^	int		numlines;		\/\/ number of non-blank text lines, used for backscroling$/;"	m	struct:__anon136
numlumps	wad.h	/^	int			numlumps;$/;"	m	struct:__anon298
nummarksurfaces	bspfile.h	/^	unsigned short		nummarksurfaces;$/;"	m	struct:__anon108
nummarksurfaces	gl_model.h	/^	int					nummarksurfaces;$/;"	m	struct:mleaf_s
nummarksurfaces	gl_model.h	/^	int					nummarksurfaces;$/;"	m	struct:model_s
nummarksurfaces	r_model.h	/^	int					nummarksurfaces;$/;"	m	struct:mleaf_s
nummarksurfaces	r_model.h	/^	int					nummarksurfaces;$/;"	m	struct:model_s
nummembers	match_tools.c	/^	int nummembers;$/;"	m	struct:mapgroup_s	file:
nummembers	match_tools.c	/^	int nummembers;$/;"	m	struct:skygroup_s	file:
nummiptex	bspfile.h	/^	int			nummiptex;$/;"	m	struct:__anon101
nummodelsurfaces	gl_model.h	/^	int					firstmodelsurface, nummodelsurfaces;$/;"	m	struct:model_s
nummodelsurfaces	r_model.h	/^	int					firstmodelsurface, nummodelsurfaces;$/;"	m	struct:model_s
nummodes	vid_wgl.c	/^static int		nummodes = 0;$/;"	v	file:
nummodes	vid_win.c	/^static int		nummodes;$/;"	v	file:
numnails	sv_ents.c	/^int numnails;$/;"	v
numnodes	cmodel.c	/^static int			numnodes;$/;"	v	file:
numnodes	gl_model.h	/^	int					numnodes;$/;"	m	struct:model_s
numnodes	r_model.h	/^	int					numnodes;$/;"	m	struct:model_s
numorder	gl_mesh.c	/^int		numorder;$/;"	v
nump	d_iface.h	/^	int			nump;$/;"	m	struct:__anon142
numpages	vid.h	/^	int				numpages;$/;"	m	struct:__anon294
numparms	pr_comp.h	/^	int		numparms;$/;"	m	struct:__anon250
numphysent	pmove.h	/^	int			numphysent;$/;"	m	struct:__anon245
numplanes	cmodel.c	/^static int			numplanes;$/;"	v	file:
numplanes	gl_model.h	/^	int					numplanes;$/;"	m	struct:model_s
numplanes	r_model.h	/^	int					numplanes;$/;"	m	struct:model_s
numplayers	match_tools.c	/^	int numplayers;$/;"	m	struct:matchinfo_s	file:
numposes	gl_model.h	/^	int					numposes;$/;"	m	struct:aliashdr_s
numposes	gl_model.h	/^	int					numposes;$/;"	m	struct:maliasframedesc_s
numrecordsperarray	zone2.h	/^	size_t numrecordsperarray;$/;"	m	struct:memexpandablearray_s
numrightedges	d_polyse.c	/^	int		numrightedges;$/;"	m	struct:__anon11	file:
numskins	gl_model.h	/^	int					numskins;$/;"	m	struct:aliashdr_s
numskins	modelgen.h	/^	int			numskins;$/;"	m	struct:__anon224
numskins	modelgen.h	/^	int			numskins;$/;"	m	struct:__anon229
numskins	r_model.h	/^	int					numskins;$/;"	m	struct:maliasskingroup_s
numskins	skin.c	/^int		numskins;$/;"	v
numstatements	pr_comp.h	/^	int		numstatements;	\/\/ statement 0 is an error$/;"	m	struct:__anon251
numstrings	pr_comp.h	/^	int		numstrings;		\/\/ first string is a null string$/;"	m	struct:__anon251
numsubmodels	gl_model.h	/^	int					numsubmodels;$/;"	m	struct:model_s
numsubmodels	r_model.h	/^	int					numsubmodels;$/;"	m	struct:model_s
numsurfaces	gl_model.h	/^	int					numsurfaces;$/;"	m	struct:model_s
numsurfaces	gl_model.h	/^	unsigned short		numsurfaces;$/;"	m	struct:mnode_s
numsurfaces	r_model.h	/^	int					numsurfaces;$/;"	m	struct:model_s
numsurfaces	r_model.h	/^	unsigned short		numsurfaces;$/;"	m	struct:mnode_s
numsurfedges	gl_model.h	/^	int					numsurfedges;$/;"	m	struct:model_s
numsurfedges	r_model.h	/^	int					numsurfedges;$/;"	m	struct:model_s
numtags	gl_md3.h	/^	int numtags;$/;"	m	struct:__anon162
numteams	match_tools.c	/^	int numteams;$/;"	m	struct:matchinfo_s	file:
numtexinfo	gl_model.h	/^	int					numtexinfo;$/;"	m	struct:model_s
numtexinfo	r_model.h	/^	int					numtexinfo;$/;"	m	struct:model_s
numtextures	gl_model.h	/^	int					numtextures;$/;"	m	struct:model_s
numtextures	r_model.h	/^	int					numtextures;$/;"	m	struct:model_s
numtouch	pmove.h	/^	int			numtouch;$/;"	m	struct:__anon245
numtriangles	d_iface.h	/^	int					numtriangles;$/;"	m	struct:__anon140
numtris	gl_model.h	/^	int					numtris;$/;"	m	struct:aliashdr_s
numtris	modelgen.h	/^	int			numtris;$/;"	m	struct:__anon224
numvertexes	gl_model.h	/^	int					numvertexes;$/;"	m	struct:model_s
numvertexes	r_model.h	/^	int					numvertexes;$/;"	m	struct:model_s
numverts	d_iface.h	/^	int			numverts;$/;"	m	struct:polydesc_s
numverts	gl_model.h	/^	int					numverts;$/;"	m	struct:aliashdr_s
numverts	gl_model.h	/^	int					numverts;$/;"	m	struct:glpoly_s
numverts	modelgen.h	/^	int			numverts;$/;"	m	struct:__anon224
occupancy	EX_browser.h	/^	server_occupancy	occupancy;$/;"	m	struct:server_data_s
occupancy_colors	EX_browser.c	/^static const char* occupancy_colors[] = { "00f", "0f0", "f00" };$/;"	v	file:
ocrana_leds	wad.c	/^static byte ocrana_leds[4][8][8] = {$/;"	v	file:
offset	gl_model.h	/^	int					offset;$/;"	m	struct:mspriteframedesc2_s
offset	teamplay.c	/^	vec3_t	offset;		\/\/ offset of model graphics center$/;"	m	struct:__anon69	file:
offset	vfs.h	/^	int             offset;$/;"	m	struct:__anon288
offsets	bspfile.h	/^	unsigned	offsets[MIPLEVELS];		\/\/ four mip maps stored$/;"	m	struct:miptex_s
offsets	gl_model.h	/^	unsigned			offsets[MIPLEVELS];			\/\/four mip maps stored$/;"	m	struct:texture_s
offsets	r_model.h	/^	unsigned			offsets[MIPLEVELS];			\/\/ four mip maps stored$/;"	m	struct:texture_s
ofs	pr_comp.h	/^	unsigned short	ofs;$/;"	m	struct:__anon249
ofsEnd	gl_md3.h	/^	int			ofsEnd;$/;"	m	struct:__anon154
ofsEnd	gl_md3.h	/^	int		ofsEnd;				\/\/ next surface follows$/;"	m	struct:__anon155
ofsFrames	gl_md3.h	/^	int			ofsFrames;$/;"	m	struct:__anon154
ofsShaders	gl_md3.h	/^	int		ofsShaders;			\/\/ offset from start of md3Surface_t$/;"	m	struct:__anon155
ofsSt	gl_md3.h	/^	int		ofsSt;				\/\/ texture coords are common for all frames$/;"	m	struct:__anon155
ofsSurfaces	gl_md3.h	/^	int			ofsSurfaces;$/;"	m	struct:__anon154
ofsTags	gl_md3.h	/^	int			ofsTags;$/;"	m	struct:__anon154
ofsTriangles	gl_md3.h	/^	int		ofsTriangles;$/;"	m	struct:__anon155
ofsXyzNormals	gl_md3.h	/^	int		ofsXyzNormals;		\/\/ numVerts * numFrames$/;"	m	struct:__anon155
ofs_fielddefs	pr_comp.h	/^	int		ofs_fielddefs;$/;"	m	struct:__anon251
ofs_functions	pr_comp.h	/^	int		ofs_functions;$/;"	m	struct:__anon251
ofs_globaldefs	pr_comp.h	/^	int		ofs_globaldefs;$/;"	m	struct:__anon251
ofs_globals	pr_comp.h	/^	int		ofs_globals;$/;"	m	struct:__anon251
ofs_statements	pr_comp.h	/^	int		ofs_statements;$/;"	m	struct:__anon251
ofs_strings	pr_comp.h	/^	int		ofs_strings;$/;"	m	struct:__anon251
ofstags	gl_md3.h	/^	int ofstags;$/;"	m	struct:__anon162
oktodraw	vid_x11.c	/^static qbool		oktodraw = false;$/;"	v	file:
oldCharacterDataHandler	xsd.h	/^    XML_CharacterDataHandler oldCharacterDataHandler;$/;"	m	struct:xml_parser_stack_s
oldEndHandler	xsd.h	/^    XML_EndElementHandler oldEndHandler;$/;"	m	struct:xml_parser_stack_s
oldPingHost	EX_browser_ping.c	/^int oldPingHost(char *host_to_ping, int count)$/;"	f
oldPingHosts	EX_browser_ping.c	/^int oldPingHosts(server_data *servs[], int servsn, int count)$/;"	f
oldStartHandler	xsd.h	/^    XML_StartElementHandler oldStartHandler;$/;"	m	struct:xml_parser_stack_s
oldUserData	xsd.h	/^    void *oldUserData;$/;"	m	struct:xml_parser_stack_s
old_angles	client.h	/^	vec3_t			old_angles;$/;"	m	struct:__anon115
old_fov	hud_common.c	/^	int old_fov;$/;"	m	struct:__anon31	file:
old_frags	server.h	/^	int			old_frags;$/;"	m	struct:client_s
old_hwgamma_enabled	linux_glimp.c	/^qbool old_hwgamma_enabled = false;$/;"	v
old_hwgamma_enabled	win_glimp.c	/^qbool old_hwgamma_enabled = false;$/;"	v
old_keyline_length	keys.c	/^int old_keyline_length;$/;"	v
old_multiview	hud_common.c	/^	int old_multiview;$/;"	m	struct:__anon31	file:
old_newhud	hud_common.c	/^	int old_newhud;$/;"	m	struct:__anon31	file:
old_origin	client.h	/^	vec3_t			old_origin;$/;"	m	struct:__anon115
old_time	server.h	/^	double		old_time;			\/\/ bumped by SV_Physics$/;"	m	struct:__anon264
old_windowed_mouse	vid_x11.c	/^static int old_windowed_mouse;$/;"	v	file:
olda	cl_ents.c	/^	vec3_t	olda;$/;"	m	struct:predicted_player	file:
oldbuttons	cl_cam.c	/^static int oldbuttons;$/;"	v	file:
olddemotime	cl_demo.c	/^float olddemotime, nextdemotime;$/;"	v
oldfov	cl_screen.c	/^float	oldscreensize, oldfov, oldsbar;$/;"	v
oldframe	client.h	/^	int				oldframe;$/;"	m	struct:__anon115
oldframe	render.h	/^	int						oldframe;$/;"	m	struct:entity_s
oldframe	vx_motiontrail.c	/^	int oldframe;$/;"	m	struct:__anon90	file:
oldindex	client.h	/^	int			oldindex;$/;"	m	struct:__anon113
olditems	teamplay.h	/^	int		olditems;$/;"	m	struct:tvars_s
oldname	cmd.c	/^	char *oldname, *newname;$/;"	m	struct:legacycmd_s	file:
oldo	cl_ents.c	/^	vec3_t	oldo;$/;"	m	struct:predicted_player	file:
oldorigin	progdefs.h	/^	vec3_t	oldorigin;$/;"	m	struct:__anon253
oldparsecount	client.h	/^	int			oldparsecount;$/;"	m	struct:__anon125
oldparsecountmod	cl_parse.c	/^int	oldparsecountmod;$/;"	v
oldplayerstates	cl_ents.c	/^player_state_t oldplayerstates[MAX_CLIENTS];	$/;"	v
oldsbar	cl_screen.c	/^float	oldscreensize, oldfov, oldsbar;$/;"	v
oldscreensize	cl_screen.c	/^float	oldscreensize, oldfov, oldsbar;$/;"	v
oldsequence	client.h	/^	int				oldsequence;$/;"	m	struct:__anon115
oldstate	cl_ents.c	/^	player_state_t *oldstate;$/;"	m	struct:predicted_player	file:
oldtarget	gl_texture.c	/^static GLenum oldtarget = GL_TEXTURE0_ARB;$/;"	v	file:
oldv	cl_ents.c	/^	vec3_t	oldv;$/;"	m	struct:predicted_player	file:
oldvalidsequence	client.h	/^	int			oldvalidsequence;$/;"	m	struct:__anon125
onground	client.h	/^	qbool		onground;$/;"	m	struct:__anon112
onground	client.h	/^	qbool		onground;$/;"	m	struct:__anon125
onground	pmove.h	/^	qbool		onground;$/;"	m	struct:__anon245
onseam	modelgen.h	/^	int		onseam;$/;"	m	struct:__anon225
onshow	Ctrl_Tab.h	/^    CTabPage_OnShowType onshow;$/;"	m	struct:CTabPage_Handlers_s
op	pr_comp.h	/^	unsigned short	op;$/;"	m	struct:statement_s
opacity	ez_controls.h	/^	float					opacity;				\/\/ The opacity of the control.$/;"	m	struct:ez_control_s
opacity	hud.h	/^	cvar_t *opacity;					\/\/ The overall opacity of the entire HUD element.$/;"	m	struct:hud_s
operator_and	parser.c	/^LOCAL expr_val operator_and(EParser p, const expr_val e1, const expr_val e2)$/;"	f
operator_divide	parser.c	/^LOCAL expr_val operator_divide(EParser p, const expr_val e1)$/;"	f
operator_eq	parser.c	/^LOCAL expr_val operator_eq(EParser p, const expr_val e1, const expr_val e2)$/;"	f
operator_isin	parser.c	/^LOCAL expr_val operator_isin(EParser p, const expr_val e1, const expr_val e2)$/;"	f
operator_lt	parser.c	/^LOCAL expr_val operator_lt(EParser p, const expr_val e1, const expr_val e2)$/;"	f
operator_minus	parser.c	/^LOCAL expr_val operator_minus (EParser p, const expr_val e1)$/;"	f
operator_multiply	parser.c	/^LOCAL expr_val operator_multiply (EParser p, const expr_val e1, const expr_val e2)$/;"	f
operator_nisin	parser.c	/^LOCAL expr_val operator_nisin(EParser p, const expr_val e1, const expr_val e2)$/;"	f
operator_or	parser.c	/^LOCAL expr_val operator_or(EParser p, const expr_val e1, const expr_val e2)$/;"	f
operator_plus	parser.c	/^LOCAL expr_val operator_plus (EParser p, const expr_val e1, const expr_val e2)$/;"	f
operator_reeq	parser.c	/^LOCAL expr_val operator_reeq(EParser p, const expr_val e1, const expr_val e2)$/;"	f
operator_rene	parser.c	/^LOCAL expr_val operator_rene(EParser p, const expr_val e1, const expr_val e2)$/;"	f
options_config_handlers	menu_options.c	/^CTabPage_Handlers_t options_config_handlers = {$/;"	v
options_controls_handlers	menu_options.c	/^CTabPage_Handlers_t options_controls_handlers = {$/;"	v
options_demo_spec_handlers	menu_options.c	/^CTabPage_Handlers_t options_demo_spec_handlers = {$/;"	v
options_graphics_handlers	menu_options.c	/^CTabPage_Handlers_t options_graphics_handlers = {$/;"	v
options_hud_handlers	menu_options.c	/^CTabPage_Handlers_t options_hud_handlers = {$/;"	v
options_main_handlers	menu_options.c	/^CTabPage_Handlers_t options_main_handlers = {$/;"	v
options_player_handlers	menu_options.c	/^CTabPage_Handlers_t options_player_handlers = {$/;"	v
options_tab	menu_options.c	/^CTab_t options_tab;$/;"	v
options_tab_t	menu_options.c	/^}	options_tab_t;$/;"	t	typeref:enum:__anon47	file:
options_unichar	menu_options.c	/^int options_unichar;	\/\/ variable local to this module$/;"	v
options_video_handlers	menu_options.c	/^CTabPage_Handlers_t options_video_handlers = {$/;"	v
order	hud.h	/^	cvar_t *order;						\/\/ Higher it is, later this element will be drawn$/;"	m	struct:hud_s
order	stats_grid.h	/^	int				order;$/;"	m	struct:stats_entity_s
org	cl_screen.c	/^	vec3_t		org;$/;"	m	struct:ci_player_s	file:
org	cl_screen.c	/^	vec3_t		org;$/;"	m	struct:ti_player_s	file:
org	client.h	/^	vec3_t		org;$/;"	m	struct:__anon110
org	console.c	/^	vec3_t		org;$/;"	m	struct:conpart_s	file:
org	d_iface.h	/^	vec3_t		org;$/;"	m	struct:particle_s
org	gl_md3.h	/^	vec3_t org;$/;"	m	struct:__anon160
org	gl_rpart.c	/^	vec3_t		org, endorg;$/;"	m	struct:particle_s	file:
org	mvd_utils.c	/^	vec3_t	org;$/;"	m	struct:quad_cams_s	file:
org	r_part.c	/^	vec3_t		org;$/;"	m	struct:particle_s	file:
orientation	ez_scrollbar.h	/^	ez_orientation_t			orientation;		\/\/ The orientation of the scrollbar, vertical \/ horizontal.$/;"	m	struct:ez_scrollbar_s
origin	bspfile.h	/^	float		origin[3];$/;"	m	struct:__anon99
origin	cl_ents.c	/^	vec3_t	origin;$/;"	m	struct:__anon3	file:
origin	cl_ents.c	/^	vec3_t origin;	\/\/ predicted origin$/;"	m	struct:predicted_player	file:
origin	cl_tent.c	/^	vec3_t origin;$/;"	m	struct:explosion_s	file:
origin	client.h	/^	vec3_t			origin;$/;"	m	struct:__anon118
origin	client.h	/^	vec3_t		origin;$/;"	m	struct:__anon112
origin	client.h	/^	vec3_t		origin;$/;"	m	struct:__anon113
origin	cmodel.h	/^	vec3_t	origin;$/;"	m	struct:__anon135
origin	nmenu_demo.c	/^	vec3_t	origin, angles;$/;"	m	struct:demo_bookmark	file:
origin	pmove.h	/^	vec3_t		origin;$/;"	m	struct:__anon243
origin	pmove.h	/^	vec3_t		origin;$/;"	m	struct:__anon245
origin	progdefs.h	/^	vec3_t	origin;$/;"	m	struct:__anon253
origin	protocol.h	/^	vec3_t	origin;$/;"	m	struct:entity_state_s
origin	qsound.h	/^	vec3_t		origin;			\/\/ origin of sound effect$/;"	m	struct:channel_s
origin	render.h	/^	vec3_t					origin;$/;"	m	struct:entity_s
origin	splines.c	/^	vec3_t	origin;$/;"	m	struct:spline_point	file:
origin	spritegn.h	/^	int			origin[2];$/;"	m	struct:__anon278
origin	stats_grid.h	/^	vec3_t			origin;					\/\/ The entitys origin.$/;"	m	struct:stats_entity_s
origin	vx_coronas.c	/^	vec3_t	origin;$/;"	m	struct:__anon89	file:
origin	vx_motiontrail.c	/^	vec3_t	origin;$/;"	m	struct:__anon90	file:
original	server.h	/^	int		original;	\/\/ what entity is currently using this translation slot$/;"	m	struct:__anon262
originalmouseparms	in_win.c	/^static int originalmouseparms[3], newmouseparms[3];$/;"	v	file:
origname	gl_model.c	/^	char *origname, *newname;$/;"	m	struct:__anon22	file:
os	fs.c	/^	unsigned char os;$/;"	m	struct:__anon20	file:
osfilefuncs	vfs_os.c	/^searchpathfuncs_t osfilefuncs = {$/;"	v
other	progdefs.h	/^	int	other;$/;"	m	struct:__anon252
outfile	image.c	/^  FILE *outfile;$/;"	m	struct:__anon32	file:
outfile	image.c	/^  FILE *outfile;$/;"	m	struct:__anon33	file:
outfile	image.c	/^  vfsfile_t *outfile;$/;"	m	struct:__anon32	file:
outfile	image.c	/^  vfsfile_t *outfile;$/;"	m	struct:__anon33	file:
outgoing_sequence	net.h	/^	int			outgoing_sequence;$/;"	m	struct:__anon240
outgoing_size	net.h	/^	int			outgoing_size[MAX_LATENT];$/;"	m	struct:__anon240
outgoing_time	net.h	/^	double		outgoing_time[MAX_LATENT];$/;"	m	struct:__anon240
output	vid_x11.c	/^	int output;$/;"	m	struct:__anon87	file:
output_buffer	ffmpeg.c	/^	uint8_t		*output_buffer;$/;"	m	struct:ffm	file:
output_buffer_size	ffmpeg.c	/^	int		output_buffer_size;$/;"	m	struct:ffm	file:
output_format	ffmpeg.c	/^	AVOutputFormat	*output_format;$/;"	m	struct:ffm	file:
overall_alpha	gl_draw.c	/^float overall_alpha = 1.0;$/;"	v
overflowed	q_shared.h	/^	qbool	overflowed;		\/\/ set to true if the buffer size failed$/;"	m	struct:sizebuf_s
override_count	ez_button.h	/^	int						override_count;		\/\/ These are needed so that subclasses can override button specific events.$/;"	m	struct:ez_button_s
override_count	ez_slider.h	/^	int						override_count;		\/\/ These are needed so that subclasses can override slider specific events.$/;"	m	struct:ez_slider_s
override_counts	ez_button.h	/^	ez_button_eventcount_t	override_counts;$/;"	m	struct:ez_button_s
override_counts	ez_controls.h	/^	ez_control_eventcount_t override_counts;		\/\/ This gets resetted each time a event is raised by CONTROL_RAISE_EVENT to the$/;"	m	struct:ez_control_s
override_counts	ez_label.h	/^	ez_label_eventcount_t	override_counts;$/;"	m	struct:ez_label_s
override_counts	ez_scrollbar.h	/^	ez_scrollbar_eventcount_t	override_counts;$/;"	m	struct:ez_scrollbar_s
override_counts	ez_scrollpane.h	/^	ez_scrollpane_eventcount_t	override_counts;$/;"	m	struct:ez_scrollpane_s
override_counts	ez_slider.h	/^	ez_slider_eventcount_t	override_counts;$/;"	m	struct:ez_slider_s
overrideable	sv_user.c	/^	qbool	overrideable;$/;"	m	struct:__anon65	file:
owner	d_local.h	/^	struct surfcache_s 	**owner;		\/\/ NULL is an empty chunk of memory$/;"	m	struct:surfcache_s	typeref:struct:surfcache_s::surfcache_s
owner	progdefs.h	/^	int	owner;$/;"	m	struct:__anon253
owner	r_shared.h	/^	medge_t			*owner;$/;"	m	struct:edge_s
ownfragtext	vx_tracker.c	/^} ownfragtext;$/;"	v	typeref:struct:__anon93	file:
p	mgraph.h	/^	fxpoint_t	p;$/;"	m	struct:__anon202
p	mgraph.h	/^	fxpoint_t	p;$/;"	m	struct:__anon203
p	mgraph.h	/^	fxpoint_t	p;$/;"	m	struct:__anon204
p	mgraph.h	/^	fxpoint_t	p;$/;"	m	struct:__anon205
p	mgraph.h	/^	fxpoint_t   p;$/;"	m	struct:__anon201
p	mvd_utils_common.h	/^	mvd_ks_w_t p[7];$/;"	m	struct:mvd_ks_s
p1col	console.h	/^	int p1col;	\/\/ color$/;"	m	struct:cfrags_format_s
p1len	console.h	/^	int p1len;	\/\/ length, if zero - no coloring$/;"	m	struct:cfrags_format_s
p1pos	console.h	/^	int p1pos;	\/\/ position$/;"	m	struct:cfrags_format_s
p2col	console.h	/^	int p2col;$/;"	m	struct:cfrags_format_s
p2len	console.h	/^	int p2len;$/;"	m	struct:cfrags_format_s
p2pos	console.h	/^	int p2pos;$/;"	m	struct:cfrags_format_s
pDS	snd_win.c	/^LPDIRECTSOUND pDS;$/;"	v
pDSBuf	snd_win.c	/^LPDIRECTSOUNDBUFFER pDSBuf, pDSPBuf;$/;"	v
pDSPBuf	snd_win.c	/^LPDIRECTSOUNDBUFFER pDSBuf, pDSPBuf;$/;"	v
pDirectInputCreateEx	in_win.c	/^static HRESULT (WINAPI *pDirectInputCreateEx)(HINSTANCE hinst,$/;"	v	file:
pGetRawInputData	in_win.c	/^typedef int 	(WINAPI *pGetRawInputData)			(IN HRAWINPUT hRawInput, IN UINT uiCommand, OUT LPVOID pData, IN OUT PINT pcbSize, IN UINT cbSizeHeader);$/;"	t	file:
pGetRawInputDeviceInfoA	in_win.c	/^typedef int 	(WINAPI *pGetRawInputDeviceInfoA)	(IN HANDLE hDevice, IN UINT uiCommand, OUT LPVOID pData, IN OUT PINT pcbSize);$/;"	t	file:
pGetRawInputDeviceList	in_win.c	/^typedef int 	(WINAPI *pGetRawInputDeviceList)	(OUT PRAWINPUTDEVICELIST pRawInputDeviceList, IN OUT PINT puiNumDevices, IN UINT cbSize);$/;"	t	file:
pRegisterRawInputDevices	in_win.c	/^typedef BOOL	(WINAPI *pRegisterRawInputDevices)	(IN PCRAWINPUTDEVICE pRawInputDevices, IN UINT uiNumDevices, IN UINT cbSize);$/;"	t	file:
p_2dshockwave	gl_rpart.c	/^	p_2dshockwave,$/;"	e	enum:__anon24	file:
p_alphatrail	gl_rpart.c	/^	p_alphatrail,$/;"	e	enum:__anon24	file:
p_bleedspike	gl_rpart.c	/^	p_bleedspike, $/;"	e	enum:__anon24	file:
p_blood1	gl_rpart.c	/^	p_dpsmoke, p_dpfire, p_teleflare, p_blood1, p_blood2, p_blood3,$/;"	e	enum:__anon24	file:
p_blood2	gl_rpart.c	/^	p_dpsmoke, p_dpfire, p_teleflare, p_blood1, p_blood2, p_blood3,$/;"	e	enum:__anon24	file:
p_blood3	gl_rpart.c	/^	p_dpsmoke, p_dpfire, p_teleflare, p_blood1, p_blood2, p_blood3,$/;"	e	enum:__anon24	file:
p_bloodcloud	gl_rpart.c	/^	p_bloodcloud,$/;"	e	enum:__anon24	file:
p_bubble	gl_rpart.c	/^	p_spark, p_smoke, p_fire, p_bubble, p_lavasplash, p_gunblast, p_chunk, p_shockwave,$/;"	e	enum:__anon24	file:
p_bubble2	gl_rpart.c	/^	p_bubble2,$/;"	e	enum:__anon24	file:
p_chunk	gl_rpart.c	/^	p_spark, p_smoke, p_fire, p_bubble, p_lavasplash, p_gunblast, p_chunk, p_shockwave,$/;"	e	enum:__anon24	file:
p_chunkdir	gl_rpart.c	/^	p_chunkdir,$/;"	e	enum:__anon24	file:
p_dpfire	gl_rpart.c	/^	p_dpsmoke, p_dpfire, p_teleflare, p_blood1, p_blood2, p_blood3,$/;"	e	enum:__anon24	file:
p_dpsmoke	gl_rpart.c	/^	p_dpsmoke, p_dpfire, p_teleflare, p_blood1, p_blood2, p_blood3,$/;"	e	enum:__anon24	file:
p_fire	gl_rpart.c	/^	p_spark, p_smoke, p_fire, p_bubble, p_lavasplash, p_gunblast, p_chunk, p_shockwave,$/;"	e	enum:__anon24	file:
p_flame	gl_rpart.c	/^	p_flame,$/;"	e	enum:__anon24	file:
p_gunblast	gl_rpart.c	/^	p_spark, p_smoke, p_fire, p_bubble, p_lavasplash, p_gunblast, p_chunk, p_shockwave,$/;"	e	enum:__anon24	file:
p_inferno	gl_rpart.c	/^	p_inferno, \/\/VULT - NOT TO BE CONFUSED WITH THE 0.36 FIREBALL$/;"	e	enum:__anon24	file:
p_inferno_flame	gl_rpart.c	/^	p_inferno_flame, p_inferno_trail, p_sparkray, p_staticbubble, p_trailpart,$/;"	e	enum:__anon24	file:
p_inferno_trail	gl_rpart.c	/^	p_inferno_flame, p_inferno_trail, p_sparkray, p_staticbubble, p_trailpart,$/;"	e	enum:__anon24	file:
p_info	mvd_utils.c	/^	player_info_t	*p_info;$/;"	m	struct:mvd_player_s	file:
p_info	mvd_utils_common.h	/^	player_info_t	*p_info;$/;"	m	struct:mvd_new_info_s
p_lavasplash	gl_rpart.c	/^	p_spark, p_smoke, p_fire, p_bubble, p_lavasplash, p_gunblast, p_chunk, p_shockwave,$/;"	e	enum:__anon24	file:
p_lavatrail	gl_rpart.c	/^	p_lavatrail,$/;"	e	enum:__anon24	file:
p_lightningbeam	gl_rpart.c	/^	p_lightningbeam,$/;"	e	enum:__anon24	file:
p_mouse_x	vid_x11.c	/^static int p_mouse_x;$/;"	v	file:
p_mouse_y	vid_x11.c	/^static int p_mouse_y;$/;"	v	file:
p_muzzleflash	gl_rpart.c	/^	p_muzzleflash,$/;"	e	enum:__anon24	file:
p_railtrail	gl_rpart.c	/^	p_railtrail,$/;"	e	enum:__anon24	file:
p_rain	gl_rpart.c	/^	p_rain,$/;"	e	enum:__anon24	file:
p_shockwave	gl_rpart.c	/^	p_spark, p_smoke, p_fire, p_bubble, p_lavasplash, p_gunblast, p_chunk, p_shockwave,$/;"	e	enum:__anon24	file:
p_smallspark	gl_rpart.c	/^	p_smallspark,$/;"	e	enum:__anon24	file:
p_smoke	gl_rpart.c	/^	p_spark, p_smoke, p_fire, p_bubble, p_lavasplash, p_gunblast, p_chunk, p_shockwave,$/;"	e	enum:__anon24	file:
p_spark	gl_rpart.c	/^	p_spark, p_smoke, p_fire, p_bubble, p_lavasplash, p_gunblast, p_chunk, p_shockwave,$/;"	e	enum:__anon24	file:
p_sparkray	gl_rpart.c	/^	p_inferno_flame, p_inferno_trail, p_sparkray, p_staticbubble, p_trailpart,$/;"	e	enum:__anon24	file:
p_state	mvd_utils.c	/^	player_state_t	*p_state;$/;"	m	struct:mvd_player_s	file:
p_state	mvd_utils_common.h	/^	player_state_t	*p_state ;$/;"	m	struct:mvd_new_info_s
p_staticbubble	gl_rpart.c	/^	p_inferno_flame, p_inferno_trail, p_sparkray, p_staticbubble, p_trailpart,$/;"	e	enum:__anon24	file:
p_streak	gl_rpart.c	/^	p_streak,$/;"	e	enum:__anon24	file:
p_streaktrail	gl_rpart.c	/^	p_streaktrail,$/;"	e	enum:__anon24	file:
p_streakwave	gl_rpart.c	/^	p_streakwave,$/;"	e	enum:__anon24	file:
p_teleflare	gl_rpart.c	/^	p_dpsmoke, p_dpfire, p_teleflare, p_blood1, p_blood2, p_blood3,$/;"	e	enum:__anon24	file:
p_trailbleed	gl_rpart.c	/^	p_trailbleed, $/;"	e	enum:__anon24	file:
p_trailpart	gl_rpart.c	/^	p_inferno_flame, p_inferno_trail, p_sparkray, p_staticbubble, p_trailpart,$/;"	e	enum:__anon24	file:
p_vxblood	gl_rpart.c	/^	p_vxblood,$/;"	e	enum:__anon24	file:
p_vxrocketsmoke	gl_rpart.c	/^	p_vxrocketsmoke,$/;"	e	enum:__anon24	file:
p_vxsmoke	gl_rpart.c	/^	p_vxsmoke,$/;"	e	enum:__anon24	file:
pack	vfs.h	/^	struct pack_s *pack; \/\/ only one of filename \/ pack will be used 	 $/;"	m	struct:searchpath_s	typeref:struct:searchpath_s::pack_s
pack_s	fs.c	/^typedef struct pack_s$/;"	s	file:
pack_s	vfs_pak.c	/^typedef struct pack_s$/;"	s	file:
pack_t	fs.c	/^} pack_t;$/;"	t	typeref:struct:pack_s	file:
pack_t	vfs_pak.c	/^} pack_t;$/;"	t	typeref:struct:pack_s	file:
packet	ffmpeg.c	/^	AVPacket	packet;$/;"	m	struct:ffm	file:
packet_choked	client.h	/^typedef  enum{packet_ok, packet_dropped, packet_choked,$/;"	e	enum:__anon127
packet_delta	client.h	/^              packet_delta, packet_netlimit}  packet_status;$/;"	e	enum:__anon127
packet_dropped	client.h	/^typedef  enum{packet_ok, packet_dropped, packet_choked,$/;"	e	enum:__anon127
packet_entities	client.h	/^	packet_entities_t	packet_entities;$/;"	m	struct:__anon114
packet_entities_s	protocol.h	/^typedef struct packet_entities_s {$/;"	s
packet_entities_t	protocol.h	/^} packet_entities_t;$/;"	t	typeref:struct:packet_entities_s
packet_info_s	client.h	/^typedef struct packet_info_s$/;"	s
packet_info_t	client.h	/^packet_info_t;$/;"	t	typeref:struct:packet_info_s
packet_latency	cl_parse.c	/^int packet_latency[NET_TIMINGS];$/;"	v
packet_netlimit	client.h	/^              packet_delta, packet_netlimit}  packet_status;$/;"	e	enum:__anon127
packet_ok	client.h	/^typedef  enum{packet_ok, packet_dropped, packet_choked,$/;"	e	enum:__anon127
packet_status	client.h	/^              packet_delta, packet_netlimit}  packet_status;$/;"	t	typeref:enum:__anon127
packets	server.h	/^	int		packets;$/;"	m	struct:__anon267
packfile_t	vfs.h	/^} packfile_t;$/;"	t	typeref:struct:__anon291
packfilefuncs	vfs_pak.c	/^searchpathfuncs_t packfilefuncs = {$/;"	v
pad	cmodel.h	/^	byte	pad[2];$/;"	m	struct:mplane_s
pad	draw.h	/^	byte		pad;$/;"	m	struct:__anon146
pad	progdefs.h	/^{	int	pad[28];$/;"	m	struct:__anon252
pad	r_shared.h	/^	int			pad[2];				\/\/ to 64 bytes$/;"	m	struct:surf_s
pad1	wad.h	/^	char		pad1, pad2;$/;"	m	struct:__anon299
pad2	wad.h	/^	char		pad1, pad2;$/;"	m	struct:__anon299
padding_bottom	ez_button.h	/^	int						padding_bottom;$/;"	m	struct:ez_button_s
padding_left	ez_button.h	/^	int						padding_left;$/;"	m	struct:ez_button_s
padding_right	ez_button.h	/^	int						padding_right;$/;"	m	struct:ez_button_s
padding_top	ez_button.h	/^	int						padding_top;$/;"	m	struct:ez_button_s
page	Ctrl_PageViewer.h	/^    CPageViewer_page_t *page;$/;"	m	struct:CPageViewer_s
pageSize	mgraph.h	/^	long	pageSize;		\/* Number of bytes in a page				*\/$/;"	m	struct:__anon217
pages	Ctrl_Tab.h	/^    CTabPage_t  pages[TAB_MAX_TABS];$/;"	m	struct:CTab_s
paintbuffer	snd_mix.c	/^portable_samplepair_t paintbuffer[PAINTBUFFER_SIZE];$/;"	v
paintedtime	snd_dma.c	/^int		paintedtime;$/;"	v
pak_operation_t	fs.c	/^typedef enum { PAKOP_ADD, PAKOP_REM } pak_operation_t;$/;"	t	typeref:enum:__anon19	file:
pal	mgraph.h	/^	palette_t	*pal;				\/* Palette (NULL if not loaded)		*\/$/;"	m	struct:__anon211
pal_is_nostatic	vid_win.c	/^static qbool	palette_changed, syscolchg, vid_mode_set, hide_window, pal_is_nostatic;$/;"	v	file:
palette	image.c	/^    byte			palette[48];$/;"	m	struct:pcx_s	file:
palette_changed	vid_win.c	/^static qbool	palette_changed, syscolchg, vid_mode_set, hide_window, pal_is_nostatic;$/;"	v	file:
palette_t	mgraph.h	/^	} palette_t;$/;"	t	typeref:struct:__anon207
palette_type	image.c	/^    unsigned short	palette_type;$/;"	m	struct:pcx_s	file:
paliashdr	gl_mesh.c	/^aliashdr_t	*paliashdr;$/;"	v
paliashdr	r_alias.c	/^aliashdr_t			*paliashdr;$/;"	v
param	sys.h	/^int  Sys_CreateThread(DWORD (WINAPI *func)(void *), void *param);$/;"	v
params	hud.h	/^	cvar_t **params;					\/\/ Registered parameters for the HUD element.$/;"	m	struct:hud_s
parent	cmodel.c	/^	struct cnode_s	*parent;$/;"	m	struct:cleaf_s	typeref:struct:cleaf_s::cnode_s	file:
parent	cmodel.c	/^	struct cnode_s	*parent;$/;"	m	struct:cnode_s	typeref:struct:cnode_s::cnode_s	file:
parent	ez_controls.h	/^	struct ez_control_s		*parent;				\/\/ The parent of the control. Only the root node has no parent.$/;"	m	struct:ez_control_s	typeref:struct:ez_control_s::ez_control_s
parent	gl_model.h	/^	struct mnode_s		*parent;$/;"	m	struct:mleaf_s	typeref:struct:mleaf_s::mnode_s
parent	gl_model.h	/^	struct mnode_s		*parent;$/;"	m	struct:mnode_s	typeref:struct:mnode_s::mnode_s
parent	mvd_cam.h	/^	struct		mvd_menu_s	*parent;$/;"	m	struct:mvd_menu_s	typeref:struct:mvd_menu_s::mvd_menu_s
parent	new_menu.c	/^	struct	menu_ct	*parent;$/;"	m	struct:menu_ct	typeref:struct:menu_ct::menu_ct	file:
parent	r_model.h	/^	struct mnode_s		*parent;$/;"	m	struct:mleaf_s	typeref:struct:mleaf_s::mnode_s
parent	r_model.h	/^	struct mnode_s		*parent;$/;"	m	struct:mnode_s	typeref:struct:mnode_s::mnode_s
parent	vfs_gzip.c	/^	gzipfile_t *parent;$/;"	m	struct:__anon73	file:
parent	vfs_tar.c	/^	tarfile_t *parent;$/;"	m	struct:__anon78	file:
parent	vfs_zip.c	/^	zipfile_t *parent;$/;"	m	struct:__anon79	file:
parent	zone2.h	/^	struct mempool_s *parent;$/;"	m	struct:mempool_s	typeref:struct:mempool_s::mempool_s
parentdesc	fs.c	/^	char *parentdesc;$/;"	m	struct:__anon21	file:
parentpak	vfs_pak.c	/^    pack_t *parentpak;$/;"	m	struct:__anon77	file:
parentpath	fs.c	/^	searchpath_t *parentpath;$/;"	m	struct:__anon21	file:
parm1	progdefs.h	/^	float	parm1;$/;"	m	struct:__anon252
parm10	progdefs.h	/^	float	parm10;$/;"	m	struct:__anon252
parm11	progdefs.h	/^	float	parm11;$/;"	m	struct:__anon252
parm12	progdefs.h	/^	float	parm12;$/;"	m	struct:__anon252
parm13	progdefs.h	/^	float	parm13;$/;"	m	struct:__anon252
parm14	progdefs.h	/^	float	parm14;$/;"	m	struct:__anon252
parm15	progdefs.h	/^	float	parm15;$/;"	m	struct:__anon252
parm16	progdefs.h	/^	float	parm16;$/;"	m	struct:__anon252
parm2	progdefs.h	/^	float	parm2;$/;"	m	struct:__anon252
parm3	progdefs.h	/^	float	parm3;$/;"	m	struct:__anon252
parm4	progdefs.h	/^	float	parm4;$/;"	m	struct:__anon252
parm5	progdefs.h	/^	float	parm5;$/;"	m	struct:__anon252
parm6	progdefs.h	/^	float	parm6;$/;"	m	struct:__anon252
parm7	progdefs.h	/^	float	parm7;$/;"	m	struct:__anon252
parm8	progdefs.h	/^	float	parm8;$/;"	m	struct:__anon252
parm9	progdefs.h	/^	float	parm9;$/;"	m	struct:__anon252
parm_size	pr_comp.h	/^	byte	parm_size[MAX_PARMS];$/;"	m	struct:__anon250
parm_start	pr_comp.h	/^	int		parm_start;$/;"	m	struct:__anon250
parsecount	client.h	/^	int			parsecount;			\/\/\/< server message counter$/;"	m	struct:__anon125
parsecountmod	cl_parse.c	/^int	parsecountmod;$/;"	v
parsecounttime	cl_parse.c	/^double	parsecounttime;$/;"	v
parser	xsd.h	/^    XML_Parser parser;$/;"	m	struct:xml_parser_stack_s
parser_extra	parser.h	/^} parser_extra;$/;"	t	typeref:struct:__anon242
parser_specific	xsd.h	/^    void *parser_specific;$/;"	m	struct:xml_parser_stack_s
part_draw_t	gl_rpart.c	/^} part_draw_t;$/;"	t	typeref:enum:__anon27	file:
part_move_t	gl_rpart.c	/^} part_move_t;$/;"	t	typeref:enum:__anon25	file:
part_tex_t	gl_rpart.c	/^} part_tex_t;$/;"	t	typeref:enum:__anon26	file:
part_type_t	gl_rpart.c	/^} part_type_t;$/;"	t	typeref:enum:__anon24	file:
particle_count	gl_rpart.c	/^static int particle_count = 0;$/;"	v	file:
particle_s	d_iface.h	/^typedef struct particle_s$/;"	s
particle_s	gl_rpart.c	/^typedef struct particle_s {$/;"	s	file:
particle_s	r_part.c	/^typedef struct particle_s {$/;"	s	file:
particle_t	d_iface.h	/^} particle_t;$/;"	t	typeref:struct:particle_s
particle_t	gl_rpart.c	/^} particle_t;$/;"	t	typeref:struct:particle_s	file:
particle_t	r_part.c	/^} particle_t;$/;"	t	typeref:struct:particle_s	file:
particle_texture_s	gl_rpart.c	/^typedef struct particle_texture_s {$/;"	s	file:
particle_texture_t	gl_rpart.c	/^} particle_texture_t;$/;"	t	typeref:struct:particle_texture_s	file:
particle_textures	gl_rpart.c	/^static particle_texture_t particle_textures[num_particletextures];$/;"	v	file:
particle_time	gl_rpart.c	/^static float particle_time;		$/;"	v	file:
particle_tree_s	gl_rpart.c	/^typedef struct particle_tree_s {$/;"	s	file:
particle_type_index	gl_rpart.c	/^static int particle_type_index[num_particletypes];	$/;"	v	file:
particle_type_t	gl_rpart.c	/^} particle_type_t;$/;"	t	typeref:struct:particle_tree_s	file:
particle_types	gl_rpart.c	/^static particle_type_t particle_types[num_particletypes];$/;"	v	file:
particles	gl_rpart.c	/^static particle_t *particles, *free_particles;$/;"	v	file:
particles	r_part.c	/^static particle_t	*particles, *active_particles, *free_particles;$/;"	v	file:
particletexture	gl_rmain.c	/^int			particletexture;	\/\/ little dot for particles$/;"	v
passed_filters	EX_browser.h	/^    int passed_filters;$/;"	m	struct:server_data_s
passedict	sv_world.c	/^	edict_t		*passedict;$/;"	m	struct:__anon66	file:
password	cl_main.c	/^cvar_t	password = {"password", "", CVAR_USERINFO};$/;"	v
password	sv_main.c	/^cvar_t	password = {"password", ""};	\/\/ password for entering the game$/;"	v
path	menu_demo.c	/^	char path[MAX_PATH];$/;"	m	struct:demo_playlist_s	file:
path	xsd.h	/^    char path[PARSER_STACK_PATH_SIZE];$/;"	m	struct:xml_parser_stack_s
pathname	gl_texture.c	/^	char		*pathname;$/;"	m	struct:__anon28	file:
pattern_t	mgraph.h	/^typedef uchar	pattern_t[8];$/;"	t
paused	client.h	/^	qbool		paused;				\/\/\/< a combination of PAUSED_SERVER and PAUSED_DEMO flags$/;"	m	struct:__anon125
paused	server.h	/^	qbool		paused;				\/\/ are we paused?$/;"	m	struct:__anon264
pauxverts	r_alias.c	/^auxvert_t			*pauxverts;$/;"	v
payload	ez_controls.h	/^	void						*payload;$/;"	m	struct:ez_eventhandler_s
payload	ez_controls.h	/^	void *payload;$/;"	m	struct:ez_dllist_node_s
pb_buf	cl_demo.c	/^unsigned char pb_buf[1024*32];			\/\/ Playback buffer.$/;"	v
pb_cnt	cl_demo.c	/^int		pb_cnt = 0;						\/\/ How many bytes we've have in playback buffer.$/;"	v
pb_ensure	cl_demo.c	/^qbool pb_ensure(void)$/;"	f
pb_eof	cl_demo.c	/^qbool	pb_eof = false;					\/\/ Have we reached the end of the playback buffer?$/;"	v
pb_raw_read	cl_demo.c	/^int pb_raw_read(void *buf, int size)$/;"	f
pbasesource	r_surf.c	/^unsigned char	*pbasesource;$/;"	v
pbedges	r_bsp.c	/^static bedge_t		*pbedges;$/;"	v	file:
pbverts	r_bsp.c	/^static mvertex_t	*pbverts;$/;"	v	file:
pcm	snd_alsa.c	/^static snd_pcm_t *pcm;$/;"	v	file:
pcount	mvd_utils.c	/^	int pcount;$/;"	m	struct:mvd_gameinfo_s	file:
pcount	mvd_utils_common.h	/^	int pcount;$/;"	m	struct:mvd_cg_info_s
pcre_internal_trigger_s	tp_triggers.h	/^typedef struct pcre_internal_trigger_s {$/;"	s
pcre_internal_trigger_t	tp_triggers.h	/^} pcre_internal_trigger_t;$/;"	t	typeref:struct:pcre_internal_trigger_s
pcre_trigger_s	tp_triggers.h	/^typedef struct pcre_trigger_s {$/;"	s
pcre_trigger_t	tp_triggers.h	/^} pcre_trigger_t;$/;"	t	typeref:struct:pcre_trigger_s
pcurrentface	d_iface.h	/^	msurface_t	*pcurrentface;$/;"	m	struct:polydesc_s
pcurrentmode	vid_wgl.c	/^static vmode_t	*pcurrentmode;$/;"	v	file:
pcurrentmode	vid_win.c	/^static vmode_t	*pcurrentmode;$/;"	v	file:
pcx_s	image.c	/^typedef struct pcx_s $/;"	s	file:
pcx_t	image.c	/^} pcx_t;$/;"	t	typeref:struct:pcx_s	file:
pd_beam	gl_rpart.c	/^	pd_beam,$/;"	e	enum:__anon27	file:
pd_billboard	gl_rpart.c	/^	pd_spark, pd_sparkray, pd_billboard, pd_billboard_vel,$/;"	e	enum:__anon27	file:
pd_billboard_vel	gl_rpart.c	/^	pd_spark, pd_sparkray, pd_billboard, pd_billboard_vel,$/;"	e	enum:__anon27	file:
pd_hide	gl_rpart.c	/^	pd_hide,$/;"	e	enum:__anon27	file:
pd_normal	gl_rpart.c	/^	pd_normal,$/;"	e	enum:__anon27	file:
pd_spark	gl_rpart.c	/^	pd_spark, pd_sparkray, pd_billboard, pd_billboard_vel,$/;"	e	enum:__anon27	file:
pd_sparkray	gl_rpart.c	/^	pd_spark, pd_sparkray, pd_billboard, pd_billboard_vel,$/;"	e	enum:__anon27	file:
pdest	d_polyse.c	/^	void			*pdest;$/;"	m	struct:__anon10	file:
pdrawfunc	r_edge.c	/^static void (*pdrawfunc)(void);$/;"	v	file:
pdwRawValue	in_win.c	/^PDWORD	pdwRawValue[JOY_MAX_AXES];$/;"	v
pedgetable	d_polyse.c	/^edgetable	*pedgetable;$/;"	v
penHeight	mgraph.h	/^	m_int			penHeight;		\/* Height of pen					*\/$/;"	m	struct:__anon216
penPat	mgraph.h	/^	pattern_t		penPat;			\/* Pattern for pen					*\/$/;"	m	struct:__anon216
penPixPat	mgraph.h	/^	pixpattern_t	penPixPat;		\/* Pixmap pattern for pen			*\/$/;"	m	struct:__anon216
penStyle	mgraph.h	/^	m_int			penStyle;		\/* Pen style						*\/$/;"	m	struct:__anon216
penWidth	mgraph.h	/^	m_int			penWidth;		\/* Width of pen						*\/$/;"	m	struct:__anon216
pent	mvd_utils_common.h	/^	mvd_avgruns_t pent;$/;"	m	struct:mvd_avgruns_all_s
pent_cams	mvd_utils.c	/^quad_cams_t pent_cams[3];$/;"	v
pent_is_active	mvd_utils.c	/^int pent_is_active= 0;$/;"	v
pent_mentioned	mvd_utils.c	/^int pent_mentioned = 0;$/;"	v
pent_time	mvd_utils.c	/^double pent_time =0;$/;"	v
pent_val	mvd_autotrack.c	67;"	d	file:
percent	client.h	/^	int		percent;		\/\/ 0-256$/;"	m	struct:__anon116
pf	mgraph.h	/^	pixel_format_t *pf;				\/* Pixel format (NULL if none)		*\/$/;"	m	struct:__anon211
pf	mgraph.h	/^	pixel_format_t pf;		\/* Current pixel format for device context	*\/$/;"	m	struct:__anon218
pfinalverts	d_iface.h	/^	finalvert_t			*pfinalverts;$/;"	m	struct:__anon140
pfinalverts	r_alias.c	/^finalvert_t			*pfinalverts;$/;"	v
pfreq	sys_win.c	/^static double pfreq;$/;"	v	file:
pfrontenter	r_bsp.c	/^static mvertex_t	*pfrontenter, *pfrontexit;$/;"	v	file:
pfrontexit	r_bsp.c	/^static mvertex_t	*pfrontenter, *pfrontexit;$/;"	v	file:
pfrustum_indexes	r_main.c	/^int			*pfrustum_indexes[4];$/;"	v
pground	pmove.h	/^	qbool	pground; \/\/ NQ-style "onground" flag handling.$/;"	m	struct:__anon246
phase	EX_browser_net.c	/^    int phase;$/;"	m	struct:infohost_s	file:
phase	EX_browser_ping.c	/^    int phase;  \/\/ ping phase$/;"	m	struct:ICMP_header_s	file:
phase	EX_browser_ping.c	/^    int phase;$/;"	m	struct:pinghost_s	file:
phase	EX_browser_sources.c	/^    int phase;$/;"	m	struct:infohost_s	file:
pheader	gl_model.c	/^aliashdr_t	*pheader;$/;"	v
phigh	sbar.c	/^	int plow, phigh, ptotal;$/;"	m	struct:__anon62	file:
physent_t	pmove.h	/^} physent_t;$/;"	t	typeref:struct:__anon243
physents	pmove.h	/^	physent_t	physents[MAX_PHYSENTS]; \/\/ 0 should be the world$/;"	m	struct:__anon245
physframe	cl_main.c	/^qbool physframe;$/;"	v
physframetime	cl_main.c	/^double physframetime;$/;"	v
pic	common_draw.h	/^	mpic_t		*pic;$/;"	m	struct:cachepic_s
picture	ffmpeg.c	/^	AVFrame		*picture;$/;"	m	struct:ffm	file:
picture	new_menu.c	/^	mpic_t	*picture;$/;"	m	struct:menu_ct	file:
picture_buffer	ffmpeg.c	/^	uint8_t		*picture_buffer;$/;"	m	struct:ffm	file:
ping	EX_browser.h	/^    char ping [COL_PING + 1];$/;"	m	struct:column_s
ping	EX_browser.h	/^    int ping;$/;"	m	struct:playerinfo_s
ping	EX_browser.h	/^    int ping;$/;"	m	struct:server_data_s
ping	EX_browser_ping.c	/^	double ping;$/;"	m	struct:pinghost_s	file:
ping	client.h	/^	int		ping;$/;"	m	struct:player_info_s
ping_avg	client.h	/^    float ping_avg;$/;"	m	struct:net_stat_result_s
ping_dev	client.h	/^    float ping_dev;$/;"	m	struct:net_stat_result_s
ping_f_avg	client.h	/^    float ping_f_avg;$/;"	m	struct:net_stat_result_s
ping_f_dev	client.h	/^    float ping_f_dev;$/;"	m	struct:net_stat_result_s
ping_f_max	client.h	/^    int   ping_f_max;$/;"	m	struct:net_stat_result_s
ping_f_min	client.h	/^    int   ping_f_min;$/;"	m	struct:net_stat_result_s
ping_finished	EX_browser_ping.c	/^static qbool ping_finished = false;$/;"	v	file:
ping_max	client.h	/^    float ping_max;$/;"	m	struct:net_stat_result_s
ping_min	client.h	/^    float ping_min;$/;"	m	struct:net_stat_result_s
ping_phase	EX_browser.c	/^int ping_phase = 0;$/;"	v
ping_pos	EX_browser.c	/^double ping_pos;$/;"	v
ping_semaphore	EX_browser_ping.c	/^static sem_t ping_semaphore;$/;"	v	file:
ping_sock	EX_browser_ping.c	/^static int ping_sock;$/;"	v	file:
ping_time	server.h	/^	float				ping_time;$/;"	m	struct:__anon266
pinghost_list_t	EX_browser_ping.c	/^} pinghost_list_t;$/;"	t	typeref:struct:__anon14	file:
pinghost_s	EX_browser_ping.c	/^typedef struct pinghost_s$/;"	s	file:
pinghost_t	EX_browser_ping.c	/^} pinghost_t;$/;"	t	typeref:struct:pinghost_s	file:
pitchvel	client.h	/^	float		pitchvel;$/;"	m	struct:__anon125
pixelAspect	r_main.c	/^float	pixelAspect;$/;"	v
pixelAspect	tr_init.c	/^	float		pixelAspect;		\/\/ pixel width \/ height$/;"	m	struct:vidmode_s	file:
pixelFormatSet	tr_types.h	/^	qbool pixelFormatSet;$/;"	m	struct:__anon287
pixelSize	image.c	/^	byte			pixelSize, attributes;$/;"	m	struct:TGAHeader_s	file:
pixel_format_t	mgraph.h	/^	} pixel_format_t;$/;"	t	typeref:struct:__anon208
pixel_height	new_menu.c	/^	int		pixel_width, pixel_height;$/;"	m	struct:menu_ct	file:
pixel_t	vid.h	/^typedef byte pixel_t;$/;"	t
pixel_width	new_menu.c	/^	int		pixel_width, pixel_height;$/;"	m	struct:menu_ct	file:
pixels	r_model.h	/^	byte				pixels[4];$/;"	m	struct:mspriteframe_s
pixpattern_t	mgraph.h	/^typedef color_t	pixpattern_t[8][8];$/;"	t
pkflags	teamplay.c	/^unsigned int pkflags = default_pkflags;$/;"	v
pknames	teamplay.c	/^char *pknames[] = {"quad", "pent", "ring", "suit", "ra", "ya",	"ga",$/;"	v
pl	client.h	/^	byte	pl;$/;"	m	struct:player_info_s
pl_dist	asm_i386.h	42;"	d
pl_normal	asm_i386.h	41;"	d
pl_pad	asm_i386.h	45;"	d
pl_signbits	asm_i386.h	44;"	d
pl_size	asm_i386.h	46;"	d
pl_type	asm_i386.h	43;"	d
pl_values	mvd_autotrack.c	/^static float pl_values[PL_VALUES_COUNT];$/;"	v	file:
place	hud.h	/^    cvar_t *place;						\/\/ Place string, parsed to:$/;"	m	struct:hud_s
place_hud	hud.h	/^    struct hud_s *place_hud;			\/\/ if snapped to hud element$/;"	m	struct:hud_s	typeref:struct:hud_s::hud_s
place_num	hud.h	/^    int place_num;						\/\/ place number (our or parent if hud)$/;"	m	struct:hud_s
place_outside	hud.h	/^    qbool place_outside;				\/\/ if hud: inside ot outside$/;"	m	struct:hud_s
plane	cmodel.c	/^	mplane_t	*plane;$/;"	m	struct:cnode_s	file:
plane	cmodel.h	/^	plane_t	plane;				\/\/ surface normal at impact$/;"	m	struct:__anon133
plane	gl_model.h	/^	mplane_t			*plane;$/;"	m	struct:mnode_s
plane	gl_model.h	/^	mplane_t			*plane;$/;"	m	struct:msurface_s
plane	r_model.h	/^	mplane_t			*plane;$/;"	m	struct:mnode_s
plane	r_model.h	/^	mplane_t			*plane;$/;"	m	struct:msurface_s
plane_t	cmodel.h	/^} plane_t;$/;"	t	typeref:struct:__anon132
planenum	bspfile.h	/^	int			planenum;$/;"	m	struct:__anon104
planenum	bspfile.h	/^	int			planenum;$/;"	m	struct:__anon105
planenum	bspfile.h	/^	short		planenum;$/;"	m	struct:__anon107
planes	cmodel.h	/^	mplane_t	*planes;$/;"	m	struct:__anon131
planes	gl_model.h	/^	mplane_t			*planes;$/;"	m	struct:model_s
planes	r_model.h	/^	mplane_t			*planes;$/;"	m	struct:model_s
playLooping	cd_linux.c	/^static qbool playLooping = false;$/;"	v	file:
playLooping	cd_win.c	/^static qbool playLooping = false;$/;"	v	file:
playTrack	cd_linux.c	/^static byte		playTrack;$/;"	v	file:
playTrack	cd_win.c	/^static byte		playTrack;$/;"	v	file:
playback_recordtime	cl_demo.c	/^static float playback_recordtime;	\/\/ Time when in demo playback and recording.$/;"	v	file:
playback_speed	nmenu_demo.c	/^double *playback_speed = &real_playback_speed;$/;"	v
playbackfile	cl_demo.c	/^vfsfile_t *playbackfile = NULL;			\/\/ The demo file used for playback.$/;"	v
player	cl_screen.c	/^	player_info_t *player;$/;"	m	struct:ci_player_s	file:
player	cl_screen.c	/^	player_info_t *player;$/;"	m	struct:player_autoid_s	file:
player	nmenu_trackentity.c	/^	player_state_t *player;$/;"	m	struct:te_data	file:
player1	match_tools.c	/^	char player1[MAX_INFO_STRING];$/;"	m	struct:matchinfo_s	file:
player2	match_tools.c	/^	char player2[MAX_INFO_STRING];$/;"	m	struct:matchinfo_s	file:
player_8bit_texels	gl_model.c	/^byte		player_8bit_texels[320 * 200];$/;"	v
player_autoid_s	cl_screen.c	/^typedef struct player_autoid_s {$/;"	s	file:
player_host	EX_browser.h	/^} player_host;$/;"	t	typeref:struct:player_host_s
player_host_s	EX_browser.h	/^typedef struct player_host_s$/;"	s
player_info_s	client.h	/^typedef struct player_info_s $/;"	s
player_info_t	client.h	/^} player_info_t;$/;"	t	typeref:struct:player_info_s
player_maxs	pmove.c	/^vec3_t	player_maxs = {16, 16, 32};$/;"	v
player_mins	pmove.c	/^vec3_t	player_mins = {-16, -16, -24};$/;"	v
player_state_t	client.h	/^} player_state_t;$/;"	t	typeref:struct:__anon112
playerbeam_end	cl_tent.c	/^static vec3_t playerbeam_end;$/;"	v	file:
playerfbtextures	gl_rmain.c	/^int			playerfbtextures[MAX_CLIENTS];$/;"	v
playerinfo	EX_browser.h	/^} playerinfo;$/;"	t	typeref:struct:playerinfo_s
playerinfo_s	EX_browser.h	/^typedef struct playerinfo_s$/;"	s
playermove_t	pmove.h	/^} playermove_t;$/;"	t	typeref:struct:__anon245
playernmtextures	gl_rmain.c	/^int			playernmtextures[MAX_CLIENTS];$/;"	v
playernum	client.h	/^	int			playernum;$/;"	m	struct:__anon125
playernum	hud_common.c	/^    int playernum;$/;"	m	struct:sort_players_info_s	file:
players	EX_browser.h	/^    char players [COL_PLAYERS + 1];$/;"	m	struct:column_s
players	EX_browser.h	/^    playerinfo *players[MAX_PLAYERS];$/;"	m	struct:server_data_s
players	client.h	/^	player_info_t	players[MAX_CLIENTS];$/;"	m	struct:__anon125
players	sbar.c	/^	int players;$/;"	m	struct:__anon62	file:
playersn	EX_browser.h	/^    int playersn;$/;"	m	struct:server_data_s
playerstate	client.h	/^	player_state_t		playerstate[MAX_CLIENTS];	\/\/ Message received that reflects performing the usercmd.$/;"	m	struct:__anon114
playertextures	gl_rmain.c	/^int			playertextures;		\/\/ up to 16 color translated skins$/;"	v
playertouch	sv_user.c	/^static byte playertouch[(SV_MAX_EDICTS + 7) \/ 8];$/;"	v	file:
playing	cd_linux.c	/^static qbool	playing = false;$/;"	v	file:
playing	cd_win.c	/^static qbool	playing = false;$/;"	v	file:
playlist_base	menu_mp3player.c	/^static int playlist_cursor = 0, playlist_base = 0;$/;"	v	file:
playlist_cursor	menu_mp3player.c	/^static int playlist_cursor = 0, playlist_base = 0;$/;"	v	file:
playlist_entries	menu_mp3player.c	/^static char playlist_entries[PLAYLIST_MAXLINES][MP3_MAXSONGTITLE];$/;"	v	file:
playlist_size	menu_mp3player.c	/^static int playlist_size = 0;$/;"	v	file:
pleftedgevert0	d_polyse.c	/^	int		*pleftedgevert0;$/;"	m	struct:__anon11	file:
pleftedgevert1	d_polyse.c	/^	int		*pleftedgevert1;$/;"	m	struct:__anon11	file:
pleftedgevert2	d_polyse.c	/^	int		*pleftedgevert2;$/;"	m	struct:__anon11	file:
plow	sbar.c	/^	int plow, phigh, ptotal;$/;"	m	struct:__anon62	file:
pm_accelerate	sv_phys.c	/^cvar_t	pm_accelerate		 = {"sv_accelerate", "10"};$/;"	v
pm_airaccelerate	sv_phys.c	/^cvar_t	pm_airaccelerate	 = {"sv_airaccelerate", "10"};$/;"	v
pm_airstep	sv_phys.c	/^cvar_t	pm_airstep		 = {"pm_airstep", "0", CVAR_SERVERINFO};$/;"	v
pm_bounce	gl_rpart.c	/^	pm_static, pm_normal, pm_bounce, pm_die, pm_nophysics, pm_float,$/;"	e	enum:__anon25	file:
pm_bunnyspeedcap	sv_phys.c	/^cvar_t	pm_bunnyspeedcap	 = {"pm_bunnyspeedcap", "", CVAR_SERVERINFO};$/;"	v
pm_die	gl_rpart.c	/^	pm_static, pm_normal, pm_bounce, pm_die, pm_nophysics, pm_float,$/;"	e	enum:__anon25	file:
pm_float	gl_rpart.c	/^	pm_static, pm_normal, pm_bounce, pm_die, pm_nophysics, pm_float,$/;"	e	enum:__anon25	file:
pm_flyfriction	pmove.c	38;"	d	file:
pm_forward	pmove.c	/^static vec3_t	pm_forward, pm_right;$/;"	v	file:
pm_frametime	pmove.c	/^static float	pm_frametime;$/;"	v	file:
pm_friction	sv_phys.c	/^cvar_t	pm_friction		 = {"sv_friction", "4"};$/;"	v
pm_inferno	gl_rpart.c	/^	pm_inferno,$/;"	e	enum:__anon25	file:
pm_ktjump	sv_phys.c	/^cvar_t	pm_ktjump		 = {"pm_ktjump", "1", CVAR_SERVERINFO};$/;"	v
pm_maxspeed	sv_phys.c	/^cvar_t	pm_maxspeed		 = {"sv_maxspeed", "320"};$/;"	v
pm_nophysics	gl_rpart.c	/^	pm_static, pm_normal, pm_bounce, pm_die, pm_nophysics, pm_float,$/;"	e	enum:__anon25	file:
pm_normal	gl_rpart.c	/^	pm_static, pm_normal, pm_bounce, pm_die, pm_nophysics, pm_float,$/;"	e	enum:__anon25	file:
pm_pground	sv_phys.c	/^cvar_t	pm_pground		 = {"pm_pground", "0", CVAR_SERVERINFO};$/;"	v
pm_rain	gl_rpart.c	/^	pm_rain,$/;"	e	enum:__anon25	file:
pm_right	pmove.c	/^static vec3_t	pm_forward, pm_right;$/;"	v	file:
pm_slidefix	sv_phys.c	/^cvar_t	pm_slidefix		 = {"pm_slidefix", "", CVAR_SERVERINFO};$/;"	v
pm_spectatormaxspeed	sv_phys.c	/^cvar_t	pm_spectatormaxspeed	 = {"sv_spectatormaxspeed", "500"};$/;"	v
pm_static	gl_rpart.c	/^	pm_static, pm_normal, pm_bounce, pm_die, pm_nophysics, pm_float,$/;"	e	enum:__anon25	file:
pm_stopspeed	sv_phys.c	/^cvar_t	pm_stopspeed		 = {"sv_stopspeed", "100"};$/;"	v
pm_streak	gl_rpart.c	/^	pm_streak,$/;"	e	enum:__anon25	file:
pm_streakwave	gl_rpart.c	/^	pm_streakwave,$/;"	e	enum:__anon25	file:
pm_type	client.h	/^	byte		pm_type;$/;"	m	struct:__anon112
pm_type	pmove.h	/^	int			pm_type;$/;"	m	struct:__anon245
pm_wateraccelerate	sv_phys.c	/^cvar_t	pm_wateraccelerate	 = {"sv_wateraccelerate", "10"};$/;"	v
pm_waterfriction	sv_phys.c	/^cvar_t	pm_waterfriction	 = {"sv_waterfriction", "4"};$/;"	v
pmdl	r_alias.c	/^mdl_t				*pmdl;$/;"	v
pmodel	r_alias.c	/^static model_t		*pmodel;$/;"	v	file:
pmodel_name	cl_main.c	/^char pmodel_name[] = { 'p'^0xe5, 'm'^0xe5, 'o'^0xe5, 'd'^0xe5, 'e'^0xe5, 'l'^0xe5, 0 };$/;"	v
pmove	pmove.c	/^playermove_t	pmove;$/;"	v
pmtype_t	pmove.h	/^} pmtype_t;$/;"	t	typeref:enum:__anon244
pnext	r_local.h	/^	struct bedge_s	*pnext;$/;"	m	struct:bedge_s	typeref:struct:bedge_s::bedge_s
pnext	r_shared.h	/^	struct espan_s	*pnext;$/;"	m	struct:espan_s	typeref:struct:espan_s::espan_s
pnext	vid.h	/^	struct vrect_s *pnext;$/;"	m	struct:vrect_s	typeref:struct:vrect_s::vrect_s
png_data	image.h	/^} png_data;$/;"	t	typeref:struct:__anon166
png_handle	image.c	/^static QLIB_HANDLETYPE_T png_handle = NULL;$/;"	v	file:
pngprocs	image.c	/^qlib_dllfunction_t pngprocs[] = {$/;"	v
point	bspfile.h	/^	float	point[3];$/;"	m	struct:__anon102
point	cam_new.c	/^	int point;$/;"	m	struct:select_helper	file:
point_t	mgraph.h	/^	} point_t;$/;"	t	typeref:struct:__anon196
pointflag	teamplay.h	/^    int     pointflag;$/;"	m	struct:tvars_s
pointflags	teamplay.c	/^unsigned int pointflags = default_pointflags;$/;"	v
pointloc	teamplay.h	/^	char	pointloc[MAX_LOC_NAME];$/;"	m	struct:tvars_s
pointname	teamplay.h	/^	char	pointname[32];$/;"	m	struct:tvars_s
pointpriorities	teamplay.c	/^byte pointpriorities[NUM_ITEMFLAGS];$/;"	v
points	splines.c	/^	struct	spline_point *points;$/;"	m	struct:spline	typeref:struct:spline::spline_point	file:
points_count	splines.c	/^	int		points_count;$/;"	m	struct:spline	file:
pointtime	teamplay.h	/^	double	pointtime; \/\/ cls.realtime for which pointitem & pointloc are valid$/;"	m	struct:tvars_s
pointtype	teamplay.h	/^	int		pointtype;$/;"	m	struct:tvars_s
polyType	mgraph.h	/^	m_int			polyType;		\/* Polygon drawing type				*\/$/;"	m	struct:__anon216
polydesc_s	d_iface.h	/^typedef struct polydesc_s {$/;"	s
polydesc_t	d_iface.h	/^} polydesc_t;$/;"	t	typeref:struct:polydesc_s
polys	gl_model.h	/^	glpoly_t			*polys;						\/\/ multiple if warped$/;"	m	struct:msurface_s
polyvert_s	d_iface.h	/^typedef struct polyvert_s {$/;"	s
polyvert_t	d_iface.h	/^} polyvert_t;$/;"	t	typeref:struct:polyvert_s
pool	zone2.h	/^	struct mempool_s *pool;$/;"	m	struct:memheader_s	typeref:struct:memheader_s::mempool_s
poolchain	zone2.c	/^mempool_t *poolchain = NULL;$/;"	v
popup_active	new_menu.c	/^int	popup_active = 0;$/;"	v
popup_active_entry	new_menu.c	/^struct MS_Popup_Entry *popup_active_entry;$/;"	v	typeref:struct:MS_Popup_Entry
popup_menu_active	new_menu.c	/^struct MS_Popup_Menu_Menu *popup_menu_active;$/;"	v	typeref:struct:MS_Popup_Menu_Menu
popup_menus	new_menu.c	/^struct MS_Popup_Menu_Menu *popup_menus;$/;"	v	typeref:struct:MS_Popup_Menu_Menu
popup_x	new_menu.c	/^int popup_x, popup_y;$/;"	v
popup_y	new_menu.c	/^int popup_x, popup_y;$/;"	v
port	EX_browser_ping.c	/^    short port;$/;"	m	struct:pinghost_s	file:
port	net.h	/^	unsigned short port;$/;"	m	struct:__anon239
portable_samplepair_s	snd_mix.c	/^typedef struct portable_samplepair_s {$/;"	s	file:
portable_samplepair_t	snd_mix.c	/^} portable_samplepair_t;$/;"	t	typeref:struct:portable_samplepair_s	file:
pos	Ctrl_EditBox.h	/^	unsigned int pos;$/;"	m	struct:CEditBox_s
pos	hud_editor.c	/^	hud_greppos_t			pos;			\/\/ The offscreen position of the HUD associated with this handle.$/;"	m	struct:hud_grephandle_s	file:
pos	in_win.c	/^	int				pos[2];$/;"	m	struct:__anon35	file:
pos	parser.c	/^    int pos;					\/\/ current reading position in the input string$/;"	m	struct:__anon53	file:
pos	protocol.h	/^	vec3_t	pos;	\/\/ Position of temp entity.$/;"	m	struct:temp_entity_s
pos	qsound.h	/^	int 		pos;			\/\/ sample position in sfx$/;"	m	struct:channel_s
pos	vfs_zip.c	/^	int pos;$/;"	m	struct:__anon79	file:
pos_bottom	hud_editor.c	/^	pos_bottom,$/;"	e	enum:hud_greppos_s	file:
pos_left	hud_editor.c	/^	pos_left,$/;"	e	enum:hud_greppos_s	file:
pos_right	hud_editor.c	/^	pos_right$/;"	e	enum:hud_greppos_s	file:
pos_top	hud_editor.c	/^	pos_top,$/;"	e	enum:hud_greppos_s	file:
pos_visible	hud_editor.c	/^	pos_visible,	\/\/ On screen.$/;"	e	enum:hud_greppos_s	file:
pos_x	hud.h	/^    cvar_t *pos_x;						\/\/ Position cvars.$/;"	m	struct:hud_s
pos_y	hud.h	/^    cvar_t *pos_y;$/;"	m	struct:hud_s
posedata	gl_model.h	/^	int					posedata;	\/\/ numposes*poseverts trivert_t$/;"	m	struct:aliashdr_s
posenum	gl_model.c	/^int			posenum;$/;"	v
poseverts	gl_model.c	/^trivertx_t	*poseverts[MAXALIASFRAMES];$/;"	v
poseverts	gl_model.h	/^	int					poseverts;$/;"	m	struct:aliashdr_s
position	gl_model.h	/^	vec3_t		position;$/;"	m	struct:mvertex_s
position	r_model.h	/^	vec3_t		position;$/;"	m	struct:mvertex_s
position	vfs_mmap.c	/^	unsigned long position;$/;"	m	struct:__anon74	file:
position	wad.c	/^	int position;$/;"	m	struct:__anon95	file:
post_the_scroll_hack	in_mac.c	/^static SInt32 			post_the_scroll_hack = 0;$/;"	v	file:
posx	in_mac.c	/^static float posx = 0, posy = 0;$/;"	v	file:
posy	in_mac.c	/^static float posx = 0, posy = 0;$/;"	v	file:
powerup_cam_active	mvd_utils.c	/^int powerup_cam_active = 0;$/;"	v
powerupglow_enum	menu_options.c	/^const char* powerupglow_enum[] =$/;"	v
pr	mvd_utils_common.h	/^	mvd_ks_w_t pr[7];$/;"	m	struct:mvd_ks_s
pr_argc	pr_exec.c	/^int			pr_argc;$/;"	v
pr_builtins	pr_cmds.c	/^builtin_t pr_builtins[] = {$/;"	v
pr_depth	pr_exec.c	/^static int			pr_depth;$/;"	v	file:
pr_edict_size	pr_edict.c	/^int				pr_edict_size;	\/\/ in bytes$/;"	v
pr_fielddefs	pr_edict.c	/^ddef_t			*pr_fielddefs;$/;"	v
pr_functions	pr_edict.c	/^dfunction_t		*pr_functions;$/;"	v
pr_global_struct	pr_edict.c	/^globalvars_t	*pr_global_struct;$/;"	v
pr_globaldefs	pr_edict.c	/^ddef_t			*pr_globaldefs;$/;"	v
pr_globals	pr_edict.c	/^float			*pr_globals;			\/\/ same as pr_global_struct$/;"	v
pr_numbuiltins	pr_cmds.c	/^int pr_numbuiltins = sizeof(pr_builtins) \/ sizeof(pr_builtins[0]);$/;"	v
pr_opnames	pr_exec.c	/^static char *pr_opnames[] = {$/;"	v	file:
pr_stack	pr_exec.c	/^static prstack_t	pr_stack[MAX_STACK_DEPTH];$/;"	v	file:
pr_statements	pr_edict.c	/^dstatement_t	*pr_statements;$/;"	v
pr_strings	pr_edict.c	/^char			*pr_strings;$/;"	v
pr_strtbl	pr_exec.c	/^char *pr_strtbl[MAX_PRSTR];$/;"	v
pr_trace	pr_exec.c	/^qbool	pr_trace;$/;"	v
pr_xfunction	pr_exec.c	/^dfunction_t	*pr_xfunction;$/;"	v
pr_xstatement	pr_exec.c	/^int			pr_xstatement;$/;"	v
predict	cl_ents.c	/^	qbool predict;$/;"	m	struct:predicted_player	file:
predicted_player	cl_ents.c	/^static struct predicted_player {$/;"	s	file:
predicted_players	cl_ents.c	/^} predicted_players[MAX_CLIENTS];$/;"	v	typeref:struct:predicted_player	file:
prefix	vfs_tar.h	/^  char prefix[155];             \/* 345 *\/$/;"	m	struct:tar_header
prefs_t	mac_prefs.h	/^} prefs_t;$/;"	t	typeref:struct:__anon179
pressed	new_menu.c	/^	int		pressed;$/;"	m	struct:menu_ct	file:
pressed_image	ez_button.h	/^	mpic_t					*pressed_image;		\/\/ The image that is shown when the button is pressed.$/;"	m	struct:ez_button_s
pressed_text_color	ez_button.h	/^	clrinfo_t				pressed_text_color;	\/\/ Text color when the button is pressed.$/;"	m	struct:ez_button_s
pressed_time	new_menu.c	/^	double	pressed_time;$/;"	m	struct:menu_ct	file:
prev	cam_new.c	/^	struct	CamSys_Spline *next, *prev;$/;"	m	struct:CamSys_Spline	typeref:struct:CamSys_Spline::	file:
prev	cam_new.h	/^	struct	CamSys_Spline *next, *prev;$/;"	m	struct:CamSys_Spline	typeref:struct:CamSys_Spline::
prev	cl_screen.c	/^static hud_element_t *prev;$/;"	v	file:
prev	cl_tent.c	/^	struct explosion_s *prev, *next;$/;"	m	struct:explosion_s	typeref:struct:explosion_s::explosion_s	file:
prev	client.h	/^	struct demo_keyframe_s	*prev;$/;"	m	struct:demo_keyframe_s	typeref:struct:demo_keyframe_s::demo_keyframe_s
prev	linked_list.c	/^	struct linked_list *next, *prev;$/;"	m	struct:linked_list	typeref:struct:linked_list::	file:
prev	linked_list.c	/^	struct linked_list_node *next, *prev;$/;"	m	struct:linked_list_node	typeref:struct:linked_list_node::	file:
prev	linked_list.h	/^	struct linked_list_node *next, *prev;$/;"	m	struct:linked_list_node	typeref:struct:linked_list_node::
prev	lua.c	/^	struct L_lua_states *next, *prev;$/;"	m	struct:L_lua_states	typeref:struct:L_lua_states::	file:
prev	match_tools.c	/^	struct mapgroup_s *next, *prev;$/;"	m	struct:mapgroup_s	typeref:struct:mapgroup_s::	file:
prev	match_tools.c	/^	struct skygroup_s *next, *prev;$/;"	m	struct:skygroup_s	typeref:struct:skygroup_s::	file:
prev	mgraph.h	/^	m_int		prev;			\/* Previous event in queue				*\/$/;"	m	struct:__anon219
prev	new_menu.c	/^	struct MS_Popup_Entry *next, *prev;$/;"	m	struct:MS_Popup_Entry	typeref:struct:MS_Popup_Entry::	file:
prev	new_menu.c	/^	struct MS_Popup_Menu_Menu *next, *prev;$/;"	m	struct:MS_Popup_Menu_Menu	typeref:struct:MS_Popup_Menu_Menu::	file:
prev	progs.h	/^	struct link_s	*prev, *next;$/;"	m	struct:link_s	typeref:struct:link_s::link_s
prev	r_shared.h	/^	struct edge_s	*prev, *next;$/;"	m	struct:edge_s	typeref:struct:edge_s::edge_s
prev	r_shared.h	/^	struct surf_s	*prev;			\/\/ used in r_edge.c for active surf stack$/;"	m	struct:surf_s	typeref:struct:surf_s::surf_s
prev	splines.c	/^	struct	spline *next, *prev;$/;"	m	struct:spline	typeref:struct:spline::	file:
prev	splines.c	/^	struct	spline_point *next, *prev;$/;"	m	struct:spline_point	typeref:struct:spline_point::	file:
prev	timer.c	/^	struct timer *next, *prev;$/;"	m	struct:timer	typeref:struct:timer::	file:
prev	tp_triggers.c	/^static pcre_trigger_t *prev;$/;"	v	file:
prev	zone.c	/^	struct cache_system_s	*prev, *next;$/;"	m	struct:cache_system_s	typeref:struct:cache_system_s::cache_system_s	file:
prev	zone2.h	/^	struct memheader_s *prev;$/;"	m	struct:memheader_s	typeref:struct:memheader_s::memheader_s
prev_absolute_x	ez_controls.h	/^	int						prev_absolute_x;		\/\/ Previous absolute position.$/;"	m	struct:ez_control_s
prev_absolute_y	ez_controls.h	/^	int						prev_absolute_y;$/;"	m	struct:ez_control_s
prev_height	ez_controls.h	/^	int						prev_height;$/;"	m	struct:ez_control_s
prev_mouse_state	ez_controls.h	/^	mouse_state_t			prev_mouse_state;		\/\/ The last mouse event that was passed on to this control.$/;"	m	struct:ez_control_s
prev_mouse_state	ez_controls.h	/^	mouse_state_t			prev_mouse_state;		\/\/ The last mouse state we received.$/;"	m	struct:ez_tree_s
prev_target	ez_scrollpane.h	/^	ez_control_t				*prev_target;		\/\/ The previous target control. We keep this to clean up when we change target.$/;"	m	struct:ez_scrollpane_s
prev_virtual_height	ez_controls.h	/^	int						prev_virtual_height;$/;"	m	struct:ez_control_s
prev_virtual_width	ez_controls.h	/^	int						prev_virtual_width;		\/\/ The previous virtual size of the control.$/;"	m	struct:ez_control_s
prev_width	ez_controls.h	/^	int						prev_width;				\/\/ Previous size.$/;"	m	struct:ez_control_s
prev_x	ez_controls.h	/^	int						prev_x;					\/\/ Previous position.$/;"	m	struct:ez_control_s
prev_y	ez_controls.h	/^	int						prev_y;$/;"	m	struct:ez_control_s
previous	ez_controls.h	/^	struct ez_dllist_node_s *previous;$/;"	m	struct:ez_dllist_node_s	typeref:struct:ez_dllist_node_s::ez_dllist_node_s
previous	hud_editor.c	/^	struct hud_grephandle_s	*previous;$/;"	m	struct:hud_grephandle_s	typeref:struct:hud_grephandle_s::hud_grephandle_s	file:
previous	mvd_cam.h	/^	struct	c_event_s *previous;$/;"	m	struct:c_event_s	typeref:struct:c_event_s::c_event_s
prightedgevert0	d_polyse.c	/^	int		*prightedgevert0;$/;"	m	struct:__anon11	file:
prightedgevert1	d_polyse.c	/^	int		*prightedgevert1;$/;"	m	struct:__anon11	file:
prightedgevert2	d_polyse.c	/^	int		*prightedgevert2;$/;"	m	struct:__anon11	file:
primary_format_set	snd_win.c	/^static qbool	primary_format_set;$/;"	v	file:
printed	cl_parse.c	/^	int printed[NUMMSG];$/;"	m	struct:messages_s	file:
priority_enum	menu_options.c	/^const char *priority_enum[] = { "low", "-1", "normal", "0", "high", "1" };$/;"	v
profile	mac.h	/^	video_profile_t *profile;$/;"	m	struct:__anon176
profile	pr_comp.h	/^	int		profile;		\/\/ runtime$/;"	m	struct:__anon250
progs	pr_edict.c	/^dprograms_t		*progs;$/;"	v
progs_armor_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_armor_mdl_FMOD_DM_FMOD_TF[5]				= {0x18d1b8ef, 0xfe43d973, 0xbb104313, 0xef6a9090, 0x2b048696};$/;"	v	file:
progs_backpack_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_backpack_mdl_FMOD_DM_FMOD_TF[5]			= {0x80cedaeb, 0x18f7d282, 0xa911e7c2, 0xffe609aa, 0x050a6005};$/;"	v	file:
progs_bolt2_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_bolt2_mdl_FMOD_DM_FMOD_TF[5]				= {0x14fba8de, 0x99237ae4, 0xc8806043, 0xebeea454, 0x024a99a9};$/;"	v	file:
progs_detpack_mdl_FMOD_TF	fmod.c	/^static const int progs_detpack_mdl_FMOD_TF[5]					= {0xaf73d4e1, 0x0c98dc38, 0x6d3983c0, 0xd7a70033, 0x616a675e};$/;"	v	file:
progs_disp_mdl_FMOD_TF	fmod.c	/^static const int progs_disp_mdl_FMOD_TF[5]						= {0x5596fa4a, 0xd94e2457, 0x140f84df, 0x5859dda8, 0xe96752fc};$/;"	v	file:
progs_end1_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_end1_mdl_FMOD_DM_FMOD_TF[5]				= {0xd1fed19f, 0x5d67c632, 0x1d72a0e6, 0x14ab39d7, 0x4bf435c4};$/;"	v	file:
progs_end2_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_end2_mdl_FMOD_DM_FMOD_TF[5]				= {0x98eee620, 0x107acd79, 0x8331620d, 0x2a9a1848, 0x64d29e1a};$/;"	v	file:
progs_end3_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_end3_mdl_FMOD_DM_FMOD_TF[5]				= {0x7f1e336d, 0xe04f4bb0, 0x4ac25a1a, 0x2caedde7, 0x09973319};$/;"	v	file:
progs_end4_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_end4_mdl_FMOD_DM_FMOD_TF[5]				= {0xa4b572aa, 0xdd00c38d, 0x130f8da2, 0x797f0e55, 0xcca52b76};$/;"	v	file:
progs_eyes_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_eyes_mdl_FMOD_DM_FMOD_TF[5]				= {0x276f25a8, 0xc6b8f782, 0x3ef75d52, 0x911d163e, 0x5d79e557};$/;"	v	file:
progs_g_light_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_g_light_mdl_FMOD_DM_FMOD_TF[5]			= {0xcb9b9366, 0x1fd74d91, 0x9a6a82f6, 0x5d6b2e3e, 0xc458f5ac};$/;"	v	file:
progs_g_nail2_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_g_nail2_mdl_FMOD_DM_FMOD_TF[5]			= {0x97cb4499, 0x88e3e11a, 0xecec6eca, 0x883f6c8f, 0xac7ecf0c};$/;"	v	file:
progs_g_nail_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_g_nail_mdl_FMOD_DM_FMOD_TF[5]			= {0x7b209f71, 0xa77cd00f, 0x91f24953, 0x932f264b, 0x350e7440};$/;"	v	file:
progs_g_rock2_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_g_rock2_mdl_FMOD_DM_FMOD_TF[5]			= {0x5a47ec20, 0xd0211cdc, 0xd6b8af60, 0xaf813eab, 0xba330b5b};$/;"	v	file:
progs_g_rock_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_g_rock_mdl_FMOD_DM_FMOD_TF[5]			= {0x9017dd83, 0x150d954c, 0x9b5f4544, 0x10843b72, 0x4697068e};$/;"	v	file:
progs_g_shot_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_g_shot_mdl_FMOD_DM_FMOD_TF[5]			= {0x35a735e1, 0xc1ee6090, 0x9f8940b5, 0x6cdefd1c, 0x7eec1d67};$/;"	v	file:
progs_gib1_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_gib1_mdl_FMOD_DM_FMOD_TF[5]				= {0x99dc9ea4, 0x6e9bf74a, 0x25710a1e, 0x701fc77b, 0x09777092};$/;"	v	file:
progs_gib2_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_gib2_mdl_FMOD_DM_FMOD_TF[5]				= {0x5ac3e29b, 0xd66358d9, 0x1044d27a, 0xb3da48ad, 0x5f1e9fbb};$/;"	v	file:
progs_gib3_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_gib3_mdl_FMOD_DM_FMOD_TF[5]				= {0xc6558e61, 0x13ea4f63, 0x20c9da45, 0x0640212e, 0x7b98f350};$/;"	v	file:
progs_grenade2_mdl_FMOD_TF	fmod.c	/^static const int progs_grenade2_mdl_FMOD_TF[5]					= {0x4b116cef, 0xebc6f074, 0x2acdea73, 0x876a8716, 0xe5e7409d};$/;"	v	file:
progs_grenade_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_grenade_mdl_FMOD_DM_FMOD_TF[5]			= {0x60dfffb8, 0xfc871f0c, 0xd9f3c325, 0x61aadcaf, 0x0ec37cbf};$/;"	v	file:
progs_hgren2_mdl_FMOD_TF	fmod.c	/^static const int progs_hgren2_mdl_FMOD_TF[5]					= {0x1dc3715f, 0x58c53c0f, 0xdb1504fc, 0xab354bdf, 0x6aacee97};$/;"	v	file:
progs_invisibl_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_invisibl_mdl_FMOD_DM_FMOD_TF[5]			= {0x23e2f389, 0x8479657f, 0x437e0d25, 0xee100bae, 0xbad6a775};$/;"	v	file:
progs_invulner_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_invulner_mdl_FMOD_DM_FMOD_TF[5]			= {0x987ee175, 0xfd0d4f35, 0x06d2641c, 0x725c0dc8, 0x871f537a};$/;"	v	file:
progs_missile_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_missile_mdl_FMOD_DM_FMOD_TF[5]			= {0x9adfeee8, 0x185872c1, 0xb3bb36f8, 0x996e29ab, 0xd46ab2a9};$/;"	v	file:
progs_player_mdl_FMOD_DM	fmod.c	/^static const int progs_player_mdl_FMOD_DM[5]					= {0x95ca0ab4, 0x021be62e, 0x6655e9a5, 0xd4a7ef1c, 0xb484582f};$/;"	v	file:
progs_player_mdl_FMOD_TF	fmod.c	/^static const int progs_player_mdl_FMOD_TF[5]					= {0x8fcab658, 0x027a97ef, 0xa96eee3d, 0xc1e44f46, 0x18a533c9};$/;"	v	file:
progs_quaddama_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_quaddama_mdl_FMOD_DM_FMOD_TF[5]			= {0x2760f663, 0x32dc8405, 0x057563df, 0x9614c3a7, 0x0125949b};$/;"	v	file:
progs_s_bubble_spr_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_s_bubble_spr_FMOD_DM_FMOD_TF[5]			= {0x3dbefaf2, 0x73b38654, 0x70910774, 0xdfe285f3, 0x4db5d90e};$/;"	v	file:
progs_s_explod_spr_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_s_explod_spr_FMOD_DM_FMOD_TF[5]			= {0x295a7b06, 0xacdf1f88, 0x50a20894, 0x5c75905f, 0xb9d95d0b};$/;"	v	file:
progs_s_spike_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_s_spike_mdl_FMOD_DM_FMOD_TF[5]			= {0xf308f8e5, 0xcdc242e2, 0x4f71b01f, 0xafb9880a, 0x52198e9f};$/;"	v	file:
progs_spike_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_spike_mdl_FMOD_DM_FMOD_TF[5]				= {0xebd9adaf, 0xfb3b2f28, 0x67cc2c34, 0x926ec21a, 0x09e1a233};$/;"	v	file:
progs_suit_mdl_FMOD_DM_FMOD_TF	fmod.c	/^static const int progs_suit_mdl_FMOD_DM_FMOD_TF[5]				= {0xb7dcb9dd, 0xed8da03b, 0x416efc5e, 0x8ee38d5a, 0x4063bf25};$/;"	v	file:
progs_tf_flag_mdl_FMOD_TF	fmod.c	/^static const int progs_tf_flag_mdl_FMOD_TF[5]					= {0x6e969df0, 0xc91b9eef, 0x84cb1a40, 0xcaee122e, 0x1b1d3d28};$/;"	v	file:
progs_tf_stan_mdl_FMOD_TF	fmod.c	/^static const int progs_tf_stan_mdl_FMOD_TF[5]					= {0x1b732a1b, 0x763069c2, 0xe779e270, 0x252b9daa, 0xddf7db2a};$/;"	v	file:
progs_turrbase_mdl_FMOD_TF	fmod.c	/^static const int progs_turrbase_mdl_FMOD_TF[5]					= {0x0cda73d5, 0x822703cb, 0x9e6cbe6b, 0x94fb95f7, 0xc7c04bed};$/;"	v	file:
progs_turrgun_mdl_FMOD_TF	fmod.c	/^static const int progs_turrgun_mdl_FMOD_TF[5]					= {0x314b126f, 0x7d8d7cb5, 0x8df185c8, 0x1f3662f7, 0xa272957b};$/;"	v	file:
projectile_t	cl_ents.c	/^} projectile_t;$/;"	t	typeref:struct:__anon3	file:
proto	EX_browser_ping.c	/^    unsigned char  proto;          \/\/ protocol (TCP, UDP etc)$/;"	m	struct:IP_header_s	file:
protoversion	client.h	/^	int			protoversion;$/;"	m	struct:__anon125
prowdestbase	r_surf.c	/^void			*prowdestbase;$/;"	v
prstack_t	pr_exec.c	/^} prstack_t;$/;"	t	typeref:struct:__anon55	file:
pskin	d_iface.h	/^	void				*pskin;$/;"	m	struct:__anon140
pskindesc	d_iface.h	/^	maliasskindesc_t	*pskindesc;$/;"	m	struct:__anon140
pskindesc	r_alias.c	/^static maliasskindesc_t	*pskindesc;$/;"	v	file:
psources	EX_browser_sources.c	/^source_data **psources;$/;"	v
psourcesn	EX_browser_sources.c	/^int psourcesn;$/;"	v
psp_left	asm_i386.h	94;"	d
psp_right	asm_i386.h	95;"	d
psp_size	asm_i386.h	96;"	d
pspriteframe	d_iface.h	/^	mspriteframe_t	*pspriteframe;$/;"	m	struct:__anon142
pt_blob	d_iface.h	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon139
pt_blob	r_part.c	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon59	file:
pt_blob2	d_iface.h	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon139
pt_blob2	r_part.c	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon59	file:
pt_color	d_ifacea.h	50;"	d
pt_die	d_ifacea.h	55;"	d
pt_explode	d_iface.h	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon139
pt_explode	r_part.c	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon59	file:
pt_explode2	d_iface.h	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon139
pt_explode2	r_part.c	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon59	file:
pt_fire	d_iface.h	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon139
pt_fire	r_part.c	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon59	file:
pt_grav	d_iface.h	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon139
pt_grav	r_part.c	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon59	file:
pt_next	d_ifacea.h	52;"	d
pt_org	d_ifacea.h	49;"	d
pt_rail	d_iface.h	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon139
pt_rail	r_part.c	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon59	file:
pt_ramp	d_ifacea.h	54;"	d
pt_size	d_ifacea.h	57;"	d
pt_slowgrav	d_iface.h	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon139
pt_slowgrav	r_part.c	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon59	file:
pt_static	d_iface.h	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon139
pt_static	r_part.c	/^	pt_static, pt_grav, pt_slowgrav, pt_fire, pt_explode, pt_explode2, pt_blob, pt_blob2, pt_rail$/;"	e	enum:__anon59	file:
pt_type	d_ifacea.h	56;"	d
pt_vel	d_ifacea.h	53;"	d
ptex	d_polyse.c	/^	byte			*ptex;$/;"	m	struct:__anon10	file:
ptex_blood1	gl_rpart.c	/^	ptex_blueflare, ptex_blood1, ptex_blood2, ptex_blood3,$/;"	e	enum:__anon26	file:
ptex_blood2	gl_rpart.c	/^	ptex_blueflare, ptex_blood1, ptex_blood2, ptex_blood3,$/;"	e	enum:__anon26	file:
ptex_blood3	gl_rpart.c	/^	ptex_blueflare, ptex_blood1, ptex_blood2, ptex_blood3,$/;"	e	enum:__anon26	file:
ptex_blueflare	gl_rpart.c	/^	ptex_blueflare, ptex_blood1, ptex_blood2, ptex_blood3,$/;"	e	enum:__anon26	file:
ptex_bubble	gl_rpart.c	/^	ptex_none, ptex_smoke, ptex_bubble, ptex_generic, ptex_dpsmoke, ptex_lava,$/;"	e	enum:__anon26	file:
ptex_dpsmoke	gl_rpart.c	/^	ptex_none, ptex_smoke, ptex_bubble, ptex_generic, ptex_dpsmoke, ptex_lava,$/;"	e	enum:__anon26	file:
ptex_generic	gl_rpart.c	/^	ptex_none, ptex_smoke, ptex_bubble, ptex_generic, ptex_dpsmoke, ptex_lava,$/;"	e	enum:__anon26	file:
ptex_lava	gl_rpart.c	/^	ptex_none, ptex_smoke, ptex_bubble, ptex_generic, ptex_dpsmoke, ptex_lava,$/;"	e	enum:__anon26	file:
ptex_lightning	gl_rpart.c	/^	ptex_lightning,$/;"	e	enum:__anon26	file:
ptex_none	gl_rpart.c	/^	ptex_none, ptex_smoke, ptex_bubble, ptex_generic, ptex_dpsmoke, ptex_lava,$/;"	e	enum:__anon26	file:
ptex_shockwave	gl_rpart.c	/^	ptex_shockwave,$/;"	e	enum:__anon26	file:
ptex_smoke	gl_rpart.c	/^	ptex_none, ptex_smoke, ptex_bubble, ptex_generic, ptex_dpsmoke, ptex_lava,$/;"	e	enum:__anon26	file:
ptex_spark	gl_rpart.c	/^	ptex_spark,$/;"	e	enum:__anon26	file:
ptexbytes	r_draw.c	/^	byte	*ptexbytes;$/;"	m	struct:__anon58	file:
ptotal	sbar.c	/^	int plow, phigh, ptotal;$/;"	m	struct:__anon62	file:
ptr	cam_new_menu.c	/^	void *ptr;$/;"	m	struct:menu_ct	file:
ptr	cam_new_menu.c	/^	void *ptr;$/;"	m	struct:menu_s	file:
ptr	sys_lib.h	/^	void **ptr;$/;"	m	struct:lib_functions
ptriangles	d_iface.h	/^	mtriangle_t			*ptriangles;$/;"	m	struct:__anon140
ptriangles	r_alias.c	/^mtriangle_t		*ptriangles;$/;"	v
ptype_t	d_iface.h	/^} ptype_t;$/;"	t	typeref:enum:__anon139
ptype_t	r_part.c	/^} ptype_t;$/;"	t	typeref:enum:__anon59	file:
pub	image.c	/^	struct jpeg_error_mgr pub;$/;"	m	struct:my_error_mgr	typeref:struct:my_error_mgr::jpeg_error_mgr	file:
pub	image.c	/^	struct jpeg_source_mgr pub;	\/\/ Public fields.$/;"	m	struct:__anon34	typeref:struct:__anon34::jpeg_source_mgr	file:
pub	image.c	/^  struct jpeg_destination_mgr pub; $/;"	m	struct:__anon32	typeref:struct:__anon32::jpeg_destination_mgr	file:
pub	image.c	/^  struct jpeg_destination_mgr pub; $/;"	m	struct:__anon33	typeref:struct:__anon33::jpeg_destination_mgr	file:
pub	image.c	/^  struct jpeg_error_mgr pub;$/;"	m	struct:my_error_mgr	typeref:struct:my_error_mgr::jpeg_error_mgr	file:
publicDevCtx_t	mgraph.h	/^	} publicDevCtx_t;$/;"	t	typeref:struct:__anon218
punchangle	client.h	/^	float		punchangle;			\/\/\/< drifts towards ideal_punchangle$/;"	m	struct:__anon125
pverts	d_iface.h	/^	emitpoint_t	*pverts;	\/\/ there's room for an extra element at [nump], $/;"	m	struct:__anon142
pverts	d_iface.h	/^	polyvert_t	*pverts;$/;"	m	struct:polydesc_s
pz	d_polyse.c	/^	short			*pz;$/;"	m	struct:__anon10	file:
q	mvd_utils_common.h	/^	mvd_ks_w_t q[7];$/;"	m	struct:mvd_ks_s
qAVIFileCreateStream	movie_avi.c	/^static HRESULT (CALLBACK *qAVIFileCreateStream)(PAVIFILE, PAVISTREAM *, AVISTREAMINFO *);$/;"	v	file:
qAVIFileExit	movie_avi.c	/^static void (CALLBACK *qAVIFileExit)(void);$/;"	v	file:
qAVIFileInit	movie_avi.c	/^static void (CALLBACK *qAVIFileInit)(void);$/;"	v	file:
qAVIFileOpen	movie_avi.c	/^static HRESULT (CALLBACK *qAVIFileOpen)(PAVIFILE *, LPCTSTR, UINT, LPCLSID);$/;"	v	file:
qAVIFileRelease	movie_avi.c	/^static ULONG (CALLBACK *qAVIFileRelease)(PAVIFILE);$/;"	v	file:
qAVIMakeCompressedStream	movie_avi.c	/^static HRESULT (CALLBACK *qAVIMakeCompressedStream)(PAVISTREAM *, PAVISTREAM, AVICOMPRESSOPTIONS *, CLSID *);$/;"	v	file:
qAVIStreamRelease	movie_avi.c	/^static ULONG (CALLBACK *qAVIStreamRelease)(PAVISTREAM);$/;"	v	file:
qAVIStreamSetFormat	movie_avi.c	/^static HRESULT (CALLBACK *qAVIStreamSetFormat)(PAVISTREAM, LONG, LPVOID, LONG);$/;"	v	file:
qAVIStreamWrite	movie_avi.c	/^static HRESULT (CALLBACK *qAVIStreamWrite)(PAVISTREAM, LONG, LONG, LPVOID, LONG, DWORD, LONG *, LONG *);$/;"	v	file:
qLink	CarbonSndPlayDB.c	/^	QElemPtr 						qLink;						\/* next queue entry *\/$/;"	m	struct:PerChanInfo	file:
qType	CarbonSndPlayDB.c	/^	short 							qType;						\/* queue type = 0 *\/$/;"	m	struct:PerChanInfo	file:
qXErrorHandler	linux_glimp.c	/^int qXErrorHandler(Display *dpy, XErrorEvent *ev)$/;"	f
q_pbuffer	vid_wgl.c	/^static pbuffer_s q_pbuffer = {0, 0, 0, 0, 0};$/;"	v	file:
qacmDriverClose	movie_avi.c	/^static MMRESULT (ACMAPI *qacmDriverClose)(HACMDRIVER, DWORD);$/;"	v	file:
qacmDriverDetails	movie_avi.c	/^static MMRESULT (ACMAPI *qacmDriverDetails)(HACMDRIVERID, LPACMDRIVERDETAILS, DWORD);$/;"	v	file:
qacmDriverEnum	movie_avi.c	/^static MMRESULT (ACMAPI *qacmDriverEnum)(ACMDRIVERENUMCB, DWORD, DWORD);$/;"	v	file:
qacmDriverOpen	movie_avi.c	/^static MMRESULT (ACMAPI *qacmDriverOpen)(LPHACMDRIVER, HACMDRIVERID, DWORD);$/;"	v	file:
qacmFormatTagDetails	movie_avi.c	/^static MMRESULT (ACMAPI *qacmFormatTagDetails)(HACMDRIVER, LPACMFORMATTAGDETAILS, DWORD);$/;"	v	file:
qacmStreamClose	movie_avi.c	/^static MMRESULT (ACMAPI *qacmStreamClose)(HACMSTREAM, DWORD);$/;"	v	file:
qacmStreamConvert	movie_avi.c	/^static MMRESULT (ACMAPI *qacmStreamConvert)(HACMSTREAM, LPACMSTREAMHEADER, DWORD);$/;"	v	file:
qacmStreamOpen	movie_avi.c	/^static MMRESULT (ACMAPI *qacmStreamOpen)(LPHACMSTREAM, HACMDRIVER, LPWAVEFORMATEX, LPWAVEFORMATEX, LPWAVEFILTER, DWORD, DWORD, DWORD);$/;"	v	file:
qacmStreamPrepareHeader	movie_avi.c	/^static MMRESULT (ACMAPI *qacmStreamPrepareHeader)(HACMSTREAM, LPACMSTREAMHEADER, DWORD);$/;"	v	file:
qacmStreamSize	movie_avi.c	/^static MMRESULT (ACMAPI *qacmStreamSize)(HACMSTREAM, DWORD, LPDWORD, DWORD);$/;"	v	file:
qacmStreamUnprepareHeader	movie_avi.c	/^static MMRESULT (ACMAPI *qacmStreamUnprepareHeader)(HACMSTREAM, LPACMSTREAMHEADER, DWORD);$/;"	v	file:
qaud_remote_get_main_volume	mp3_audacious.c	/^static gint (*qaud_remote_get_main_volume)(DBusGProxy *proxy);$/;"	v	file:
qaud_remote_get_output_time	mp3_audacious.c	/^static gint (*qaud_remote_get_output_time)(DBusGProxy *proxy);$/;"	v	file:
qaud_remote_get_playlist_length	mp3_audacious.c	/^gint (*qaud_remote_get_playlist_length)(DBusGProxy *proxy);$/;"	v
qaud_remote_get_playlist_pos	mp3_audacious.c	/^static gint (*qaud_remote_get_playlist_pos)(DBusGProxy *proxy);$/;"	v	file:
qaud_remote_get_playlist_time	mp3_audacious.c	/^static gint (*qaud_remote_get_playlist_time)(DBusGProxy *proxy, gint pos);$/;"	v	file:
qaud_remote_get_playlist_title	mp3_audacious.c	/^gchar *(*qaud_remote_get_playlist_title)(DBusGProxy *proxy, gint pos);$/;"	v
qaud_remote_is_paused	mp3_audacious.c	/^static gboolean (*qaud_remote_is_paused)(DBusGProxy *proxy);$/;"	v	file:
qaud_remote_is_playing	mp3_audacious.c	/^static gboolean (*qaud_remote_is_playing)(DBusGProxy *proxy);$/;"	v	file:
qaud_remote_is_repeat	mp3_audacious.c	/^static gboolean (*qaud_remote_is_repeat)(DBusGProxy *proxy);$/;"	v	file:
qaud_remote_is_running	mp3_audacious.c	/^static gboolean (*qaud_remote_is_running)(DBusGProxy *proxy);$/;"	v	file:
qaud_remote_is_shuffle	mp3_audacious.c	/^static gboolean (*qaud_remote_is_shuffle)(DBusGProxy *proxy);$/;"	v	file:
qaud_remote_jump_to_time	mp3_audacious.c	/^static void (*qaud_remote_jump_to_time)(DBusGProxy *proxy, gint pos);$/;"	v	file:
qaud_remote_pause	mp3_audacious.c	/^static void (*qaud_remote_pause)(DBusGProxy *proxy);$/;"	v	file:
qaud_remote_play	mp3_audacious.c	/^static void (*qaud_remote_play)(DBusGProxy *proxy);$/;"	v	file:
qaud_remote_playlist_next	mp3_audacious.c	/^static void (*qaud_remote_playlist_next)(DBusGProxy *proxy);$/;"	v	file:
qaud_remote_playlist_prev	mp3_audacious.c	/^static void (*qaud_remote_playlist_prev)(DBusGProxy *proxy);$/;"	v	file:
qaud_remote_set_main_volume	mp3_audacious.c	/^static void (*qaud_remote_set_main_volume)(DBusGProxy *proxy, gint v);$/;"	v	file:
qaud_remote_set_playlist_pos	mp3_audacious.c	/^static void (*qaud_remote_set_playlist_pos)(DBusGProxy *proxy, gint pos);$/;"	v	file:
qaud_remote_stop	mp3_audacious.c	/^static void (*qaud_remote_stop)(DBusGProxy *proxy);$/;"	v	file:
qaud_remote_toggle_repeat	mp3_audacious.c	/^static void (*qaud_remote_toggle_repeat)(DBusGProxy *proxy);$/;"	v	file:
qaud_remote_toggle_shuffle	mp3_audacious.c	/^static void (*qaud_remote_toggle_shuffle)(DBusGProxy *proxy);$/;"	v	file:
qbool	q_shared.h	/^typedef enum {false, true} qbool;$/;"	t	typeref:enum:__anon254
qconsole_log	console.c	/^FILE		*qconsole_log = NULL;$/;"	v
qdbus_g_bus_get	mp3_audacious.c	/^static DBusGConnection* (*qdbus_g_bus_get)(DBusBusType type, GError **error);$/;"	v	file:
qdbus_g_proxy_new_for_name	mp3_audacious.c	/^static DBusGProxy*      (*qdbus_g_proxy_new_for_name) ($/;"	v	file:
qerrno	net.h	38;"	d
qerrno	net.h	40;"	d
qg_free	mp3_audacious.c	/^static void (*qg_free)(gpointer);$/;"	v	file:
qg_free	mp3_xmms.c	/^void (*qg_free)(gpointer);$/;"	v
qg_type_init	mp3_audacious.c	/^static void (*qg_type_init)(void);$/;"	v	file:
qglActiveTexture	vid_common_gl.c	/^lpSelTexFUNC qglActiveTexture = NULL;$/;"	v
qglActiveTextureARB	tr_init.c	/^void ( APIENTRY * qglActiveTextureARB )( GLenum texture );$/;"	v
qglClientActiveTextureARB	tr_init.c	/^void ( APIENTRY * qglClientActiveTextureARB )( GLenum texture );$/;"	v
qglGetError	linux_glimp.c	/^GLenum ( APIENTRY * qglGetError )(void);$/;"	v
qglGetError	win_glimp.c	/^GLenum ( APIENTRY * qglGetError )(void);$/;"	v
qglGetIntegerv	linux_glimp.c	/^void ( APIENTRY * qglGetIntegerv )(GLenum pname, GLint *params);$/;"	v
qglGetIntegerv	win_glimp.c	/^void ( APIENTRY * qglGetIntegerv )(GLenum pname, GLint *params);$/;"	v
qglGetString	linux_glimp.c	/^const GLubyte * ( APIENTRY * qglGetString )(GLenum name);$/;"	v
qglGetString	win_glimp.c	/^const GLubyte * ( APIENTRY * qglGetString )(GLenum name);$/;"	v
qglMultiTexCoord2f	vid_common_gl.c	/^lpMTexFUNC qglMultiTexCoord2f = NULL;$/;"	v
qglMultiTexCoord2fARB	tr_init.c	/^void ( APIENTRY * qglMultiTexCoord2fARB )( GLenum texture, GLfloat s, GLfloat t );$/;"	v
qglProject	cl_screen.c	/^int qglProject (float objx, float objy, float objz, float *model, float *proj, int *view, float* winx, float* winy, float* winz) {$/;"	f
qglXChooseVisual	linux_glimp.c	/^XVisualInfo * (*qglXChooseVisual)( Display *dpy, int screen, int *attribList );$/;"	v
qglXCreateContext	linux_glimp.c	/^GLXContext (*qglXCreateContext)( Display *dpy, XVisualInfo *vis, GLXContext shareList, Bool direct );$/;"	v
qglXDestroyContext	linux_glimp.c	/^void (*qglXDestroyContext)( Display *dpy, GLXContext ctx );$/;"	v
qglXMakeCurrent	linux_glimp.c	/^Bool (*qglXMakeCurrent)( Display *dpy, GLXDrawable drawable, GLXContext ctx);$/;"	v
qglXQueryExtensionsString	linux_glimp.c	/^const char *(APIENTRY *qglXQueryExtensionsString)(Display *dpy, int screen);$/;"	v
qglXSwapBuffers	linux_glimp.c	/^void (*qglXSwapBuffers)( Display *dpy, GLXDrawable drawable );$/;"	v
qglXSwapIntervalSGI	linux_glimp.c	/^GLint (APIENTRY *qglXSwapIntervalSGI)(GLint interval);$/;"	v
qizmo	EX_browser.h	/^	qbool qizmo;$/;"	m	struct:server_data_s
qizmo_dir	cl_main.c	/^cvar_t	qizmo_dir = {"qizmo_dir", "qizmo"};$/;"	v
qjpeg_CreateCompress	image.c	/^static void (*qjpeg_CreateCompress)(j_compress_ptr, int, size_t);$/;"	v	file:
qjpeg_create_compress	image.c	1898;"	d	file:
qjpeg_destroy_compress	image.c	/^static void (*qjpeg_destroy_compress)(j_compress_ptr);$/;"	v	file:
qjpeg_finish_compress	image.c	/^static void (*qjpeg_finish_compress)(j_compress_ptr);$/;"	v	file:
qjpeg_set_defaults	image.c	/^static void (*qjpeg_set_defaults)(j_compress_ptr);$/;"	v	file:
qjpeg_set_quality	image.c	/^static void (*qjpeg_set_quality)(j_compress_ptr, int, boolean);$/;"	v	file:
qjpeg_start_compress	image.c	/^static void (*qjpeg_start_compress)(j_compress_ptr, boolean);$/;"	v	file:
qjpeg_std_error	image.c	/^static struct jpeg_error_mgr *(*qjpeg_std_error)(struct jpeg_error_mgr *);$/;"	v	typeref:struct:qjpeg_std_error	file:
qjpeg_write_scanlines	image.c	/^static JDIMENSION (*qjpeg_write_scanlines)(j_compress_ptr, JSAMPARRAY, JDIMENSION);$/;"	v	file:
qlib_dllfunction_s	modules.h	/^typedef struct qlib_dllfunction_s {$/;"	s
qlib_dllfunction_t	modules.h	/^} qlib_dllfunction_t;$/;"	t	typeref:struct:qlib_dllfunction_s
qlib_id_s	modules.h	/^typedef enum qlib_id_s {qlib_libpng, qlib_libjpeg, qlib_nummodules} qlib_id_t;$/;"	g
qlib_id_s	modules.h	/^typedef enum qlib_id_s {qlib_nummodules} qlib_id_t;$/;"	g
qlib_id_t	modules.h	/^typedef enum qlib_id_s {qlib_libpng, qlib_libjpeg, qlib_nummodules} qlib_id_t;$/;"	t	typeref:enum:qlib_id_s
qlib_id_t	modules.h	/^typedef enum qlib_id_s {qlib_nummodules} qlib_id_t;$/;"	t	typeref:enum:qlib_id_s
qlib_libjpeg	modules.h	/^typedef enum qlib_id_s {qlib_libpng, qlib_libjpeg, qlib_nummodules} qlib_id_t;$/;"	e	enum:qlib_id_s
qlib_libpng	modules.h	/^typedef enum qlib_id_s {qlib_libpng, qlib_libjpeg, qlib_nummodules} qlib_id_t;$/;"	e	enum:qlib_id_s
qlib_nummodules	modules.h	/^typedef enum qlib_id_s {qlib_libpng, qlib_libjpeg, qlib_nummodules} qlib_id_t;$/;"	e	enum:qlib_id_s
qlib_nummodules	modules.h	/^typedef enum qlib_id_s {qlib_nummodules} qlib_id_t;$/;"	e	enum:qlib_id_s
qlib_shutdown_fn	modules.h	/^typedef void (*qlib_shutdown_fn) (void);$/;"	t
qmb_initialized	gl_rpart.c	/^qbool qmb_initialized = false;$/;"	v
qmpd_closeConnection	mp3_mpd.c	/^static void (*qmpd_closeConnection)  (mpd_Connection * connection);$/;"	v	file:
qmpd_finishCommand	mp3_mpd.c	/^static void (*qmpd_finishCommand)     (mpd_Connection * connection);$/;"	v	file:
qmpd_freeStatus	mp3_mpd.c	/^static void (*qmpd_freeStatus)        (mpd_Status * status);$/;"	v	file:
qmpd_getNextInfoEntity	mp3_mpd.c	/^static mpd_InfoEntity *(*qmpd_getNextInfoEntity) (mpd_Connection * connection);$/;"	v	file:
qmpd_getStatus	mp3_mpd.c	/^static mpd_Status *(*qmpd_getStatus)  (mpd_Connection * connection);$/;"	v	file:
qmpd_newConnection	mp3_mpd.c	/^static mpd_Connection *(*qmpd_newConnection) (const char * host, int port, float timeout);$/;"	v	file:
qmpd_sendNextCommand	mp3_mpd.c	/^static void (*qmpd_sendNextCommand)  (mpd_Connection * connection);$/;"	v	file:
qmpd_sendPauseCommand	mp3_mpd.c	/^static void (*qmpd_sendPauseCommand) (mpd_Connection * connection, int pauseMode);$/;"	v	file:
qmpd_sendPlayCommand	mp3_mpd.c	/^static void (*qmpd_sendPlayCommand)  (mpd_Connection * connection, int songNum);$/;"	v	file:
qmpd_sendPlaylistInfoCommand	mp3_mpd.c	/^static void (*qmpd_sendPlaylistInfoCommand)      (mpd_Connection * connection, int songNum);$/;"	v	file:
qmpd_sendPrevCommand	mp3_mpd.c	/^static void (*qmpd_sendPrevCommand)  (mpd_Connection * connection);$/;"	v	file:
qmpd_sendRandomCommand	mp3_mpd.c	/^static void (*qmpd_sendRandomCommand)(mpd_Connection * connection, int randomMode);$/;"	v	file:
qmpd_sendRepeatCommand	mp3_mpd.c	/^static void (*qmpd_sendRepeatCommand)(mpd_Connection * connection, int repeatMode);$/;"	v	file:
qmpd_sendSeekCommand	mp3_mpd.c	/^static void (*qmpd_sendSeekCommand)  (mpd_Connection * connection, int song, int time);$/;"	v	file:
qmpd_sendSetvolCommand	mp3_mpd.c	/^static void (*qmpd_sendSetvolCommand)(mpd_Connection * connection, int volumeChange);$/;"	v	file:
qmpd_sendStatusCommand	mp3_mpd.c	/^static void (*qmpd_sendStatusCommand) (mpd_Connection * connection);$/;"	v	file:
qmpd_sendStopCommand	mp3_mpd.c	/^static void (*qmpd_sendStopCommand)  (mpd_Connection * connection);$/;"	v	file:
qov_clear	snd_ov.c	/^static int (*qov_clear)          (OggVorbis_File *vf);$/;"	v	file:
qov_comment	snd_ov.c	/^static vorbis_comment *(*qov_comment) (OggVorbis_File *vf,int link);$/;"	v	file:
qov_info	snd_ov.c	/^static vorbis_info    *(*qov_info)    (OggVorbis_File *vf,int link);$/;"	v	file:
qov_open_callbacks	snd_ov.c	/^static int (*qov_open_callbacks) (void *datasource, OggVorbis_File *vf,$/;"	v	file:
qov_pcm_total	snd_ov.c	/^static ogg_int64_t (*qov_pcm_total)  (OggVorbis_File *vf,int i);$/;"	v	file:
qov_read	snd_ov.c	/^static long (*qov_read) (OggVorbis_File *vf,char *buffer,int length,$/;"	v	file:
qp	mvd_utils_common.h	/^	mvd_ks_w_t qp[7];$/;"	m	struct:mvd_ks_s
qpic_t	wad.h	/^} qpic_t;$/;"	t	typeref:struct:__anon297
qpng_create_info_struct	image.c	/^static png_infop (*qpng_create_info_struct)(png_structp);$/;"	v	file:
qpng_create_read_struct	image.c	/^static png_structp (*qpng_create_read_struct)(png_const_charp, png_voidp, png_error_ptr, png_error_ptr);$/;"	v	file:
qpng_create_write_struct	image.c	/^static png_structp (*qpng_create_write_struct)(png_const_charp, png_voidp, png_error_ptr, png_error_ptr);$/;"	v	file:
qpng_destroy_read_struct	image.c	/^static void (*qpng_destroy_read_struct)(png_structpp, png_infopp, png_infopp);$/;"	v	file:
qpng_destroy_write_struct	image.c	/^static void (*qpng_destroy_write_struct)(png_structpp, png_infopp);$/;"	v	file:
qpng_get_IHDR	image.c	/^static png_uint_32 (*qpng_get_IHDR)(png_structp, png_infop, png_uint_32 *, png_uint_32 *, int *, int *, int *, int *, int *);$/;"	v	file:
qpng_get_bit_depth	image.c	/^static png_byte (*qpng_get_bit_depth)(png_structp, png_infop);$/;"	v	file:
qpng_get_channels	image.c	/^static png_byte (*qpng_get_channels)(png_structp, png_infop);$/;"	v	file:
qpng_get_io_ptr	image.c	/^static png_voidp (*qpng_get_io_ptr)(png_structp);$/;"	v	file:
qpng_get_rowbytes	image.c	/^static png_uint_32 (*qpng_get_rowbytes)(png_structp, png_infop);$/;"	v	file:
qpng_get_valid	image.c	/^static png_uint_32 (*qpng_get_valid)(png_structp, png_infop, png_uint_32);$/;"	v	file:
qpng_read_end	image.c	/^static void (*qpng_read_end)(png_structp, png_infop);$/;"	v	file:
qpng_read_image	image.c	/^static void (*qpng_read_image)(png_structp, png_bytepp);$/;"	v	file:
qpng_read_info	image.c	/^static void (*qpng_read_info)(png_structp, png_infop);$/;"	v	file:
qpng_read_update_info	image.c	/^static void (*qpng_read_update_info)(png_structp, png_infop);$/;"	v	file:
qpng_set_IHDR	image.c	/^static void (*qpng_set_IHDR)(png_structp, png_infop, png_uint_32, png_uint_32, int, int, int, int, int);$/;"	v	file:
qpng_set_PLTE	image.c	/^static void (*qpng_set_PLTE)(png_structp, png_infop, png_colorp, int);$/;"	v	file:
qpng_set_compression_level	image.c	/^static void (*qpng_set_compression_level)(png_structp, int);$/;"	v	file:
qpng_set_expand	image.c	/^static void (*qpng_set_expand)(png_structp);$/;"	v	file:
qpng_set_filler	image.c	/^static void (*qpng_set_filler)(png_structp, png_uint_32, int);$/;"	v	file:
qpng_set_gray_1_2_4_to_8	image.c	/^static void (*qpng_set_gray_1_2_4_to_8)(png_structp);$/;"	v	file:
qpng_set_gray_to_rgb	image.c	/^static void (*qpng_set_gray_to_rgb)(png_structp);$/;"	v	file:
qpng_set_palette_to_rgb	image.c	/^static void (*qpng_set_palette_to_rgb)(png_structp);$/;"	v	file:
qpng_set_read_fn	image.c	/^static void (*qpng_set_read_fn)(png_structp, png_voidp, png_rw_ptr);$/;"	v	file:
qpng_set_sig_bytes	image.c	/^static void (*qpng_set_sig_bytes)(png_structp, int);$/;"	v	file:
qpng_set_strip_16	image.c	/^static void (*qpng_set_strip_16)(png_structp);$/;"	v	file:
qpng_set_tRNS_to_alpha	image.c	/^static void (*qpng_set_tRNS_to_alpha)(png_structp);$/;"	v	file:
qpng_set_write_fn	image.c	/^static void (*qpng_set_write_fn)(png_structp, png_voidp, png_rw_ptr, png_flush_ptr);$/;"	v	file:
qpng_sig_cmp	image.c	/^static int (*qpng_sig_cmp)(png_bytep, png_size_t, png_size_t);$/;"	v	file:
qpng_write_end	image.c	/^static void (*qpng_write_end)(png_structp, png_infop);$/;"	v	file:
qpng_write_image	image.c	/^static void (*qpng_write_image)(png_structp, png_bytepp);$/;"	v	file:
qpng_write_info	image.c	/^static void (*qpng_write_info)(png_structp, png_infop);$/;"	v	file:
qport	client.h	/^	int			qport;$/;"	m	struct:__anon122
qport	net.h	/^	int			qport;$/;"	m	struct:__anon240
qport	net_chan.c	/^cvar_t	qport		= {"qport", "0"};$/;"	v
qpr	mvd_utils_common.h	/^	mvd_ks_w_t qpr[7];$/;"	m	struct:mvd_ks_s
qr	mvd_utils_common.h	/^	mvd_ks_w_t qr[7];$/;"	m	struct:mvd_ks_s
qstat_senttime	cl_cmd.c	/^double	qstat_senttime = 0;$/;"	v
qtv_adjustbuffer	qtv.c	/^cvar_t  qtv_adjustbuffer	 = {"qtv_adjustbuffer",		"1"};$/;"	v
qtv_adjusthighstart	qtv.c	/^cvar_t  qtv_adjusthighstart  = {"qtv_adjusthighstart",	"1"};$/;"	v
qtv_adjustlowstart	qtv.c	/^cvar_t  qtv_adjustlowstart   = {"qtv_adjustlowstart",	"0.3"};$/;"	v
qtv_adjustmaxspeed	qtv.c	/^cvar_t  qtv_adjustmaxspeed	 = {"qtv_adjustmaxspeed",	"999"};$/;"	v
qtv_adjustminspeed	qtv.c	/^cvar_t  qtv_adjustminspeed	 = {"qtv_adjustminspeed",	"0"};$/;"	v
qtv_buffertime	qtv.c	/^cvar_t	qtv_buffertime		 = {"qtv_buffertime",		"0.5"};$/;"	v
qtv_chatprefix	qtv.c	/^cvar_t	qtv_chatprefix		 = {"qtv_chatprefix",		"$[{QTV}$] "};$/;"	v
qtv_clc_stringcmd	qtv.h	91;"	d
qtv_donotbuffer	client.h	/^	qbool		qtv_donotbuffer;\/\/\/< do not try buffering even if not enough data$/;"	m	struct:__anon122
qtv_event_changename	qtv.c	/^cvar_t  qtv_event_changename = {"qtv_event_changename", " &cFF0changed&r name to "};$/;"	v
qtv_event_join	qtv.c	/^cvar_t  qtv_event_join       = {"qtv_event_join", 		" &c2F2joined&r"};$/;"	v
qtv_event_leave	qtv.c	/^cvar_t  qtv_event_leave      = {"qtv_event_leave", 		" &cF22left&r"};$/;"	v
qtv_ezquake_ext	client.h	/^	int			qtv_ezquake_ext; \/\/\/< qtv ezquake extensions supported by qtvsv\/proxy$/;"	m	struct:__anon122
qtv_gamechatprefix	qtv.c	/^cvar_t	qtv_gamechatprefix	 = {"qtv_gamechatprefix",	"$[{QTV>game}$] "};$/;"	v
qtv_skipchained	qtv.c	/^cvar_t	qtv_skipchained		 = {"qtv_skipchained",		"1"};$/;"	v
qtv_svversion	client.h	/^	float		qtv_svversion;	\/\/\/< version of qtvsv\/proxy, note it float$/;"	m	struct:__anon122
qtvpassword	cl_demo.c	/^char qtvpassword[128] = {0};$/;"	v
qtvrequest	cl_demo.c	/^vfsfile_t *qtvrequest = NULL;$/;"	v
qtvrequestbuffer	cl_demo.c	/^char qtvrequestbuffer[4096] = {0};$/;"	v
qtvrequestsize	cl_demo.c	/^int  qtvrequestsize = 0;$/;"	v
qtvuser_s	qtv.h	/^typedef struct qtvuser_s {$/;"	s
qtvuser_t	qtv.h	/^} qtvuser_t;$/;"	t	typeref:struct:qtvuser_s
qtvuserlist	qtv.c	/^static qtvuser_t *qtvuserlist = NULL;$/;"	v	file:
qtvuserlist_t	qtv.h	/^} qtvuserlist_t;$/;"	t	typeref:enum:__anon255
quad	mvd_utils_common.h	/^	mvd_avgruns_t quad;$/;"	m	struct:mvd_avgruns_all_s
quad_cams	mvd_utils.c	/^quad_cams_t quad_cams[3];$/;"	v
quad_cams_s	mvd_utils.c	/^typedef struct quad_cams_s {$/;"	s	file:
quad_cams_t	mvd_utils.c	/^} quad_cams_t;$/;"	t	typeref:struct:quad_cams_s	file:
quad_is_active	mvd_utils.c	/^int quad_is_active= 0;$/;"	v
quad_mentioned	mvd_utils.c	/^int quad_mentioned = 0;$/;"	v
quad_time	mvd_utils.c	/^double quad_time =0;$/;"	v
quad_val	mvd_autotrack.c	66;"	d	file:
quotient	d_polyse.c	/^	int		quotient;$/;"	m	struct:__anon12	file:
qw_enc	cl_tcl.c	/^static Tcl_Encoding qw_enc;$/;"	v	file:
qwclsemaphore	sys_win.c	/^static HANDLE	qwclsemaphore;$/;"	v	file:
qwcschr	q_shared.c	/^wchar *qwcschr (const wchar *ws, wchar wc)$/;"	f
qwcschr	q_shared.h	248;"	d
qwcscpy	q_shared.c	/^wchar *qwcscpy (wchar *dest, const wchar *src)$/;"	f
qwcscpy	q_shared.h	247;"	d
qwcslcat	q_shared.c	/^size_t qwcslcat (wchar *dst, const wchar *src, size_t size)$/;"	f
qwcslcpy	q_shared.c	/^size_t qwcslcpy (wchar *dst, const wchar *src, size_t size)$/;"	f
qwcslen	q_shared.c	/^size_t qwcslen (const wchar *ws)$/;"	f
qwcslen	q_shared.h	250;"	d
qwcsrchr	q_shared.c	/^wchar *qwcsrchr (const wchar *ws, wchar wc)$/;"	f
qwcsrchr	q_shared.h	249;"	d
qwcsstr	q_shared.c	/^wchar *qwcsstr (const wchar *str, const wchar *strSearch)$/;"	f
qwcsstr	q_shared.h	251;"	d
qwdtools_dir	cl_main.c	/^cvar_t	qwdtools_dir = {"qwdtools_dir", "qwdtools"};$/;"	v
qwglChoosePixelFormat	win_glimp.c	/^int   ( WINAPI * qwglChoosePixelFormat )(HDC, CONST PIXELFORMATDESCRIPTOR *);$/;"	v
qwglCopyContext	win_glimp.c	/^BOOL  ( WINAPI * qwglCopyContext)(HGLRC, HGLRC, UINT);$/;"	v
qwglCreateContext	win_glimp.c	/^HGLRC ( WINAPI * qwglCreateContext)(HDC);$/;"	v
qwglCreateLayerContext	win_glimp.c	/^HGLRC ( WINAPI * qwglCreateLayerContext)(HDC, int);$/;"	v
qwglDeleteContext	win_glimp.c	/^BOOL  ( WINAPI * qwglDeleteContext)(HGLRC);$/;"	v
qwglDescribeLayerPlane	win_glimp.c	/^BOOL  ( WINAPI * qwglDescribeLayerPlane)(HDC, int, int, UINT, LPLAYERPLANEDESCRIPTOR);$/;"	v
qwglDescribePixelFormat	win_glimp.c	/^int   ( WINAPI * qwglDescribePixelFormat) (HDC, int, UINT, LPPIXELFORMATDESCRIPTOR);$/;"	v
qwglGetCurrentContext	win_glimp.c	/^HGLRC ( WINAPI * qwglGetCurrentContext)(VOID);$/;"	v
qwglGetCurrentDC	win_glimp.c	/^HDC   ( WINAPI * qwglGetCurrentDC)(VOID);$/;"	v
qwglGetDeviceGammaRamp3DFX	win_glimp.c	/^BOOL  ( WINAPI * qwglGetDeviceGammaRamp3DFX)( HDC, LPVOID );$/;"	v
qwglGetLayerPaletteEntries	win_glimp.c	/^int   ( WINAPI * qwglGetLayerPaletteEntries)(HDC, int, int, int, COLORREF *);$/;"	v
qwglGetPixelFormat	win_glimp.c	/^int   ( WINAPI * qwglGetPixelFormat)(HDC);$/;"	v
qwglGetProcAddress	win_glimp.c	/^PROC  ( WINAPI * qwglGetProcAddress)(LPCSTR);$/;"	v
qwglMakeCurrent	win_glimp.c	/^BOOL  ( WINAPI * qwglMakeCurrent)(HDC, HGLRC);$/;"	v
qwglRealizeLayerPalette	win_glimp.c	/^BOOL  ( WINAPI * qwglRealizeLayerPalette)(HDC, int, BOOL);$/;"	v
qwglSetDeviceGammaRamp3DFX	win_glimp.c	/^BOOL  ( WINAPI * qwglSetDeviceGammaRamp3DFX)( HDC, LPVOID );$/;"	v
qwglSetLayerPaletteEntries	win_glimp.c	/^int   ( WINAPI * qwglSetLayerPaletteEntries)(HDC, int, int, int, CONST COLORREF *);$/;"	v
qwglSetPixelFormat	win_glimp.c	/^BOOL  ( WINAPI * qwglSetPixelFormat)(HDC, int, CONST PIXELFORMATDESCRIPTOR *);$/;"	v
qwglShareLists	win_glimp.c	/^BOOL  ( WINAPI * qwglShareLists)(HGLRC, HGLRC);$/;"	v
qwglSwapBuffers	win_glimp.c	/^BOOL  ( WINAPI * qwglSwapBuffers)(HDC);$/;"	v
qwglSwapIntervalEXT	win_glimp.c	/^int ( WINAPI * qwglSwapIntervalEXT)( int interval );$/;"	v
qwglSwapLayerBuffers	win_glimp.c	/^BOOL  ( WINAPI * qwglSwapLayerBuffers)(HDC, UINT);$/;"	v
qwglUseFontBitmaps	win_glimp.c	/^BOOL  ( WINAPI * qwglUseFontBitmaps)(HDC, DWORD, DWORD, DWORD);$/;"	v
qwglUseFontOutlines	win_glimp.c	/^BOOL  ( WINAPI * qwglUseFontOutlines)(HDC, DWORD, DWORD, DWORD, FLOAT, FLOAT, int, LPGLYPHMETRICSFLOAT);$/;"	v
qwlua_checklstring	lua.c	/^const char *	(*qwlua_checklstring)	(lua_State *L, int numArg, size_t *l);$/;"	v
qwlua_checkstring	lua.c	35;"	d	file:
qwlua_close	lua.c	/^void		(*qwlua_close)		(lua_State *L);$/;"	v
qwlua_dofile	lua.c	30;"	d	file:
qwlua_getfield	lua.c	/^void		(*qwlua_getfield)	(lua_State *L, int idx, const char *k);$/;"	v
qwlua_getglobal	lua.c	27;"	d	file:
qwlua_loadfile	lua.c	/^int		(*qwlua_loadfile)	(lua_State *L, const char *filename);$/;"	v
qwlua_newmetatable	lua.c	/^int		(*qwlua_newmetatable)	(lua_State *L, const char *tname);$/;"	v
qwlua_newstate	lua.c	/^lua_State *	(*qwlua_newstate)	(void);$/;"	v
qwlua_open	lua.c	29;"	d	file:
qwlua_openlib	lua.c	/^void		(*qwlua_openlib)	(lua_State *L, const char *libname, const luaL_Reg *l, int nup);$/;"	v
qwlua_openlibs	lua.c	/^void		(*qwlua_openlibs)	(lua_State *L);$/;"	v
qwlua_pcall	lua.c	/^int		(*qwlua_pcall)		(lua_State *L, int nargs, int nresults, int errfunc);$/;"	v
qwlua_pop	lua.c	34;"	d	file:
qwlua_pushliteral	lua.c	32;"	d	file:
qwlua_pushlstring	lua.c	/^void		(*qwlua_pushlstring)	(lua_State *L, const char *s, size_t l);$/;"	v
qwlua_pushnumber	lua.c	/^void		(*qwlua_pushnumber)	(lua_State *L, lua_Number n);$/;"	v
qwlua_pushstring	lua.c	/^void		(*qwlua_pushstring)	(lua_State *L, const char *s);$/;"	v
qwlua_pushvalue	lua.c	/^void		(*qwlua_pushvalue)	(lua_State *L, int idx);$/;"	v
qwlua_rawset	lua.c	/^void		(*qwlua_rawset)		(lua_State *L, int idx);$/;"	v
qwlua_settop	lua.c	/^void		(*qwlua_settop)		(lua_State *L, int idx);$/;"	v
qwlua_tolstring	lua.c	/^const char *	(*qwlua_tolstring)	(lua_State *L, int idx, size_t *len);$/;"	v
qwlua_tostring	lua.c	28;"	d	file:
qwz_packing	cl_demo.c	/^static qbool	qwz_packing = false;$/;"	v	file:
qwz_playback	cl_demo.c	/^static qbool	qwz_playback = false;$/;"	v	file:
qwz_unpacking	cl_demo.c	/^static qbool	qwz_unpacking = false;$/;"	v	file:
qxmms_remote_get_main_volume	mp3_xmms.c	/^static gint (*qxmms_remote_get_main_volume)(gint session);$/;"	v	file:
qxmms_remote_get_output_time	mp3_xmms.c	/^static gint (*qxmms_remote_get_output_time)(gint session);$/;"	v	file:
qxmms_remote_get_playlist_length	mp3_xmms.c	/^gint (*qxmms_remote_get_playlist_length)(gint session);$/;"	v
qxmms_remote_get_playlist_pos	mp3_xmms.c	/^static gint (*qxmms_remote_get_playlist_pos)(gint session);$/;"	v	file:
qxmms_remote_get_playlist_time	mp3_xmms.c	/^static gint (*qxmms_remote_get_playlist_time)(gint session, gint pos);$/;"	v	file:
qxmms_remote_get_playlist_title	mp3_xmms.c	/^gchar *(*qxmms_remote_get_playlist_title)(gint session, gint pos);$/;"	v
qxmms_remote_is_paused	mp3_xmms.c	/^static gboolean (*qxmms_remote_is_paused)(gint session);$/;"	v	file:
qxmms_remote_is_playing	mp3_xmms.c	/^static gboolean (*qxmms_remote_is_playing)(gint session);$/;"	v	file:
qxmms_remote_is_repeat	mp3_xmms.c	/^static gboolean (*qxmms_remote_is_repeat)(gint session);$/;"	v	file:
qxmms_remote_is_running	mp3_xmms.c	/^static gboolean (*qxmms_remote_is_running)(gint session);$/;"	v	file:
qxmms_remote_is_shuffle	mp3_xmms.c	/^static gboolean (*qxmms_remote_is_shuffle)(gint session);$/;"	v	file:
qxmms_remote_jump_to_time	mp3_xmms.c	/^static void (*qxmms_remote_jump_to_time)(gint session, gint pos);$/;"	v	file:
qxmms_remote_pause	mp3_xmms.c	/^static void (*qxmms_remote_pause)(gint session);$/;"	v	file:
qxmms_remote_play	mp3_xmms.c	/^static void (*qxmms_remote_play)(gint session);$/;"	v	file:
qxmms_remote_playlist_next	mp3_xmms.c	/^static void (*qxmms_remote_playlist_next)(gint session);$/;"	v	file:
qxmms_remote_playlist_prev	mp3_xmms.c	/^static void (*qxmms_remote_playlist_prev)(gint session);$/;"	v	file:
qxmms_remote_set_main_volume	mp3_xmms.c	/^static void (*qxmms_remote_set_main_volume)(gint session, gint v);$/;"	v	file:
qxmms_remote_set_playlist_pos	mp3_xmms.c	/^static void (*qxmms_remote_set_playlist_pos)(gint session, gint pos);$/;"	v	file:
qxmms_remote_stop	mp3_xmms.c	/^static void (*qxmms_remote_stop)(gint session);$/;"	v	file:
qxmms_remote_toggle_repeat	mp3_xmms.c	/^static void (*qxmms_remote_toggle_repeat)(gint session);$/;"	v	file:
qxmms_remote_toggle_shuffle	mp3_xmms.c	/^static void (*qxmms_remote_toggle_shuffle)(gint session);$/;"	v	file:
qxmmsc_connect	mp3_xmms2.c	/^static int                 (*qxmmsc_connect)    (xmmsc_connection_t *, const char *);$/;"	v	file:
qxmmsc_get_last_error	mp3_xmms2.c	/^static char *(*qxmmsc_get_last_error) (xmmsc_connection_t *c);$/;"	v	file:
qxmmsc_init	mp3_xmms2.c	/^static xmmsc_connection_t *(*qxmmsc_init)       (const char *clientname);$/;"	v	file:
qxmmsc_medialib_get_info	mp3_xmms2.c	/^static xmmsc_result_t *(*qxmmsc_medialib_get_info) (xmmsc_connection_t *, uint32_t);$/;"	v	file:
qxmmsc_playback_current_id	mp3_xmms2.c	/^static xmmsc_result_t *(*qxmmsc_playback_current_id) (xmmsc_connection_t *c);$/;"	v	file:
qxmmsc_playback_pause	mp3_xmms2.c	/^static xmmsc_result_t *(*qxmmsc_playback_pause)      (xmmsc_connection_t *c);$/;"	v	file:
qxmmsc_playback_playtime	mp3_xmms2.c	/^static xmmsc_result_t *(*qxmmsc_playback_playtime)   (xmmsc_connection_t *c);$/;"	v	file:
qxmmsc_playback_seek_ms_rel	mp3_xmms2.c	/^static xmmsc_result_t *(*qxmmsc_playback_seek_ms_rel) (xmmsc_connection_t *c, int milliseconds);$/;"	v	file:
qxmmsc_playback_start	mp3_xmms2.c	/^static xmmsc_result_t *(*qxmmsc_playback_start)      (xmmsc_connection_t *c);$/;"	v	file:
qxmmsc_playback_status	mp3_xmms2.c	/^static xmmsc_result_t *(*qxmmsc_playback_status)     (xmmsc_connection_t *c);$/;"	v	file:
qxmmsc_playback_stop	mp3_xmms2.c	/^static xmmsc_result_t *(*qxmmsc_playback_stop)       (xmmsc_connection_t *c);$/;"	v	file:
qxmmsc_playback_tickle	mp3_xmms2.c	/^static xmmsc_result_t *(*qxmmsc_playback_tickle)     (xmmsc_connection_t *c);$/;"	v	file:
qxmmsc_playback_volume_get	mp3_xmms2.c	/^static xmmsc_result_t *(*qxmmsc_playback_volume_get) (xmmsc_connection_t *c);$/;"	v	file:
qxmmsc_playback_volume_set	mp3_xmms2.c	/^static xmmsc_result_t *(*qxmmsc_playback_volume_set) (xmmsc_connection_t *c, const char *channel, uint32_t volume);$/;"	v	file:
qxmmsc_playlist_list_entries	mp3_xmms2.c	/^static xmmsc_result_t *(*qxmmsc_playlist_list_entries) (xmmsc_connection_t *c, const char *playlist);$/;"	v	file:
qxmmsc_playlist_set_next	mp3_xmms2.c	/^static xmmsc_result_t *(*qxmmsc_playlist_set_next)     (xmmsc_connection_t *c, uint32_t);$/;"	v	file:
qxmmsc_playlist_set_next_rel	mp3_xmms2.c	/^static xmmsc_result_t *(*qxmmsc_playlist_set_next_rel) (xmmsc_connection_t *c, int32_t);$/;"	v	file:
qxmmsc_result_get_dict_entry_int	mp3_xmms2.c	/^static int  (*qxmmsc_result_get_dict_entry_int)     (xmmsc_result_t *res, const char *key, int32_t *r);$/;"	v	file:
qxmmsc_result_get_dict_entry_string	mp3_xmms2.c	/^static int  (*qxmmsc_result_get_dict_entry_string)  (xmmsc_result_t *res, const char *key, char **r);$/;"	v	file:
qxmmsc_result_get_dict_entry_uint	mp3_xmms2.c	/^static int  (*qxmmsc_result_get_dict_entry_uint)    (xmmsc_result_t *res, const char *key, uint32_t *r);$/;"	v	file:
qxmmsc_result_get_error	mp3_xmms2.c	/^static const char *(*qxmmsc_result_get_error)       (xmmsc_result_t *res);$/;"	v	file:
qxmmsc_result_get_uint	mp3_xmms2.c	/^static int  (*qxmmsc_result_get_uint)               (xmmsc_result_t *res, uint32_t *r);$/;"	v	file:
qxmmsc_result_iserror	mp3_xmms2.c	/^static int   (*qxmmsc_result_iserror) (xmmsc_result_t *res);$/;"	v	file:
qxmmsc_result_list_next	mp3_xmms2.c	/^static int  (*qxmmsc_result_list_next)              (xmmsc_result_t *res);$/;"	v	file:
qxmmsc_result_list_valid	mp3_xmms2.c	/^static int  (*qxmmsc_result_list_valid)             (xmmsc_result_t *res);$/;"	v	file:
qxmmsc_result_unref	mp3_xmms2.c	/^static void (*qxmmsc_result_unref)                  (xmmsc_result_t *res);$/;"	v	file:
qxmmsc_result_wait	mp3_xmms2.c	/^static void (*qxmmsc_result_wait)                   (xmmsc_result_t *res);$/;"	v	file:
qxmmsc_unref	mp3_xmms2.c	/^static void                (*qxmmsc_unref)      (xmmsc_connection_t *c);$/;"	v	file:
r	cam_new.c	/^	float	r,g,b,a;$/;"	m	struct:CamSys_Spline	file:
r	cam_new.h	/^	float	r,g,b,a;$/;"	m	struct:CamSys_Spline
r	gl_local.h	/^	float	r, g, b;$/;"	m	struct:__anon153
r	mgraph.h	/^	fxcolor_t	r,g,b;$/;"	m	struct:__anon199
r	mvd_utils_common.h	/^	mvd_ks_w_t r[7];$/;"	m	struct:mvd_ks_s
rAlertDialog	sys_mac.c	/^	rAlertDialog = 128,$/;"	e	enum:__anon68	file:
r_addent	gl_refrag.c	/^entity_t	*r_addent;$/;"	v
r_addent	r_efrag.c	/^entity_t	*r_addent;$/;"	v
r_affinetridesc	r_alias.c	/^affinetridesc_t	r_affinetridesc;$/;"	v
r_aliasstats	r_main.c	/^cvar_t	r_aliasstats = {"r_polymodelstats", "0"};$/;"	v
r_aliastransadj	r_main.c	/^cvar_t	r_aliastransadj = {"r_aliastransadj", "100"};$/;"	v
r_aliastransbase	r_main.c	/^cvar_t	r_aliastransbase = {"r_aliastransbase", "200"};$/;"	v
r_aliastransition	r_main.c	/^float		r_aliastransition, r_resfudge;$/;"	v
r_aliasuvscale	r_main.c	/^float		r_aliasuvscale = 1.0;$/;"	v
r_allowExtensions	tr_init.c	/^cvar_t	r_allowExtensions	= { "vid_allowExtensions",	"1",	CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
r_allowSoftwareGL	linux_glimp.c	/^cvar_t r_allowSoftwareGL  = { "vid_allowSoftwareGL", "0", CVAR_LATCH };   \/\/ don't abort out if the pixelformat claims software$/;"	v
r_allowSoftwareGL	win_glimp.c	/^cvar_t	r_allowSoftwareGL = { "vid_allowSoftwareGL", "0", CVAR_LATCH }; \/\/ don't abort out if the pixelformat claims software$/;"	v
r_ambient	r_main.c	/^cvar_t	r_ambient = {"r_ambient", "0"};$/;"	v
r_ambientlight	r_alias.c	/^int					r_ambientlight;$/;"	v
r_amodels_drawn	r_alias.c	/^int				r_amodels_drawn;$/;"	v
r_anumverts	r_alias.c	/^int				r_anumverts;$/;"	v
r_apverts	r_alias.c	/^trivertx_t		*r_apverts;$/;"	v
r_avertexnormal_dots	gl_rmain.c	/^byte	r_avertexnormal_dots[SHADEDOT_QUANT][NUMVERTEXNORMALS] =$/;"	v
r_avertexnormals	gl_rmain.c	/^float	r_avertexnormals[NUMVERTEXNORMALS][3] = {$/;"	v
r_avertexnormals	r_alias.c	/^float	r_avertexnormals[NUMVERTEXNORMALS][3] = {$/;"	v
r_base_world_matrix	gl_rmain.c	/^float	r_base_world_matrix[16];$/;"	v
r_bloom	gl_bloom.c	/^cvar_t      r_bloom = {"r_bloom", "0", true};$/;"	v
r_bloom_alpha	gl_bloom.c	/^cvar_t      r_bloom_alpha = {"r_bloom_alpha", "0.5", true};$/;"	v
r_bloom_darken	gl_bloom.c	/^cvar_t      r_bloom_darken = {"r_bloom_darken", "3", true};$/;"	v
r_bloom_diamond_size	gl_bloom.c	/^cvar_t      r_bloom_diamond_size = {"r_bloom_diamond_size", "8", true};$/;"	v
r_bloom_fast_sample	gl_bloom.c	/^cvar_t      r_bloom_fast_sample = {"r_bloom_fast_sample", "0", true};$/;"	v
r_bloom_intensity	gl_bloom.c	/^cvar_t      r_bloom_intensity = {"r_bloom_intensity", "1", true};$/;"	v
r_bloom_sample_size	gl_bloom.c	/^cvar_t      r_bloom_sample_size = {"r_bloom_sample_size", "256", true};$/;"	v
r_bloombackuptexture	gl_bloom.c	/^int r_bloombackuptexture;$/;"	v
r_bloomdownsamplingtexture	gl_bloom.c	/^int r_bloomdownsamplingtexture;$/;"	v
r_bloomeffecttexture	gl_bloom.c	/^int r_bloomeffecttexture;$/;"	v
r_bloomscreentexture	gl_bloom.c	/^int r_bloomscreentexture;$/;"	v
r_bmodelactive	r_vars.c	/^int	r_bmodelactive;$/;"	v
r_cache_thrash	d_surf.c	/^qbool        r_cache_thrash;         \/\/ set if surface cache is thrashing$/;"	v
r_cache_thrash	gl_rmain.c	/^qbool	r_cache_thrash;		\/\/ compatability$/;"	v
r_ceilv1	r_rast.c	/^int				r_ceilv1;$/;"	v
r_chaticons_alpha	cl_screen.c	/^cvar_t  r_chaticons_alpha		= {"r_chaticons_alpha", "0.8"};$/;"	v
r_clearcolor	r_main.c	/^cvar_t	r_clearcolor = {"r_clearcolor", "2"};$/;"	v
r_clipflags	r_main.c	/^int			r_clipflags;$/;"	v
r_cnumsurfs	r_main.c	/^int			r_maxsurfsseen, r_maxedgesseen, r_cnumsurfs;$/;"	v
r_colorbits	tr_init.c	/^cvar_t	r_colorbits			= { "vid_colorbits",		"0",	CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
r_conheight	tr_init.c	/^cvar_t	r_conheight			= { "vid_conheight",		"0",	CVAR_NO_RESET | CVAR_SILENT, OnChange_r_con_xxx }; \/\/ default is 0, so i can sort out is user specify conheight on cmd line or something$/;"	v
r_conwidth	tr_init.c	/^cvar_t	r_conwidth			= { "vid_conwidth",			"640",	CVAR_NO_RESET | CVAR_SILENT, OnChange_r_con_xxx };$/;"	v
r_corona	vx_coronas.c	/^corona_t	r_corona[MAX_CORONAS];$/;"	v
r_currentbkey	r_bsp.c	/^int				r_currentbkey;$/;"	v
r_currentkey	r_edge.c	/^int		r_currentkey;$/;"	v
r_customaspect	tr_init.c	/^cvar_t	r_customaspect		= { "vid_customaspect",		"1",	CVAR_ARCHIVE | CVAR_LATCH }; \/\/ qqshka: unused even in q3, but I keep cvar, just do not register it$/;"	v
r_customheight	tr_init.c	/^cvar_t	r_customheight		= { "vid_customheight",		"1024",	CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
r_customwidth	tr_init.c	/^cvar_t	r_customwidth		= { "vid_customwidth",		"1600",	CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
r_depthbits	tr_init.c	/^cvar_t	r_depthbits			= { "vid_depthbits",		"0",	CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
r_displayRefresh	tr_init.c	/^cvar_t	r_displayRefresh	= { "vid_displayfrequency", "0",	CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
r_dlightframecount	gl_rlight.c	/^int	r_dlightframecount;$/;"	v
r_dlightframecount	r_light.c	/^int	r_dlightframecount;$/;"	v
r_dowarp	r_main.c	/^qbool	r_dowarp, r_dowarpold, r_viewchanged;$/;"	v
r_dowarpold	r_main.c	/^qbool	r_dowarp, r_dowarpold, r_viewchanged;$/;"	v
r_drawentities	gl_rmain.c	/^cvar_t	r_drawentities = {"r_drawentities", "1"};$/;"	v
r_drawentities	r_main.c	/^cvar_t	r_drawentities = {"r_drawentities", "1"};$/;"	v
r_drawflame	gl_rmain.c	/^cvar_t	r_drawflame = {"r_drawflame", "1"};$/;"	v
r_drawflame	r_main.c	/^cvar_t	r_drawflame = {"r_drawflame", "1"};$/;"	v
r_drawflat	d_init.c	/^cvar_t	r_drawflat   = {"r_drawflat", "0", 0, OnChange_r_drawflat};$/;"	v
r_drawflat	gl_rmain.c	/^cvar_t	r_drawflat   = {"r_drawflat", "0", 0, OnChange_r_drawflat};$/;"	v
r_drawnpolycount	r_main.c	/^int		r_drawnpolycount;$/;"	v
r_draworder	r_main.c	/^cvar_t	r_draworder = {"r_draworder", "0"};$/;"	v
r_drawsurf	r_surf.c	/^drawsurf_t	r_drawsurf;$/;"	v
r_drawvweps	cl_main.c	/^cvar_t r_drawvweps				= {"r_drawvweps", "1"};$/;"	v
r_dspeeds	r_main.c	/^cvar_t	r_dspeeds = {"r_dspeeds", "0"};$/;"	v
r_dynamic	gl_rmain.c	/^cvar_t	r_dynamic = {"r_dynamic", "1"};$/;"	v
r_edges	r_edge.c	/^edge_t	*r_edges, *edge_p, *edge_max;$/;"	v
r_emaxs	gl_refrag.c	/^vec3_t		r_emins, r_emaxs;$/;"	v
r_emaxs	r_efrag.c	/^vec3_t		r_emins, r_emaxs;$/;"	v
r_emins	gl_refrag.c	/^vec3_t		r_emins, r_emaxs;$/;"	v
r_emins	r_efrag.c	/^vec3_t		r_emins, r_emaxs;$/;"	v
r_emitted	r_rast.c	/^int				r_emitted;$/;"	v
r_enemyskincolor	gl_rmain.c	/^cvar_t	r_enemyskincolor	= {"r_enemyskincolor", "", CVAR_COLOR};$/;"	v
r_entorigin	gl_rmain.c	/^vec3_t		modelorg, r_entorigin;$/;"	v
r_entorigin	r_bsp.c	/^vec3_t			r_entorigin;	\/\/ the currently rendering entity in world$/;"	v
r_explosionlight	cl_main.c	/^cvar_t r_explosionlight			= {"r_explosionLight", "1"};$/;"	v
r_explosionlightcolor	cl_main.c	/^cvar_t r_explosionlightcolor	= {"r_explosionLightColor", "0"};$/;"	v
r_explosiontype	cl_main.c	/^cvar_t r_explosiontype			= {"r_explosionType", "1"}; \/\/ 7$/;"	v
r_farclip	gl_rmain.c	/^cvar_t	r_farclip			= {"r_farclip", "4096"};$/;"	v
r_fastsky	gl_rmain.c	/^cvar_t	r_fastsky = {"r_fastsky", "0"};$/;"	v
r_fastsky	r_main.c	/^cvar_t	r_fastsky = {"r_fastsky", "0"};$/;"	v
r_fastturb	gl_rmain.c	/^cvar_t  r_fastturb = {"r_fastturb", "0"};$/;"	v
r_fastturb	r_main.c	/^cvar_t	r_fastturb = {"r_fastturb", "0"};$/;"	v
r_flagcolor	cl_main.c	/^cvar_t r_flagcolor				= {"r_flagColor", "0"};$/;"	v
r_floorcolor	d_init.c	/^cvar_t	r_floorcolor = {"r_floorcolor", "25"};$/;"	v
r_floorcolor	gl_rmain.c	/^cvar_t	r_floorcolor = {"r_floorcolor", "50 100 150", CVAR_COLOR, OnChange_r_drawflat};$/;"	v
r_framecount	gl_rmain.c	/^int			r_framecount;		\/\/ used for dlight push checking$/;"	v
r_framecount	r_main.c	/^int		r_framecount = 1;	\/\/ so frame counts initialized to 0 don't match$/;"	v
r_framelerp	gl_rmain.c	/^float	r_framelerp;$/;"	v
r_framelerp	r_alias.c	/^float			r_framelerp;$/;"	v
r_frustum_indexes	r_main.c	/^int			r_frustum_indexes[4*6];$/;"	v
r_fullbright	gl_rmain.c	/^cvar_t	r_fullbright = {"r_fullbright", "0"};$/;"	v
r_fullbright	r_main.c	/^cvar_t	r_fullbright = {"r_fullbright", "0"};$/;"	v
r_fullbrightSkins	gl_rmain.c	/^cvar_t	r_fullbrightSkins = {"r_fullbrightSkins", "1", 0, Rulesets_OnChange_r_fullbrightSkins};$/;"	v
r_fullbrightSkins	r_main.c	/^cvar_t	r_fullbrightSkins = {"r_fullbrightSkins", "0", 0, Rulesets_OnChange_r_fullbrightSkins};$/;"	v
r_fullscreen	tr_init.c	/^cvar_t	r_fullscreen		= { "vid_fullscreen",		"1",	CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
r_glDriver	tr_init.c	/^cvar_t	r_glDriver 			= { "vid_glDriver", OPENGL_DRIVER_NAME, CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
r_graphheight	r_main.c	/^cvar_t	r_graphheight = {"r_graphheight", "15"};$/;"	v
r_grenadetrail	cl_main.c	/^cvar_t r_grenadetrail			= {"r_grenadeTrail", "1"}; \/\/ 3$/;"	v
r_ignoreGLErrors	tr_init.c	/^cvar_t	r_ignoreGLErrors	= { "vid_ignoreGLErrors",	"1",	CVAR_ARCHIVE | CVAR_SILENT };$/;"	v
r_lastvertvalid	r_rast.c	/^qbool	r_lastvertvalid;$/;"	v
r_lavacolor	gl_rmain.c	/^cvar_t  r_lavacolor  = {"r_lavacolor", "80 0 0", CVAR_COLOR};$/;"	v
r_lavacolor	r_main.c	/^cvar_t  r_lavacolor  = {"r_lavacolor", "73"};$/;"	v
r_leftclipped	r_rast.c	/^qbool		r_leftclipped, r_rightclipped;$/;"	v
r_leftenter	r_rast.c	/^mvertex_t	r_leftenter, r_leftexit;$/;"	v
r_leftexit	r_rast.c	/^mvertex_t	r_leftenter, r_leftexit;$/;"	v
r_lerpdistance	gl_rmain.c	/^float	r_lerpdistance;$/;"	v
r_lerpdistance	r_alias.c	/^float			r_lerpdistance;$/;"	v
r_lerpframes	gl_rmain.c	/^cvar_t	r_lerpframes = {"r_lerpframes", "1"};$/;"	v
r_lerpframes	r_main.c	/^cvar_t	r_lerpframes = {"r_lerpframes", "1"};$/;"	v
r_lerpmuzzlehack	gl_rmain.c	/^cvar_t	r_lerpmuzzlehack = {"r_lerpmuzzlehack", "1"};$/;"	v
r_lerpmuzzlehack	r_main.c	/^cvar_t	r_lerpmuzzlehack = {"r_lerpmuzzlehack", "1"};$/;"	v
r_lgblood	cl_tent.c	/^cvar_t r_lgblood = {"r_lgbloodColor", "225"};$/;"	v
r_lightflicker	cl_main.c	/^cvar_t r_lightflicker			= {"r_lightflicker", "1"};$/;"	v
r_lightmap	gl_rmain.c	/^cvar_t	r_lightmap = {"r_lightmap", "0"};$/;"	v
r_lightptr	r_surf.c	/^unsigned		*r_lightptr;$/;"	v
r_lightwidth	r_surf.c	/^int				r_lightwidth;$/;"	v
r_lstepx	d_polyse.c	/^int				a_sstepxfrac, a_tstepxfrac, r_lstepx, a_ststepxwhole;$/;"	v
r_lstepy	d_polyse.c	/^int				r_sstepx, r_tstepx, r_lstepy, r_sstepy, r_tstepy;$/;"	v
r_lzi1	r_rast.c	/^float			r_u1, r_v1, r_lzi1;$/;"	v
r_margin	document_rendering.c	/^    int     r_margin;$/;"	m	struct:document_rendering_context_s	file:
r_mask	vid_x11.c	/^static unsigned long r_mask,g_mask,b_mask;$/;"	v	file:
r_maskMinidriver	win_glimp.c	/^cvar_t	r_maskMinidriver  = { "vid_maskMinidriver",  "0", CVAR_LATCH }; \/\/ allow a different dll name to be treated as if it were opengl32.dll$/;"	v
r_max_size_1	r_main.c	/^cvar_t  r_max_size_1 = {"r_max_size_1", "0"};$/;"	v
r_maxedges	r_main.c	/^cvar_t	r_maxedges = {"r_maxedges", "0"};$/;"	v
r_maxedgesseen	r_main.c	/^int			r_maxsurfsseen, r_maxedgesseen, r_cnumsurfs;$/;"	v
r_maxsurfs	r_main.c	/^cvar_t	r_maxsurfs = {"r_maxsurfs", "0"};$/;"	v
r_maxsurfsseen	r_main.c	/^int			r_maxsurfsseen, r_maxedgesseen, r_cnumsurfs;$/;"	v
r_mode	tr_init.c	/^cvar_t	r_mode				= { "vid_mode",				"3",	CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
r_modelalpha	gl_rmain.c	/^float	r_modelalpha;$/;"	v
r_modelcolor	gl_rmain.c	/^float   r_modelcolor[3];$/;"	v
r_nearzi	r_rast.c	/^float			r_nearzi;$/;"	v
r_nearzionly	r_rast.c	/^qbool		r_nearzionly;$/;"	v
r_netgraph	gl_rmain.c	/^cvar_t	r_netgraph = {"r_netgraph", "0"};$/;"	v
r_netgraph	r_main.c	/^cvar_t	r_netgraph = {"r_netgraph", "0"};$/;"	v
r_netstats	gl_rmain.c	/^cvar_t	r_netstats = {"r_netstats", "0"};$/;"	v
r_netstats	r_main.c	/^cvar_t	r_netstats = {"r_netstats", "0"};$/;"	v
r_notexture_mip	gl_rmain.c	/^texture_t	*r_notexture_mip = NULL;$/;"	v
r_notexture_mip	r_main.c	/^texture_t	*r_notexture_mip;$/;"	v
r_novis	gl_rmain.c	/^cvar_t	r_novis = {"r_novis", "0"};$/;"	v
r_numallocatededges	r_main.c	/^int			r_numallocatededges;$/;"	v
r_numedges	r_main.c	/^cvar_t	r_numedges = {"r_numedges", "0"};$/;"	v
r_numhblocks	r_surf.c	/^int				r_numhblocks, r_numvblocks;$/;"	v
r_numparticles	gl_rpart.c	/^static int r_numparticles;		$/;"	v	file:
r_numparticles	r_part.c	/^static int			r_numparticles;$/;"	v	file:
r_numsurfs	r_main.c	/^cvar_t	r_numsurfs = {"r_numsurfs", "0"};$/;"	v
r_numvblocks	r_surf.c	/^int				r_numhblocks, r_numvblocks;$/;"	v
r_oldapverts	r_alias.c	/^trivertx_t		*r_oldapverts;$/;"	v
r_oldviewleaf	gl_rmain.c	/^mleaf_t		*r_viewleaf, *r_oldviewleaf;$/;"	v
r_oldviewleaf	r_main.c	/^mleaf_t		*r_viewleaf, *r_oldviewleaf;$/;"	v
r_oldviewleaf2	gl_rmain.c	/^mleaf_t		*r_viewleaf2, *r_oldviewleaf2;	\/\/ for watervis hack$/;"	v
r_origin	gl_rmain.c	/^vec3_t		r_origin;$/;"	v
r_origin	r_main.c	/^vec3_t	r_origin;$/;"	v
r_outofedges	r_main.c	/^int			r_outofedges;$/;"	v
r_outofsurfaces	r_main.c	/^int			r_outofsurfaces;$/;"	v
r_p0	d_polyse.c	/^int	r_p0[6], r_p1[6], r_p2[6];$/;"	v
r_p1	d_polyse.c	/^int	r_p0[6], r_p1[6], r_p2[6];$/;"	v
r_p2	d_polyse.c	/^int	r_p0[6], r_p1[6], r_p2[6];$/;"	v
r_particles_count	r_part.c	/^cvar_t r_particles_count = {"r_particles_count", "2048", CVAR_ARCHIVE};$/;"	v
r_pcurrentvertbase	gl_rsurf.c	/^mvertex_t	*r_pcurrentvertbase;$/;"	v
r_pcurrentvertbase	r_main.c	/^mvertex_t	*r_pcurrentvertbase;$/;"	v
r_pedge	r_rast.c	/^medge_t			*r_pedge;$/;"	v
r_pefragtopnode	gl_refrag.c	/^mnode_t	*r_pefragtopnode;$/;"	v
r_pefragtopnode	r_efrag.c	/^mnode_t	*r_pefragtopnode;$/;"	v
r_plightvec	r_alias.c	/^vec3_t				r_plightvec;$/;"	v
r_polycount	r_main.c	/^int		r_polycount;$/;"	v
r_polydesc	r_rast.c	/^polydesc_t		r_polydesc;$/;"	v
r_powerupglow	cl_main.c	/^cvar_t r_powerupglow			= {"r_powerupGlow", "1"};$/;"	v
r_ppn	r_part.c	/^vec3_t				r_pright, r_pup, r_ppn;$/;"	v
r_pright	r_part.c	/^vec3_t				r_pright, r_pup, r_ppn;$/;"	v
r_pup	r_part.c	/^vec3_t				r_pright, r_pup, r_ppn;$/;"	v
r_rectdesc	r_draw.c	/^static rectdesc_t	r_rectdesc;$/;"	v	file:
r_refdef	gl_rmain.c	/^refdef_t	r_refdef;$/;"	v
r_refdef	r_main.c	/^refdef_t	r_refdef;$/;"	v
r_refdef2	gl_rmain.c	/^refdef2_t	r_refdef2;$/;"	v
r_refdef2	r_main.c	/^refdef2_t	r_refdef2;$/;"	v
r_reportedgeout	r_main.c	/^cvar_t	r_reportedgeout = {"r_reportedgeout", "0"};$/;"	v
r_reportsurfout	r_main.c	/^cvar_t	r_reportsurfout = {"r_reportsurfout", "0"};$/;"	v
r_resfudge	r_main.c	/^float		r_aliastransition, r_resfudge;$/;"	v
r_rightclipped	r_rast.c	/^qbool		r_leftclipped, r_rightclipped;$/;"	v
r_rightenter	r_rast.c	/^mvertex_t	r_rightenter, r_rightexit;$/;"	v
r_rightexit	r_rast.c	/^mvertex_t	r_rightenter, r_rightexit;$/;"	v
r_rocketlight	cl_main.c	/^cvar_t r_rocketlight			= {"r_rocketLight", "1"};$/;"	v
r_rocketlightcolor	cl_main.c	/^cvar_t r_rocketlightcolor		= {"r_rocketLightColor", "0"};$/;"	v
r_rockettrail	cl_main.c	/^cvar_t r_rockettrail			= {"r_rocketTrail", "1"}; \/\/ 9$/;"	v
r_screenbackuptexture_size	gl_bloom.c	/^static int      r_screenbackuptexture_size;$/;"	v	file:
r_screendownsamplingtexture_size	gl_bloom.c	/^static int      r_screendownsamplingtexture_size;$/;"	v	file:
r_shadelight	r_alias.c	/^float				r_shadelight;$/;"	v
r_shadows	gl_rmain.c	/^cvar_t	r_shadows = {"r_shadows", "0"};$/;"	v
r_shaftalpha	cl_main.c	/^cvar_t r_shaftalpha				= {"r_shaftalpha", "1"};$/;"	v
r_shellcolor	gl_rmain.c	/^float	r_shellcolor[3];$/;"	v
r_shift	vid_x11.c	/^static long r_shift,g_shift,b_shift;$/;"	v	file:
r_shiftbeam	cl_tent.c	/^cvar_t r_shiftbeam = {"r_shiftbeam", "0"};$/;"	v
r_showextensions	tr_init.c	/^cvar_t  r_showextensions	= { "vid_showextensions", 	"0",	CVAR_SILENT };$/;"	v
r_skincolormode	gl_rmain.c	/^cvar_t	r_skincolormode		= {"r_skincolormode",  "0"};$/;"	v
r_skyboxloaded	gl_warp.c	/^qbool r_skyboxloaded;$/;"	v
r_skycolor	gl_rmain.c	/^cvar_t	r_skycolor   = {"r_skycolor", "40 80 150", CVAR_COLOR};$/;"	v
r_skycolor	r_main.c	/^cvar_t	r_skycolor   = {"r_skycolor", "172"};$/;"	v
r_skymade	r_sky.c	/^int		r_skymade;$/;"	v
r_skyname	gl_rmain.c	/^cvar_t	r_skyname			= {"r_skyname", "", 0, OnChange_r_skyname};$/;"	v
r_skysource	r_sky.c	/^byte	*r_skysource;$/;"	v
r_slimecolor	gl_rmain.c	/^cvar_t  r_slimecolor = {"r_slimecolor", "10 60 10", CVAR_COLOR};$/;"	v
r_slimecolor	r_main.c	/^cvar_t  r_slimecolor = {"r_slimecolor", "53"};$/;"	v
r_source	r_surf.c	/^unsigned char	*r_source, *r_sourcemax;$/;"	v
r_sourcemax	r_surf.c	/^unsigned char	*r_source, *r_sourcemax;$/;"	v
r_speeds	gl_rmain.c	/^cvar_t	r_speeds = {"r_speeds", "0"};$/;"	v
r_speeds	r_main.c	/^cvar_t	r_speeds = {"r_speeds", "0"};$/;"	v
r_spritedesc	r_sprite.c	/^spritedesc_t			r_spritedesc;$/;"	v
r_sstepx	d_polyse.c	/^int				r_sstepx, r_tstepx, r_lstepy, r_sstepy, r_tstepy;$/;"	v
r_sstepy	d_polyse.c	/^int				r_sstepx, r_tstepx, r_lstepy, r_sstepy, r_tstepy;$/;"	v
r_stack_start	r_main.c	/^byte		*r_stack_start;$/;"	v
r_start	mvd_cam.h	/^	double r_start;$/;"	m	struct:c_curve_s
r_stencilbits	tr_init.c	/^cvar_t	r_stencilbits		= { "vid_stencilbits",		"0",	CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
r_stencilbits	tr_init.c	/^cvar_t	r_stencilbits		= { "vid_stencilbits",		"8",	CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
r_stepback	r_surf.c	/^int				r_stepback;$/;"	v
r_stereo	tr_init.c	/^cvar_t	r_stereo			= { "vid_stereo",			"0",	CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
r_stop	mvd_cam.h	/^	double r_stop;$/;"	m	struct:c_curve_s
r_surfsonstack	r_main.c	/^qbool	r_surfsonstack;$/;"	v
r_swapInterval	tr_init.c	/^cvar_t	r_swapInterval		= { "vid_vsync",			"0",	CVAR_ARCHIVE | CVAR_SILENT };$/;"	v
r_teamskincolor	gl_rmain.c	/^cvar_t	r_teamskincolor		= {"r_teamskincolor",  "", CVAR_COLOR};$/;"	v
r_telecolor	gl_rmain.c	/^cvar_t  r_telecolor  = {"r_telecolor", "255 60 60", CVAR_COLOR};$/;"	v
r_telecolor	r_main.c	/^cvar_t  r_telecolor  = {"r_telecolor", "26"};$/;"	v
r_telesplash	cl_main.c	/^cvar_t r_telesplash				= {"r_telesplash", "1"}; \/\/ disconnect$/;"	v
r_time1	r_main.c	/^float		r_time1;$/;"	v
r_timegraph	r_main.c	/^cvar_t	r_timegraph = {"r_timegraph", "0"};$/;"	v
r_tstepx	d_polyse.c	/^int				r_sstepx, r_tstepx, r_lstepy, r_sstepy, r_tstepy;$/;"	v
r_tstepy	d_polyse.c	/^int				r_sstepx, r_tstepx, r_lstepy, r_sstepy, r_tstepy;$/;"	v
r_turb_pbase	d_scan.c	/^unsigned char	*r_turb_pbase, *r_turb_pdest;$/;"	v
r_turb_pdest	d_scan.c	/^unsigned char	*r_turb_pbase, *r_turb_pdest;$/;"	v
r_turb_s	d_scan.c	/^fixed16_t		r_turb_s, r_turb_t, r_turb_sstep, r_turb_tstep;$/;"	v
r_turb_spancount	d_scan.c	/^int				r_turb_spancount;$/;"	v
r_turb_sstep	d_scan.c	/^fixed16_t		r_turb_s, r_turb_t, r_turb_sstep, r_turb_tstep;$/;"	v
r_turb_t	d_scan.c	/^fixed16_t		r_turb_s, r_turb_t, r_turb_sstep, r_turb_tstep;$/;"	v
r_turb_tstep	d_scan.c	/^fixed16_t		r_turb_s, r_turb_t, r_turb_sstep, r_turb_tstep;$/;"	v
r_turb_turb	d_scan.c	/^int				*r_turb_turb;$/;"	v
r_u1	r_rast.c	/^float			r_u1, r_v1, r_lzi1;$/;"	v
r_v1	r_rast.c	/^float			r_u1, r_v1, r_lzi1;$/;"	v
r_verbose	tr_init.c	/^cvar_t	r_verbose			= { "vid_verbose",			"0",	CVAR_SILENT };$/;"	v
r_vidModes	tr_init.c	/^vidmode_t r_vidModes[] =$/;"	v
r_viewchanged	r_main.c	/^qbool	r_dowarp, r_dowarpold, r_viewchanged;$/;"	v
r_viewleaf	gl_rmain.c	/^mleaf_t		*r_viewleaf, *r_oldviewleaf;$/;"	v
r_viewleaf	r_main.c	/^mleaf_t		*r_viewleaf, *r_oldviewleaf;$/;"	v
r_viewleaf2	gl_rmain.c	/^mleaf_t		*r_viewleaf2, *r_oldviewleaf2;	\/\/ for watervis hack$/;"	v
r_viewmodeloffset	cl_view.c	/^cvar_t	r_viewmodeloffset = {"r_viewmodeloffset", ""};$/;"	v
r_viewmodelsize	cl_view.c	/^cvar_t	r_viewmodelsize = {"r_viewmodelSize", "1"};$/;"	v
r_viewpreselgun	cl_view.c	/^cvar_t  r_viewpreselgun = {"r_viewpreselgun", "0"};$/;"	v
r_visframecount	gl_rmain.c	/^int			r_visframecount;	\/\/ bumped when going to a new PVS$/;"	v
r_visframecount	r_main.c	/^int		r_visframecount;$/;"	v
r_wallcolor	d_init.c	/^cvar_t	r_wallcolor  = {"r_wallcolor", "60"};$/;"	v
r_wallcolor	gl_rmain.c	/^cvar_t	r_wallcolor  = {"r_wallcolor", "255 255 255", CVAR_COLOR, OnChange_r_drawflat};$/;"	v
r_warpbuffer	r_main.c	/^byte		*r_warpbuffer;$/;"	v
r_wateralpha	gl_rmain.c	/^cvar_t	r_wateralpha = {"gl_turbalpha", "1"};$/;"	v
r_watercolor	gl_rmain.c	/^cvar_t  r_watercolor = {"r_watercolor", "10 50 80", CVAR_COLOR};;$/;"	v
r_watercolor	r_main.c	/^cvar_t  r_watercolor = {"r_watercolor", "36"};$/;"	v
r_waterwarp	r_main.c	/^cvar_t	r_waterwarp = {"r_turbwarp", "1"};$/;"	v
r_wholepolycount	r_main.c	/^int		r_wholepolycount;$/;"	v
r_world_matrix	gl_rmain.c	/^float	r_world_matrix[16];$/;"	v
r_worldentity	gl_rmain.c	/^entity_t	r_worldentity;$/;"	v
r_worldentity	r_main.c	/^entity_t	r_worldentity;$/;"	v
r_zgraph	r_main.c	/^cvar_t	r_zgraph = {"r_zgraph", "0"};$/;"	v
r_zistepx	d_polyse.c	/^int				r_zistepx, r_zistepy;$/;"	v
r_zistepy	d_polyse.c	/^int				r_zistepx, r_zistepy;$/;"	v
r_zpointdesc	r_rast.c	/^zpointdesc_t	r_zpointdesc;$/;"	v
ra_val	mvd_autotrack.c	64;"	d	file:
rad	gl_rsurf.c	/^	int rad;$/;"	m	struct:dlightinfo_s	file:
rad	r_surf.c	/^	int rad;$/;"	m	struct:dlightinfo_s	file:
rad2	pr_cmds.c	745;"	d	file:
radar_pic	hud_common.c	/^mpic_t radar_pic;$/;"	v
radar_pic_found	hud_common.c	/^static qbool radar_pic_found = false;$/;"	v	file:
radar_show_backpacks	hud_common.c	/^static qbool radar_show_backpacks	= false;$/;"	v	file:
radar_show_cells	hud_common.c	/^static qbool radar_show_cells		= false;$/;"	v	file:
radar_show_explosions	hud_common.c	/^static qbool radar_show_explosions	= false;$/;"	v	file:
radar_show_ga	hud_common.c	/^static qbool radar_show_ga			= false;$/;"	v	file:
radar_show_gibs	hud_common.c	/^static qbool radar_show_gibs		= false;$/;"	v	file:
radar_show_gl	hud_common.c	/^static qbool radar_show_gl			= false;$/;"	v	file:
radar_show_health	hud_common.c	/^static qbool radar_show_health		= false;$/;"	v	file:
radar_show_lg	hud_common.c	/^static qbool radar_show_lg			= false;$/;"	v	file:
radar_show_mega	hud_common.c	/^static qbool radar_show_mega		= false;$/;"	v	file:
radar_show_nails	hud_common.c	/^static qbool radar_show_nails		= false;$/;"	v	file:
radar_show_nails_p	hud_common.c	/^static qbool radar_show_nails_p		= false;$/;"	v	file:
radar_show_ng	hud_common.c	/^static qbool radar_show_ng			= false;$/;"	v	file:
radar_show_pent	hud_common.c	/^static qbool radar_show_pent		= false;$/;"	v	file:
radar_show_quad	hud_common.c	/^static qbool radar_show_quad		= false;$/;"	v	file:
radar_show_ra	hud_common.c	/^static qbool radar_show_ra			= false;$/;"	v	file:
radar_show_ring	hud_common.c	/^static qbool radar_show_ring		= false;$/;"	v	file:
radar_show_rl	hud_common.c	/^static qbool radar_show_rl			= false;$/;"	v	file:
radar_show_rockets	hud_common.c	/^static qbool radar_show_rockets		= false;$/;"	v	file:
radar_show_rockets_p	hud_common.c	/^static qbool radar_show_rockets_p	= false;$/;"	v	file:
radar_show_shaft_p	hud_common.c	/^static qbool radar_show_shaft_p		= false;$/;"	v	file:
radar_show_shells	hud_common.c	/^static qbool radar_show_shells		= false;$/;"	v	file:
radar_show_shotgun	hud_common.c	/^static qbool radar_show_shotgun		= false;$/;"	v	file:
radar_show_sng	hud_common.c	/^static qbool radar_show_sng			= false;$/;"	v	file:
radar_show_ssg	hud_common.c	/^static qbool radar_show_ssg			= false;$/;"	v	file:
radar_show_suit	hud_common.c	/^static qbool radar_show_suit		= false;$/;"	v	file:
radar_show_teleport	hud_common.c	/^static qbool radar_show_teleport	= false;$/;"	v	file:
radar_show_ya	hud_common.c	/^static qbool radar_show_ya			= false;$/;"	v	file:
radius	client.h	/^	float			radius;$/;"	m	struct:__anon118
radius	gl_md3.h	/^	float		radius;$/;"	m	struct:md3Frame_s
radius	gl_model.h	/^	float				radius;$/;"	m	struct:maliasframedesc_s
radius	gl_model.h	/^	float				radius;$/;"	m	struct:model_s
radius	r_model.h	/^	float				radius;$/;"	m	struct:model_s
radius	teamplay.c	/^	float	radius;		\/\/ model graphics radius$/;"	m	struct:__anon69	file:
radius	teamplay.h	/^	float	radius;$/;"	m	struct:item_vis_s
ramp	d_iface.h	/^	float		ramp;$/;"	m	struct:particle_s
ramp	r_part.c	/^	float		ramp;$/;"	m	struct:particle_s	file:
ramp1	r_part.c	/^static int	ramp1[8] = {0x6f, 0x6d, 0x6b, 0x69, 0x67, 0x65, 0x63, 0x61};$/;"	v	file:
ramp2	r_part.c	/^static int	ramp2[8] = {0x6f, 0x6e, 0x6d, 0x6c, 0x6b, 0x6a, 0x68, 0x66};$/;"	v	file:
ramp3	r_part.c	/^static int	ramp3[8] = {0x6d, 0x6b, 6, 5, 4, 3};$/;"	v	file:
ramps	cl_view.c	/^unsigned short	ramps[3][256];$/;"	v
randomizer	EX_browser_ping.c	/^    int randomizer;$/;"	m	struct:ICMP_header_s	file:
range	ez_slider.h	/^	int						range;				\/\/ The number of values between the min and max values.$/;"	m	struct:ez_slider_s
rate	cl_main.c	/^cvar_t	rate = {"rate", "5760", CVAR_ARCHIVE|CVAR_USERINFO};$/;"	v
rate	net.h	/^	double		rate;				\/\/ seconds \/ byte$/;"	m	struct:__anon240
rate	qsound.h	/^	int		rate;$/;"	m	struct:wavinfo_s
ratio_h	gl_framebuffer.h	/^	float	ratio_h;$/;"	m	struct:fb_s
ratio_w	gl_framebuffer.h	/^	float	ratio_w;$/;"	m	struct:fb_s
raw	in_win.c	/^RAWINPUT	*raw;$/;"	v
raw	vfs_gzip.c	/^	vfsfile_t *raw;$/;"	m	struct:gzipfile_s	file:
raw	vfs_tar.c	/^	vfsfile_t *raw;$/;"	m	struct:tarfile_s	file:
raw	vfs_zip.c	/^	vfsfile_t *raw;$/;"	m	struct:zipfile_s	file:
rawinputhandle	in_win.c	/^	HANDLE			rawinputhandle; \/\/ raw input, identify particular mice$/;"	m	struct:__anon35	file:
rawmice	in_win.c	/^rawmouse_t	*rawmice;$/;"	v
rawmicecount	in_win.c	/^int			rawmicecount;$/;"	v
rawmouse_t	in_win.c	/^} rawmouse_t;$/;"	t	typeref:struct:__anon35	file:
rawname	vfs.h	/^	char            rawname[MAX_OSPATH];$/;"	m	struct:__anon288
rcon_address	cl_main.c	/^cvar_t	rcon_address = {"rcon_address", ""};$/;"	v
rcon_password	cl_main.c	/^cvar_t	rcon_password = {"rcon_password", ""};$/;"	v
rcon_password	sv_main.c	/^cvar_t	rcon_password = {"rcon_password", ""};	\/\/ password for remote server commands$/;"	v
rd_aliasvrect	asm_draw.h	120;"	d
rd_aliasvrectbottom	asm_draw.h	124;"	d
rd_aliasvrectright	asm_draw.h	123;"	d
rd_ambientlight	asm_draw.h	141;"	d
rd_fvrectbottom	asm_draw.h	135;"	d
rd_fvrectbottom_adj	asm_draw.h	133;"	d
rd_fvrectright	asm_draw.h	134;"	d
rd_fvrectright_adj	asm_draw.h	132;"	d
rd_fvrectx	asm_draw.h	126;"	d
rd_fvrectx_adj	asm_draw.h	128;"	d
rd_fvrecty	asm_draw.h	127;"	d
rd_fvrecty_adj	asm_draw.h	129;"	d
rd_horizontalFieldOfView	asm_draw.h	136;"	d
rd_print	common.c	/^void (*rd_print) (char *) = NULL;$/;"	v
rd_size	asm_draw.h	142;"	d
rd_viewangles	asm_draw.h	140;"	d
rd_vieworg	asm_draw.h	139;"	d
rd_vrect	asm_draw.h	119;"	d
rd_vrect_x_adj_shift20	asm_draw.h	130;"	d
rd_vrectbottom	asm_draw.h	122;"	d
rd_vrectright	asm_draw.h	121;"	d
rd_vrectright_adj_shift20	asm_draw.h	131;"	d
rd_vrectrightedge	asm_draw.h	125;"	d
rd_xOrigin	asm_draw.h	137;"	d
rd_yOrigin	asm_draw.h	138;"	d
re_patfnc	parser.c	/^	subpatterns_report_fnc re_patfnc;$/;"	m	struct:__anon53	file:
re_sub	tp_triggers.c	/^cvar_t re_sub[10] = {{"re_trigger_match_0", "", CVAR_ROM},$/;"	v
re_subi	tp_triggers.c	/^cvar_t re_subi[10] = {{"internal0"},$/;"	v
re_triggers	tp_triggers.c	/^static pcre_trigger_t *re_triggers;$/;"	v	file:
readableChars	console.c	/^char readableChars[256] = {	'.', '_' , '_' , '_' , '_' , '.' , '_' , '_' , '_' , '_' , '\\n' , '_' , '\\n' , '>' , '.' , '.',$/;"	v
readbuffer	vfs_tcp.c	/^	char	readbuffer [5 * 65536];$/;"	m	struct:tcpfile_s	file:
readbuffered	vfs_tcp.c	/^	int		readbuffered;$/;"	m	struct:tcpfile_s	file:
readfnc	settings.h	/^	enum_readfnc readfnc;		\/\/ reading function pointer; required for enum$/;"	m	struct:__anon272
real_bottomcolor	client.h	/^	int		real_bottomcolor;$/;"	m	struct:player_info_s
real_cem_move_spline_x	cam_new.c	/^float real_cem_move_spline_x, real_cem_move_spline_y, real_cem_move_spline_z;$/;"	v
real_cem_move_spline_y	cam_new.c	/^float real_cem_move_spline_x, real_cem_move_spline_y, real_cem_move_spline_z;$/;"	v
real_cem_move_spline_z	cam_new.c	/^float real_cem_move_spline_x, real_cem_move_spline_y, real_cem_move_spline_z;$/;"	v
real_playback_speed	nmenu_demo.c	/^double real_playback_speed = 1;$/;"	v
real_slider_pos	ez_slider.h	/^	int						real_slider_pos;	\/\/ The actual slider position in pixels.$/;"	m	struct:ez_slider_s
real_starttime	mvd_cam.h	/^	double real_starttime;$/;"	m	struct:c_curve_s
real_topcolor	client.h	/^	int		real_topcolor;$/;"	m	struct:player_info_s
real_vem_move_spline_x	cam_new.c	/^float real_vem_move_spline_x, real_vem_move_spline_y, real_vem_move_spline_z;$/;"	v
real_vem_move_spline_y	cam_new.c	/^float real_vem_move_spline_x, real_vem_move_spline_y, real_vem_move_spline_z;$/;"	v
real_vem_move_spline_z	cam_new.c	/^float real_vem_move_spline_x, real_vem_move_spline_y, real_vem_move_spline_z;$/;"	v
realheight	gl_framebuffer.h	/^	int		realheight;$/;"	m	struct:fb_s
realrealtime	client.h	/^	double		realrealtime;		\/\/\/ ^ wtf?$/;"	m	struct:__anon122
realsize	zone2.h	/^	size_t realsize;$/;"	m	struct:mempool_s
realtime	client.h	/^	double		realtime;		\/\/\/< Scaled by cl_demospeed.$/;"	m	struct:__anon122
realtime	server.h	/^	double		realtime;			\/\/ increased by SV_Frame, never reset$/;"	m	struct:__anon269
realwidth	gl_framebuffer.h	/^	int		realwidth;$/;"	m	struct:fb_s
rebuild_all_players	EX_browser.c	/^int rebuild_all_players = 0;$/;"	v
rebuild_servers_list	EX_browser_sources.c	/^int rebuild_servers_list = 0;$/;"	v
recalc_refdef	vid.h	/^	int				recalc_refdef;	\/\/ if true, recalc vid-based stuff$/;"	m	struct:__anon294
received_time	EX_browser_ping.c	/^double received_time[NET_TIMINGS];$/;"	v
receivedbytes	cl_parse.c	/^int receivedbytes;$/;"	v
receivedsize	client.h	/^	int					receivedsize;$/;"	m	struct:__anon114
receivedsize	client.h	/^    int             receivedsize;$/;"	m	struct:packet_info_s
receivedtime	client.h	/^	double				receivedtime;		\/\/ Time message was received, or -1.$/;"	m	struct:__anon114
receivedtime	client.h	/^    double          receivedtime;$/;"	m	struct:packet_info_s
recievedblock	cl_parse.c	/^int recievedblock[MAXBLOCKS];$/;"	v
record_audio	ffmpeg.c	/^	qbool		record_audio;$/;"	m	struct:ffm	file:
record_spline	nmenu_trackentity.c	/^struct CamSys_Spline *record_spline;$/;"	v	typeref:struct:CamSys_Spline
record_start_time	nmenu_trackentity.c	/^double record_start_time;$/;"	v
recordfile	cl_demo.c	/^static FILE *recordfile = NULL;		\/\/ File used for recording demos.$/;"	v	file:
recording	ffmpeg.c	/^	qbool		recording;$/;"	m	struct:ffm	file:
recordsize	zone2.h	/^	size_t recordsize;$/;"	m	struct:memexpandablearray_s
rect	mgraph.h	/^	rect_t      rect;			\/* Bounding rectangle for region		*\/$/;"	m	struct:__anon206
rect	r_draw.c	/^	vrect_t	rect;$/;"	m	struct:__anon58	file:
rect_t	mgraph.h	/^	} rect_t;$/;"	t	typeref:struct:__anon197
rectdesc_t	r_draw.c	/^} rectdesc_t;$/;"	t	typeref:struct:__anon58	file:
recv	EX_browser_ping.c	/^    int recv, send;$/;"	m	struct:pinghost_s	file:
red	mgraph.h	/^	uchar	red;				\/* Blue component of color				*\/$/;"	m	struct:__anon207
redAdjust	mgraph.h	/^	m_int	redPos,redAdjust;		\/* Red position and adjustment		*\/$/;"	m	struct:__anon208
redFieldPosition	mgraph.h	/^	char    redFieldPosition;       \/* Bit posn of lsb of red mask      *\/$/;"	m	struct:__anon217
redMask	mgraph.h	/^	uchar	redMask,greenMask;		\/* Mask values for pixels			*\/$/;"	m	struct:__anon208
redMaskSize	mgraph.h	/^	char    redMaskSize;            \/* Size of direct color red mask    *\/$/;"	m	struct:__anon217
redPos	mgraph.h	/^	m_int	redPos,redAdjust;		\/* Red position and adjustment		*\/$/;"	m	struct:__anon208
redirect_t	server.h	/^typedef enum {RD_NONE, RD_CLIENT, RD_PACKET} redirect_t;$/;"	t	typeref:enum:__anon270
refdef2_t	render.h	/^} refdef2_t;$/;"	t	typeref:struct:__anon257
refdef_t	render.h	/^} refdef_t;$/;"	t	typeref:struct:__anon256
references	vfs_gzip.c	/^	int references;$/;"	m	struct:gzipfile_s	file:
references	vfs_pak.c	/^	int references;         \/\/ seeing as all vfiles from a pak file use the $/;"	m	struct:pack_s	file:
references	vfs_tar.c	/^	int references;$/;"	m	struct:tarfile_s	file:
references	vfs_zip.c	/^	int references;	\/\/and a reference count$/;"	m	struct:zipfile_s	file:
refresh	mac.h	/^	Fixed	refresh;$/;"	m	struct:__anon175
regexp	tp_triggers.h	/^	pcre							*regexp;$/;"	m	struct:pcre_internal_trigger_s
regexp	tp_triggers.h	/^	pcre*					regexp;$/;"	m	struct:pcre_trigger_s
regexp_extra	tp_triggers.h	/^	pcre_extra						*regexp_extra;$/;"	m	struct:pcre_internal_trigger_s
regexp_extra	tp_triggers.h	/^	pcre_extra*				regexp_extra;$/;"	m	struct:pcre_trigger_s
regexpstr	tp_triggers.h	/^	char					*regexpstr;$/;"	m	struct:pcre_trigger_s
region_t	mgraph.h	/^	} region_t;$/;"	t	typeref:struct:__anon206
registerAllDispDrivers	vid_win.c	/^void registerAllDispDrivers(void) {$/;"	f
registerAllMemDrivers	vid_win.c	/^void registerAllMemDrivers(void) {$/;"	f
registered	sv_main.c	/^cvar_t	registered = {"registered", "1", CVAR_ROM};$/;"	v
registeredModule_s	modules.c	/^typedef struct registeredModule_s {$/;"	s	file:
registeredModule_t	modules.c	/^} registeredModule_t;$/;"	t	typeref:struct:registeredModule_s	file:
registeredModules	modules.c	/^static registeredModule_t registeredModules[qlib_nummodules];$/;"	v	file:
relativeto_t	fs.h	/^} relativeto_t;$/;"	t	typeref:enum:__anon151
reliable_buf	net.h	/^	byte		reliable_buf[MAX_MSGLEN]; \/\/ unacked reliable message$/;"	m	struct:__anon240
reliable_datagram	server.h	/^	sizebuf_t	reliable_datagram;$/;"	m	struct:__anon264
reliable_datagram_buf	server.h	/^	byte		reliable_datagram_buf[MAX_MSGLEN];$/;"	m	struct:__anon264
reliable_length	net.h	/^	int			reliable_length;$/;"	m	struct:__anon240
reliable_sequence	net.h	/^	int			reliable_sequence;	\/\/ single bit$/;"	m	struct:__anon240
remainder	d_polyse.c	/^	int		remainder;$/;"	m	struct:__anon12	file:
remap	cd_linux.c	/^static byte 	remap[100];$/;"	v	file:
remap	cd_win.c	/^static byte 	remap[100];$/;"	v	file:
remarks	xsd_command.h	/^    char *remarks;$/;"	m	struct:xml_command_s
remarks	xsd_variable.h	/^    char *remarks;$/;"	m	struct:xml_variable_s
remote_address	net.h	/^	netadr_t	remote_address;$/;"	m	struct:__anon240
remote_snap	server.h	/^	qbool		remote_snap;$/;"	m	struct:client_s
remoteaddr	server.h	/^	netadr_t remoteaddr;$/;"	m	struct:svtcpstream_s
removeedges	r_edge.c	/^edge_t	*removeedges[MAXHEIGHT];$/;"	v
render_frame_end	cl_main.c	/^double render_frame_start, render_frame_end;$/;"	v
render_frame_start	cl_main.c	/^double render_frame_start, render_frame_end;$/;"	v
rendered	Ctrl_PageViewer.h	/^    document_rendered_t rendered;$/;"	m	struct:CPageViewer_page_s
renderer_string	tr_types.h	/^	char					renderer_string[MAX_STRING_CHARS];$/;"	m	struct:__anon286
renderfx	render.h	/^	int						renderfx;		\/\/ RF_ bit mask$/;"	m	struct:entity_s
res	menu_options.c	/^	int res;$/;"	m	struct:menu_video_settings_s	file:
reserved	d_iface.h	/^	float	reserved;$/;"	m	struct:finalvert_s
reserved	image.c	/^    char			reserved;$/;"	m	struct:pcx_s	file:
reserved	r_local.h	/^	byte		reserved[2];$/;"	m	struct:clipplane_s
resize_direction_t	ez_controls.c	/^} resize_direction_t;$/;"	t	typeref:enum:__anon15	file:
resize_handle_thickness	ez_controls.h	/^	int						resize_handle_thickness;\/\/ The thickness of the resize handles on the sides of the control.$/;"	m	struct:ez_control_s
resizing	new_menu.c	/^int		resizing	=	0;$/;"	v
resizing_target	ez_scrollpane.h	/^	resizing_target			= (1 << 2)	\/\/ Are we resizing the target (if we are, don't care about OnResize events, it'll cause an infinite loop).$/;"	e	enum:ez_scrollpane_iflags_e
resolution	cam_new.c	/^	int		show, enable, resolution, number;$/;"	m	struct:CamSys_Spline	file:
resolution	cam_new.h	/^	int		show, enable, resolution, number;$/;"	m	struct:CamSys_Spline
resolution	mvd_cam.h	/^	int resolution;$/;"	m	struct:c_curve_s
resort_all_players	EX_browser.c	/^int resort_all_players = 0;$/;"	v
resort_servers	EX_browser.c	/^int resort_servers = 1;$/;"	v
resort_sources	EX_browser.c	/^int resort_sources = 1;$/;"	v
restore_gamma	vid_wgl.c	/^int restore_gamma = 0;$/;"	v
restore_gamma	win_glimp.c	/^int		restore_gamma = 0;$/;"	v
restore_spi	in_win.c	/^static qbool	restore_spi;$/;"	v	file:
restrict	mvd_cam.h	/^	double						restrict;$/;"	m	struct:mvd_menu_s
restrictPacket	rulesets.c	/^	qbool restrictPacket;$/;"	m	struct:rulesetDef_s	file:
restrictParticles	rulesets.c	/^	qbool restrictParticles;$/;"	m	struct:rulesetDef_s	file:
restrictTriggers	rulesets.c	/^	qbool restrictTriggers;$/;"	m	struct:rulesetDef_s	file:
restricted	tp_triggers.c	/^	qbool restricted;$/;"	m	struct:f_trigger_s	file:
rgncallback_t	mgraph.h	/^typedef void (ASMAPI *rgncallback_t)(const rect_t *r);$/;"	t
rgodf	in_win.c	/^static DIOBJECTDATAFORMAT rgodf[] = {$/;"	v	file:
ribuffersize	in_win.c	/^int			ribuffersize;$/;"	v
right	client.h	/^	qbool forward, back, left, right, jump, attack, up, down;$/;"	m	struct:__anon126
right	gl_model.h	/^	float				up, down, left, right;$/;"	m	struct:mspriteframe_s
right	mgraph.h	/^	m_int	right;$/;"	m	struct:__anon197
right	r_model.h	/^	float				up, down, left, right;$/;"	m	struct:mspriteframe_s
right	snd_mix.c	/^	int right;$/;"	m	struct:portable_samplepair_s	file:
right	teamplay.h	/^	vec3_t	right;$/;"	m	struct:item_vis_s
right_edge_gap	ez_controls.h	/^	int						right_edge_gap;			\/\/ if the parent controls size becomes less than the$/;"	m	struct:ez_control_s
rightedge	r_local.h	/^	byte		rightedge;$/;"	m	struct:clipplane_s
rightvol	qsound.h	/^	int		rightvol;		\/\/ 0-255 volume$/;"	m	struct:channel_s
ring	mvd_utils_common.h	/^	mvd_avgruns_t ring;$/;"	m	struct:mvd_avgruns_all_s
ring_val	mvd_autotrack.c	65;"	d	file:
rl_val	mvd_autotrack.c	60;"	d	file:
rlcount	hud_common.c	/^	int  rlcount;		\/\/ Number of RL's present in the team. (Cokeman 2006-05-27)$/;"	m	struct:sort_teams_info_s	file:
rocketmodel_enum	menu_options.c	/^const char* rocketmodel_enum[] =$/;"	v
rockettrail_enum	menu_options.c	/^const char* rockettrail_enum[] =$/;"	v
rol	sha1.h	32;"	d
rollangle	client.h	/^	float		rollangle;			\/\/\/< smooth out rollangle changes when strafing$/;"	m	struct:__anon125
root	ez_controls.h	/^	struct ez_control_s		*root;					\/\/ The control tree.$/;"	m	struct:ez_tree_s	typeref:struct:ez_tree_s::ez_control_s
root	hud_editor.c	/^ez_control_t *root = NULL;$/;"	v
rot_switch	mvd_cam.c	/^cvar_t	rot_switch = {"rot_switch", "0"};$/;"	v
rot_x	mvd_cam.c	/^cvar_t	rot_x = {"rot_x", "0"};$/;"	v
rot_y	mvd_cam.c	/^cvar_t	rot_y = {"rot_y", "0"};$/;"	v
rot_z	mvd_cam.c	/^cvar_t	rot_z = {"rot_z", "0"};$/;"	v
rotangle	cl_screen.c	/^	float		rotangle;$/;"	m	struct:ci_player_s	file:
rotangle	console.c	/^	float		rotangle, rotspeed;$/;"	m	struct:conpart_s	file:
rotangle	gl_rpart.c	/^	float		rotangle;$/;"	m	struct:particle_s	file:
rotspeed	console.c	/^	float		rotangle, rotspeed;$/;"	m	struct:conpart_s	file:
rotspeed	gl_rpart.c	/^	float		rotspeed;	$/;"	m	struct:particle_s	file:
row	ez_label.h	/^	int row;$/;"	m	struct:ez_label_textpos_s
row_count	stats_grid.h	/^	int				row_count;				\/\/ Row count.$/;"	m	struct:stats_weight_grid_s
rowbytes	d_iface.h	/^	int			rowbytes;	\/\/ destination logical width in bytes$/;"	m	struct:__anon144
rowbytes	r_draw.c	/^	int		rowbytes;$/;"	m	struct:__anon58	file:
rowbytes	vid.h	/^	unsigned		rowbytes;		\/\/ may be > width if displayed in a window$/;"	m	struct:__anon294
rs_default	rulesets.c	/^typedef enum {rs_default, rs_smackdown, rs_mtfl} ruleset_t;$/;"	e	enum:__anon61	file:
rs_mtfl	rulesets.c	/^typedef enum {rs_default, rs_smackdown, rs_mtfl} ruleset_t;$/;"	e	enum:__anon61	file:
rs_smackdown	rulesets.c	/^typedef enum {rs_default, rs_smackdown, rs_mtfl} ruleset_t;$/;"	e	enum:__anon61	file:
rserr_t	linux_glimp.c	/^} rserr_t;$/;"	t	typeref:enum:__anon41	file:
rserr_t	win_glimp.c	/^} rserr_t;$/;"	t	typeref:enum:__anon96	file:
rsvdAdjust	mgraph.h	/^	m_int	rsvdPos,rsvdAdjust;		\/* Reserved position and adjustment *\/$/;"	m	struct:__anon208
rsvdFieldPosition	mgraph.h	/^	char	rsvdFieldPosition;		\/* Bit posn of reserved mask		*\/$/;"	m	struct:__anon217
rsvdMask	mgraph.h	/^	uchar	blueMask,rsvdMask;$/;"	m	struct:__anon208
rsvdMaskSize	mgraph.h	/^	char	rsvdMaskSize;			\/* Size of reserved mask			*\/$/;"	m	struct:__anon217
rsvdPos	mgraph.h	/^	m_int	rsvdPos,rsvdAdjust;		\/* Reserved position and adjustment *\/$/;"	m	struct:__anon208
rtc_fd	sys_linux.c	/^static int rtc_fd;  \/* file descriptor for rtc device *\/$/;"	v	file:
ruleset	rulesets.c	/^	ruleset_t ruleset;$/;"	m	struct:rulesetDef_s	file:
ruleset	rulesets.c	/^cvar_t ruleset = {"ruleset", "default", 0, Rulesets_OnChange_ruleset};$/;"	v
rulesetDef	rulesets.c	/^static rulesetDef_t rulesetDef = {rs_default, 72.0, false, false, false};$/;"	v	file:
rulesetDef_s	rulesets.c	/^typedef struct rulesetDef_s$/;"	s	file:
rulesetDef_t	rulesets.c	/^} rulesetDef_t;$/;"	t	typeref:struct:rulesetDef_s	file:
ruleset_enum	menu_options.c	/^const char* ruleset_enum[] = { "ezQuake default", "default", "Smackdown", "smackdown", "Moscow TF League", "mtfl" };$/;"	v
ruleset_t	rulesets.c	/^typedef enum {rs_default, rs_smackdown, rs_mtfl} ruleset_t;$/;"	t	typeref:enum:__anon61	file:
run	mvd_utils_common.h	/^	int run;$/;"	m	struct:mvd_info_s
run	mvd_utils_common.h	/^	int run;$/;"	m	struct:mvd_pw_s
runAwayLoop	cmd.h	/^	int		runAwayLoop;$/;"	m	struct:cbuf_s
run_stats	mvd_utils_common.h	/^	mvd_avgruns_all_t run_stats;	\/\/ calculated from other items$/;"	m	struct:mvd_info_s
running_timer	nmenu_autosave.c	/^struct timer *running_timer;$/;"	v	typeref:struct:timer
runs	mvd_utils_common.h	/^	mvd_runs_t runs[512];	\/\/$/;"	m	struct:mvd_info_s
runs	mvd_utils_common.h	/^	mvd_runs_t runs[512];$/;"	m	struct:mvd_pw_s
runs_s	mvd_utils.c	/^typedef struct runs_s {$/;"	s	file:
runs_t	mvd_utils.c	/^} runs_t;$/;"	t	typeref:struct:runs_s	file:
rw_time1	r_main.c	/^float	dp_time1, dp_time2, db_time1, db_time2, rw_time1, rw_time2;$/;"	v
rw_time2	r_main.c	/^float	dp_time1, dp_time2, db_time1, db_time2, rw_time1, rw_time2;$/;"	v
rx	new_menu.c	/^	int		rx;$/;"	m	struct:menu_ct	file:
rx	new_menu.c	/^	int		rx;$/;"	m	struct:menu_s	file:
ry	new_menu.c	/^	int		ry;$/;"	m	struct:menu_ct	file:
ry	new_menu.c	/^	int		ry;$/;"	m	struct:menu_s	file:
s	d_iface.h	/^	float	s, t;$/;"	m	struct:__anon138
s	d_iface.h	/^	float	u, v, zi, s, t;$/;"	m	struct:polyvert_s
s	gl_local.h	/^	float	s, t;$/;"	m	struct:__anon153
s	gl_md3.h	/^	float		s;$/;"	m	struct:__anon158
s	mgraph.h	/^	fix32_t		w,s,t;$/;"	m	struct:__anon200
s	modelgen.h	/^	int		s;$/;"	m	struct:__anon225
s	pr_exec.c	/^	int			s;$/;"	m	struct:__anon55	file:
sDMAOffset	snd_mac.c	/^int sDMAOffset;$/;"	v
sRGBBlack	vid_mac.c	/^static RGBColor sRGBBlack = { 0x00CC, 0x00CC, 0x00CC };$/;"	v	file:
sRGBWhite	vid_mac.c	/^static RGBColor sRGBWhite = { 0xFFFF, 0xFFFF, 0xFFFF };$/;"	v	file:
sRandomBuf	snd_mac.c	/^static char sRandomBuf[SoundBufferSize];$/;"	v	file:
s_ambientfade	snd_dma.c	/^cvar_t s_ambientfade = {"s_ambientfade", "100", CVAR_ARCHIVE};$/;"	v
s_ambientlevel	snd_dma.c	/^cvar_t s_ambientlevel = {"s_ambientlevel", "0.3", CVAR_ARCHIVE};$/;"	v
s_bits	snd_dma.c	/^cvar_t s_bits = {"s_bits", "16"};$/;"	v
s_classRegistered	win_glimp.c	/^static qbool s_classRegistered = false;$/;"	v	file:
s_device	snd_dma.c	/^cvar_t s_device = {"s_device", "\/dev\/dsp0.0"};$/;"	v
s_device	snd_dma.c	/^cvar_t s_device = {"s_device", "default"};$/;"	v
s_file	pr_comp.h	/^	int		s_file;			\/\/ source file defined in$/;"	m	struct:__anon250
s_khz	snd_dma.c	/^cvar_t s_khz = {"s_khz", "11", CVAR_ARCHIVE, OnChange_s_khz};$/;"	v
s_khz_enum	menu_options.c	/^const char* s_khz_enum[] = {$/;"	v
s_loadas8bit	snd_dma.c	/^cvar_t s_loadas8bit = {"s_loadas8bit", "0", CVAR_ARCHIVE};$/;"	v
s_mixahead	snd_dma.c	/^cvar_t s_mixahead = {"s_mixahead", "0.1", CVAR_ARCHIVE};$/;"	v
s_name	pr_comp.h	/^	int			s_name;$/;"	m	struct:__anon249
s_name	pr_comp.h	/^	int		s_name;$/;"	m	struct:__anon250
s_noalsa	snd_dma.c	/^cvar_t s_noalsa = {"s_noalsa", "0"};$/;"	v
s_noextraupdate	snd_dma.c	/^cvar_t s_noextraupdate = {"s_noextraupdate", "0"};$/;"	v
s_nosound	snd_dma.c	/^cvar_t s_nosound = {"s_nosound", "0"};$/;"	v
s_numVidModes	tr_init.c	/^static int	s_numVidModes = ( sizeof( r_vidModes ) \/ sizeof( r_vidModes[0] ) );$/;"	v	file:
s_precache	snd_dma.c	/^cvar_t s_precache = {"s_precache", "1"};$/;"	v
s_show	snd_dma.c	/^cvar_t s_show = {"s_show", "0"};$/;"	v
s_stereo	snd_dma.c	/^cvar_t s_stereo = {"s_stereo", "1"};$/;"	v
s_swapstereo	snd_dma.c	/^cvar_t s_swapstereo = {"s_swapstereo", "0", CVAR_ARCHIVE};$/;"	v
s_val	parser.h	/^	char *s_val;	\/\/\/< string value$/;"	m	struct:expr_val
s_volume	snd_dma.c	/^cvar_t s_volume = {"volume", "0.7", CVAR_ARCHIVE};$/;"	v
sadjust	d_vars.c	/^fixed16_t	sadjust, tadjust, bbextents, bbextentt;$/;"	v
salone	mvd_cam.h	/^	int		salone;$/;"	m	struct:c_event_s
samelevel	sv_main.c	/^cvar_t	samelevel = {"samelevel", "0", CVAR_SERVERINFO};$/;"	v
sample16	snd_win.c	/^static int	sample16;$/;"	v	file:
sampleText_tch	gl_bloom.c	/^static float sampleText_tch;$/;"	v	file:
sampleText_tcw	gl_bloom.c	/^static float sampleText_tcw;$/;"	v	file:
sample_height	gl_bloom.c	/^static int  sample_height;$/;"	v	file:
sample_width	gl_bloom.c	/^static int  sample_width;$/;"	v	file:
sampleframes	qsound.h	/^	int		sampleframes;		\/\/ frames in buffer (frame = samples for all speakers)$/;"	m	struct:dma_s
samplepos	qsound.h	/^	int		samplepos;		\/\/ in mono samples$/;"	m	struct:dma_s
samples	client.h	/^    int samples;    \/\/ samples processed to calculate stats$/;"	m	struct:net_stat_result_s
samples	gl_model.h	/^	byte				*samples;					\/\/ [numstyles*surfsize]$/;"	m	struct:msurface_s
samples	qsound.h	/^	int		samples;		\/\/ mono samples in buffer$/;"	m	struct:dma_s
samples	qsound.h	/^	int		samples;$/;"	m	struct:wavinfo_s
samples	r_model.h	/^	byte				*samples;					\/\/ [numstyles*surfsize]$/;"	m	struct:msurface_s
save_window	menu.c	/^menu_window_t load_window, save_window;$/;"	v
saved_angles	cl_pred.c	/^static vec3_t saved_angles;$/;"	v	file:
sb_ammo	sbar.c	/^mpic_t		*sb_ammo[4];$/;"	v
sb_armor	sbar.c	/^mpic_t		*sb_armor[3];$/;"	v
sb_autohide	EX_browser.c	/^cvar_t  sb_autohide      = {"sb_autohide",         "1"}; \/\/ not in menu$/;"	v
sb_autoupdate	EX_browser.c	/^cvar_t  sb_autoupdate      = {"sb_autoupdate",     "1"};  \/\/ not in menu$/;"	v
sb_colon	sbar.c	/^mpic_t		*sb_colon, *sb_slash;$/;"	v
sb_creategame_handlers	menu_multiplayer.c	/^CTabPage_Handlers_t sb_creategame_handlers = {$/;"	v
sb_face_invis	sbar.c	/^mpic_t	*sb_face_invis;$/;"	v
sb_face_invis_invuln	sbar.c	/^mpic_t	*sb_face_invis_invuln;$/;"	v
sb_face_invuln	sbar.c	/^mpic_t	*sb_face_invuln;$/;"	v
sb_face_quad	sbar.c	/^mpic_t	*sb_face_quad;$/;"	v
sb_faces	sbar.c	/^mpic_t	*sb_faces[5][2];		\/\/ 0 is dead, 1-4 are alive$/;"	v
sb_hidedead	EX_browser.c	/^cvar_t  sb_hidedead      = {"sb_hidedead",         "1"};$/;"	v
sb_hideempty	EX_browser.c	/^cvar_t  sb_hideempty     = {"sb_hideempty",        "1"};$/;"	v
sb_hidefull	EX_browser.c	/^cvar_t  sb_hidefull      = {"sb_hidefull",         "0"};$/;"	v
sb_hidenotempty	EX_browser.c	/^cvar_t  sb_hidenotempty  = {"sb_hidenotempty",     "0"};$/;"	v
sb_ibar	sbar.c	/^mpic_t		*sb_ibar;$/;"	v
sb_inforetries	EX_browser.c	/^cvar_t  sb_inforetries   = {"sb_inforetries",      "3"};$/;"	v
sb_infospersec	EX_browser.c	/^cvar_t  sb_infospersec   = {"sb_infospersec",    "100"};$/;"	v
sb_infotimeout	EX_browser.c	/^cvar_t  sb_infotimeout   = {"sb_infotimeout",   "1000"};$/;"	v
sb_items	sbar.c	/^mpic_t		*sb_items[32];$/;"	v
sb_lines	sbar.c	/^int			sb_lines;			\/\/ scan lines to draw$/;"	v
sb_liveupdate	EX_browser.c	/^cvar_t  sb_liveupdate    = {"sb_liveupdate",       "2"}; \/\/ not in menu$/;"	v
sb_mastercache	EX_browser.c	/^cvar_t  sb_mastercache     = {"sb_mastercache",    "1"};  \/\/ not in menu$/;"	v
sb_masterretries	EX_browser.c	/^cvar_t  sb_masterretries = {"sb_masterretries",    "3"};$/;"	v
sb_mastertimeout	EX_browser.c	/^cvar_t  sb_mastertimeout = {"sb_mastertimeout", "1000"};$/;"	v
sb_nums	sbar.c	/^mpic_t		*sb_nums[2][11];$/;"	v
sb_options_handlers	menu_multiplayer.c	/^CTabPage_Handlers_t sb_options_handlers = {$/;"	v
sb_pings	EX_browser.c	/^cvar_t  sb_pings         = {"sb_pings",            "3"}; \/\/ Number of times to ping a server$/;"	v
sb_pingspersec	EX_browser.c	/^cvar_t  sb_pingspersec   = {"sb_pingspersec",    "150"}; \/\/ Pings per second$/;"	v
sb_pingtimeout	EX_browser.c	/^cvar_t  sb_pingtimeout   = {"sb_pingtimeout",   "1000"};$/;"	v
sb_players_handlers	menu_multiplayer.c	/^CTabPage_Handlers_t sb_players_handlers = {$/;"	v
sb_sbar	sbar.c	/^mpic_t		*sb_sbar;$/;"	v
sb_scorebar	sbar.c	/^mpic_t		*sb_scorebar;$/;"	v
sb_servers_handlers	menu_multiplayer.c	/^CTabPage_Handlers_t sb_servers_handlers = {$/;"	v
sb_showaddress	EX_browser.c	/^cvar_t  sb_showaddress   = {"sb_showaddress",      "0"};$/;"	v
sb_showfraglimit	EX_browser.c	/^cvar_t  sb_showfraglimit = {"sb_showfraglimit",    "0"};$/;"	v
sb_showgamedir	EX_browser.c	/^cvar_t  sb_showgamedir   = {"sb_showgamedir",      "0"};$/;"	v
sb_showmap	EX_browser.c	/^cvar_t  sb_showmap       = {"sb_showmap",          "1"};$/;"	v
sb_showping	EX_browser.c	/^cvar_t  sb_showping      = {"sb_showping",         "1"};$/;"	v
sb_showplayers	EX_browser.c	/^cvar_t  sb_showplayers   = {"sb_showplayers",      "1"};$/;"	v
sb_showscores	sbar.c	/^qbool	sb_showscores;$/;"	v
sb_showteamscores	sbar.c	/^qbool	sb_showteamscores;$/;"	v
sb_showtimelimit	EX_browser.c	/^cvar_t  sb_showtimelimit = {"sb_showtimelimit",    "0"};$/;"	v
sb_sigil	sbar.c	/^mpic_t		*sb_sigil[4];$/;"	v
sb_slash	sbar.c	/^mpic_t		*sb_colon, *sb_slash;$/;"	v
sb_sortplayers	EX_browser.c	/^cvar_t  sb_sortplayers   = {"sb_sortplayers",     "92"}; \/\/ not in new menu$/;"	v
sb_sortservers	EX_browser.c	/^cvar_t  sb_sortservers   = {"sb_sortservers",     "32"}; \/\/ not in new menu$/;"	v
sb_sortsources	EX_browser.c	/^cvar_t  sb_sortsources   = {"sb_sortsources",      "3"}; \/\/ not in new menu$/;"	v
sb_sources_handlers	menu_multiplayer.c	/^CTabPage_Handlers_t sb_sources_handlers = {$/;"	v
sb_sourcevalidity	EX_browser.c	/^cvar_t  sb_sourcevalidity  = {"sb_sourcevalidity", "30"}; \/\/ not in menu$/;"	v
sb_status	EX_browser.c	/^cvar_t  sb_status        =  {"sb_status", 			"1"}; \/\/ Shows Server status at the bottom$/;"	v
sb_tab	menu_multiplayer.c	/^CTab_t sb_tab;$/;"	v
sb_tab_t	menu_multiplayer.h	/^} sb_tab_t;$/;"	t	typeref:enum:__anon181
sb_test_addr	EX_browser_ping.c	/^unsigned int sb_test_addr;$/;"	v
sb_test_avg	EX_browser_ping.c	/^int sb_test_min, sb_test_max, sb_test_avg, sb_test_dev;$/;"	v
sb_test_dev	EX_browser_ping.c	/^int sb_test_min, sb_test_max, sb_test_avg, sb_test_dev;$/;"	v
sb_test_incoming_sequence	EX_browser_ping.c	/^int sb_test_incoming_sequence, sb_test_outgoing_sequence;$/;"	v
sb_test_max	EX_browser_ping.c	/^int sb_test_min, sb_test_max, sb_test_avg, sb_test_dev;$/;"	v
sb_test_min	EX_browser_ping.c	/^int sb_test_min, sb_test_max, sb_test_avg, sb_test_dev;$/;"	v
sb_test_outgoing_sequence	EX_browser_ping.c	/^int sb_test_incoming_sequence, sb_test_outgoing_sequence;$/;"	v
sb_test_packet_latency	EX_browser_ping.c	/^int sb_test_packet_latency[NET_TIMINGS];$/;"	v
sb_test_pl	EX_browser_ping.c	/^int sb_test_pl;$/;"	v
sb_test_server	EX_browser_ping.c	/^server_data *sb_test_server = NULL;$/;"	v
sb_test_starttime	EX_browser_ping.c	/^int sb_test_starttime;$/;"	v
sb_updates	sbar.c	/^int sb_updates;		\/\/ if >= vid.numpages, no update needed$/;"	v
sb_weapons	sbar.c	/^mpic_t		*sb_weapons[7][8];	\/\/ 0 is active, 1 is owned, 2-5 are flashes$/;"	v
sbar_drawammo	sbar.c	/^cvar_t  sbar_drawammo       = {"scr_sbar_drawammo",   "1"};;$/;"	v
sbar_drawammocounts	sbar.c	/^cvar_t  sbar_drawammocounts = {"scr_sbar_drawammocounts", "1"};$/;"	v
sbar_drawammoicon	sbar.c	/^cvar_t  sbar_drawammoicon   = {"scr_sbar_drawammoicon", "1"};$/;"	v
sbar_drawarmor	sbar.c	/^cvar_t  sbar_drawarmor      = {"scr_sbar_drawarmor",  "1"};;$/;"	v
sbar_drawarmoricon	sbar.c	/^cvar_t  sbar_drawarmoricon  = {"scr_sbar_drawarmoricon", "1"};$/;"	v
sbar_drawfaceicon	sbar.c	/^cvar_t  sbar_drawfaceicon   = {"scr_sbar_drawfaceicon", "1"};$/;"	v
sbar_drawguns	sbar.c	/^cvar_t  sbar_drawguns       = {"scr_sbar_drawguns", "1"};$/;"	v
sbar_drawhealth	sbar.c	/^cvar_t  sbar_drawhealth     = {"scr_sbar_drawhealth", "1"};;$/;"	v
sbar_drawitems	sbar.c	/^cvar_t  sbar_drawitems      = {"scr_sbar_drawitems", "1"};$/;"	v
sbar_drawsigils	sbar.c	/^cvar_t  sbar_drawsigils     = {"scr_sbar_drawsigils", "1"};$/;"	v
sbar_last_width	hud.c	16;"	d	file:
sbar_xofs	sbar.c	/^static int	sbar_xofs;$/;"	v	file:
sbsettings	menu_multiplayer.c	/^static settings_page sbsettings;$/;"	v	file:
sbsettings_arr	menu_multiplayer.c	/^static setting sbsettings_arr[] = {$/;"	v	file:
sc_base	d_surf.c	/^surfcache_t                     *sc_rover, *sc_base;$/;"	v
sc_rover	d_surf.c	/^surfcache_t                     *sc_rover, *sc_base;$/;"	v
sc_size	d_surf.c	/^int                                     sc_size;$/;"	v
scale	ez_label.h	/^	float					scale;						\/\/ The scale of the text in the label.$/;"	m	struct:ez_label_s
scale	ez_slider.h	/^	float					scale;				\/\/ The scale of the characters used for drawing the slider.$/;"	m	struct:ez_slider_s
scale	gl_model.h	/^	vec3_t				scale;$/;"	m	struct:aliashdr_s
scale	modelgen.h	/^	vec3_t		scale;$/;"	m	struct:__anon224
scale	vx_coronas.c	/^	float scale;$/;"	m	struct:__anon89	file:
scale_for_mip	d_edge.c	/^float		scale_for_mip;$/;"	v
scale_origin	gl_model.h	/^	vec3_t				scale_origin;$/;"	m	struct:aliashdr_s
scale_origin	modelgen.h	/^	vec3_t		scale_origin;$/;"	m	struct:__anon224
scaled_char_size	ez_label.h	/^	int						scaled_char_size;			\/\/ The actual size of the characters in the text.$/;"	m	struct:ez_label_s
scaled_char_size	ez_slider.h	/^	int						scaled_char_size;	\/\/ The scaled character size in pixels after applying scale to the slider chars.$/;"	m	struct:ez_slider_s
scaled_height	gl_texture.c	/^	int			scaled_width, scaled_height;$/;"	m	struct:__anon28	file:
scaled_width	gl_texture.c	/^	int			scaled_width, scaled_height;$/;"	m	struct:__anon28	file:
scanCode	winquake.h	/^    DWORD   scanCode;$/;"	m	struct:__anon300
scantokey	in_win.c	/^static byte scantokey[128] = {$/;"	v	file:
scantokey	sys_mac.c	/^byte scantokey[128] =$/;"	v
scantokey	vid_svgalib.c	/^static byte scantokey[128] = {$/;"	v	file:
scantokey_kp	vid_svgalib.c	/^static byte scantokey_kp[128] = {$/;"	v	file:
scissor_bottom	r_draw.c	/^int scissor_bottom	= 0;$/;"	v
scissor_left	r_draw.c	/^int scissor_left	= 0;$/;"	v
scissor_right	r_draw.c	/^int	scissor_right	= 0;$/;"	v
scissor_top	r_draw.c	/^int scissor_top		= 0;$/;"	v
scoreboard	render.h	/^	struct player_info_s	*scoreboard;	\/\/ identify player$/;"	m	struct:entity_s	typeref:struct:entity_s::player_info_s
scoreboard	vx_motiontrail.c	/^	struct player_info_s	*scoreboard;	\/\/ identify player$/;"	m	struct:__anon90	typeref:struct:__anon90::player_info_s	file:
scoreboardlines	sbar.c	/^int		scoreboardlines;$/;"	v
scoreboardteams	sbar.c	/^int scoreboardteams;$/;"	v
scr_allowsnap	cl_screen.c	/^cvar_t	scr_allowsnap			= {"scr_allowsnap", "1", 0, OnChange_scr_allowsnap};$/;"	v
scr_autoid	cl_screen.c	/^cvar_t	scr_autoid				= {"scr_autoid", "0"};$/;"	v
scr_autosshot_countdown	cl_screen.c	/^static int scr_autosshot_countdown = 0;$/;"	v	file:
scr_centerMenu	menu.c	/^cvar_t     scr_centerMenu = {"scr_centerMenu","1"};$/;"	v
scr_centerSbar	sbar.c	/^cvar_t	scr_centerSbar = {"scr_centerSbar", "1"};$/;"	v
scr_center_lines	cl_screen.c	/^int			scr_center_lines;$/;"	v
scr_centershift	cl_screen.c	/^cvar_t	scr_centershift			= {"scr_centershift", "0"};$/;"	v
scr_centerstring	cl_screen.c	/^char		scr_centerstring[1024];$/;"	v
scr_centertime	cl_screen.c	/^cvar_t	scr_centertime			= {"scr_centertime", "2"};$/;"	v
scr_centertime_off	cl_screen.c	/^float		scr_centertime_off;$/;"	v
scr_centertime_start	cl_screen.c	/^float		scr_centertime_start;   \/\/ for slow victory printing$/;"	v
scr_clock	cl_screen.c	/^cvar_t	scr_clock				= {"cl_clock", "0"};$/;"	v
scr_clock_format	cl_screen.c	/^cvar_t	scr_clock_format		= {"cl_clock_format", "%H:%M:%S", 0, OnChange_scr_clock_format};$/;"	v
scr_clock_x	cl_screen.c	/^cvar_t	scr_clock_x				= {"cl_clock_x", "0"};$/;"	v
scr_clock_y	cl_screen.c	/^cvar_t	scr_clock_y				= {"cl_clock_y", "-1"};$/;"	v
scr_coloredText	cl_screen.c	/^cvar_t	scr_coloredText			= {"scr_coloredText", "1"};$/;"	v
scr_coloredfrags	cl_screen.c	/^cvar_t	scr_coloredfrags		= {"scr_coloredfrags", "0"};$/;"	v
scr_compactHud	sbar.c	/^cvar_t	scr_compactHud = {"scr_compactHud", "0"};$/;"	v
scr_compactHudAlign	sbar.c	/^cvar_t	scr_compactHudAlign = {"scr_compactHudAlign", "0"};$/;"	v
scr_con_current	cl_screen.c	/^float	scr_con_current;$/;"	v
scr_conalpha	gl_draw.c	/^cvar_t	scr_conalpha		= {"scr_conalpha", "0.8"};$/;"	v
scr_conalpha	r_draw.c	/^cvar_t	scr_conalpha	= {"scr_conalpha", "1"};$/;"	v
scr_conback	gl_draw.c	/^cvar_t	scr_conback			= {"scr_conback", "1"};$/;"	v
scr_conback_enum	menu_options.c	/^const char* scr_conback_enum[] = {$/;"	v
scr_conlines	cl_screen.c	/^float	scr_conlines;           \/\/ lines of console to display$/;"	v
scr_consize	cl_screen.c	/^cvar_t	scr_consize				= {"scr_consize", "0.5"};$/;"	v
scr_conspeed	cl_screen.c	/^cvar_t	scr_conspeed			= {"scr_conspeed", "1000"};$/;"	v
scr_copyeverything	cl_screen.c	/^int		scr_copyeverything;$/;"	v
scr_copytop	cl_screen.c	/^int		scr_copytop;$/;"	v
scr_cursor	cl_screen.c	/^mpic_t  *scr_cursor;		\/\/ Cursor image.$/;"	v
scr_cursor_alpha	cl_screen.c	/^cvar_t	scr_cursor_alpha		= {"scr_cursor_alpha", "1"};$/;"	v
scr_cursor_icon	cl_screen.c	/^mpic_t	*scr_cursor_icon;	\/\/ Cursor icon image (load icon or similar).$/;"	v
scr_cursor_iconoffset_x	cl_screen.c	/^cvar_t	scr_cursor_iconoffset_x	= {"scr_cursor_iconoffset_x", "10"};	\/\/ How much the cursor icon should be offseted from the cursor.$/;"	v
scr_cursor_iconoffset_y	cl_screen.c	/^cvar_t	scr_cursor_iconoffset_y	= {"scr_cursor_iconoffset_y", "0"};$/;"	v
scr_cursor_scale	cl_screen.c	/^cvar_t	scr_cursor_scale		= {"scr_cursor_scale", "0.2"};			\/\/ The mouse cursor scale.$/;"	v
scr_democlock	cl_screen.c	/^cvar_t	scr_democlock			= {"cl_democlock", "0"};$/;"	v
scr_democlock_x	cl_screen.c	/^cvar_t	scr_democlock_x			= {"cl_democlock_x", "0"};$/;"	v
scr_democlock_y	cl_screen.c	/^cvar_t	scr_democlock_y			= {"cl_democlock_y", "-2"};$/;"	v
scr_disabled_for_loading	cl_screen.c	/^qbool	scr_disabled_for_loading;$/;"	v
scr_disabled_time	cl_screen.c	/^float	scr_disabled_time;$/;"	v
scr_drawHFrags	sbar.c	/^cvar_t	scr_drawHFrags = {"scr_drawHFrags", "1"};$/;"	v
scr_drawVFrags	sbar.c	/^cvar_t	scr_drawVFrags = {"scr_drawVFrags", "1"};$/;"	v
scr_drawloading	cl_screen.c	/^qbool	scr_drawloading;$/;"	v
scr_erase_center	cl_screen.c	/^int			scr_erase_center;$/;"	v
scr_erase_lines	cl_screen.c	/^int			scr_erase_lines;$/;"	v
scr_fov	cl_screen.c	/^cvar_t	scr_fov					= {"fov", "90", CVAR_ARCHIVE, OnFovChange};	\/\/ 10 - 140$/;"	v
scr_fullupdate	cl_screen.c	/^int		scr_fullupdate;$/;"	v
scr_gameclock	cl_screen.c	/^cvar_t	scr_gameclock			= {"cl_gameclock", "0"};$/;"	v
scr_gameclock_x	cl_screen.c	/^cvar_t	scr_gameclock_x			= {"cl_gameclock_x", "0"};$/;"	v
scr_gameclock_y	cl_screen.c	/^cvar_t	scr_gameclock_y			= {"cl_gameclock_y", "-3"};$/;"	v
scr_height	cl_screen.c	/^	unsigned				scr_width, scr_height;$/;"	m	struct:hud_element_s	file:
scr_height	vid_glx.c	/^static int scr_width, scr_height, scrnum;$/;"	v	file:
scr_initialized	cl_screen.c	/^qbool	scr_initialized;	\/\/ Ready to draw.$/;"	v
scr_menualpha	gl_draw.c	/^cvar_t	scr_menualpha		= {"scr_menualpha", "0.7"};$/;"	v
scr_menualpha	r_draw.c	/^cvar_t	scr_menualpha	= {"scr_menualpha", "0.7"};$/;"	v
scr_mvsshot_in_progress	cl_screen.c	/^static qbool scr_mvsshot_in_progress = false;$/;"	v	file:
scr_net	cl_screen.c	/^mpic_t	*scr_net;$/;"	v
scr_newHud	cl_screen.c	/^cvar_t	scr_newHud = {"scr_newhud", "0"};$/;"	v
scr_pointer_state	keys.c	/^mouse_state_t scr_pointer_state;$/;"	v
scr_printspeed	cl_screen.c	/^cvar_t	scr_printspeed			= {"scr_printspeed", "8"};$/;"	v
scr_qtvbuffer	cl_screen.c	/^cvar_t	scr_qtvbuffer			= {"scr_qtvbuffer", "0"};$/;"	v
scr_qtvbuffer_x	cl_screen.c	/^cvar_t	scr_qtvbuffer_x			= {"scr_qtvbuffer_x", "0"};$/;"	v
scr_qtvbuffer_y	cl_screen.c	/^cvar_t	scr_qtvbuffer_y			= {"scr_qtvbuffer_y", "-10"};$/;"	v
scr_ram	cl_screen.c	/^mpic_t	*scr_ram;$/;"	v
scr_scaleMenu	menu.c	/^cvar_t     scr_scaleMenu = {"scr_scaleMenu","1"};$/;"	v
scr_scoreboard_borderless	sbar.c	/^cvar_t	scr_scoreboard_borderless = {"scr_scoreboard_borderless", "0"};$/;"	v
scr_scoreboard_drawtitle	sbar.c	/^cvar_t	scr_scoreboard_drawtitle = {"scr_scoreboard_drawtitle", "1"};$/;"	v
scr_scoreboard_fillalpha	sbar.c	/^cvar_t	scr_scoreboard_fillalpha = {"scr_scoreboard_fillalpha", "0.7"};$/;"	v
scr_scoreboard_fillcolored	sbar.c	/^cvar_t	scr_scoreboard_fillcolored = {"scr_scoreboard_fillcolored", "2"};$/;"	v
scr_scoreboard_forcecolors	sbar.c	/^cvar_t	scr_scoreboard_forcecolors = {"scr_scoreboard_forcecolors", "1"};$/;"	v
scr_scoreboard_showfrags	sbar.c	/^cvar_t	scr_scoreboard_showfrags = {"scr_scoreboard_showfrags", "1"};$/;"	v
scr_scoreboard_teamsort	sbar.c	/^cvar_t	scr_scoreboard_teamsort = {"scr_scoreboard_teamsort", "1"};$/;"	v
scr_showcrosshair	cl_screen.c	/^cvar_t  scr_showcrosshair       = {"scr_showcrosshair", "1"}; \/\/ so crosshair does't affected by +showscores, or vice versa$/;"	v
scr_shownick_frame_color	cl_screen.c	/^cvar_t	scr_shownick_frame_color = {"scr_shownick_frame_color", "10 0 0 120", CVAR_ARCHIVE | CVAR_COLOR};$/;"	v
scr_shownick_name_width	cl_screen.c	/^cvar_t  scr_shownick_name_width	 = {"scr_shownick_name_width",	"6",   CVAR_ARCHIVE};$/;"	v
scr_shownick_order	cl_screen.c	/^cvar_t  scr_shownick_order		 = {"scr_shownick_order", "%p%n %a\/%H %w", CVAR_ARCHIVE, OnChange_scr_clock_format};$/;"	v
scr_shownick_scale	cl_screen.c	/^cvar_t	scr_shownick_scale		 = {"scr_shownick_scale",		"1",   CVAR_ARCHIVE};$/;"	v
scr_shownick_time	cl_screen.c	/^cvar_t  scr_shownick_time		 = {"scr_shownick_time",		"0.8", CVAR_ARCHIVE};$/;"	v
scr_shownick_x	cl_screen.c	/^cvar_t	scr_shownick_x			 = {"scr_shownick_x",			"0",   CVAR_ARCHIVE};$/;"	v
scr_shownick_y	cl_screen.c	/^cvar_t	scr_shownick_y			 = {"scr_shownick_y",			"0",   CVAR_ARCHIVE};$/;"	v
scr_showpause	cl_screen.c	/^cvar_t	scr_showpause			= {"showpause", "1"};$/;"	v
scr_showram	cl_screen.c	/^cvar_t	scr_showram				= {"showram", "1"};$/;"	v
scr_showturtle	cl_screen.c	/^cvar_t	scr_showturtle			= {"showturtle", "0"};$/;"	v
scr_skipupdate	cl_screen.c	/^qbool	scr_skipupdate;$/;"	v
scr_spectatorMessage	cl_screen.c	/^cvar_t	scr_spectatorMessage	= {"scr_spectatorMessage", "1"};$/;"	v
scr_sshot_dir	cl_screen.c	/^cvar_t	scr_sshot_dir			= {"sshot_dir", ""};$/;"	v
scr_sshot_format	cl_screen.c	/^cvar_t	scr_sshot_format		= {"sshot_format", DEFAULT_SSHOT_FORMAT};$/;"	v
scr_sshot_format_enum	menu_options.c	/^const char* scr_sshot_format_enum[] = {$/;"	v
scr_teaminfo	cl_screen.c	/^cvar_t  scr_teaminfo			 = {"scr_teaminfo",             "1",  CVAR_ARCHIVE};$/;"	v
scr_teaminfo_align_right	cl_screen.c	/^cvar_t	scr_teaminfo_align_right = {"scr_teaminfo_align_right", "1", CVAR_ARCHIVE};$/;"	v
scr_teaminfo_armor_style	cl_screen.c	/^cvar_t	scr_teaminfo_armor_style = {"scr_teaminfo_armor_style", "3",  CVAR_ARCHIVE};$/;"	v
scr_teaminfo_frame_color	cl_screen.c	/^cvar_t	scr_teaminfo_frame_color = {"scr_teaminfo_frame_color", "10 0 0 120", CVAR_COLOR};$/;"	v
scr_teaminfo_loc_width	cl_screen.c	/^cvar_t  scr_teaminfo_loc_width	 = {"scr_teaminfo_loc_width",   "5",  CVAR_ARCHIVE};$/;"	v
scr_teaminfo_low_health	cl_screen.c	/^cvar_t	scr_teaminfo_low_health	 = {"scr_teaminfo_low_health",  "10", CVAR_ARCHIVE};$/;"	v
scr_teaminfo_name_width	cl_screen.c	/^cvar_t  scr_teaminfo_name_width	 = {"scr_teaminfo_name_width",  "6",  CVAR_ARCHIVE};$/;"	v
scr_teaminfo_order	cl_screen.c	/^cvar_t  scr_teaminfo_order       = {"scr_teaminfo_order", "%p%n $x10%l$x11 %a\/%H %w", CVAR_ARCHIVE, OnChange_scr_clock_format};$/;"	v
scr_teaminfo_scale	cl_screen.c	/^cvar_t	scr_teaminfo_scale		 = {"scr_teaminfo_scale",       "1",  CVAR_ARCHIVE};$/;"	v
scr_teaminfo_show_enemies	cl_screen.c	/^cvar_t  scr_teaminfo_show_enemies= {"scr_teaminfo_show_enemies","0",  CVAR_ARCHIVE};$/;"	v
scr_teaminfo_show_self	cl_screen.c	/^cvar_t  scr_teaminfo_show_self   = {"scr_teaminfo_show_self",   "2",  CVAR_ARCHIVE};$/;"	v
scr_teaminfo_weapon_style	cl_screen.c	/^cvar_t	scr_teaminfo_weapon_style= {"scr_teaminfo_weapon_style","0",  CVAR_ARCHIVE};$/;"	v
scr_teaminfo_x	cl_screen.c	/^cvar_t  scr_teaminfo_x			 = {"scr_teaminfo_x",           "0",  CVAR_ARCHIVE};$/;"	v
scr_teaminfo_y	cl_screen.c	/^cvar_t	scr_teaminfo_y			 = {"scr_teaminfo_y",           "0",  CVAR_ARCHIVE};$/;"	v
scr_tracking	cl_screen.c	/^cvar_t	scr_tracking			= {"scr_tracking", "Tracking %t %n, [JUMP] for next"};$/;"	v
scr_turtle	cl_screen.c	/^mpic_t	*scr_turtle;$/;"	v
scr_viewsize	cl_screen.c	/^cvar_t	scr_viewsize			= {"viewsize", "100", CVAR_ARCHIVE};$/;"	v
scr_vrect	cl_screen.c	/^vrect_t	scr_vrect;$/;"	v
scr_weaponstats	cl_screen.c	/^cvar_t  scr_weaponstats				 = {"scr_weaponstats",             "0",  CVAR_ARCHIVE};$/;"	v
scr_weaponstats_align_right	cl_screen.c	/^cvar_t	scr_weaponstats_align_right  = {"scr_weaponstats_align_right", "1", CVAR_ARCHIVE};$/;"	v
scr_weaponstats_frame_color	cl_screen.c	/^cvar_t	scr_weaponstats_frame_color  = {"scr_weaponstats_frame_color", "10 0 0 120", CVAR_COLOR};$/;"	v
scr_weaponstats_order	cl_screen.c	/^cvar_t  scr_weaponstats_order        = {"scr_weaponstats_order",       "&c990sg&r:%2 &c099ssg&r:%3 &c900rl&r:#7 &c009lg&r:%8", CVAR_ARCHIVE, OnChange_scr_clock_format};$/;"	v
scr_weaponstats_scale	cl_screen.c	/^cvar_t	scr_weaponstats_scale		 = {"scr_weaponstats_scale",       "1",  CVAR_ARCHIVE};$/;"	v
scr_weaponstats_x	cl_screen.c	/^cvar_t  scr_weaponstats_x			 = {"scr_weaponstats_x",           "0",  CVAR_ARCHIVE};$/;"	v
scr_weaponstats_y	cl_screen.c	/^cvar_t	scr_weaponstats_y			 = {"scr_weaponstats_y",           "0",  CVAR_ARCHIVE};$/;"	v
scr_width	cl_screen.c	/^	unsigned				scr_width, scr_height;$/;"	m	struct:hud_element_s	file:
scr_width	vid_glx.c	/^static int scr_width, scr_height, scrnum;$/;"	v	file:
scrap_allocated	gl_draw.c	/^int			scrap_allocated[MAX_SCRAPS][BLOCK_WIDTH];$/;"	v
scrap_dirty	gl_draw.c	/^int			scrap_dirty = 0;	\/\/ Bit mask.$/;"	v
scrap_texels	gl_draw.c	/^byte		scrap_texels[MAX_SCRAPS][BLOCK_WIDTH*BLOCK_HEIGHT*4];$/;"	v
scrap_texnum	gl_draw.c	/^int			scrap_texnum;$/;"	v
scratch1	mgraph.h	/^	m_int	scratch1;		\/* Scratch pad value 1						*\/$/;"	m	struct:__anon217
scratch2	mgraph.h	/^	m_int	scratch2;		\/* Scratch pad value 2						*\/$/;"	m	struct:__anon217
scrautoid_enum	menu_options.c	/^const char* scrautoid_enum[] = { "off", "nick", "health+armor", "health+armor+type", "all (rl)", "all (best gun)" };$/;"	v
scrbar_bg	Ctrl_ScrollBar.c	/^static mpic_t *scrbar_up, *scrbar_down, *scrbar_bg, *scrbar_slider;$/;"	v	file:
scrbar_down	Ctrl_ScrollBar.c	/^static mpic_t *scrbar_up, *scrbar_down, *scrbar_bg, *scrbar_slider;$/;"	v	file:
scrbar_slider	Ctrl_ScrollBar.c	/^static mpic_t *scrbar_up, *scrbar_down, *scrbar_bg, *scrbar_slider;$/;"	v	file:
scrbar_up	Ctrl_ScrollBar.c	/^static mpic_t *scrbar_up, *scrbar_down, *scrbar_bg, *scrbar_slider;$/;"	v	file:
screen	mac.h	/^	UInt16	screen;			\/\/ vid_devices[gl_vid_screen.value]$/;"	m	struct:__anon173
screenAspect	r_main.c	/^float	screenAspect;$/;"	v
screenText_tch	gl_bloom.c	/^static float screenText_tch;$/;"	v	file:
screenText_tcw	gl_bloom.c	/^static float screenText_tcw;$/;"	v	file:
screen_texture_height	gl_bloom.c	/^static int      screen_texture_width, screen_texture_height;$/;"	v	file:
screen_texture_width	gl_bloom.c	/^static int      screen_texture_width, screen_texture_height;$/;"	v	file:
screenedge	r_main.c	/^mplane_t	screenedge[4];$/;"	v
screenpart_t	d_iface.h	/^} screenpart_t;$/;"	t	typeref:struct:__anon141
screenwidth	r_main.c	/^int		screenwidth;$/;"	v
scrnum	linux_glimp.c	/^static int scrnum;$/;"	v	file:
scrnum	vid_glx.c	/^static int scr_width, scr_height, scrnum;$/;"	v	file:
scroll_area	ez_scrollbar.h	/^	int							scroll_area;		\/\/ The width or height (depending on orientation) of the area between$/;"	m	struct:ez_scrollbar_s
scroll_delta_x	ez_scrollbar.h	/^	int							scroll_delta_x;		\/\/ How much should the scrollbar scroll it's parent when the scroll buttons are pressed?$/;"	m	struct:ez_scrollbar_s
scroll_delta_y	ez_scrollbar.h	/^	int							scroll_delta_y;$/;"	m	struct:ez_scrollbar_s
scroll_fnc	Ctrl.h	/^    ScrollPos_setter    scroll_fnc;     $/;"	m	struct:ScrollBar_s
scroll_names	EX_FileList.h	/^	cvar_t *		scroll_names;$/;"	m	struct:filelist_s
scrollbar	EX_FileList.h	/^    PScrollBar      scrollbar;$/;"	m	struct:filelist_s
scrollbar	hud_editor.c	/^ez_scrollbar_t *scrollbar = NULL;$/;"	v
scrollbar	settings.h	/^    PScrollBar  scrollbar;  \/\/ scrollbar gui element$/;"	m	struct:__anon273
scrollbar_thickness	ez_scrollpane.h	/^	int							scrollbar_thickness; \/\/ The thickness of the scrollbars.$/;"	m	struct:ez_scrollpane_s
scrollbar_width	Ctrl_ScrollBar.c	/^int scrollbar_width;$/;"	v
scrolling	ez_scrollbar.h	/^	scrolling		= (1 << 1)$/;"	e	enum:ez_scrollbar_iflags_e
scrolling	new_menu.c	/^int		scrolling	=	0;$/;"	v
scrollpane	ez_window.h	/^	ez_scrollpane_t			*scrollpane;		\/\/ The scrollpane for the window to enable scrolling.$/;"	m	struct:ez_window_s
scrollpane	hud_editor.c	/^ez_scrollpane_t *scrollpane = NULL;$/;"	v
se_time1	r_main.c	/^float	se_time1, se_time2, de_time1, de_time2, dv_time1, dv_time2;$/;"	v
se_time2	r_main.c	/^float	se_time1, se_time2, de_time1, de_time2, dv_time1, dv_time2;$/;"	v
seamfixupX16	d_iface.h	/^	int					seamfixupX16;$/;"	m	struct:__anon140
search	vfs.h	/^	struct searchpath_s *search;$/;"	m	struct:__anon288	typeref:struct:__anon288::searchpath_s
search_dirty	EX_FileList.h	/^    qbool			search_dirty;   \/\/ If should research$/;"	m	struct:filelist_s
search_error	EX_FileList.h	/^    qbool			search_error;   \/\/ Not found$/;"	m	struct:filelist_s
search_none	EX_browser.c	/^	search_none = 0,$/;"	e	enum:__anon13	file:
search_player	EX_browser.c	/^	search_player$/;"	e	enum:__anon13	file:
search_server	EX_browser.c	/^	search_server,$/;"	e	enum:__anon13	file:
search_string	EX_FileList.h	/^    char			search_string[MAX_SEARCH_STRING+1];$/;"	m	struct:filelist_s
search_valid	EX_FileList.h	/^    qbool			search_valid;   \/\/ If is in search mode$/;"	m	struct:filelist_s
searchpath_s	vfs.h	/^typedef struct searchpath_s$/;"	s
searchpath_t	vfs.h	/^} searchpath_t;$/;"	t	typeref:struct:searchpath_s
searchpathfuncs_t	vfs.h	/^} searchpathfuncs_t;$/;"	t	typeref:struct:__anon289
searchstring	EX_browser.c	/^char searchstring[MAX_SEARCH+1];$/;"	v
searchtime	EX_browser.c	/^double searchtime = -10;$/;"	v
searchtype	EX_browser.c	/^} searchtype = search_none;$/;"	v	typeref:enum:__anon13
section_num	xsd_document.h	/^    int section_num;$/;"	m	struct:document_parser_specific_s
sections	document_rendering.c	/^    document_rendered_section_t *sections;$/;"	m	struct:document_rendering_context_s	file:
sections	document_rendering.h	/^    document_rendered_section_t *sections;$/;"	m	struct:document_renered_s
security_loaded	modules.c	/^static qbool security_loaded;$/;"	v	file:
seekingisabadplan	fs.h	/^	qbool seekingisabadplan;$/;"	m	struct:vfsfile_s
select_end	ez_label.h	/^	int						select_end;					\/\/ The end index of the selected text.$/;"	m	struct:ez_label_s
select_helper	cam_new.c	/^struct select_helper$/;"	s	file:
select_start	ez_label.h	/^	int						select_start;				\/\/ At what index the currently selected text starts at $/;"	m	struct:ez_label_s
select_sub	mosdm.c	/^int	select_sub = 0;$/;"	v
select_sub_sub	mosdm.c	/^int	select_sub_sub;$/;"	v
selected	mosdm.c	/^int selected = 0;$/;"	v
selected_bookmark	nmenu_demo.c	/^int selected_bookmark;$/;"	v
selected_cam	mosdm.c	/^int selected_cam = 0;$/;"	v
selected_cam_spline	cam_new.c	/^struct CamSys_Spline *view_splines, *cam_splines, *selected_view_spline, *selected_cam_spline;$/;"	v	typeref:struct:
selected_color	EX_FileList.h	/^	cvar_t *		selected_color;$/;"	m	struct:filelist_s
selected_editbox	new_menu.c	/^struct menu_ct	*selected_editbox = NULL;$/;"	v	typeref:struct:menu_ct
selected_event	cam_event_system.c	/^	int selected_event;$/;"	m	struct:event_list	file:
selected_hud	hud_editor.c	/^hud_t				*selected_hud			= NULL;					\/\/ The currently selected HUD.$/;"	v
selected_point	mosdm.c	/^int selected_point = 0;$/;"	v
selected_slider	new_menu.c	/^struct menu_ct	*selected_slider = NULL;$/;"	v	typeref:struct:menu_ct
selected_sub	mosdm.c	/^int	selected_sub = 0;$/;"	v
selected_view	mosdm.c	/^int selected_view = 0;$/;"	v
selected_view_point	mosdm.c	/^int selected_view_point = 0;$/;"	v
selected_view_spline	cam_new.c	/^struct CamSys_Spline *view_splines, *cam_splines, *selected_view_spline, *selected_cam_spline;$/;"	v	typeref:struct:
self	progdefs.h	/^	int	self;$/;"	m	struct:__anon252
sem_t	sys.h	/^typedef HANDLE sem_t;$/;"	t
send	EX_browser_ping.c	/^    int recv, send;$/;"	m	struct:pinghost_s	file:
send	net.c	/^	unsigned int	get, send;$/;"	m	struct:__anon52	file:
send_message	server.h	/^	qbool		send_message;		\/\/ set on frames a datagram arived on$/;"	m	struct:client_s
senddata	EX_browser_net.c	/^static const char senddata[] = {255, 255, 255, 255, 's','t','a','t','u','s',' ','2','3','\\n'};$/;"	v	file:
sendinfo	server.h	/^	qbool		sendinfo;			\/\/ at end of frame, send info to all$/;"	m	struct:client_s
sensitivity	cl_input.c	/^cvar_t	sensitivity = {"sensitivity","12",CVAR_ARCHIVE};$/;"	v
sent_time	EX_browser_ping.c	/^double sent_time[NET_TIMINGS];$/;"	v
sentinal	zone.c	/^	int		sentinal;$/;"	m	struct:__anon97	file:
sentinel1	zone2.h	/^	unsigned int sentinel1;$/;"	m	struct:memclump_s
sentinel1	zone2.h	/^	unsigned int sentinel1;$/;"	m	struct:memheader_s
sentinel1	zone2.h	/^	unsigned int sentinel1;$/;"	m	struct:mempool_s
sentinel2	zone2.h	/^	unsigned int sentinel2;$/;"	m	struct:memclump_s
sentinel2	zone2.h	/^	unsigned int sentinel2;$/;"	m	struct:mempool_s
sentsize	client.h	/^	int					sentsize;$/;"	m	struct:__anon114
sentsize	client.h	/^    int             sentsize;$/;"	m	struct:packet_info_s
senttime	client.h	/^	double				senttime;			\/\/ Time cmd was sent off.$/;"	m	struct:__anon114
senttime	client.h	/^    double          senttime;$/;"	m	struct:packet_info_s
senttime	server.h	/^	double				senttime;$/;"	m	struct:__anon266
separator	xsd_document.h	/^    list_separator_t separator;$/;"	m	struct:document_tag_dict_s
separator	xsd_document.h	/^    list_separator_t separator;$/;"	m	struct:document_tag_list_s
seq_diff	client.h	/^    int             seq_diff;   \/\/ frames elapsed between send and recv$/;"	m	struct:packet_info_s
seq_when_received	client.h	/^	int					seq_when_received;$/;"	m	struct:__anon114
sequence	client.h	/^	int				sequence;$/;"	m	struct:__anon115
sequence	pmove.h	/^	int			sequence; \/\/ just for debugging prints$/;"	m	struct:__anon245
sequence_latency	EX_browser_ping.c	/^int    sequence_latency[NET_TIMINGS];$/;"	v
serialhint	vx_coronas.c	/^	entity_t *serialhint;\/\/is a serial to avoid recreating stuff$/;"	m	struct:__anon89	file:
serv	EX_browser.h	/^    server_data *serv;$/;"	m	struct:player_host_s
server	cl_slist.h	/^	char *server;$/;"	m	struct:__anon128
serverPersistent_t	server.h	/^} serverPersistent_t;$/;"	t	typeref:struct:__anon269
server_adr	client.h	/^	netadr_t	server_adr;$/;"	m	struct:__anon122
server_data	EX_browser.h	/^} server_data;$/;"	t	typeref:struct:server_data_s
server_data_s	EX_browser.h	/^typedef struct server_data_s$/;"	s
server_during_update	EX_browser_net.c	/^int server_during_update = 0;$/;"	v
server_entry_t	cl_slist.h	/^} server_entry_t;$/;"	t	typeref:struct:__anon128
server_occupancy	EX_browser.h	/^} server_occupancy;$/;"	t	typeref:enum:__anon147
server_state_t	server.h	/^} server_state_t;$/;"	t	typeref:enum:__anon263
server_t	server.h	/^} server_t;$/;"	t	typeref:struct:__anon264
serverbrowser_window_s	EX_browser.h	/^typedef struct serverbrowser_window_s {$/;"	s
serverbrowser_window_t	EX_browser.h	/^} serverbrowser_window_t;$/;"	t	typeref:struct:serverbrowser_window_s
servercount	client.h	/^	int			servercount;		\/\/\/< server identification for prespawns$/;"	m	struct:__anon125
serverflags	progdefs.h	/^	float	serverflags;$/;"	m	struct:__anon252
serverflags	server.h	/^	int			serverflags;		\/\/ episode completion information$/;"	m	struct:__anon269
serverinfo	client.h	/^	char		serverinfo[MAX_SERVERINFO_STRING];$/;"	m	struct:__anon125
serverinfo_players_pos	EX_browser.c	/^int serverinfo_players_pos;$/;"	v
serverinfo_pos	EX_browser.c	/^int serverinfo_pos;$/;"	v
serverinfo_rules_pos	EX_browser.c	/^int serverinfo_rules_pos = 0;$/;"	v
serverinfo_sources_disp	EX_browser.c	/^int serverinfo_sources_disp;$/;"	v
serverinfo_sources_pos	EX_browser.c	/^int serverinfo_sources_pos;$/;"	v
servername	client.h	/^	char		servername[MAX_OSPATH];	\/\/\/< name of server from original connect$/;"	m	struct:__anon122
servers	EX_browser.c	/^server_data *servers[MAX_SERVERS];$/;"	v
servers	EX_browser.h	/^    server_data **servers;              \/\/ servers list$/;"	m	struct:source_data_s
serversn	EX_browser.c	/^int serversn;$/;"	v
serversn	EX_browser.h	/^    int serversn;                       \/\/ servers no$/;"	m	struct:source_data_s
serversn_passed	EX_browser.c	/^int serversn_passed;$/;"	v
servertime	client.h	/^	double		servertime;$/;"	m	struct:__anon125
servertime_works	client.h	/^	qbool		servertime_works;	\/\/\/< Does the server actually send STAT_TIME\/svc_time?$/;"	m	struct:__anon125
set_realtime	sys_linux.c	/^int set_realtime(void)$/;"	f
setjmp_buffer	image.c	/^	jmp_buf setjmp_buffer;$/;"	m	struct:my_error_mgr	file:
setjmp_buffer	image.c	/^  jmp_buf setjmp_buffer;$/;"	m	struct:my_error_mgr	file:
setpoints	mvd_cam.h	/^	vec3_t		setpoints[4];$/;"	m	struct:tele_plane_s
settbinds	menu_options.c	/^settings_page settbinds;$/;"	v
settbinds_arr	menu_options.c	/^setting settbinds_arr[] = {$/;"	v
settconfig	menu_options.c	/^settings_page settconfig;$/;"	v
settconfig_arr	menu_options.c	/^setting settconfig_arr[] = {$/;"	v
settdemo_spec	menu_options.c	/^settings_page settdemo_spec;$/;"	v
settdemo_spec_arr	menu_options.c	/^setting settdemo_spec_arr[] = {$/;"	v
settfps	menu_options.c	/^settings_page settfps;$/;"	v
settfps_arr	menu_options.c	/^setting settfps_arr[] = {$/;"	v
settgeneral	menu_options.c	/^settings_page settgeneral;$/;"	v
settgeneral_arr	menu_options.c	/^setting settgeneral_arr[] = {$/;"	v
setthud	menu_options.c	/^settings_page setthud;$/;"	v
setthud_arr	menu_options.c	/^setting setthud_arr[] = {$/;"	v
setting	settings.h	/^} setting;$/;"	t	typeref:struct:__anon272
setting_type	settings.h	/^} setting_type;$/;"	t	typeref:enum:__anon271
settings	settings.h	/^	setting* settings;	\/\/ array of settings$/;"	m	struct:__anon273
settings_broken	ffmpeg.c	/^	qbool		settings_broken;$/;"	m	struct:ffm	file:
settings_page	settings.h	/^} settings_page;$/;"	t	typeref:struct:__anon273
settplayer	menu_options.c	/^settings_page settplayer;$/;"	v
settplayer_arr	menu_options.c	/^setting settplayer_arr[] = {$/;"	v
settvideo	menu_options.c	/^settings_page settvideo;$/;"	v
settvideo_arr	menu_options.c	/^setting settvideo_arr[] = {$/;"	v
setup	ffmpeg.c	/^	qbool		setup;$/;"	m	struct:ffm	file:
setupAGL	vid_mac.c	/^static AGLContext setupAGL (void)$/;"	f	file:
sfrac	d_polyse.c	/^	int				sfrac, tfrac, light, zi;$/;"	m	struct:__anon10	file:
sfx	qsound.h	/^	sfx_t		*sfx;			\/\/ sfx number$/;"	m	struct:channel_s
sfx_s	qsound.h	/^typedef struct sfx_s {$/;"	s
sfx_t	qsound.h	/^} sfx_t;$/;"	t	typeref:struct:sfx_s
sfxc_data	asm_i386.h	75;"	d
sfxc_length	asm_i386.h	70;"	d
sfxc_loopstart	asm_i386.h	71;"	d
sfxc_speed	asm_i386.h	72;"	d
sfxc_stereo	asm_i386.h	74;"	d
sfxc_width	asm_i386.h	73;"	d
sfxcache_s	qsound.h	/^typedef struct sfxcache_s {$/;"	s
sfxcache_t	qsound.h	/^} sfxcache_t;$/;"	t	typeref:struct:sfxcache_s
sg_val	mvd_autotrack.c	55;"	d	file:
sgn	mathlib.h	202;"	d
sh	draw.h	/^	float		sl, tl, sh, th;$/;"	m	struct:__anon145
shadeTab	mgraph.h	/^	color_t	*shadeTab;		\/* Currently active shade table				*\/$/;"	m	struct:__anon218
shadedots	gl_rmain.c	/^byte	*shadedots = r_avertexnormal_dots[0];$/;"	v
shadelight	gl_rmain.c	/^float		shadelight, ambientlight;$/;"	v
shaderIndex	gl_md3.h	/^	int				shaderIndex;$/;"	m	struct:__anon159
shadevector	gl_rmain.c	/^vec3_t	shadevector;$/;"	v
shelltexture	gl_rmain.c	/^int shelltexture = 0;$/;"	v
shiftDown	in_linux.c	/^int shiftDown = 0;$/;"	v
shiftDown	vid_mac.c	/^int shiftDown = 0;$/;"	v
shiftmask_fl	vid_x11.c	/^static int shiftmask_fl = 0;$/;"	v	file:
shiftmask_init	vid_x11.c	/^static void shiftmask_init (void)$/;"	f	file:
shm	snd_dma.c	/^volatile dma_t	*shm = NULL;$/;"	v
shortname	fragstats.c	/^	char	*shortname;$/;"	m	struct:wclass_s	file:
should_render	Ctrl_PageViewer.h	/^    qbool should_render;$/;"	m	struct:CPageViewer_page_s
show	cam_new.c	/^	int		show, enable, resolution, number;$/;"	m	struct:CamSys_Spline	file:
show	cam_new.h	/^	int		show, enable, resolution, number;$/;"	m	struct:CamSys_Spline
show	hud.h	/^    cvar_t *show;						\/\/ Show cvar.$/;"	m	struct:hud_s
show	new_menu.c	/^	int		show;$/;"	m	struct:menu_s	file:
show_date	EX_FileList.h	/^    cvar_t *		show_date;$/;"	m	struct:filelist_s
show_dirs	EX_FileList.h	/^	qbool			show_dirs;$/;"	m	struct:filelist_s
show_dirup	EX_FileList.h	/^	qbool			show_dirup;$/;"	m	struct:filelist_s
show_fps	cl_screen.c	/^cvar_t	show_fps				= {"show_fps", "0"};$/;"	v
show_fps2	cl_main.c	/^cvar_t  show_fps2 = {"scr_scoreboard_drawfps","0"};$/;"	v
show_fps_x	cl_screen.c	/^cvar_t	show_fps_x				= {"show_fps_x", "-5"};$/;"	v
show_fps_y	cl_screen.c	/^cvar_t	show_fps_y				= {"show_fps_y", "-1"};$/;"	v
show_h_scrollbar	ez_scrollpane.h	/^	show_h_scrollbar		= (1 << 1),	\/\/ Should the horizontal scrollbar be shown?$/;"	e	enum:ez_scrollpane_iflags_e
show_info	mosdm.c	/^int show_info = 0;$/;"	v
show_me	mosdm.c	/^int show_me = 0;$/;"	v
show_serverinfo	EX_browser.c	/^server_data * show_serverinfo;$/;"	v
show_size	EX_FileList.h	/^    cvar_t *		show_size;$/;"	m	struct:filelist_s
show_speed	cl_screen.c	/^cvar_t	show_speed				= {"show_speed", "0"};$/;"	v
show_speed_x	cl_screen.c	/^cvar_t	show_speed_x			= {"show_speed_x", "-1"};$/;"	v
show_speed_y	cl_screen.c	/^cvar_t	show_speed_y			= {"show_speed_y", "1"};$/;"	v
show_status	Ctrl_PageViewer.h	/^    qbool show_status;$/;"	m	struct:CPageViewer_s
show_status	EX_FileList.h	/^    cvar_t *		show_status;$/;"	m	struct:filelist_s
show_time	EX_FileList.h	/^    cvar_t *		show_time;$/;"	m	struct:filelist_s
show_title	Ctrl_PageViewer.h	/^    qbool show_title;$/;"	m	struct:CPageViewer_s
show_v_scrollbar	ez_scrollpane.h	/^	show_v_scrollbar		= (1 << 0),	\/\/ Should the vertical scrollbar be shown?$/;"	e	enum:ez_scrollpane_iflags_e
showdrop	net_chan.c	/^cvar_t	showdrop	= {"showdrop", "0"};$/;"	v
showme	mvd_cam.h	/^	int showme ;$/;"	m	struct:c_curve_s
shownick	cl_screen.c	/^static ti_player_t shownick;$/;"	v	file:
showpackets	net_chan.c	/^cvar_t	showpackets	= {"showpackets", "0"};$/;"	v
shutdown	modules.c	/^	qlib_shutdown_fn shutdown;$/;"	m	struct:registeredModule_s	file:
side	bspfile.h	/^	short		side;$/;"	m	struct:__anon107
sidemove	protocol.h	/^	short	forwardmove, sidemove, upmove;$/;"	m	struct:usercmd_s
sighted	vx_coronas.c	/^	qbool sighted;$/;"	m	struct:__anon89	file:
signal_handler	linux_signals.c	/^static void signal_handler(int sig) \/\/ bk010104 - replace this... (NOTE TTimo huh?)$/;"	f	file:
signal_handler	vid_glx.c	/^void signal_handler(int sig) {$/;"	f
signalcaught	linux_signals.c	/^static qbool signalcaught = false;$/;"	v	file:
signbits	cmodel.h	/^	byte	signbits;		\/\/ signx + signy<<1 + signz<<1$/;"	m	struct:mplane_s
signed_buffer_s	security.h	/^typedef struct signed_buffer_s {$/;"	s
signed_buffer_t	security.h	/^} signed_buffer_t;$/;"	t	typeref:struct:signed_buffer_s
signon	server.h	/^	sizebuf_t	signon;$/;"	m	struct:__anon264
signon_buffer_size	server.h	/^	int			signon_buffer_size[MAX_SIGNON_BUFFERS];$/;"	m	struct:__anon264
signon_buffers	server.h	/^	byte		signon_buffers[MAX_SIGNON_BUFFERS][MAX_DATAGRAM];$/;"	m	struct:__anon264
simangles	client.h	/^	vec3_t		simangles;$/;"	m	struct:__anon125
simorg	client.h	/^	vec3_t		simorg;$/;"	m	struct:__anon125
simple_crypt	cl_main.c	/^static void simple_crypt (char *buf, int len) {$/;"	f	file:
simvel	client.h	/^	vec3_t		simvel;$/;"	m	struct:__anon125
sint	gl_rpart.c	/^static float sint[7] = {0.000000, 0.781832, 0.974928, 0.433884, -0.433884, -0.974928, -0.781832};$/;"	v	file:
sintable	r_rast.c	/^int		sintable[MAXWIDTH + CYCLE];$/;"	v
size	EX_FileList.h	/^    unsigned long   size;$/;"	m	struct:filedesc_s
size	cl_parse.c	/^	int size[NUMMSG];$/;"	m	struct:messages_s	file:
size	cl_screen.c	/^	float		size;$/;"	m	struct:ci_player_s	file:
size	console.c	/^	float		size, growth;$/;"	m	struct:conpart_s	file:
size	d_local.h	/^	int					size;		\/\/ including header$/;"	m	struct:surfcache_s
size	gl_model.h	/^	float				size;$/;"	m	struct:aliashdr_s
size	gl_rpart.c	/^	float		size;$/;"	m	struct:particle_s	file:
size	modelgen.h	/^	float		size;$/;"	m	struct:__anon224
size	progdefs.h	/^	vec3_t	size;$/;"	m	struct:__anon253
size	security.h	/^	unsigned long size;$/;"	m	struct:signed_buffer_s
size	sys.h	/^    unsigned int size;$/;"	m	struct:sys_dirent_s
size	vfs_tar.h	/^  char size[12];                \/* 124 *\/$/;"	m	struct:tar_header
size	wad.c	/^	int size;$/;"	m	struct:__anon95	file:
size	wad.h	/^	int			size;					\/\/ uncompressed$/;"	m	struct:__anon299
size	zone.c	/^	int						size; \/\/ including this header$/;"	m	struct:cache_system_s	file:
size	zone.c	/^	int		size; \/\/ including sizeof(hunk_t), -1 = not allocated$/;"	m	struct:__anon97	file:
size	zone2.h	/^	size_t size;$/;"	m	struct:memheader_s
size_in	client.h	/^    float size_in;$/;"	m	struct:net_stat_result_s
size_out	client.h	/^    float size_out;$/;"	m	struct:net_stat_result_s
sizebuf_s	q_shared.h	/^typedef struct sizebuf_s {$/;"	s
sizebuf_t	q_shared.h	/^} sizebuf_t;$/;"	t	typeref:struct:sizebuf_s
sizeofgzheader_t	fs.c	2879;"	d	file:
skill	sv_main.c	/^cvar_t	skill = {"skill", "1"};$/;"	v
skin	EX_browser.h	/^    char skin[21];$/;"	m	struct:playerinfo_s
skin	cl_main.c	/^cvar_t	skin = {"skin", "", CVAR_ARCHIVE|CVAR_USERINFO};$/;"	v
skin	client.h	/^	skin_t	*skin;$/;"	m	struct:player_info_s
skin	progdefs.h	/^	float	skin;$/;"	m	struct:__anon253
skin	r_model.h	/^	int					skin;$/;"	m	struct:__anon259
skin_browser_democolor	settings_page.c	/^cvar_t	skin_browser_democolor		= {"skin_browser_democolor",	"255 255 255 255", CVAR_COLOR};	\/\/ White.$/;"	v
skin_browser_dircolor	settings_page.c	/^cvar_t	skin_browser_dircolor		= {"skin_browser_dircolor",		"170 80 0 255", CVAR_COLOR};	\/\/ Redish.$/;"	v
skin_browser_interline	settings_page.c	/^cvar_t  skin_browser_interline		= {"skin_browser_interline",	"0"};$/;"	v
skin_browser_scrollnames	settings_page.c	/^cvar_t  skin_browser_scrollnames	= {"skin_browser_scrollnames",	"1"};$/;"	v
skin_browser_selectedcolor	settings_page.c	/^cvar_t	skin_browser_selectedcolor	= {"skin_browser_selectedcolor","0 150 235 255", CVAR_COLOR};	\/\/ Light blue.$/;"	v
skin_browser_showdate	settings_page.c	/^cvar_t  skin_browser_showdate		= {"skin_browser_showdate",		"1"};$/;"	v
skin_browser_showsize	settings_page.c	/^cvar_t  skin_browser_showsize		= {"skin_browser_showsize",		"0"};$/;"	v
skin_browser_showstatus	settings_page.c	/^cvar_t  skin_browser_showstatus		= {"skin_browser_showstatus",	"1"};$/;"	v
skin_browser_showtime	settings_page.c	/^cvar_t  skin_browser_showtime		= {"skin_browser_showtime",		"0"};$/;"	v
skin_browser_sortmode	settings_page.c	/^cvar_t  skin_browser_sortmode		= {"skin_browser_sortmode",		"1"};$/;"	v
skin_browser_stripnames	settings_page.c	/^cvar_t  skin_browser_stripnames		= {"skin_browser_stripnames",	"1"};$/;"	v
skin_browser_zipcolor	settings_page.c	/^cvar_t	skin_browser_zipcolor		= {"skin_browser_zipcolor",		"255 170 0 255", CVAR_COLOR};	\/\/ Orange.$/;"	v
skin_refresh	client.h	/^	qbool	skin_refresh;$/;"	m	struct:player_info_s
skin_t	client.h	/^} skin_t;$/;"	t	typeref:struct:__anon111
skindesc	r_model.h	/^	int					skindesc;$/;"	m	struct:aliashdr_s
skindescs	r_model.h	/^	maliasskindesc_t	skindescs[1];$/;"	m	struct:maliasskingroup_s
skinforcing_team	teamplay.c	/^char *skinforcing_team = "";$/;"	v
skinheight	d_iface.h	/^	int					skinheight;$/;"	m	struct:__anon140
skinheight	gl_model.h	/^	int					skinheight;$/;"	m	struct:aliashdr_s
skinheight	modelgen.h	/^	int			skinheight;$/;"	m	struct:__anon224
skinnum	client.h	/^	int			skinnum;$/;"	m	struct:__anon112
skinnum	protocol.h	/^	int		skinnum;$/;"	m	struct:entity_state_s
skinnum	render.h	/^	int						skinnum;		\/\/ for Alias models$/;"	m	struct:entity_s
skinnum	vx_motiontrail.c	/^	int skinnum;$/;"	m	struct:__anon90	file:
skins	skin.c	/^skin_t	skins[MAX_CACHED_SKINS];$/;"	v
skins_filelist	settings_page.c	/^filelist_t skins_filelist;$/;"	v
skins_need_preache	skin.c	/^qbool skins_need_preache = true;$/;"	v
skinstart	d_polyse.c	/^byte	*skinstart;$/;"	v
skintable	d_polyse.c	/^byte	*skintable[MAX_LBM_HEIGHT];$/;"	v
skinwidth	d_iface.h	/^	int					skinwidth;$/;"	m	struct:__anon140
skinwidth	d_polyse.c	/^int		skinwidth;$/;"	v
skinwidth	gl_model.h	/^	int					skinwidth;$/;"	m	struct:aliashdr_s
skinwidth	modelgen.h	/^	int			skinwidth;$/;"	m	struct:__anon224
skip_input_data	image.c	/^skip_input_data (j_decompress_ptr cinfo, long num_bytes)$/;"	f
sky	server.h	/^	char		sky[32];						\/\/ skybox file name ("unit1_", etc)$/;"	m	struct:__anon264
skybox_ext	gl_warp.c	/^static char *skybox_ext[6] = {"rt", "bk", "lf", "ft", "up", "dn"};$/;"	v	file:
skybox_range	gl_warp.c	633;"	d	file:
skyboxtextures	gl_rmain.c	/^int			skyboxtextures;$/;"	v
skychain	gl_rsurf.c	/^msurface_t	*skychain = NULL;$/;"	v
skychain_tail	gl_rsurf.c	/^msurface_t	**skychain_tail = &skychain;$/;"	v
skyclip	gl_warp.c	/^static vec3_t skyclip[6] = {$/;"	v	file:
skygroup_s	match_tools.c	/^typedef struct skygroup_s {$/;"	s	file:
skygroup_t	match_tools.c	/^} skygroup_t;$/;"	t	typeref:struct:skygroup_s	file:
skygroups	match_tools.c	/^static skygroup_t *skygroups = NULL;	$/;"	v	file:
skygroups_init	match_tools.c	/^static qbool skygroups_init = false;	$/;"	v	file:
skymaxs	gl_warp.c	/^static float skymins[2][6], skymaxs[2][6];$/;"	v	file:
skymins	gl_warp.c	/^static float skymins[2][6], skymaxs[2][6];$/;"	v	file:
skyshift	r_sky.c	/^float	skyshift;$/;"	v
skyspeed	r_sky.c	/^float	skyspeed, skyspeed2;$/;"	v
skyspeed2	r_sky.c	/^float	skyspeed, skyspeed2;$/;"	v
skytexorder	gl_warp.c	/^static int	skytexorder[6] = {0,2,1,3,4,5};$/;"	v	file:
sl	draw.h	/^	float		sl, tl, sh, th;$/;"	m	struct:__anon145
slidefix	pmove.h	/^	qbool	slidefix; \/\/ NQ-style movement down ramps$/;"	m	struct:__anon246
slider	demo_controls.c	/^static ez_slider_t *slider;$/;"	v	file:
slider	ez_scrollbar.h	/^	ez_button_t					*slider;			\/\/ The slider button.$/;"	m	struct:ez_scrollbar_s
slider	hud_editor.c	/^ez_slider_t *slider = NULL;$/;"	v
slider_active	new_menu.c	/^int slider_active = 0;$/;"	v
slider_dragging	ez_slider.h	/^	slider_dragging	= (1 << 0)$/;"	e	enum:ez_slider_iflags_e
slider_height	Ctrl_ScrollBar.c	/^int slider_height;$/;"	v
slider_minsize	ez_scrollbar.h	/^	int							slider_minsize;		\/\/ The minimum size of the slider button.$/;"	m	struct:ez_scrollbar_s
slider_offset_x	new_menu.c	/^	int	slider_offset_x;$/;"	m	struct:menu_s	file:
slider_offset_y	new_menu.c	/^	int	slider_offset_y;$/;"	m	struct:menu_s	file:
slider_pos	ez_slider.h	/^	int						slider_pos;			\/\/ The position of the slider.$/;"	m	struct:ez_slider_s
sliding	ez_scrollbar.h	/^	sliding			= (1 << 0),$/;"	e	enum:ez_scrollbar_iflags_e
slist	cl_slist.c	/^server_entry_t	slist[MAX_SERVER_LIST];$/;"	v
slist_initialised	cl_slist.c	/^static qbool slist_initialised = false;$/;"	v	file:
smooth_thread	in_win.c	/^HANDLE smooth_thread;$/;"	v
sn	snd_dma.c	/^volatile dma_t	sn;$/;"	v
snap_from	server.h	/^	netadr_t	snap_from;$/;"	m	struct:client_s
snap_strings	hud.c	/^char *snap_strings[] = {$/;"	v
snd_blocked	snd_dma.c	/^int		snd_blocked = 0;$/;"	v
snd_cam_pos	mvd_cam.c	/^vec3_t	cam_pos,view_pos,cam_angles,snd_cam_pos,snd_cam_view;$/;"	v
snd_cam_view	mvd_cam.c	/^vec3_t	cam_pos,view_pos,cam_angles,snd_cam_pos,snd_cam_view;$/;"	v
snd_completed	snd_win.c	/^static int	snd_sent, snd_completed;$/;"	v	file:
snd_completion	snd_mac.c	/^static pascal void snd_completion(SndChannelPtr channel, SndDoubleBufferPtr buffer)$/;"	f	file:
snd_firsttime	snd_win.c	/^static qbool	snd_firsttime = true, snd_isdirect, snd_iswave;$/;"	v	file:
snd_format_s	qsound.h	/^typedef struct snd_format_s$/;"	s
snd_format_t	qsound.h	/^} snd_format_t;$/;"	t	typeref:struct:snd_format_s
snd_initialized	snd_dma.c	/^qbool		snd_initialized = false;$/;"	v
snd_isdirect	snd_win.c	/^static qbool	snd_firsttime = true, snd_isdirect, snd_iswave;$/;"	v	file:
snd_iswave	snd_win.c	/^static qbool	snd_firsttime = true, snd_isdirect, snd_iswave;$/;"	v	file:
snd_linear_count	snd_mix.c	/^int snd_linear_count;$/;"	v
snd_out	snd_mix.c	/^short *snd_out;$/;"	v
snd_p	snd_mix.c	/^int snd_vol, *snd_p;$/;"	v
snd_pcm_hw_params_sizeof	snd_alsa.c	36;"	d	file:
snd_pcm_sw_params_sizeof	snd_alsa.c	37;"	d	file:
snd_scaletable	snd_mix.c	/^int snd_scaletable[32][256];$/;"	v
snd_sent	snd_win.c	/^static int	snd_sent, snd_completed;$/;"	v	file:
snd_vol	snd_mix.c	/^int snd_vol, *snd_p;$/;"	v
sndinitstat	snd_win.c	/^typedef enum {SIS_SUCCESS, SIS_FAILURE, SIS_NOTAVAIL} sndinitstat;$/;"	t	typeref:enum:__anon63	file:
sng_val	mvd_autotrack.c	58;"	d	file:
snprintf	q_shared.c	/^int snprintf(char *buffer, size_t count, char const *format, ...)$/;"	f
sock	EX_browser_ping.c	/^static int sock;$/;"	v	file:
sock	net.h	/^	netsrc_t	sock;$/;"	m	struct:__anon240
sock	vfs_tcp.c	/^	int		sock;$/;"	m	struct:tcpfile_s	file:
socketip	client.h	/^	int socketip;$/;"	m	struct:__anon122
socketip	server.h	/^	int socketip;$/;"	m	struct:__anon269
socketnum	server.h	/^	int socketnum;$/;"	m	struct:svtcpstream_s
sockettcp	client.h	/^	int			sockettcp;$/;"	m	struct:__anon122
sockettcp	server.h	/^	int sockettcp;$/;"	m	struct:__anon269
sockettcpdest	client.h	/^	netadr_t	sockettcpdest;$/;"	m	struct:__anon122
socklen_t	net.h	/^typedef unsigned int socklen_t;$/;"	t
solid	progdefs.h	/^	float	solid;$/;"	m	struct:__anon253
solid_edicts	sv_world.h	/^	link_t				solid_edicts;$/;"	m	struct:areanode_s
solidskytexture	gl_warp.c	/^int solidskytexture, alphaskytexture;$/;"	v
solidstate_t	r_bsp.c	/^typedef enum {touchessolid, drawnode, nodrawnode} solidstate_t;$/;"	t	typeref:enum:__anon57	file:
solo_completed_time	client.h	/^	int			solo_completed_time;\/\/\/< to draw on intermission screen$/;"	m	struct:__anon125
sort_mode	EX_FileList.h	/^    cvar_t *		sort_mode;$/;"	m	struct:filelist_s
sort_players_info_s	hud_common.c	/^typedef struct sort_players_info_s$/;"	s	file:
sort_players_info_t	hud_common.c	/^sort_players_info_t;$/;"	t	typeref:struct:sort_players_info_s	file:
sort_teams_info_s	hud_common.c	/^typedef struct sort_teams_info_s$/;"	s	file:
sort_teams_info_t	hud_common.c	/^sort_teams_info_t;$/;"	t	typeref:struct:sort_teams_info_s	file:
sort_teamsort	hud_common.c	/^static int						sort_teamsort = 0;$/;"	v	file:
sorted	linked_list.c	/^	int sorted;$/;"	m	struct:linked_list	file:
sorted_players	hud_common.c	/^static sort_players_info_t		sorted_players[MAX_CLIENTS];$/;"	v	file:
sorted_teams	hud_common.c	/^static sort_teams_info_t		sorted_teams[MAX_CLIENTS];$/;"	v	file:
soundHeader	CarbonSndPlayDB.c	/^	CmpSoundHeader					soundHeader;$/;"	m	struct:PerChanInfo	file:
sound_buttons_airbut1_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_buttons_airbut1_wav_FMOD_DM_FMOD_TF[5]	= {0x47d5141e, 0xc925e8eb, 0x26e5583c, 0xc8dfd021, 0x226792ef};$/;"	v	file:
sound_items_armor1_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_items_armor1_wav_FMOD_DM_FMOD_TF[5]		= {0x44488db0, 0xef0b0a1d, 0x3acda8b4, 0x3d87b467, 0xe4dd4fcc};$/;"	v	file:
sound_items_damage2_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_items_damage2_wav_FMOD_DM_FMOD_TF[5]		= {0x719a9b4d, 0x1c76b218, 0xfcbf979f, 0x5ea5e6fa, 0x68afda0e};$/;"	v	file:
sound_items_damage3_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_items_damage3_wav_FMOD_DM_FMOD_TF[5]		= {0xfa07de6c, 0x6e306d39, 0x7d18f3ed, 0x90272558, 0x63d01e7a};$/;"	v	file:
sound_items_damage_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_items_damage_wav_FMOD_DM_FMOD_TF[5]		= {0x197778ac, 0x92a252c5, 0x90c30256, 0x7ba6f264, 0x56ab654f};$/;"	v	file:
sound_items_health1_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_items_health1_wav_FMOD_DM_FMOD_TF[5]		= {0xebdd17b2, 0xa1289b80, 0x7810e3f2, 0xdb8d01bf, 0x0b495a96};$/;"	v	file:
sound_items_inv1_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_items_inv1_wav_FMOD_DM_FMOD_TF[5]		= {0xa01240b8, 0xb588d430, 0xc62406e0, 0x39e59dfd, 0xad5a4b98};$/;"	v	file:
sound_items_inv2_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_items_inv2_wav_FMOD_DM_FMOD_TF[5]		= {0x9ab6025d, 0x2d9d24a2, 0xc127b17c, 0x019e908a, 0xa521f7d3};$/;"	v	file:
sound_items_inv3_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_items_inv3_wav_FMOD_DM_FMOD_TF[5]		= {0xfb785777, 0x9c622826, 0x6121d05c, 0xf42d5661, 0xa34a5429};$/;"	v	file:
sound_items_itembk2_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_items_itembk2_wav_FMOD_DM_FMOD_TF[5]		= {0x178c519b, 0x3b030527, 0x759aaed2, 0xf7dca7d7, 0xf01a1e36};$/;"	v	file:
sound_items_protect2_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_items_protect2_wav_FMOD_DM_FMOD_TF[5]	= {0x588dd159, 0xae489f2c, 0x22f7118e, 0x487eeb4c, 0x3c54c997};$/;"	v	file:
sound_items_protect3_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_items_protect3_wav_FMOD_DM_FMOD_TF[5]	= {0x869a1143, 0xc9e6a404, 0xcbd5d90e, 0xa1b57e4c, 0xae77dd20};$/;"	v	file:
sound_items_protect_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_items_protect_wav_FMOD_DM_FMOD_TF[5]		= {0x38ff1351, 0x7d6799c7, 0x7577256d, 0xbf233192, 0xb6223baa};$/;"	v	file:
sound_misc_outwater_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_misc_outwater_wav_FMOD_DM_FMOD_TF[5]		= {0x9cb6fc36, 0x9c20e9ba, 0x595f8418, 0x50e76d9f, 0xa7503dfd};$/;"	v	file:
sound_misc_water1_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_misc_water1_wav_FMOD_DM_FMOD_TF[5]		= {0x8625dbc7, 0xbaf30ae6, 0xfdb53965, 0x2d7eb9d6, 0xf9fd9304};$/;"	v	file:
sound_misc_water2_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_misc_water2_wav_FMOD_DM_FMOD_TF[5]		= {0xccda75ec, 0xfb5cd780, 0xe2d73b5b, 0x9f3560ad, 0x4e116b85};$/;"	v	file:
sound_name	client.h	/^	char		sound_name[MAX_SOUNDS][MAX_QPATH];$/;"	m	struct:__anon125
sound_nominal_clip_dist	snd_dma.c	62;"	d	file:
sound_num	client.h	/^	int			sound_num;$/;"	m	struct:__anon110
sound_player_land2_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_player_land2_wav_FMOD_DM_FMOD_TF[5]		= {0x6c13b55c, 0xc46c1589, 0xeeabac42, 0x087cd24e, 0xd9552386};$/;"	v	file:
sound_player_land_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_player_land_wav_FMOD_DM_FMOD_TF[5]		= {0xb8bb5e41, 0xf087ad8e, 0x13323cd5, 0x2e2d2052, 0x338e9e38};$/;"	v	file:
sound_player_plyrjmp8_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_player_plyrjmp8_wav_FMOD_DM_FMOD_TF[5]	= {0x75e2e946, 0xc9ad54f2, 0x6cd47b03, 0xeef0c9d4, 0x5d3386da};$/;"	v	file:
sound_precache	client.h	/^	struct sfx_s	*sound_precache[MAX_SOUNDS];$/;"	m	struct:__anon125	typeref:struct:__anon125::sfx_s
sound_precache	server.h	/^	char		*sound_precache[MAX_SOUNDS];	\/\/ NULL terminated$/;"	m	struct:__anon264
sound_rate	mac_prefs.h	/^	int	sound_rate;			\/\/ Menu selection # for the sound sampling rate$/;"	m	struct:__anon179
sound_spatialized	snd_dma.c	/^static qbool	sound_spatialized = false;$/;"	v	file:
sound_weapons_pkup_wav_FMOD_DM_FMOD_TF	fmod.c	/^static const int sound_weapons_pkup_wav_FMOD_DM_FMOD_TF[5]		= {0x05a43523, 0x09bbab60, 0x77ce67a0, 0xb52fe23d, 0xf2715701};$/;"	v	file:
sounds	progdefs.h	/^	float	sounds;$/;"	m	struct:__anon253
soundtime	snd_dma.c	/^int		soundtime;$/;"	v
sourceIP	EX_browser_ping.c	/^    unsigned int sourceIP;$/;"	m	struct:IP_header_s	file:
source_data	EX_browser.h	/^} source_data;$/;"	t	typeref:struct:source_data_s
source_data_s	EX_browser.h	/^typedef struct source_data_s$/;"	s
source_full_update	EX_browser_sources.c	/^int source_full_update = 0;$/;"	v
source_unique	EX_browser.c	/^int source_unique = 0;$/;"	v
sources	EX_browser_sources.c	/^source_data *sources[MAX_SOURCES];$/;"	v
sourcesn	EX_browser_sources.c	/^int sourcesn;$/;"	v
sourcesn_updated	EX_browser.c	/^int sourcesn_updated = 0;$/;"	v
sourcesstep	r_surf.c	/^int				lightleft, sourcesstep, blocksize, sourcetstep;$/;"	v
sourcetstep	r_surf.c	/^int				lightleft, sourcesstep, blocksize, sourcetstep;$/;"	v
spaceExtra	mgraph.h	/^	m_int			spaceExtra;		\/* Space extra term					*\/$/;"	m	struct:__anon215
span_p	r_edge.c	/^espan_t	*span_p, *max_span_p;$/;"	v
span_t	mgraph.h	/^typedef	struct _span_t	span_t;$/;"	t	typeref:struct:_span_t
span_t	mgraph.h	/^typedef void		span_t;$/;"	t
spanpackage_t	d_polyse.c	/^} spanpackage_t;$/;"	t	typeref:struct:__anon10	file:
spanpackage_t_count	asm_draw.h	56;"	d
spanpackage_t_light	asm_draw.h	60;"	d
spanpackage_t_pdest	asm_draw.h	54;"	d
spanpackage_t_ptex	asm_draw.h	57;"	d
spanpackage_t_pz	asm_draw.h	55;"	d
spanpackage_t_sfrac	asm_draw.h	58;"	d
spanpackage_t_size	asm_draw.h	62;"	d
spanpackage_t_tfrac	asm_draw.h	59;"	d
spanpackage_t_zi	asm_draw.h	61;"	d
spans	mgraph.h	/^	span_t		*spans;			\/* Start of span list for region		*\/$/;"	m	struct:__anon206
spans	r_shared.h	/^	struct espan_s	*spans;			\/\/ pointer to linked list of spans to draw$/;"	m	struct:surf_s	typeref:struct:surf_s::espan_s
spanstate	r_shared.h	/^	int			spanstate;			\/\/ 0 = not in span$/;"	m	struct:surf_s
spawn_parms	server.h	/^	float		spawn_parms[NUM_SPAWN_PARMS];$/;"	m	struct:client_s
spawn_s	mvd_utils.c	/^typedef struct spawn_s {$/;"	s	file:
spawn_t	mvd_utils.c	/^} spawn_t;$/;"	t	typeref:struct:spawn_s	file:
spawncount	server.h	/^	int			spawncount;			\/\/ number of servers spawned since start,$/;"	m	struct:__anon269
spawnflags	progdefs.h	/^	float	spawnflags;$/;"	m	struct:__anon253
spawntelefrags	mvd_utils_common.h	/^	int spawntelefrags;$/;"	m	struct:mvd_info_s
spec	EX_browser.h	/^	qbool spec; \/\/ flag: is spectator or player$/;"	m	struct:playerinfo_s
spec_track	cl_cam.c	/^int spec_track = 0;				\/\/ player# of who we are tracking$/;"	v
spec_track	server.h	/^	int			spec_track;			\/\/ entnum of player tracking$/;"	m	struct:client_s
spectator	cl_main.c	/^cvar_t	spectator = {"spectator", "", CVAR_USERINFO};$/;"	v
spectator	client.h	/^	int			spectator;$/;"	m	struct:__anon125
spectator	client.h	/^	int		spectator;$/;"	m	struct:player_info_s
spectator	match_tools.c	/^	qbool spectator;$/;"	m	struct:matchinfo_s	file:
spectator	server.h	/^	int			spectator;			\/\/ non-interactive$/;"	m	struct:client_s
spectator_password	sv_main.c	/^cvar_t	spectator_password = {"spectator_password", ""};	\/\/ password for entering as a sepctator$/;"	v
spectatormaxspeed	pmove.h	/^	float	spectatormaxspeed;$/;"	m	struct:__anon246
spectatorsn	EX_browser.h	/^    int spectatorsn;$/;"	m	struct:server_data_s
speed	qsound.h	/^	unsigned int	speed;$/;"	m	struct:snd_format_s
speedscale	gl_warp.c	/^static float speedscale, speedscale2;		\/\/ for top sky and bottom sky$/;"	v	file:
speedscale2	gl_warp.c	/^static float speedscale, speedscale2;		\/\/ for top sky and bottom sky$/;"	v	file:
spline	cam_new.c	/^	struct CamSys_Spline *spline;$/;"	m	struct:select_helper	typeref:struct:select_helper::CamSys_Spline	file:
spline	cam_new.c	/^	void	*spline;$/;"	m	struct:CamSys_Spline	file:
spline	cam_new.h	/^	void	*spline;$/;"	m	struct:CamSys_Spline
spline	splines.c	/^struct spline$/;"	s	file:
spline	splines.h	/^struct spline $/;"	s
spline_count	cam_new.c	/^int spline_count[2];$/;"	v
spline_point	splines.c	/^struct spline_point$/;"	s	file:
spline_point	splines.h	/^struct spline_point$/;"	s
splines	splines.c	/^struct spline	*splines;$/;"	v	typeref:struct:spline
spreestring	vx_tracker.c	/^	char *spreestring;$/;"	m	struct:__anon94	file:
sprint_buf	client.h	/^	wchar		sprint_buf[2048];$/;"	m	struct:__anon125
sprint_buf	server.h	/^	char		sprint_buf[256];$/;"	m	struct:client_s
sprint_level	client.h	/^	int			sprint_level;$/;"	m	struct:__anon125
sprint_level	server.h	/^	int			sprint_level;$/;"	m	struct:client_s
sprite_height	d_sprite.c	/^static int		sprite_height;$/;"	v	file:
sprite_height	r_sprite.c	/^static int				sprite_width, sprite_height;$/;"	v	file:
sprite_spans	d_sprite.c	/^static sspan_t	*sprite_spans;$/;"	v	file:
sprite_width	r_sprite.c	/^static int				sprite_width, sprite_height;$/;"	v	file:
spritedesc_t	d_iface.h	/^} spritedesc_t;$/;"	t	typeref:struct:__anon142
spriteframetype_t	spritegn.h	/^typedef enum { SPR_SINGLE=0, SPR_GROUP } spriteframetype_t;$/;"	t	typeref:enum:__anon281
sqrt_funcs	sys_lib_linux.c	/^struct lib_functions sqrt_funcs[] =$/;"	v	typeref:struct:lib_functions
sqrt_funcs	sys_lib_win.c	/^struct lib_functions sqrt_funcs[] =$/;"	v	typeref:struct:lib_functions
ss_active	server.h	/^	ss_active			\/\/ actively running$/;"	e	enum:__anon263
ss_dead	server.h	/^	ss_dead,			\/\/ no map loaded$/;"	e	enum:__anon263
ss_loading	server.h	/^	ss_loading,			\/\/ spawning level edicts$/;"	e	enum:__anon263
ssc	new_menu.c	/^int		ssc = 0;$/;"	v
ssg_val	mvd_autotrack.c	56;"	d	file:
sspan_s	d_local.h	/^typedef struct sspan_s {$/;"	s
sspan_t	d_local.h	/^} sspan_t;$/;"	t	typeref:struct:sspan_s
sspan_t_count	asm_draw.h	49;"	d
sspan_t_size	asm_draw.h	50;"	d
sspan_t_u	asm_draw.h	47;"	d
sspan_t_v	asm_draw.h	48;"	d
st2_fixup	vid_x11.c	/^static void st2_fixup (XImage *framebuf, int x, int y, int width, int height)$/;"	f	file:
st2d_8to16table	vid_x11.c	/^static PIXEL16 st2d_8to16table[256];$/;"	v	file:
st2d_8to24table	vid_x11.c	/^static PIXEL24 st2d_8to24table[256];$/;"	v	file:
st3_fixup	vid_x11.c	/^static void st3_fixup( XImage *framebuf, int x, int y, int width, int height)$/;"	f	file:
st_d_ziorigin	asm_draw.h	90;"	d
st_d_zistepu	asm_draw.h	91;"	d
st_d_zistepv	asm_draw.h	92;"	d
st_data	asm_draw.h	86;"	d
st_entity	asm_draw.h	87;"	d
st_flags	asm_draw.h	85;"	d
st_insubmodel	asm_draw.h	89;"	d
st_key	asm_draw.h	82;"	d
st_last_u	asm_draw.h	83;"	d
st_nearzi	asm_draw.h	88;"	d
st_next	asm_draw.h	79;"	d
st_pad	asm_draw.h	93;"	d
st_prev	asm_draw.h	80;"	d
st_size	asm_draw.h	94;"	d
st_spans	asm_draw.h	81;"	d
st_spanstate	asm_draw.h	84;"	d
st_to_vec	gl_warp.c	/^static int	st_to_vec[6][3] = {$/;"	v	file:
standard_quake	cl_nqdemo.c	/^static qbool	standard_quake = true;$/;"	v	file:
standby	client.h	/^	qbool		standby;$/;"	m	struct:__anon125
standby	match_tools.c	/^	qbool standby;$/;"	m	struct:mt_matchtstate_s	file:
start	cl_tent.c	/^	float start;$/;"	m	struct:explosion_s	file:
start	cl_tent.c	/^	vec3_t start, end;$/;"	m	struct:__anon6	file:
start	console.c	/^	double		die, start;$/;"	m	struct:conpart_s	file:
start	document_rendering.h	/^    int start;$/;"	m	struct:document_rendered_link_s
start	document_rendering.h	/^    int start;$/;"	m	struct:document_rendered_section_s
start	gl_rpart.c	/^	float		start;		$/;"	m	struct:particle_s	file:
start	gl_rpart.c	/^	particle_t	*start;$/;"	m	struct:particle_tree_s	file:
start	sv_world.c	/^	float		*start, *end;$/;"	m	struct:__anon66	file:
start	vx_motiontrail.c	/^	float start;$/;"	m	struct:__anon90	file:
startX	mgraph.h	/^	m_int	startX,startY;			\/* Starting point on arc			*\/$/;"	m	struct:__anon209
startY	mgraph.h	/^	m_int	startX,startY;			\/* Starting point on arc			*\/$/;"	m	struct:__anon209
start_of_file	image.c	/^	boolean start_of_file;		\/\/ Have we gotten any data yet?$/;"	m	struct:__anon34	file:
startalpha	console.c	/^	float		startalpha;$/;"	m	struct:conpart_s	file:
startalpha	gl_rpart.c	/^	float		startalpha;	$/;"	m	struct:particle_tree_s	file:
startlerp	client.h	/^	double			startlerp;$/;"	m	struct:__anon115
startpos	vfs_gzip.c	/^	unsigned long startpos;$/;"	m	struct:__anon73	file:
startpos	vfs_pak.c	/^    unsigned long startpos;$/;"	m	struct:__anon77	file:
startpos	vfs_tar.c	/^	unsigned long startpos;$/;"	m	struct:__anon78	file:
startpos	vfs_zip.c	/^	int startpos;$/;"	m	struct:__anon79	file:
startsolid	cmodel.h	/^	qbool	startsolid;			\/\/ if true, the initial point was in a solid area$/;"	m	struct:__anon133
starttime	cam_event_system.c	/^	double starttime, stoptime;$/;"	m	struct:event_list_entry	file:
starttime	cam_new.c	/^	double	starttime, stoptime;$/;"	m	struct:CamSys_Spline	file:
starttime	cam_new.h	/^	double	starttime, stoptime;$/;"	m	struct:CamSys_Spline
starttime	match_tools.c	/^	float starttime;$/;"	m	struct:mt_matchtstate_s	file:
starttime	mvd_cam.h	/^	double starttime;$/;"	m	struct:c_curve_s
starttime	mvd_utils.c	/^	double starttime;$/;"	m	struct:mvd_gameinfo_s	file:
starttime	mvd_utils.c	/^	double starttime;$/;"	m	struct:runs_s	file:
starttime	mvd_utils_common.h	/^	double starttime;$/;"	m	struct:mvd_pw_s
starttime	mvd_utils_common.h	/^	double starttime;$/;"	m	struct:mvd_runs_s
starttime	timer.c	/^	double starttime;$/;"	m	struct:timer	file:
startwindowed	vid_win.c	/^static qbool	startwindowed = 0, windowed_mode_set;$/;"	v	file:
stat_framecounts	teamplay.h	/^	int		stat_framecounts[MAX_CL_STATS];$/;"	m	struct:tvars_s
state	client.h	/^	cactive_t	state;$/;"	m	struct:__anon122
state	input.h	/^	int		state;			\/\/ low bit is down state$/;"	m	struct:__anon167
state	md4.c	/^    UINT4 state[4];             \/* state (ABCD) *\/$/;"	m	struct:__anon43	file:
state	server.h	/^	server_state_t	state;			\/\/ precache commands are only valid during load$/;"	m	struct:__anon264
state	server.h	/^	sv_client_state_t	state;$/;"	m	struct:client_s
state	sha1.h	/^    unsigned long state[5];$/;"	m	struct:__anon275
state_time	client.h	/^	double		state_time;		\/\/ Not the same as the packet time,$/;"	m	struct:__anon112
statement_s	pr_comp.h	/^typedef struct statement_s$/;"	s
static_sound_t	client.h	/^} static_sound_t;$/;"	t	typeref:struct:__anon110
static_sounds	client.h	/^	static_sound_t	static_sounds[MAX_STATIC_SOUNDS];$/;"	m	struct:__anon125
stats	client.h	/^	int			stats[MAX_CL_STATS];\/\/\/< health, etc$/;"	m	struct:__anon125
stats	client.h	/^	int		stats[MAX_CL_STATS];$/;"	m	struct:player_info_s
stats	server.h	/^	int			stats[MAX_CL_STATS];$/;"	m	struct:client_s
stats	server.h	/^	svstats_t	stats;$/;"	m	struct:__anon269
stats_cell_s	stats_grid.h	/^typedef struct stats_cell_s$/;"	s
stats_cell_t	stats_grid.h	/^} stats_cell_t;$/;"	t	typeref:struct:stats_cell_s
stats_entities_t	stats_grid.h	/^} stats_entities_t;$/;"	t	typeref:struct:__anon283
stats_entity_s	stats_grid.h	/^typedef struct stats_entity_s$/;"	s
stats_entity_t	stats_grid.h	/^} stats_entity_t;$/;"	t	typeref:struct:stats_entity_s
stats_grid	stats_grid.c	/^stats_weight_grid_t *stats_grid = NULL;$/;"	v
stats_important_ents	stats_grid.c	/^stats_entities_t *stats_important_ents = NULL;$/;"	v
stats_team_s	stats_grid.h	/^typedef struct stats_team_s$/;"	s
stats_team_t	stats_grid.h	/^} stats_team_t;$/;"	t	typeref:struct:stats_team_s
stats_weight_grid_s	stats_grid.h	/^typedef struct stats_weight_grid_s$/;"	s
stats_weight_grid_t	stats_grid.h	/^} stats_weight_grid_t;$/;"	t	typeref:struct:stats_weight_grid_s
status	client.h	/^    packet_status   status;$/;"	m	struct:packet_info_s
status	match_tools.c	/^	int status;$/;"	m	struct:mt_matchtstate_s	file:
stdin_ready	sv_sys_unix.c	/^qbool stdin_ready;$/;"	v
stdin_ready	sys_linux.c	/^qbool stdin_ready;$/;"	v
stdin_ready	sys_mac.c	/^qbool stdin_ready;$/;"	v
stencilBits	tr_types.h	/^	int						colorBits, depthBits, stencilBits;$/;"	m	struct:__anon286
step	settings.h	/^	float step;			\/\/ change step; required for num, named$/;"	m	struct:__anon272
stereoEnabled	tr_types.h	/^	qbool				stereoEnabled;$/;"	m	struct:__anon286
stime	EX_browser_ping.c	/^    double stime[6];$/;"	m	struct:pinghost_s	file:
stippleCount	mgraph.h	/^	m_uint			stippleCount;	\/* Current line stipple count		*\/$/;"	m	struct:__anon216
stopping	CarbonSndPlayDB.c	/^	short							stopping;$/;"	m	struct:PerChanInfo	file:
stopspeed	pmove.h	/^	float	stopspeed;$/;"	m	struct:__anon246
stoptime	cam_event_system.c	/^	double starttime, stoptime;$/;"	m	struct:event_list_entry	file:
stoptime	cam_new.c	/^	double	starttime, stoptime;$/;"	m	struct:CamSys_Spline	file:
stoptime	cam_new.h	/^	double	starttime, stoptime;$/;"	m	struct:CamSys_Spline
stoptime	mvd_cam.h	/^	double stoptime;$/;"	m	struct:c_curve_s
str2wcs	q_shared.c	/^wchar *str2wcs (const char *s)$/;"	f
strcasecmp	q_shared.h	221;"	d
strchrrev	q_shared.c	/^char *strchrrev(char *str, char chr)$/;"	f
strcmp2	EX_browser.c	/^static int strcmp2 (const char * s1, const char * s2)$/;"	f	file:
strdup	q_shared.h	42;"	d
streak	fragstats.c	/^	int streak;$/;"	m	struct:fragstats_s	file:
stretched	vid_win.c	/^	int			stretched;$/;"	m	struct:__anon85	file:
strhdr	movie_avi.c	/^ACMSTREAMHEADER	strhdr;$/;"	v
string	cvar.h	/^	char	*string;$/;"	m	struct:cvar_s
string	parser.c	/^    const char *string;			\/\/ input string$/;"	m	struct:__anon53	file:
string	progs.h	/^	string_t		string;$/;"	m	union:eval_s
string	tp_triggers.c	/^	char	string[64];$/;"	m	struct:msg_trigger_s	file:
string_check_cmp	parser.c	/^LOCAL expr_val string_check_cmp(EParser p, const expr_val e1, const expr_val e2, cmp_type ctype)$/;"	f
string_description	xsd_variable.h	/^        char *string_description;$/;"	m	union:xml_variable_s::__anon308
string_t	pr_comp.h	/^typedef int	string_t;$/;"	t
stringify	vid_svgalib.c	44;"	d	file:
strip_names	EX_FileList.h	/^    cvar_t *		strip_names;$/;"	m	struct:filelist_s
stripcount	gl_mesh.c	/^int		stripcount;$/;"	v
striptris	gl_mesh.c	/^int		striptris[128];$/;"	v
stripverts	gl_mesh.c	/^int		stripverts[128];$/;"	v
strlcat	q_shared.c	/^size_t strlcat(char *dst, const char *src, size_t siz)$/;"	f
strlcpy	q_shared.c	/^size_t strlcpy(char *dst, const char *src, size_t siz)$/;"	f
strlen_color	utils.c	/^int strlen_color(const char *str)$/;"	f
strncasecmp	q_shared.h	222;"	d
strnstr	q_shared.c	/^char *strnstr(const char *s, const char *find, size_t slen)$/;"	f
strstri	q_shared.c	/^char *strstri(const char *text, const char *find)$/;"	f
stt_action	settings.h	/^	stt_action,		\/\/ function is assigned to this, pointer must be stored in togglefnc$/;"	e	enum:__anon271
stt_advmark	settings.h	/^	stt_advmark,	\/\/ denotes advanced settings area$/;"	e	enum:__anon271
stt_basemark	settings.h	/^	stt_basemark    \/\/ denotes basic settings area$/;"	e	enum:__anon271
stt_bind	settings.h	/^	stt_bind,		\/\/ keybinding, not implemented$/;"	e	enum:__anon271
stt_bool	settings.h	/^	stt_bool,		\/\/ simple boolean setting, needs cvar$/;"	e	enum:__anon271
stt_custom	settings.h	/^	stt_custom,		\/\/ fully customizable setting, needs readfnc and togglefnc$/;"	e	enum:__anon271
stt_enum	settings.h	/^	stt_enum,		\/\/ named enum, pairs of "name", "value"$/;"	e	enum:__anon271
stt_intnum	settings.h	/^	stt_intnum,		\/\/ integer non-quake-variable$/;"	e	enum:__anon271
stt_named	settings.h	/^	stt_named,		\/\/ named integer 0..max, max is number of elements in array of strings assigned to readfnc$/;"	e	enum:__anon271
stt_num	settings.h	/^	stt_num,		\/\/ integer or float variable, needs cvar, min, max and step are required$/;"	e	enum:__anon271
stt_playercolor	settings.h	/^	stt_playercolor,\/\/ named enum 0..13$/;"	e	enum:__anon271
stt_separator	settings.h	/^	stt_separator,	\/\/ decorating purpose only, needs only type+label then$/;"	e	enum:__anon271
stt_skin	settings.h	/^	stt_skin,		\/\/ player skin$/;"	e	enum:__anon271
stt_string	settings.h	/^	stt_string,		\/\/ string - fully editable by the user, needs only cvar$/;"	e	enum:__anon271
stufftext_buf	server.h	/^	char		stufftext_buf[MAX_STUFFTEXT];$/;"	m	struct:client_s
stv_onseam	d_ifacea.h	74;"	d
stv_s	d_ifacea.h	75;"	d
stv_size	d_ifacea.h	77;"	d
stv_t	d_ifacea.h	76;"	d
stvert_t	modelgen.h	/^} stvert_t;$/;"	t	typeref:struct:__anon225
stverts	gl_model.c	/^stvert_t	stverts[MAXALIASVERTS];$/;"	v
stverts	r_model.h	/^	int					stverts;$/;"	m	struct:aliashdr_s
styles	bspfile.h	/^	byte		styles[MAXLIGHTMAPS];$/;"	m	struct:__anon107
styles	gl_model.h	/^	byte				styles[MAXLIGHTMAPS];$/;"	m	struct:msurface_s
styles	r_model.h	/^	byte				styles[MAXLIGHTMAPS];$/;"	m	struct:msurface_s
sub_active	mosdm.c	/^int sub_active = 0;$/;"	v
sub_active	mvd_cam.h	/^	int						sub_active;$/;"	m	struct:mvd_menu_s
sub_menu	new_menu.c	/^	struct MS_Popup_Entry *sub_menu;$/;"	m	struct:MS_Popup_Entry	typeref:struct:MS_Popup_Entry::MS_Popup_Entry	file:
sub_pe	mosdm.c	/^int sub_pe = 0;$/;"	v
sub_pe_plane	mosdm.c	/^char sub_pe_plane[3]= "xyz";$/;"	v
sub_pe_plane_select	mosdm.c	/^int sub_pe_plane_select = 0;$/;"	v
sub_track	mosdm.c	/^int sub_track = 0;$/;"	v
sub_track_origin	mosdm.c	/^int sub_track_origin = 0;$/;"	v
submodels	gl_model.h	/^	dmodel_t			*submodels;$/;"	m	struct:model_s
submodels	r_model.h	/^	dmodel_t			*submodels;$/;"	m	struct:model_s
subpatt_fnc	parser.h	/^	subpatterns_report_fnc	subpatt_fnc;$/;"	m	struct:__anon242
subpatterns_report_fnc	parser.h	/^typedef void (* subpatterns_report_fnc) (const char* str, int* offsets, int matches);$/;"	t
subtype	new_menu.c	/^	int		subtype;$/;"	m	struct:menu_ct	file:
super	ez_button.h	/^	ez_control_t			super;				\/\/ The super class.$/;"	m	struct:ez_button_s
super	ez_label.h	/^	ez_control_t			super;						\/\/ Super class.$/;"	m	struct:ez_label_s
super	ez_scrollbar.h	/^	ez_control_t				super;				\/\/ The super class.$/;"	m	struct:ez_scrollbar_s
super	ez_scrollpane.h	/^	ez_control_t				super;				\/\/ The super class.$/;"	m	struct:ez_scrollpane_s
super	ez_slider.h	/^	ez_control_t			super;				\/\/ The super class.$/;"	m	struct:ez_slider_s
super	ez_window.h	/^	ez_control_t			super;				\/\/ The super class.$/;"	m	struct:ez_window_s
support_teams	EX_browser.h	/^	qbool support_teams; \/\/ is server support team per player$/;"	m	struct:server_data_s
suppress	teamplay.c	/^static qbool suppress;$/;"	v	file:
surf	d_iface.h	/^	msurface_t	*surf;		\/\/ description for surface to generate$/;"	m	struct:__anon144
surf_max	r_edge.c	/^surf_t	*surfaces, *surface_p, *surf_max;$/;"	v
surf_s	r_shared.h	/^typedef struct surf_s {$/;"	s
surf_t	r_shared.h	/^} surf_t;$/;"	t	typeref:struct:surf_s
surface	mgraph.h	/^	uchar		*surface;			\/* Pointer to bitmap surface		*\/$/;"	m	struct:__anon211
surface	mgraph.h	/^	void	*surface;		\/* Pointer to active device surface			*\/$/;"	m	struct:__anon218
surface_p	r_edge.c	/^surf_t	*surfaces, *surface_p, *surf_max;$/;"	v
surfaces	gl_model.h	/^	msurface_t			*surfaces;$/;"	m	struct:model_s
surfaces	r_edge.c	/^surf_t	*surfaces, *surface_p, *surf_max;$/;"	v
surfaces	r_model.h	/^	msurface_t			*surfaces;$/;"	m	struct:model_s
surfcache_s	d_local.h	/^typedef struct surfcache_s {$/;"	s
surfcache_t	d_local.h	/^} surfcache_t;$/;"	t	typeref:struct:surfcache_s
surfdat	d_iface.h	/^	pixel_t		*surfdat;	\/\/ destination for generated surface$/;"	m	struct:__anon144
surfedges	gl_model.h	/^	int					*surfedges;$/;"	m	struct:model_s
surfedges	r_model.h	/^	int					*surfedges;$/;"	m	struct:model_s
surfheight	d_iface.h	/^	int			surfheight;	\/\/ in mipmapped texels$/;"	m	struct:__anon144
surfinf	gl_md3.h	/^	int surfinf;		\/\/ofs, surfs*skins$/;"	m	struct:__anon162
surfinf_t	gl_md3.h	/^} surfinf_t;$/;"	t	typeref:struct:__anon161
surfmip	d_iface.h	/^	int			surfmip;	\/\/ mipmapped ratio of surface texels \/ world pixels$/;"	m	struct:__anon144
surfmiptable	r_surf.c	/^static void	(*surfmiptable[4])(void) = {$/;"	v	file:
surfrowbytes	r_surf.c	/^int				surfrowbytes;	\/\/ used by ASM files$/;"	v
surfs	r_shared.h	/^	unsigned short	surfs[2];$/;"	m	struct:edge_s
surfscale	d_surf.c	/^float           surfscale;$/;"	v
surfwidth	d_iface.h	/^	int			surfwidth;	\/\/ in mipmapped texels$/;"	m	struct:__anon144
suspend_mouse	in_mac.c	/^qbool suspend_mouse = false;$/;"	v
sv	sv_init.c	/^server_t sv;				\/\/ local server$/;"	v
sv_allow_cheats	sv_ccmds.c	/^qbool	sv_allow_cheats = false;$/;"	v
sv_areanodes	sv_world.c	/^areanode_t	sv_areanodes[AREA_NODES];$/;"	v
sv_cheats	sv_ccmds.c	/^cvar_t		sv_cheats = {"sv_cheats", "0"};$/;"	v
sv_client	sv_main.c	/^client_t	*sv_client;					\/\/ current client$/;"	v
sv_client_state_t	server.h	/^} sv_client_state_t;$/;"	t	typeref:enum:__anon265
sv_downloadchunksperframe	sv_user.c	/^cvar_t  sv_downloadchunksperframe = {"sv_downloadchunksperframe", "2"};$/;"	v
sv_fastconnect	sv_main.c	/^cvar_t	sv_fastconnect = {"sv_fastconnect", "0"};$/;"	v
sv_floodprotmsg	sv_ccmds.c	/^cvar_t sv_floodprotmsg = {"floodprotmsg", ""};$/;"	v
sv_fraglogfile	sv_main.c	/^FILE	*sv_fraglogfile;$/;"	v
sv_frametime	sv_phys.c	/^double	sv_frametime;$/;"	v
sv_gravity	sv_phys.c	/^cvar_t	sv_gravity		 = {"sv_gravity", "800"};$/;"	v
sv_halflifebsp	sv_main.c	/^cvar_t	sv_halflifebsp = {"halflifebsp", "0", CVAR_ROM};$/;"	v
sv_highchars	sv_main.c	/^cvar_t	sv_highchars = {"sv_highchars", "1"};$/;"	v
sv_loadentfiles	sv_init.c	/^cvar_t	sv_loadentfiles = {"sv_loadentfiles", "0"};$/;"	v
sv_mapcheck	sv_user.c	/^cvar_t	sv_mapcheck	= {"sv_mapcheck", "1"};$/;"	v
sv_maxpitch	sv_user.c	/^cvar_t	sv_maxpitch = {"sv_maxpitch", "80", 0, OnChange_sv_maxpitch};$/;"	v
sv_maxrate	sv_main.c	/^cvar_t	sv_maxrate = {"sv_maxrate", "0"};$/;"	v
sv_maxtic	sv_main.c	/^cvar_t	sv_maxtic = {"sv_maxtic", "0.1"};	\/\/$/;"	v
sv_maxvelocity	sv_phys.c	/^cvar_t	sv_maxvelocity		 = {"sv_maxvelocity","2000"}; $/;"	v
sv_minpitch	sv_user.c	/^cvar_t	sv_minpitch = {"sv_minpitch", "-70", 0, OnChange_sv_minpitch};$/;"	v
sv_mintic	sv_main.c	/^cvar_t	sv_mintic = {"sv_mintic", "0.013"};	\/\/ bound the size of the$/;"	v
sv_nailhack	sv_ents.c	/^cvar_t	sv_nailhack	= {"sv_nailhack", "1"};$/;"	v
sv_nailmodel	sv_send.c	/^int		sv_nailmodel, sv_supernailmodel, sv_playermodel;$/;"	v
sv_numareanodes	sv_world.c	/^int			sv_numareanodes;$/;"	v
sv_outputbuf	sv_send.c	/^static char	sv_outputbuf[MAX_MSGLEN - 1];$/;"	v	file:
sv_pausable	sv_main.c	/^cvar_t	sv_pausable = {"pausable", "1"};$/;"	v
sv_paused	sv_main.c	/^cvar_t	sv_paused = {"sv_paused", "0", CVAR_ROM};$/;"	v
sv_phs	sv_main.c	/^cvar_t	sv_phs = {"sv_phs", "1"};$/;"	v
sv_player	sv_user.c	/^edict_t	*sv_player;$/;"	v
sv_playermodel	sv_send.c	/^int		sv_nailmodel, sv_supernailmodel, sv_playermodel;$/;"	v
sv_redirected	sv_send.c	/^redirect_t	sv_redirected;$/;"	v
sv_spectalk	sv_user.c	/^cvar_t	sv_spectalk = {"sv_spectalk", "1"};$/;"	v
sv_supernailmodel	sv_send.c	/^int		sv_nailmodel, sv_supernailmodel, sv_playermodel;$/;"	v
sv_timeout	sv_main.c	/^cvar_t	sv_timeout = {"sv_timeout","65"};		\/\/ seconds without any message$/;"	v
sv_zombietime	sv_main.c	/^cvar_t	sv_zombietime = {"sv_zombietime", "2"};	\/\/ seconds to sink messages$/;"	v
svc_bad	protocol.h	102;"	d
svc_bigkick	protocol.h	149;"	d
svc_cdtrack	protocol.h	143;"	d
svc_centerprint	protocol.h	133;"	d
svc_chokecount	protocol.h	164;"	d
svc_damage	protocol.h	123;"	d
svc_deltapacketentities	protocol.h	168;"	d
svc_disconnect	protocol.h	104;"	d
svc_download	protocol.h	161;"	d
svc_entgravity	protocol.h	170;"	d
svc_finale	protocol.h	141;"	d
svc_foundsecret	protocol.h	136;"	d
svc_fte_modellistshort	protocol.h	177;"	d
svc_fte_spawnbaseline2	protocol.h	180;"	d
svc_fte_spawnstatic2	protocol.h	126;"	d
svc_intermission	protocol.h	140;"	d
svc_killedmonster	protocol.h	135;"	d
svc_lightstyle	protocol.h	116;"	d
svc_maxspeed	protocol.h	169;"	d
svc_modellist	protocol.h	165;"	d
svc_muzzleflash	protocol.h	156;"	d
svc_nails	protocol.h	163;"	d
svc_nails2	protocol.h	174;"	d
svc_nop	protocol.h	103;"	d
svc_packetentities	protocol.h	167;"	d
svc_playerinfo	protocol.h	162;"	d
svc_print	protocol.h	110;"	d
svc_qizmovoice	protocol.h	181;"	d
svc_sellscreen	protocol.h	144;"	d
svc_serverdata	protocol.h	115;"	d
svc_serverinfo	protocol.h	172;"	d
svc_setangle	protocol.h	113;"	d
svc_setinfo	protocol.h	171;"	d
svc_setpause	protocol.h	130;"	d
svc_setview	protocol.h	107;"	d
svc_smallkick	protocol.h	148;"	d
svc_sound	protocol.h	108;"	d
svc_soundlist	protocol.h	166;"	d
svc_spawnbaseline	protocol.h	127;"	d
svc_spawnstatic	protocol.h	125;"	d
svc_spawnstaticsound	protocol.h	138;"	d
svc_stopsound	protocol.h	120;"	d
svc_strings	cl_parse.c	/^char *svc_strings[] = {$/;"	v
svc_stufftext	protocol.h	111;"	d
svc_temp_entity	protocol.h	129;"	d
svc_updateentertime	protocol.h	152;"	d
svc_updatefrags	protocol.h	118;"	d
svc_updateping	protocol.h	151;"	d
svc_updatepl	protocol.h	173;"	d
svc_updatestat	protocol.h	105;"	d
svc_updatestatlong	protocol.h	154;"	d
svc_updateuserinfo	protocol.h	158;"	d
svcmd_t	cl_cmd.c	/^} svcmd_t;$/;"	t	typeref:struct:__anon2	file:
svcmds	cl_cmd.c	/^svcmd_t svcmds[] = {$/;"	v
svgalib_inited	vid_svgalib.c	/^static int svgalib_inited = 0;$/;"	v	file:
svs	sv_init.c	/^serverPersistent_t	svs;	\/\/ persistent server info$/;"	v
svstats_t	server.h	/^} svstats_t;$/;"	t	typeref:struct:__anon267
svtcpstream_s	server.h	/^typedef struct svtcpstream_s {$/;"	s
svtcpstream_t	server.h	/^} svtcpstream_t;$/;"	t	typeref:struct:svtcpstream_s
synctype	gl_model.h	/^	synctype_t			synctype;$/;"	m	struct:aliashdr_s
synctype	gl_model.h	/^	synctype_t			synctype;$/;"	m	struct:model_s
synctype	modelgen.h	/^	synctype_t	synctype;$/;"	m	struct:__anon224
synctype	r_model.h	/^	synctype_t			synctype;$/;"	m	struct:model_s
synctype	spritegn.h	/^	synctype_t	synctype;$/;"	m	struct:__anon277
synctype_t	modelgen.h	/^typedef enum {ST_SYNC=0, ST_RAND } synctype_t;$/;"	t	typeref:enum:__anon221
synctype_t	spritegn.h	/^typedef enum {ST_SYNC=0, ST_RAND } synctype_t;$/;"	t	typeref:enum:__anon276
syntax	xsd_command.h	/^    char *syntax;$/;"	m	struct:xml_command_s
sys_dirent	sys.h	/^} sys_dirent; $/;"	t	typeref:struct:sys_dirent_s
sys_dirent_s	sys.h	/^typedef struct sys_dirent_s$/;"	s
sys_disableWinKeys	sys_win.c	/^cvar_t	sys_disableWinKeys = {"sys_disableWinKeys", "0", 0, OnChange_sys_disableWinKeys};$/;"	v
sys_extrasleep	sv_sys_unix.c	/^cvar_t	sys_extrasleep = {"sys_extrasleep","0"};$/;"	v
sys_extrasleep	sys_linux.c	/^cvar_t sys_extrasleep = {"sys_extrasleep", "0"};$/;"	v
sys_extrasleep	sys_mac.c	/^cvar_t sys_extrasleep = {"sys_extrasleep", "0"};$/;"	v
sys_highpriority	sys_win.c	/^cvar_t	sys_highpriority = {"sys_highpriority", "0", 0, OnChange_sys_highpriority};$/;"	v
sys_inactivesleep	sys_win.c	/^cvar_t	sys_inactivesleep = {"sys_inactiveSleep", "1"};$/;"	v
sys_inactivesound	snd_win.c	/^cvar_t sys_inactivesound = {"sys_inactiveSound", "0", CVAR_SILENT};$/;"	v
sys_nostdout	sv_sys_unix.c	/^cvar_t	sys_nostdout = {"sys_nostdout","0"};$/;"	v
sys_nostdout	sv_sys_win.c	/^cvar_t	sys_nostdout = {"sys_nostdout","0"};$/;"	v
sys_nostdout	sys_linux.c	/^cvar_t sys_nostdout = {"sys_nostdout", "0"};$/;"	v
sys_nostdout	sys_mac.c	/^cvar_t sys_nostdout = {"sys_nostdout", "0"};$/;"	v
sys_sleep	sv_sys_win.c	/^cvar_t	sys_sleep = {"sys_sleep", "8"};$/;"	v
sys_yieldcpu	sys_linux.c	/^cvar_t sys_yieldcpu = {"sys_yieldcpu", "0"};$/;"	v
sys_yieldcpu	sys_mac.c	/^cvar_t	sys_yieldcpu = {"sys_yieldcpu", "0"};$/;"	v
sys_yieldcpu	sys_win.c	/^cvar_t	sys_yieldcpu = {"sys_yieldcpu", "0"};$/;"	v
syscolchg	vid_win.c	/^static qbool	palette_changed, syscolchg, vid_mode_set, hide_window, pal_is_nostatic;$/;"	v	file:
sysramp	linux_glimp.c	/^static unsigned short sysramp[3][256]; \/\/ system gamma ramp$/;"	v	file:
system	match_tools.c	/^	qbool system;$/;"	m	struct:mapgroup_s	file:
system	match_tools.c	/^	qbool system;$/;"	m	struct:skygroup_s	file:
systemgammaramp	vid_glx.c	/^static unsigned short systemgammaramp[3][256];$/;"	v	file:
systemgammaramp	vid_wgl.c	/^static unsigned short systemgammaramp[3][256];$/;"	v	file:
systemgammaramp	win_glimp.c	/^static unsigned short systemgammaramp[3][256];$/;"	v	file:
szDenomx	mgraph.h	/^	m_int			szDenomx;		\/* Text x size denominator			*\/$/;"	m	struct:__anon215
szDenomy	mgraph.h	/^	m_int			szDenomy;		\/* Text y size denominator			*\/$/;"	m	struct:__anon215
szNumerx	mgraph.h	/^	m_int 			szNumerx;		\/* Text x size numerator			*\/$/;"	m	struct:__anon215
szNumery	mgraph.h	/^	m_int 			szNumery;		\/* Text y size numerator			*\/$/;"	m	struct:__anon215
t	d_iface.h	/^	float	s, t;$/;"	m	struct:__anon138
t	d_iface.h	/^	float	u, v, zi, s, t;$/;"	m	struct:polyvert_s
t	gl_local.h	/^	float	s, t;$/;"	m	struct:__anon153
t	gl_md3.h	/^	float		t;$/;"	m	struct:__anon158
t	gl_rsurf.c	/^	unsigned char l, t, w, h;$/;"	m	struct:glRect_s	file:
t	mgraph.h	/^	fix32_t		w,s,t;$/;"	m	struct:__anon200
t	modelgen.h	/^	int		t;$/;"	m	struct:__anon225
t_boolean	xsd_variable.h	/^    t_boolean,$/;"	e	enum:__anon307
t_enum	xsd_variable.h	/^    t_enum,         \/\/ "value1, value2, value_wih_spaces"$/;"	e	enum:__anon307
t_float	xsd_variable.h	/^    t_float,        \/\/ "min max"$/;"	e	enum:__anon307
t_integer	xsd_variable.h	/^    t_integer,      \/\/ "min max"$/;"	e	enum:__anon307
t_string	xsd_variable.h	/^    t_string        \/\/ "max length"$/;"	e	enum:__anon307
tab_order	ez_controls.h	/^	int						tab_order;				\/\/ The tab number of the control.$/;"	m	struct:ez_control_s
tablist	ez_controls.h	/^	ez_double_linked_list_t	tablist;				\/\/ A list with the controls ordered in their tabbing order.$/;"	m	struct:ez_tree_s
tadjust	d_vars.c	/^fixed16_t	sadjust, tadjust, bbextents, bbextentt;$/;"	v
tag	Ctrl_Tab.h	/^    void *tag;$/;"	m	struct:CTab_s
tag	document_rendering.h	/^    document_tag_a_t *tag;$/;"	m	struct:document_rendered_link_s
tag	document_rendering.h	/^    document_tag_section_t *tag;$/;"	m	struct:document_rendered_section_s
tag	ffmpeg.c	/^	unsigned int tag;$/;"	m	struct:AVCodecTag	file:
tag	mvd_utils.c	/^		char *tag;$/;"	m	struct:cam_id_s	file:
tag	xsd_document.h	/^    document_tag_t **tag;$/;"	m	struct:document_parser_specific_s
tagRAWHID	in_raw.h	/^typedef struct tagRAWHID {$/;"	s
tagRAWINPUT	in_raw.h	/^typedef struct tagRAWINPUT {$/;"	s
tagRAWINPUTDEVICE	in_raw.h	/^typedef struct tagRAWINPUTDEVICE {$/;"	s
tagRAWINPUTDEVICELIST	in_raw.h	/^typedef struct tagRAWINPUTDEVICELIST {$/;"	s
tagRAWINPUTHEADER	in_raw.h	/^typedef struct tagRAWINPUTHEADER {$/;"	s
tagRAWKEYBOARD	in_raw.h	/^typedef struct tagRAWKEYBOARD {$/;"	s
tagRAWMOUSE	in_raw.h	/^typedef struct tagRAWMOUSE {$/;"	s
tag_a	xsd_document.h	/^    tag_a,$/;"	e	enum:__anon303
tag_br	xsd_document.h	/^    tag_br,$/;"	e	enum:__anon303
tag_color	xsd_document.h	/^    tag_color,$/;"	e	enum:__anon303
tag_di	xsd_document.h	/^    tag_di$/;"	e	enum:__anon303
tag_dict	xsd_document.h	/^    tag_dict,$/;"	e	enum:__anon303
tag_em	xsd_document.h	/^    tag_em,$/;"	e	enum:__anon303
tag_h	xsd_document.h	/^    tag_h,$/;"	e	enum:__anon303
tag_hr	xsd_document.h	/^    tag_hr,$/;"	e	enum:__anon303
tag_img	xsd_document.h	/^    tag_img,$/;"	e	enum:__anon303
tag_li	xsd_document.h	/^    tag_li,$/;"	e	enum:__anon303
tag_list	xsd_document.h	/^    tag_list,$/;"	e	enum:__anon303
tag_p	xsd_document.h	/^    tag_p,$/;"	e	enum:__anon303
tag_pre	xsd_document.h	/^    tag_pre,$/;"	e	enum:__anon303
tag_section	xsd_document.h	/^    tag_section,$/;"	e	enum:__anon303
tag_sp	xsd_document.h	/^    tag_sp,$/;"	e	enum:__anon303
tag_text	xsd_document.h	/^    tag_text,$/;"	e	enum:__anon303
tags	xsd_document.h	/^    document_tag_t *tags;$/;"	m	struct:document_tag_a_s
tags	xsd_document.h	/^    document_tag_t *tags;$/;"	m	struct:document_tag_color_s
tags	xsd_document.h	/^    document_tag_t *tags;$/;"	m	struct:document_tag_em_s
tags	xsd_document.h	/^    document_tag_t *tags;$/;"	m	struct:document_tag_h_s
tags	xsd_document.h	/^    document_tag_t *tags;$/;"	m	struct:document_tag_img_s
tags	xsd_document.h	/^    document_tag_t *tags;$/;"	m	struct:document_tag_li_s
tags	xsd_document.h	/^    document_tag_t *tags;$/;"	m	struct:document_tag_p_s
tags	xsd_document.h	/^    document_tag_t *tags;$/;"	m	struct:document_tag_section_s
tail	ez_controls.h	/^	ez_dllist_node_t *tail;$/;"	m	struct:ez_double_linked_list_s
takedamage	progdefs.h	/^	float	takedamage;$/;"	m	struct:__anon253
tarOperationIndexFiles	vfs_tar.c	/^static int tarOperationIndexFiles(vfsfile_t *in, packfile_t *files) {$/;"	f	file:
tar_buffer	vfs_tar.h	/^union tar_buffer$/;"	u
tar_header	vfs_tar.h	/^struct tar_header$/;"	s
tarfile_s	vfs_tar.c	/^typedef struct tarfile_s$/;"	s	file:
tarfile_t	vfs_tar.c	/^} tarfile_t;$/;"	t	typeref:struct:tarfile_s	file:
tarfilefuncs	vfs_tar.c	/^searchpathfuncs_t tarfilefuncs = {$/;"	v
target	ez_scrollbar.h	/^	ez_control_t				*target;			\/\/ The target of the scrollbar if the parent isn't targeted (ext_flag & target_parent).$/;"	m	struct:ez_scrollbar_s
target	ez_scrollpane.h	/^	ez_control_t				*target;			\/\/ The target of the scrollbar if the parent isn't targeted (ext_flag & target_parent).$/;"	m	struct:ez_scrollpane_s
target	progdefs.h	/^	string_t	target;$/;"	m	struct:__anon253
target_parent	ez_scrollbar.h	/^	target_parent	= (1 << 0)$/;"	e	enum:ez_scrollbar_flags_e
targetname	progdefs.h	/^	string_t	targetname;$/;"	m	struct:__anon253
tcl_version	cl_tcl.c	/^cvar_t tcl_version = {"tcl_version", "", CVAR_ROM};$/;"	v
tcpfile_s	vfs_tcp.c	/^typedef struct tcpfile_s {$/;"	s	file:
tcpfile_t	vfs_tcp.c	/^} tcpfile_t;$/;"	t	typeref:struct:tcpfile_s	file:
tcpinbuffer	client.h	/^	byte		tcpinbuffer[1500];$/;"	m	struct:__anon122
tcpinlen	client.h	/^	int 		tcpinlen;$/;"	m	struct:__anon122
tcpstreams	server.h	/^	svtcpstream_t *tcpstreams;$/;"	m	struct:__anon269
td_lastframe	client.h	/^	float		td_lastframe;       \/\/\/< To meter out one message a frame.$/;"	m	struct:__anon122
td_startframe	client.h	/^	int			td_startframe;      \/\/\/< cls.framecount at start$/;"	m	struct:__anon122
td_starttime	client.h	/^	float		td_starttime;       \/\/\/< Realtime at second frame of timedemo.$/;"	m	struct:__anon122
te_data	nmenu_trackentity.c	/^struct te_data$/;"	s	file:
te_interval	nmenu_trackentity.c	/^double te_interval;$/;"	v
te_interval_p	nmenu_trackentity.c	/^double *te_interval_p = &te_interval;$/;"	v
te_running	nmenu_trackentity.c	/^int te_running;$/;"	v
te_show	nmenu_trackentity.c	/^int te_show;$/;"	v
te_vc	nmenu_trackentity.c	/^int te_vc = 0;$/;"	v
teadtjasdt	vid_x11.c	/^int teadtjasdt;$/;"	v
team	EX_browser.h	/^    char team[21];$/;"	m	struct:playerinfo_s
team	cl_main.c	/^cvar_t	team = {"team", "", CVAR_ARCHIVE|CVAR_USERINFO};$/;"	v
team	client.h	/^	char	team[MAX_INFO_STRING];$/;"	m	struct:player_info_s
team	hud_common.c	/^    sort_teams_info_t *team;$/;"	m	struct:sort_players_info_s	file:
team	progdefs.h	/^	float	team;$/;"	m	struct:__anon253
team	sbar.c	/^	char team[SCR_TEAM_T_MAXTEAMSIZE];$/;"	m	struct:__anon62	file:
team1	match_tools.c	/^	char team1[MAX_INFO_STRING];$/;"	m	struct:matchinfo_s	file:
team1	mvd_utils.c	/^	char team1[1024];$/;"	m	struct:mvd_gameinfo_s	file:
team1	mvd_utils_common.h	/^	char team1[1024];$/;"	m	struct:mvd_cg_info_s
team1count	match_tools.c	/^	int team1count;$/;"	m	struct:matchinfo_s	file:
team1names	match_tools.c	/^	char team1names[MAX_STATIC_STRING];	$/;"	m	struct:matchinfo_s	file:
team2	match_tools.c	/^	char team2[MAX_INFO_STRING];$/;"	m	struct:matchinfo_s	file:
team2	mvd_utils.c	/^	char team2[1024];$/;"	m	struct:mvd_gameinfo_s	file:
team2	mvd_utils_common.h	/^	char team2[1024];$/;"	m	struct:mvd_cg_info_s
team2count	match_tools.c	/^	int team2count;$/;"	m	struct:matchinfo_s	file:
team2names	match_tools.c	/^	char team2names[MAX_STATIC_STRING];	$/;"	m	struct:matchinfo_s	file:
team_t	sbar.c	/^} team_t;$/;"	t	typeref:struct:__anon62	file:
teamdeaths	fragstats.c	/^	int teamdeaths[MAX_CLIENTS];$/;"	m	struct:fragstats_s	file:
teamforceskins	skin.c	/^cvar_t  teamforceskins = {"teamforceskins", "0", 0, OnChangeSkinForcing};$/;"	v
teamforceskins_enum	menu_options.c	/^const char *teamforceskins_enum[] = { "off", "use player's name", "use player's userid", "set t1, t2, t3, ..." };$/;"	v
teamfortress	client.h	/^	qbool		teamfortress;		\/\/\/< true if gamedir is "fortress"$/;"	m	struct:__anon125
teamfrags	mvd_utils_common.h	/^	int teamfrags;			\/\/ frags are in cl.players structure$/;"	m	struct:mvd_info_s
teamfrags	mvd_utils_common.h	/^	int teamfrags;$/;"	m	struct:mvd_runs_s
teamhold_show_ga	hud_common.c	/^static qbool teamhold_show_ga		= false;$/;"	v	file:
teamhold_show_gl	hud_common.c	/^static qbool teamhold_show_gl		= false;$/;"	v	file:
teamhold_show_lg	hud_common.c	/^static qbool teamhold_show_lg		= false;$/;"	v	file:
teamhold_show_mh	hud_common.c	/^static qbool teamhold_show_mh		= false;$/;"	v	file:
teamhold_show_pent	hud_common.c	/^static qbool teamhold_show_pent		= false;$/;"	v	file:
teamhold_show_quad	hud_common.c	/^static qbool teamhold_show_quad		= false;$/;"	v	file:
teamhold_show_ra	hud_common.c	/^static qbool teamhold_show_ra		= false;$/;"	v	file:
teamhold_show_ring	hud_common.c	/^static qbool teamhold_show_ring		= false;$/;"	v	file:
teamhold_show_rl	hud_common.c	/^static qbool teamhold_show_rl		= false;$/;"	v	file:
teamhold_show_sng	hud_common.c	/^static qbool teamhold_show_sng		= false;$/;"	v	file:
teamhold_show_suit	hud_common.c	/^static qbool teamhold_show_suit		= false;$/;"	v	file:
teamhold_show_ya	hud_common.c	/^static qbool teamhold_show_ya		= false;$/;"	v	file:
teamkills	fragstats.c	/^	int teamkills[MAX_CLIENTS];$/;"	m	struct:fragstats_s	file:
teamkills	mvd_utils_common.h	/^	int teamkills;$/;"	m	struct:mvd_ks_w_s
teamplay	client.h	/^	int			teamplay;$/;"	m	struct:__anon125
teamplay	cmd.h	/^	int teamplay;			$/;"	m	struct:__anon129
teamplay	cvar.h	/^	qbool   teamplay;			\/\/ is this variable protected so that it can be only used within messaging?$/;"	m	struct:cvar_s
teamplay	match_tools.c	/^	int teamplay;$/;"	m	struct:matchinfo_s	file:
teamplay	sv_main.c	/^cvar_t	teamplay = {"teamplay", "0", CVAR_SERVERINFO};$/;"	v
teamplay	tp_triggers.c	/^	qbool teamplay;$/;"	m	struct:f_trigger_s	file:
teams	sbar.c	/^team_t teams[MAX_CLIENTS];$/;"	v
teams	stats_grid.h	/^	cell_weight_t	teams[TEAM_COUNT];		\/\/ The team weights for this cell.$/;"	m	struct:stats_cell_s
teams	stats_grid.h	/^	stats_team_t	teams[TEAM_COUNT];		\/\/ The teams (No more than 2). $/;"	m	struct:stats_weight_grid_s
teams	stats_grid.h	/^	stats_team_t	teams[TEAM_COUNT];$/;"	m	struct:__anon283
teams_hold_count	stats_grid.h	/^	int				teams_hold_count[TEAM_COUNT];$/;"	m	struct:stats_entity_s
teamsort	sbar.c	/^int teamsort[MAX_CLIENTS];$/;"	v
teamspawntelefrags	mvd_utils_common.h	/^	int teamspawntelefrags;$/;"	m	struct:mvd_info_s
tei_lavafire	vx_stuff.c	/^cvar_t		tei_lavafire = {"gl_surface_lava", "0", CVAR_ARCHIVE};$/;"	v
tei_slime	vx_stuff.c	/^cvar_t		tei_slime	 = {"gl_surface_slime", "0", CVAR_ARCHIVE};$/;"	v
tele_cams	mvd_cam.c	/^tele_plane_t tele_cams[1];$/;"	v
tele_plane_s	mvd_cam.h	/^typedef struct tele_plane_s {$/;"	s
tele_plane_t	mvd_cam.h	/^} tele_plane_t;$/;"	t	typeref:struct:tele_plane_s
teleport_time	progdefs.h	/^	float	teleport_time;$/;"	m	struct:__anon253
temp_demo_ready	cl_demo.c	/^static qbool temp_demo_ready = false;	\/\/ Indicates if the autorecorded match demo is done recording.$/;"	v	file:
temp_entities	protocol.h	/^temp_entity_list_t	temp_entities;$/;"	v
temp_entity_list_s	protocol.h	/^typedef struct temp_entity_list_s$/;"	s
temp_entity_list_t	protocol.h	/^} temp_entity_list_t;$/;"	t	typeref:struct:temp_entity_list_s
temp_entity_s	protocol.h	/^typedef struct temp_entity_s$/;"	s
temp_entity_t	protocol.h	/^} temp_entity_t;$/;"	t	typeref:struct:temp_entity_s
temp_log_ready	logging.c	/^static qbool temp_log_ready = false;$/;"	v	file:
tempmempool	zone2.c	/^mempool_t *tempmempool;$/;"	v
tempqwd_name	cl_demo.c	/^static char tempqwd_name[256] = {0}; \/\/ This file must be deleted after playback is finished.$/;"	v	file:
term_source	image.c	/^term_source (j_decompress_ptr cinfo)$/;"	f
test	mvd_cam.h	/^	int			test;$/;"	m	struct:tele_plane_s
test	splines.h	/^	void *test;$/;"	m	struct:spline
test	splines.h	/^	void *test;$/;"	m	struct:spline_point
test1	mvd_cam.h	/^	int			test1;$/;"	m	struct:tele_plane_s
testing_connection	EX_browser.c	/^int testing_connection = 0;$/;"	v
testorito	mvd_cam.c	/^cvar_t	testorito	=	{"testorito","0"};$/;"	v
testorito1	mvd_cam.c	/^cvar_t	testorito1	=	{"testorito1","0"};$/;"	v
testorito2	mvd_cam.c	/^cvar_t	testorito2	=	{"testorito2","0"};$/;"	v
testorito3	mvd_cam.c	/^cvar_t	testorito3	=	{"testorito3","0"};$/;"	v
testtime	mvd_cam.c	/^double testtime;$/;"	v
testtime1	mvd_cam.c	/^double cam_start_time,cam_stop_time,testtime1;$/;"	v
testtime_pointer	mvd_cam.c	/^double *testtime_pointer = &tt_m;$/;"	v
tevent	sys_win.c	/^static HANDLE	tevent;$/;"	v	file:
tex_depth	mac_prefs.h	/^	int	tex_depth;			\/\/ Menu selection # for GL texture depth$/;"	m	struct:__anon179
texindex	cl_screen.c	/^	byte		texindex;$/;"	m	struct:ci_player_s	file:
texindex	console.c	/^	byte		texindex;$/;"	m	struct:conpart_s	file:
texindex	gl_rpart.c	/^	byte		texindex;	$/;"	m	struct:particle_s	file:
texinfo	bspfile.h	/^	short		texinfo;$/;"	m	struct:__anon107
texinfo	gl_model.h	/^	mtexinfo_t			*texinfo;$/;"	m	struct:model_s
texinfo	gl_model.h	/^	mtexinfo_t			*texinfo;$/;"	m	struct:msurface_s
texinfo	r_model.h	/^	mtexinfo_t			*texinfo;$/;"	m	struct:model_s
texinfo	r_model.h	/^	mtexinfo_t			*texinfo;$/;"	m	struct:msurface_s
texinfo_s	bspfile.h	/^typedef struct texinfo_s$/;"	s
texinfo_t	bspfile.h	/^} texinfo_t;$/;"	t	typeref:struct:texinfo_s
texmode	gl_texture.c	/^	int			texmode;$/;"	m	struct:__anon28	file:
texnum	cl_screen.c	/^	int			texnum;$/;"	m	struct:ci_texture_s	file:
texnum	client.h	/^	int				texnum;			\/\/ texture num, used for 32bit skins, speed up$/;"	m	struct:__anon111
texnum	console.c	/^	int			texnum;$/;"	m	struct:cp_texture_s	file:
texnum	draw.h	/^	int			texnum;$/;"	m	struct:__anon145
texnum	gl_md3.h	/^	int texnum;$/;"	m	struct:__anon161
texnum	gl_rpart.c	/^	int			texnum;$/;"	m	struct:particle_texture_s	file:
texnum	gl_texture.c	/^	int			texnum;$/;"	m	struct:__anon28	file:
texnum	mvd_cam.h	/^	int			texnum;$/;"	m	struct:tele_plane_s
texpoints	mvd_cam.c	/^float	texpoints[4][2] = {{1.0,0.0},{1.0,1.0},{0.0,0.0},{0.0,1.0}};$/;"	v
texpoints	mvd_cam.c	/^float texpoints[4][2];$/;"	v
text	Ctrl_EditBox.h	/^	char text[MAX_EDITTEXT+1];$/;"	m	struct:CEditBox_s
text	cam_event_system.c	/^	char *text;$/;"	m	struct:event_list_entry_value	file:
text	cmd.h	/^	char	text[\/*MAX_COM_TOKEN*\/ 1024]; \/\/ this is used\/overwrite each time we using Cmd_MakeArgs()$/;"	m	struct:tokenizecontext_s
text	console.h	/^	wchar	*text;$/;"	m	struct:__anon136
text	document_rendering.h	/^    char *text;$/;"	m	struct:document_renered_s
text	ez_label.h	/^	char					*text;						\/\/ The text to be shown in the label.$/;"	m	struct:ez_label_s
text	new_menu.c	/^	char	*text;$/;"	m	struct:menu_ct	file:
text	vx_tracker.c	/^    char text[MAX_SCOREBOARDNAME+20];$/;"	m	struct:__anon93	file:
text	xsd_document.h	/^    char *text;$/;"	m	struct:document_tag_pre_s
text	xsd_document.h	/^    char *text;$/;"	m	struct:document_tag_text_s
text_alignment	ez_button.h	/^	ez_textalign_t			text_alignment;		\/\/ Text alignment.$/;"	m	struct:ez_button_s
text_buf	cmd.h	/^	char	*text_buf;$/;"	m	struct:cbuf_s
text_count	image.h	/^	size_t text_count;$/;"	m	struct:__anon166
text_end	cmd.h	/^	int		text_end;$/;"	m	struct:cbuf_s
text_function	new_menu.c	/^	char	*(*text_function)(void);$/;"	m	struct:menu_ct	file:
text_label	ez_button.h	/^	ez_label_t				*text_label;		\/\/ The buttons text label.$/;"	m	struct:ez_button_s
text_length	ez_label.h	/^	int						text_length;				\/\/ The length of the label text (excluding \\0).$/;"	m	struct:ez_label_s
text_lines	document_rendering.h	/^    int text_lines;$/;"	m	struct:document_renered_s
text_settings_t	mgraph.h	/^	} text_settings_t;$/;"	t	typeref:struct:__anon215
text_start	cmd.h	/^	int		text_start;$/;"	m	struct:cbuf_s
textchunks	image.h	/^	png_textp textchunks;$/;"	m	struct:__anon166
texture	d_iface.h	/^	texture_t	*texture;	\/\/ corrected for animating textures$/;"	m	struct:__anon144
texture	d_local.h	/^	struct texture_s	*texture;	\/\/ checked for animating textures$/;"	m	struct:surfcache_s	typeref:struct:surfcache_s::texture_s
texture	gl_framebuffer.h	/^	int		texture;			\/\/ The texture ID of the texture we're drawing to.$/;"	m	struct:fb_s
texture	gl_model.h	/^	texture_t			*texture;$/;"	m	struct:mtexinfo_s
texture	gl_rpart.c	/^	part_tex_t	texture;$/;"	m	struct:particle_tree_s	file:
texture	r_model.h	/^	texture_t			*texture;$/;"	m	struct:mtexinfo_s
texture	vx_coronas.c	/^	int texture;$/;"	m	struct:__anon89	file:
texture_extension_number	gl_texture.c	/^	   int			texture_extension_number = 1; \/\/ non static, sad but used in gl_framebufer.c too$/;"	v
texture_floor	d_edge.c	/^texture_t *texture_floor, *texture_wall;$/;"	v
texture_s	gl_model.h	/^typedef struct texture_s {$/;"	s
texture_s	r_model.h	/^typedef struct texture_s {$/;"	s
texture_t	gl_model.h	/^} texture_t;$/;"	t	typeref:struct:texture_s
texture_t	r_model.h	/^} texture_t;$/;"	t	typeref:struct:texture_s
texture_wall	d_edge.c	/^texture_t *texture_floor, *texture_wall;$/;"	v
texturebits	mac.h	/^	UInt16	texturebits;	\/\/ gl_texturebits.value (16|32)$/;"	m	struct:__anon173
texturechain	gl_model.h	/^	struct	msurface_s	*texturechain;$/;"	m	struct:msurface_s	typeref:struct:msurface_s::msurface_s
texturechain	gl_model.h	/^	struct msurface_s	*texturechain[2];		$/;"	m	struct:texture_s	typeref:struct:texture_s::msurface_s
texturechain_tail	gl_model.h	/^	struct msurface_s	**texturechain_tail[2];	$/;"	m	struct:texture_s	typeref:struct:texture_s::msurface_s
texturemins	gl_model.h	/^	short				texturemins[2];$/;"	m	struct:msurface_s
texturemins	r_model.h	/^	short				texturemins[2];$/;"	m	struct:msurface_s
textures	gl_model.h	/^	texture_t			**textures;$/;"	m	struct:model_s
textures	r_model.h	/^	texture_t			**textures;$/;"	m	struct:model_s
texwadlump	wad.c	/^static texwadlump_t texwadlump[TEXWAD_MAXIMAGES];$/;"	v	file:
texwadlump_t	wad.c	/^} texwadlump_t;$/;"	t	typeref:struct:__anon95	file:
tfrac	d_polyse.c	/^	int				sfrac, tfrac, light, zi;$/;"	m	struct:__anon10	file:
th	draw.h	/^	float		sl, tl, sh, th;$/;"	m	struct:__anon145
theParams	CarbonSndPlayDB.c	/^	SndDoubleBufferHeaderPtr		theParams;$/;"	m	struct:PerChanInfo	file:
think	progdefs.h	/^	func_t	think;$/;"	m	struct:__anon253
ti_clients	cl_screen.c	/^static ti_player_t ti_clients[MAX_CLIENTS];$/;"	v	file:
ti_player_s	cl_screen.c	/^typedef struct ti_player_s {$/;"	s	file:
ti_player_t	cl_screen.c	/^} ti_player_t;$/;"	t	typeref:struct:ti_player_s	file:
tile_center	ez_button.h	/^	tile_center	= (1 << 1),$/;"	e	enum:ez_button_flags_e
tile_edges	ez_button.h	/^	tile_edges	= (1 << 2)$/;"	e	enum:ez_button_flags_e
time	EX_FileList.h	/^    SYSTEMTIME      time;$/;"	m	struct:filedesc_s
time	EX_browser.h	/^    int time;$/;"	m	struct:playerinfo_s
time	cam_event_system.c	/^	double time;$/;"	m	struct:event_list_entry_value	file:
time	cam_new.c	/^	double time;$/;"	m	struct:CamSys_Spline_Data	file:
time	cl_screen.c	/^	double		time; \/\/ when we recive last update about this player, so we can guess disconnects and etc$/;"	m	struct:ti_player_s	file:
time	client.h	/^	double		time;				\/\/ this is the time value that the client$/;"	m	struct:__anon125
time	ffmpeg.c	/^	double		time;$/;"	m	struct:ffm	file:
time	ignore.c	/^	float time;$/;"	m	struct:flood_s	file:
time	in_win.c	/^	double time;	\/\/ timestamp$/;"	m	struct:msnap_s	file:
time	mvd_cam.h	/^	double	time;$/;"	m	struct:c_event_s
time	mvd_utils.c	/^	double	time;$/;"	m	struct:kill_s	file:
time	mvd_utils.c	/^	double time;$/;"	m	struct:death_s	file:
time	mvd_utils.c	/^	double time;$/;"	m	struct:spawn_s	file:
time	mvd_utils_common.h	/^	double		time;		\/\/ when did it happen ?$/;"	m	struct:mvd_event_s
time	mvd_utils_common.h	/^	double time;$/;"	m	struct:mvd_runs_s
time	nmenu_demo.c	/^	double	time;$/;"	m	struct:demo_bookmark	file:
time	progdefs.h	/^	float	time;$/;"	m	struct:__anon252
time	protocol.h	/^	float	time;	\/\/ Time of temp entity.$/;"	m	struct:temp_entity_s
time	render.h	/^	double			time;$/;"	m	struct:__anon257
time	server.h	/^	double		time;$/;"	m	struct:__anon264
time	server.h	/^	int			time;$/;"	m	struct:__anon268
time	splines.c	/^	double	time;$/;"	m	struct:spline_point	file:
time	sys.h	/^    SYSTEMTIME time;$/;"	m	struct:sys_dirent_s
time	vfs_tar.h	/^  time_t             time;$/;"	m	struct:attr_item
time	vx_tracker.c	/^    double time;$/;"	m	struct:__anon93	file:
time	winquake.h	/^    DWORD   time;$/;"	m	struct:__anon300
timedemo	client.h	/^	qbool		timedemo;$/;"	m	struct:__anon122
timelimit	EX_browser.h	/^    char timelimit [COL_TIMELIMIT + 1];$/;"	m	struct:column_s
timelimit	client.h	/^	int			timelimit;$/;"	m	struct:__anon125
timelimit	match_tools.c	/^	int timelimit;$/;"	m	struct:matchinfo_s	file:
timelimit	mvd_utils.c	/^	int timelimit;$/;"	m	struct:mvd_gameinfo_s	file:
timelimit	mvd_utils_common.h	/^	int timelimit;$/;"	m	struct:mvd_cg_info_s
timelimit	sv_main.c	/^cvar_t	timelimit = {"timelimit", "0", CVAR_SERVERINFO};$/;"	v
timeouttime	server.h	/^	float timeouttime;$/;"	m	struct:svtcpstream_s
timer	nmenu_demo.c	/^static struct timer *timer;$/;"	v	typeref:struct:timer	file:
timer	timer.c	/^struct timer$/;"	s	file:
timer	timer.h	/^struct timer$/;"	s
timer_entries	timer.c	/^static struct timer *timer_entries;$/;"	v	typeref:struct:timer	file:
timestamp	EX_browser_ping.c	/^    double timestamp;$/;"	m	struct:ICMP_header_s	file:
timestamp	client.h	/^	double					timestamp;	\/\/ The time stamp in question.$/;"	m	struct:demo_keyframe_s
timings	cl_main.c	/^double timings[NUMTIMINGS];$/;"	v
timings_idx	cl_main.c	/^int timings_idx;$/;"	v
title	document_rendering.h	/^    char *title;$/;"	m	struct:document_renered_s
title	fragstats.c	/^	char		*title;$/;"	m	struct:fragdef_s	file:
title	xsd_document.h	/^    char *title;$/;"	m	struct:document_tag_section_s
title	xsd_document.h	/^    char *title;$/;"	m	struct:xml_document_s
title_lines	document_rendering.h	/^    int title_lines;$/;"	m	struct:document_renered_s
titlebar	ez_window.h	/^	ez_control_t			*titlebar;			\/\/ The titlebar for the window.$/;"	m	struct:ez_window_s
tl	draw.h	/^	float		sl, tl, sh, th;$/;"	m	struct:__anon145
tl_x	stats_grid.h	/^	float			tl_x;					\/\/ Top left x position of the cell.$/;"	m	struct:stats_cell_s
tl_y	stats_grid.h	/^	float			tl_y;					\/\/ Top left y position of the cell.$/;"	m	struct:stats_cell_s
tmpstring	new_menu.c	/^char	tmpstring[128];$/;"	v
togglefnc	settings.h	/^	enum_togglefnc togglefnc;	\/\/ toggle function pointer; required for enum$/;"	m	struct:__anon272
tokenizecontext_s	cmd.h	/^typedef struct tokenizecontext_s$/;"	s
tokenizecontext_t	cmd.h	/^} tokenizecontext_t;$/;"	t	typeref:struct:tokenizecontext_s
tokens	pr_cmds.c	/^static char **tokens = NULL;$/;"	v	file:
took	mvd_utils_common.h	/^	int took;$/;"	m	struct:items_s
tookflag	teamplay.h	/^    int     tookflag;$/;"	m	struct:tvars_s
tookflags	teamplay.c	/^unsigned int tookflags = default_tookflags;$/;"	v
tookloc	teamplay.h	/^    char	tookloc[MAX_LOC_NAME];$/;"	m	struct:tvars_s
tookname	teamplay.h	/^	char	tookname[32];$/;"	m	struct:tvars_s
tooktime	teamplay.h	/^	double	tooktime;$/;"	m	struct:tvars_s
tooltip	new_menu.c	/^	char	*tooltip;$/;"	m	struct:menu_ct	file:
top	EX_browser.h	/^    int top;$/;"	m	struct:playerinfo_s
top	hud_common.c	/^    int  top, bottom;   \/\/ leader colours$/;"	m	struct:sort_teams_info_s	file:
top	mgraph.h	/^	m_int	top;$/;"	m	struct:__anon197
top	settings.h	/^	int top;					\/\/ distance of the setting from the top of the settings page$/;"	m	struct:__anon272
top_center	ez_button.h	/^	top_center,$/;"	e	enum:ez_textalign_e
top_edge_gap	ez_controls.h	/^	int						top_edge_gap;			\/\/ childs min size, we need to keep track of how far$/;"	m	struct:ez_control_s
top_left	ez_button.h	/^	top_left,$/;"	e	enum:ez_textalign_e
top_right	ez_button.h	/^	top_right,$/;"	e	enum:ez_textalign_e
topcolor	cl_main.c	/^cvar_t	topcolor = {"topcolor","", CVAR_ARCHIVE|CVAR_USERINFO};$/;"	v
topcolor	client.h	/^	int		topcolor;$/;"	m	struct:player_info_s
topcolor	sbar.c	/^	int topcolor, bottomcolor;$/;"	m	struct:__anon62	file:
topnode	render.h	/^	struct mnode_s			*topnode;		\/\/ for bmodels, first world node that splits bmodel, or NULL if not split$/;"	m	struct:entity_s	typeref:struct:entity_s::mnode_s
tos	EX_browser_ping.c	/^    unsigned char  tos;            \/\/ Type of service$/;"	m	struct:IP_header_s	file:
total_channels	snd_dma.c	/^unsigned int	total_channels;$/;"	v
total_len	EX_browser_ping.c	/^    unsigned short total_len;      \/\/ total length of the packet$/;"	m	struct:IP_header_s	file:
total_length	qsound.h	/^	unsigned int 	total_length;$/;"	m	struct:sfxcache_s
total_monsters	progdefs.h	/^	float	total_monsters;$/;"	m	struct:__anon252
total_secrets	progdefs.h	/^	float	total_secrets;$/;"	m	struct:__anon252
totaldeaths	fragstats.c	/^	int totaldeaths;$/;"	m	struct:fragstats_s	file:
totalfrags	fragstats.c	/^	int totalfrags;$/;"	m	struct:fragstats_s	file:
totalsize	zone2.h	/^	size_t totalsize;$/;"	m	struct:mempool_s
totalsuicides	fragstats.c	/^	int totalsuicides;$/;"	m	struct:fragstats_s	file:
totalteamkills	fragstats.c	/^	int totalteamkills;$/;"	m	struct:fragstats_s	file:
touch	progdefs.h	/^	func_t	touch;$/;"	m	struct:__anon253
touches	fragstats.c	/^	int touches;$/;"	m	struct:fragstats_s	file:
touchessolid	r_bsp.c	/^typedef enum {touchessolid, drawnode, nodrawnode} solidstate_t;$/;"	e	enum:__anon57	file:
touchindex	pmove.h	/^	int			touchindex[MAX_PHYSENTS];$/;"	m	struct:__anon245
tp_checkmodels	vx_stuff.c	/^checkmodel_t tp_checkmodels[]=$/;"	v
tp_forceTriggers	tp_triggers.c	/^cvar_t tp_forceTriggers = {"tp_forceTriggers", "0"};$/;"	v
tp_ib_name_backpack	tp_msgs.c	68;"	d	file:
tp_ib_name_enemy	tp_msgs.c	77;"	d	file:
tp_ib_name_eyes	tp_msgs.c	75;"	d	file:
tp_ib_name_flag	tp_msgs.c	76;"	d	file:
tp_ib_name_ga	tp_msgs.c	64;"	d	file:
tp_ib_name_gl	tp_msgs.c	62;"	d	file:
tp_ib_name_lg	tp_msgs.c	61;"	d	file:
tp_ib_name_mh	tp_msgs.c	67;"	d	file:
tp_ib_name_p	tp_msgs.c	73;"	d	file:
tp_ib_name_pent	tp_msgs.c	70;"	d	file:
tp_ib_name_pented	tp_msgs.c	81;"	d	file:
tp_ib_name_q	tp_msgs.c	72;"	d	file:
tp_ib_name_quad	tp_msgs.c	69;"	d	file:
tp_ib_name_quaded	tp_msgs.c	80;"	d	file:
tp_ib_name_r	tp_msgs.c	74;"	d	file:
tp_ib_name_ra	tp_msgs.c	66;"	d	file:
tp_ib_name_ring	tp_msgs.c	71;"	d	file:
tp_ib_name_rl	tp_msgs.c	60;"	d	file:
tp_ib_name_rlg	tp_msgs.c	82;"	d	file:
tp_ib_name_sng	tp_msgs.c	63;"	d	file:
tp_ib_name_team	tp_msgs.c	78;"	d	file:
tp_ib_name_teammate	tp_msgs.c	79;"	d	file:
tp_ib_name_ya	tp_msgs.c	65;"	d	file:
tp_items	teamplay.c	/^item_t	tp_items[] = {$/;"	v
tp_loadlocs	teamplay.c	/^cvar_t	tp_loadlocs = {"tp_loadlocs", "1"};$/;"	v
tp_msgtriggers	tp_triggers.c	/^cvar_t tp_msgtriggers = {"tp_msgtriggers", "1"};$/;"	v
tp_name_armor	teamplay.c	/^cvar_t	tp_name_armor = {"tp_name_armor", "armor"};$/;"	v
tp_name_armortype_ga	teamplay.c	/^cvar_t	tp_name_armortype_ga = {"tp_name_armortype_ga", "g"};$/;"	v
tp_name_armortype_ra	teamplay.c	/^cvar_t	tp_name_armortype_ra = {"tp_name_armortype_ra", "r"};$/;"	v
tp_name_armortype_ya	teamplay.c	/^cvar_t	tp_name_armortype_ya = {"tp_name_armortype_ya", "y"};$/;"	v
tp_name_at	teamplay.c	/^cvar_t	tp_name_at = {"tp_name_at", "at"};$/;"	v
tp_name_axe	teamplay.c	/^cvar_t	tp_name_axe = {"tp_name_axe", "axe"};$/;"	v
tp_name_backpack	teamplay.c	/^cvar_t	tp_name_backpack = {"tp_name_backpack", "pack"};$/;"	v
tp_name_cells	teamplay.c	/^cvar_t	tp_name_cells = {"tp_name_cells", "cells"};$/;"	v
tp_name_disp	teamplay.c	/^cvar_t	tp_name_disp = {"tp_name_disp", "dispenser"};$/;"	v
tp_name_enemy	teamplay.c	/^cvar_t	tp_name_enemy = {"tp_name_enemy", "enemy"};$/;"	v
tp_name_eyes	teamplay.c	/^cvar_t	tp_name_eyes = {"tp_name_eyes", "eyes"};$/;"	v
tp_name_flag	teamplay.c	/^cvar_t	tp_name_flag = {"tp_name_flag", "flag"};$/;"	v
tp_name_ga	teamplay.c	/^cvar_t	tp_name_ga = {"tp_name_ga", "ga"};$/;"	v
tp_name_gl	teamplay.c	/^cvar_t	tp_name_gl = {"tp_name_gl", "gl"};$/;"	v
tp_name_health	teamplay.c	/^cvar_t	tp_name_health = {"tp_name_health", "health"};$/;"	v
tp_name_lg	teamplay.c	/^cvar_t	tp_name_lg = {"tp_name_lg", "lg"};$/;"	v
tp_name_mh	teamplay.c	/^cvar_t	tp_name_mh = {"tp_name_mh", "mega"};$/;"	v
tp_name_nails	teamplay.c	/^cvar_t	tp_name_nails = {"tp_name_nails", "nails"};$/;"	v
tp_name_ng	teamplay.c	/^cvar_t	tp_name_ng = {"tp_name_ng", "ng"};$/;"	v
tp_name_none	teamplay.c	/^cvar_t	tp_name_none = {"tp_name_none", ""};$/;"	v
tp_name_nothing	teamplay.c	/^cvar_t	tp_name_nothing = {"tp_name_nothing", "nothing"};$/;"	v
tp_name_pent	teamplay.c	/^cvar_t	tp_name_pent = {"tp_name_pent", "pent"};$/;"	v
tp_name_pented	teamplay.c	/^cvar_t	tp_name_pented = {"tp_name_pented", "pented"};$/;"	v
tp_name_quad	teamplay.c	/^cvar_t	tp_name_quad = {"tp_name_quad", "quad"};$/;"	v
tp_name_quaded	teamplay.c	/^cvar_t	tp_name_quaded = {"tp_name_quaded", "quaded"};$/;"	v
tp_name_ra	teamplay.c	/^cvar_t	tp_name_ra = {"tp_name_ra", "ra"};$/;"	v
tp_name_ring	teamplay.c	/^cvar_t	tp_name_ring = {"tp_name_ring", "ring"};$/;"	v
tp_name_rl	teamplay.c	/^cvar_t	tp_name_rl = {"tp_name_rl", "rl"};$/;"	v
tp_name_rockets	teamplay.c	/^cvar_t	tp_name_rockets = {"tp_name_rockets", "rockets"};$/;"	v
tp_name_rune1	teamplay.c	/^cvar_t	tp_name_rune1 = {"tp_name_rune1", "resistance"};$/;"	v
tp_name_rune2	teamplay.c	/^cvar_t	tp_name_rune2 = {"tp_name_rune2", "strength"};$/;"	v
tp_name_rune3	teamplay.c	/^cvar_t	tp_name_rune3 = {"tp_name_rune3", "haste"};$/;"	v
tp_name_rune4	teamplay.c	/^cvar_t	tp_name_rune4 = {"tp_name_rune4", "regeneration"};$/;"	v
tp_name_sentry	teamplay.c	/^cvar_t	tp_name_sentry = {"tp_name_sentry", "sentry gun"};$/;"	v
tp_name_separator	teamplay.c	/^cvar_t	tp_name_separator = {"tp_name_separator", "\/"};$/;"	v
tp_name_sg	teamplay.c	/^cvar_t	tp_name_sg = {"tp_name_sg", "sg"};$/;"	v
tp_name_shells	teamplay.c	/^cvar_t	tp_name_shells = {"tp_name_shells", "shells"};$/;"	v
tp_name_sng	teamplay.c	/^cvar_t	tp_name_sng = {"tp_name_sng", "sng"};$/;"	v
tp_name_someplace	teamplay.c	/^cvar_t	tp_name_someplace = {"tp_name_someplace", "someplace"};$/;"	v
tp_name_ssg	teamplay.c	/^cvar_t	tp_name_ssg = {"tp_name_ssg", "ssg"};$/;"	v
tp_name_status_blue	teamplay.c	/^cvar_t	tp_name_status_blue = {"tp_name_status_blue", "$B"};$/;"	v
tp_name_status_green	teamplay.c	/^cvar_t	tp_name_status_green = {"tp_name_status_green", "$G"};$/;"	v
tp_name_status_red	teamplay.c	/^cvar_t	tp_name_status_red = {"tp_name_status_red", "$R"};$/;"	v
tp_name_status_white	teamplay.c	/^cvar_t	tp_name_status_white = {"tp_name_status_white", "$W"};$/;"	v
tp_name_status_yellow	teamplay.c	/^cvar_t	tp_name_status_yellow = {"tp_name_status_yellow", "$Y"};$/;"	v
tp_name_suit	teamplay.c	/^cvar_t	tp_name_suit = {"tp_name_suit", "suit"};$/;"	v
tp_name_teammate	teamplay.c	/^cvar_t	tp_name_teammate = {"tp_name_teammate", ""};$/;"	v
tp_name_weapon	teamplay.c	/^cvar_t	tp_name_weapon = {"tp_name_weapon", "weapon"};$/;"	v
tp_name_ya	teamplay.c	/^cvar_t	tp_name_ya = {"tp_name_ya", "ya"};$/;"	v
tp_need_cells	teamplay.c	/^cvar_t	tp_need_cells = {"tp_need_cells", "20"};$/;"	v
tp_need_ga	teamplay.c	/^cvar_t	tp_need_ga = {"tp_need_ga", "50"};$/;"	v
tp_need_health	teamplay.c	/^cvar_t	tp_need_health = {"tp_need_health", "50"};$/;"	v
tp_need_nails	teamplay.c	/^cvar_t	tp_need_nails = {"tp_need_nails", "40"};$/;"	v
tp_need_ra	teamplay.c	/^cvar_t	tp_need_ra = {"tp_need_ra", "120"};$/;"	v
tp_need_rl	teamplay.c	/^cvar_t	tp_need_rl = {"tp_need_rl", "1"};$/;"	v
tp_need_rockets	teamplay.c	/^cvar_t	tp_need_rockets = {"tp_need_rockets", "5"};$/;"	v
tp_need_shells	teamplay.c	/^cvar_t	tp_need_shells = {"tp_need_shells", "12"};$/;"	v
tp_need_weapon	teamplay.c	/^cvar_t	tp_need_weapon = {"tp_need_weapon", "35687"};$/;"	v
tp_need_ya	teamplay.c	/^cvar_t	tp_need_ya = {"tp_need_ya", "80"};$/;"	v
tp_pointpriorities	teamplay.c	/^cvar_t  tp_pointpriorities = {"tp_pointpriorities", "0"}; \/\/ FIXME: buggy$/;"	v
tp_soundtrigger	tp_triggers.c	/^cvar_t tp_soundtrigger = {"tp_soundtrigger", "~"};$/;"	v
tp_streak	vx_tracker.c	/^killing_streak_t	tp_streak[] = $/;"	v
tp_triggers	tp_triggers.c	/^cvar_t tp_triggers = {"tp_triggers", "1"};$/;"	v
tp_weapon_order	teamplay.c	/^cvar_t	tp_weapon_order = {"tp_weapon_order", "78654321"};$/;"	v
trace	cmodel.c	/^	trace_t	trace;$/;"	m	struct:__anon8	file:
trace	sv_world.c	/^	trace_t		trace;$/;"	m	struct:__anon66	file:
trace_allsolid	progdefs.h	/^	float	trace_allsolid;$/;"	m	struct:__anon252
trace_endpos	progdefs.h	/^	vec3_t	trace_endpos;$/;"	m	struct:__anon252
trace_ent	progdefs.h	/^	int	trace_ent;$/;"	m	struct:__anon252
trace_fraction	progdefs.h	/^	float	trace_fraction;$/;"	m	struct:__anon252
trace_inopen	progdefs.h	/^	float	trace_inopen;$/;"	m	struct:__anon252
trace_inwater	progdefs.h	/^	float	trace_inwater;$/;"	m	struct:__anon252
trace_plane_dist	progdefs.h	/^	float	trace_plane_dist;$/;"	m	struct:__anon252
trace_plane_normal	progdefs.h	/^	vec3_t	trace_plane_normal;$/;"	m	struct:__anon252
trace_startsolid	progdefs.h	/^	float	trace_startsolid;$/;"	m	struct:__anon252
trace_t	cmodel.h	/^} trace_t;$/;"	t	typeref:struct:__anon133
track	mvd_cam.h	/^	char track[32];$/;"	m	struct:c_curve_s
track_model	mosdm.c	/^char track_model[128];$/;"	v
track_modelname	mvd_cam.h	/^	char track_modelname[64];$/;"	m	struct:c_curve_s
track_name	menu_demo.c	/^char track_name[DEMO_PLAYLIST_NAME_MAX];$/;"	v
track_offset	nmenu_trackentity.c	/^vec3_t	tracked_entity_origin, track_offset;$/;"	v
track_origin	mvd_cam.h	/^	vec3_t track_origin[3];$/;"	m	struct:c_curve_s
tracked_entity	nmenu_trackentity.c	/^struct te_data tracked_entity;$/;"	v	typeref:struct:te_data
tracked_entity_origin	nmenu_trackentity.c	/^vec3_t	tracked_entity_origin, track_offset;$/;"	v
trackentity_menu	nmenu_trackentity.c	/^struct menu_s *trackentity_menu;$/;"	v	typeref:struct:menu_s
trackermsg	vx_tracker.c	/^trackmsg_t trackermsg[MAX_TRACKERMESSAGES];$/;"	v
trackmsg_t	vx_tracker.c	/^} trackmsg_t;$/;"	t	typeref:struct:__anon92	file:
trackname	menu_demo.c	/^	char trackname[DEMO_PLAYLIST_NAME_MAX];$/;"	m	struct:demo_playlist_s	file:
tracktype_s	vx_tracker.h	/^typedef enum tracktype_s $/;"	g
tracktype_t	vx_tracker.h	/^} tracktype_t;$/;"	t	typeref:enum:tracktype_s
trail_origin	client.h	/^	vec3_t			trail_origin;$/;"	m	struct:__anon115
trail_stop	gl_rpart.c	/^static vec3_t trail_stop;$/;"	v	file:
trail_type_s	render.h	/^typedef enum trail_type_s {$/;"	g
trail_type_t	render.h	/^} trail_type_t;$/;"	t	typeref:enum:trail_type_s
transformed_modelorg	d_edge.c	/^vec3_t		transformed_modelorg;$/;"	v
translate_names	gl_model.c	/^} translate_names[] = {$/;"	v	typeref:struct:__anon22	file:
translate_texture	gl_draw.c	/^int		translate_texture;$/;"	v
translations	client.h	/^	byte	translations[VID_GRADES*256];$/;"	m	struct:player_info_s
translations	server.h	/^	entity_translation_t	translations[512];	\/\/ translated numbers are tracked here$/;"	m	struct:__anon264
transliterate_char	textencoding.c	/^wchar *transliterate_char (wchar c)$/;"	f
triangles	gl_model.c	/^mtriangle_t	triangles[MAXALIASTRIS];$/;"	v
triangles	r_model.h	/^	int					triangles;$/;"	m	struct:aliashdr_s
trigger_edicts	sv_world.h	/^	link_t				trigger_edicts;$/;"	m	struct:areanode_s
trivertx_t	modelgen.h	/^} trivertx_t;$/;"	t	typeref:struct:__anon226
trivial_accept	render.h	/^	int						trivial_accept;$/;"	m	struct:entity_s
true	debug.h	268;"	d
true	debug.h	276;"	d
true	debug.h	283;"	d
true	q_shared.h	/^typedef enum {false, true} qbool;$/;"	e	enum:__anon254
true	q_shared.h	55;"	d
true_description	xsd_variable.h	/^            char *true_description;$/;"	m	struct:xml_variable_s::__anon308::__anon309
trueframetime	client.h	/^	double		trueframetime;	\/\/\/< Time since last frame.$/;"	m	struct:__anon122
try	keys.c	/^int try = 0;$/;"	v
ts	mgraph.h	/^	text_settings_t	ts;				\/* Text drawing attributes			*\/$/;"	m	struct:__anon216
tt	vx_tracker.c	/^	tracktype_t tt;$/;"	m	struct:__anon92	file:
tt_death	vx_tracker.h	/^	tt_death,		\/\/ Deaths, suicides, frags, teamkills... we may split this, but currently no need$/;"	e	enum:tracktype_s
tt_flag	vx_tracker.h	/^	tt_flag,		\/\/ Flag msgs$/;"	e	enum:tracktype_s
tt_m	mvd_cam.c	/^double tt_m = 0;$/;"	v
tt_streak	vx_tracker.h	/^	tt_streak,		\/\/ Streak msgs$/;"	e	enum:tracktype_s
ttl	EX_browser_ping.c	/^    unsigned char  ttl; $/;"	m	struct:IP_header_s	file:
turbsin	gl_warp.c	/^byte turbsin[TURBSINSIZE] = {$/;"	v
tv_lightnormalindex	d_ifacea.h	83;"	d
tv_size	d_ifacea.h	84;"	d
tv_v	d_ifacea.h	82;"	d
tvars_s	teamplay.h	/^typedef struct tvars_s$/;"	s
tvars_t	teamplay.h	/^} tvars_t;$/;"	t	typeref:struct:tvars_s
type	EX_browser.h	/^    enum {type_master, type_file, type_dummy} type;           \/\/ source type$/;"	m	struct:source_data_s	typeref:enum:source_data_s::__anon148
type	bspfile.h	/^	int		type;		\/\/ PLANE_X - PLANE_ANYZ ?remove? trivial to regenerate$/;"	m	struct:__anon103
type	cam_event_system.c	/^	int type;$/;"	m	struct:event_list_entry	file:
type	client.h	/^	dlighttype_t	type;$/;"	m	struct:__anon118
type	client.h	/^	dlighttype_t	type;$/;"	m	struct:customlight_s
type	cmodel.h	/^	byte	type;			\/\/ for texture axis selection and fast side tests$/;"	m	struct:mplane_s
type	d_iface.h	/^	ptype_t		type;$/;"	m	struct:particle_s
type	fragstats.c	/^	msgtype_t	type;$/;"	m	struct:fragmsg_s	file:
type	gl_model.h	/^	int					type;$/;"	m	struct:msprite2_s
type	gl_model.h	/^	int					type;$/;"	m	struct:msprite_s
type	gl_model.h	/^	modtype_t			type;$/;"	m	struct:model_s
type	gl_model.h	/^	spriteframetype_t	type;$/;"	m	struct:mspriteframedesc2_s
type	gl_model.h	/^	spriteframetype_t	type;$/;"	m	struct:mspriteframedesc_s
type	keys.c	/^	char *type;$/;"	m	struct:__anon37	file:
type	modelgen.h	/^	aliasframetype_t	type;$/;"	m	struct:__anon232
type	modelgen.h	/^	aliasskintype_t	type;$/;"	m	struct:__anon233
type	mvd_cam.h	/^	int						type;$/;"	m	struct:mvd_menu_s
type	mvd_cam.h	/^	int		type;$/;"	m	struct:c_curve_s
type	mvd_utils.c	/^	int		type;	\/\/0 - kill, 1 - selfkill$/;"	m	struct:kill_s	file:
type	mvd_utils_common.h	/^	int			type;			\/\/ what happened ?	0-spawn,1-death,2-kill,3-teamkill,4-took,5-powerup_end$/;"	m	struct:mvd_event_s
type	net.h	/^	netadrtype_t type;$/;"	m	struct:__anon239
type	new_menu.c	/^	int		type;$/;"	m	struct:menu_ct	file:
type	new_menu.c	/^	int x,y, type;$/;"	m	struct:MS_Popup_Menu_Menu	file:
type	parser.h	/^	expr_type type;	\/\/\/< type of an expression$/;"	m	struct:expr_val
type	pr_comp.h	/^	unsigned short	type;		\/\/ if DEF_SAVEGLOBGAL bit is set$/;"	m	struct:__anon249
type	protocol.h	/^	int		type;	\/\/ Type of temp entity.$/;"	m	struct:temp_entity_s
type	r_model.h	/^	aliasframetype_t	type;$/;"	m	struct:maliasframedesc_s
type	r_model.h	/^	aliasskintype_t		type;$/;"	m	struct:__anon259
type	r_model.h	/^	int					type;$/;"	m	struct:msprite_s
type	r_model.h	/^	modtype_t			type;$/;"	m	struct:model_s
type	r_model.h	/^	spriteframetype_t	type;$/;"	m	struct:mspriteframedesc_s
type	r_part.c	/^	ptype_t		type;$/;"	m	struct:particle_s	file:
type	settings.h	/^	setting_type type;	\/\/ see above; always required$/;"	m	struct:__anon272
type	spritegn.h	/^	int			type;$/;"	m	struct:__anon277
type	spritegn.h	/^	spriteframetype_t	type;$/;"	m	struct:__anon282
type	sv_world.c	/^	int			type;$/;"	m	struct:__anon66	file:
type	vid_wgl.c	/^	modestate_t	type;$/;"	m	struct:__anon81	file:
type	vid_win.c	/^	modestate_t	type;$/;"	m	struct:__anon85	file:
type	vx_coronas.c	/^	coronatype_t type;$/;"	m	struct:__anon89	file:
type	wad.h	/^	char		type;$/;"	m	struct:__anon299
type	xsd_document.h	/^    document_tag_type_t type;   \/\/ nothing for this type$/;"	m	struct:xml_document_author_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_a_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_br_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_color_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_di_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_dict_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_em_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_h_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_hr_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_img_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_li_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_list_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_p_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_pre_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_section_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_sp_s
type	xsd_document.h	/^    document_tag_type_t type;$/;"	m	struct:document_tag_text_s
type_dummy	EX_browser.h	/^    enum {type_master, type_file, type_dummy} type;           \/\/ source type$/;"	e	enum:source_data_s::__anon148
type_file	EX_browser.h	/^    enum {type_master, type_file, type_dummy} type;           \/\/ source type$/;"	e	enum:source_data_s::__anon148
type_index	EX_FileList.h	/^    int             type_index;$/;"	m	struct:filedesc_s
type_master	EX_browser.h	/^    enum {type_master, type_file, type_dummy} type;           \/\/ source type$/;"	e	enum:source_data_s::__anon148
type_size	pr_edict.c	/^int type_size[8] = {1, sizeof(void *) \/ 4, 1 ,3, 1, 1, sizeof(void *) \/ 4, sizeof(void *) \/ 4};$/;"	v
typeflag	vfs_tar.h	/^  char typeflag;                \/* 156 *\/$/;"	m	struct:tar_header
u	d_iface.h	/^	float	u, v, zi, color;$/;"	m	struct:__anon141
u	d_iface.h	/^	float	u, v, zi, s, t;$/;"	m	struct:polyvert_s
u	d_iface.h	/^	float	u, v;$/;"	m	struct:__anon138
u	d_iface.h	/^	int		u, v;$/;"	m	struct:__anon143
u	d_local.h	/^	int					u, v, count;$/;"	m	struct:sspan_s
u	r_rast.c	/^	float	u,v;$/;"	m	struct:__anon60	file:
u	r_shared.h	/^	fixed16_t		u;$/;"	m	struct:edge_s
u	r_shared.h	/^	int				u, v, count;$/;"	m	struct:espan_s
u_step	r_shared.h	/^	fixed16_t		u_step;$/;"	m	struct:edge_s
ubasestep	d_edge.c	/^int			ubasestep, errorterm, erroradjustup, erroradjustdown;$/;"	v
uchar	debug.h	/^typedef unsigned char   uchar;$/;"	t
ucmd_t	sv_user.c	/^} ucmd_t;$/;"	t	typeref:struct:__anon65	file:
ucmds	sv_user.c	/^ucmd_t ucmds[] = {$/;"	v
uiWheelMessage	in_win.c	/^unsigned int uiWheelMessage;$/;"	v
uid	vfs_tar.h	/^  char uid[8];                  \/* 108 *\/$/;"	m	struct:tar_header
uint	debug.h	/^typedef unsigned int    uint;$/;"	t
ulButtons	in_raw.h	/^		ULONG ulButtons;$/;"	m	union:tagRAWMOUSE::__anon168
ulExtraInformation	in_raw.h	/^	ULONG ulExtraInformation;$/;"	m	struct:tagRAWMOUSE
ulRawButtons	in_raw.h	/^	ULONG ulRawButtons;$/;"	m	struct:tagRAWMOUSE
ulong	debug.h	/^typedef unsigned long   ulong;$/;"	t
uname	vfs_tar.h	/^  char uname[32];               \/* 265 *\/$/;"	m	struct:tar_header
underwatertexture	gl_rmain.c	/^int			underwatertexture, detailtexture;	$/;"	v
uninstall_grabs	linux_glimp.c	/^static void uninstall_grabs(void)$/;"	f	file:
uninstall_grabs	vid_glx.c	/^static void uninstall_grabs(void) {$/;"	f	file:
unique	EX_browser.h	/^    int unique;                         \/\/ order in file (for sorting)$/;"	m	struct:source_data_s
unlink	q_shared.h	41;"	d
unzoomedfov	cl_screen.c	/^float	unzoomedfov;$/;"	v
unzoomedsensitivity	cl_screen.c	/^float	unzoomedsensitivity;$/;"	v
up	client.h	/^	qbool forward, back, left, right, jump, attack, up, down;$/;"	m	struct:__anon126
up	gl_model.h	/^	float				up, down, left, right;$/;"	m	struct:mspriteframe_s
up	r_model.h	/^	float				up, down, left, right;$/;"	m	struct:mspriteframe_s
up	teamplay.h	/^	vec3_t	up;$/;"	m	struct:item_vis_s
update_function	new_menu.c	/^	void	(*update_function)(struct menu_ct *self);$/;"	m	struct:menu_ct	file:
update_function	new_menu.c	/^	void	(*update_function)(struct menu_s *self);$/;"	m	struct:menu_s	file:
update_vsync	vid_wgl.c	/^static qbool update_vsync = true;$/;"	v	file:
updating_sources	EX_browser_sources.c	/^int updating_sources = 0;$/;"	v
upload	client.h	/^	FILE		*upload;$/;"	m	struct:__anon122
upload	server.h	/^	FILE		*upload;$/;"	m	struct:client_s
upload_pos	client.h	/^	int			upload_pos;$/;"	m	struct:__anon122
upload_size	client.h	/^	int			upload_size;$/;"	m	struct:__anon122
uploadfn	server.h	/^	char		uploadfn[MAX_QPATH];$/;"	m	struct:client_s
uploadname	client.h	/^	char		uploadname[MAX_OSPATH];$/;"	m	struct:__anon122
uploadpercent	client.h	/^	int			uploadpercent;$/;"	m	struct:__anon122
uploadrate	client.h	/^	int			uploadrate;$/;"	m	struct:__anon122
upmove	protocol.h	/^	short	forwardmove, sidemove, upmove;$/;"	m	struct:usercmd_s
url	Ctrl_PageViewer.h	/^    char *url;$/;"	m	struct:CPageViewer_page_s
usButtonData	in_raw.h	/^			USHORT usButtonData;$/;"	m	struct:tagRAWMOUSE::__anon168::__anon169
usButtonFlags	in_raw.h	/^			USHORT usButtonFlags;$/;"	m	struct:tagRAWMOUSE::__anon168::__anon169
usFlags	in_raw.h	/^	USHORT usFlags;$/;"	m	struct:tagRAWMOUSE
usUsage	in_raw.h	/^	USHORT usUsage;$/;"	m	struct:tagRAWINPUTDEVICE
usUsagePage	in_raw.h	/^	USHORT usUsagePage;$/;"	m	struct:tagRAWINPUTDEVICE
use	progdefs.h	/^	func_t	use;$/;"	m	struct:__anon253
useDirectDraw	vid_win.c	/^qbool	useWinDirect = true, useDirectDraw = true;$/;"	v
useNewPing	EX_browser_ping.c	/^qbool useNewPing = false;$/;"	v
useWinDirect	vid_win.c	/^qbool	useWinDirect = true, useDirectDraw = true;$/;"	v
use_framebuffer	gl_framebuffer.c	/^qbool	use_framebuffer = false;$/;"	v
use_images	ez_button.h	/^	use_images	= (1 << 0),$/;"	e	enum:ez_button_flags_e
use_m_smooth	in_win.c	/^qbool use_m_smooth = false;$/;"	v
used	gl_mesh.c	/^qbool	used[8192];$/;"	v
user	zone.c	/^	cache_user_t			*user;$/;"	m	struct:cache_system_s	file:
usercmd_s	protocol.h	/^typedef struct usercmd_s {$/;"	s
usercmd_t	protocol.h	/^} usercmd_t;$/;"	t	typeref:struct:usercmd_s
userdir_type	fs.c	/^int		userdir_type = -1;$/;"	v
userdirfile	fs.c	/^char	userdirfile[MAX_OSPATH] = {0};$/;"	v
userfb	client.h	/^	qbool		userfb;$/;"	m	struct:__anon125
userid	client.h	/^	int		userid;$/;"	m	struct:player_info_s
userid	server.h	/^	int			userid;				\/\/ identifying number$/;"	m	struct:client_s
userinfo	client.h	/^	char		userinfo[MAX_INFO_STRING];$/;"	m	struct:__anon122
userinfo	client.h	/^	char	userinfo[MAX_INFO_STRING];$/;"	m	struct:player_info_s
userinfo	server.h	/^	char		userinfo[MAX_INFO_STRING];	\/\/ infostring$/;"	m	struct:client_s
usermainbuttons_t	client.h	/^} usermainbuttons_t;$/;"	t	typeref:struct:__anon126
usersCallBack	CarbonSndPlayDB.c	/^	SndCallBackUPP 					usersCallBack;$/;"	m	struct:PerChanInfo	file:
ushort	debug.h	/^typedef unsigned short  ushort;$/;"	t
v	bspfile.h	/^	unsigned short	v[2];		\/\/ vertex numbers$/;"	m	struct:__anon106
v	d_iface.h	/^	float	u, v, zi, color;$/;"	m	struct:__anon141
v	d_iface.h	/^	float	u, v, zi, s, t;$/;"	m	struct:polyvert_s
v	d_iface.h	/^	float	u, v;$/;"	m	struct:__anon138
v	d_iface.h	/^	int		u, v;$/;"	m	struct:__anon143
v	d_iface.h	/^	int		v[6];		\/\/ u, v, s, t, l, 1\/z$/;"	m	struct:finalvert_s
v	d_local.h	/^	int					u, v, count;$/;"	m	struct:sspan_s
v	gl_model.h	/^	unsigned short		v[2];$/;"	m	struct:medge_s
v	modelgen.h	/^	byte	v[3];$/;"	m	struct:__anon226
v	progs.h	/^	entvars_t	v;					\/\/ C exported fields from progs$/;"	m	struct:edict_s
v	r_local.h	/^	mvertex_t		*v[2];$/;"	m	struct:bedge_s
v	r_model.h	/^	unsigned short		v[2];$/;"	m	struct:medge_s
v	r_rast.c	/^	float	u,v;$/;"	m	struct:__anon60	file:
v	r_shared.h	/^	int				u, v, count;$/;"	m	struct:espan_s
vPage	vid_win.c	/^int		vPage;					\/\/ Current visible display page$/;"	v
v_angle	progdefs.h	/^	vec3_t	v_angle;$/;"	m	struct:__anon253
v_blend	cl_view.c	/^float		v_blend[4];		\/\/ rgba 0.0 - 1.0$/;"	v
v_bonusflash	cl_view.c	/^cvar_t	v_bonusflash = {"cl_bonusflash", "1"}; \/\/ 0$/;"	v
v_centermove	cl_view.c	/^cvar_t	v_centermove = {"v_centermove", "0.15"};$/;"	v
v_centerspeed	cl_view.c	/^cvar_t	v_centerspeed = {"v_centerspeed","500"};$/;"	v
v_contentblend	cl_view.c	/^cvar_t  v_contentblend = {"v_contentblend", "0.33"};$/;"	v
v_contrast	cl_view.c	/^cvar_t		v_contrast = {"gl_contrast", "1.0", CVAR_ARCHIVE};$/;"	v
v_contrast	cl_view.c	/^cvar_t		v_contrast = {"gl_contrast", "1.3", CVAR_ARCHIVE};$/;"	v
v_contrast	cl_view.c	/^cvar_t		v_contrast = {"sw_contrast", "1", CVAR_ARCHIVE};$/;"	v
v_damagecshift	cl_view.c	/^cvar_t	v_damagecshift = {"v_damagecshift", "0.33"};$/;"	v
v_dlightcshift	cl_view.c	/^cvar_t	v_dlightcshift = {"v_dlightcshift", "1"};$/;"	v
v_dmg_pitch	cl_view.c	/^float	v_dmg_time, v_dmg_roll, v_dmg_pitch;$/;"	v
v_dmg_roll	cl_view.c	/^float	v_dmg_time, v_dmg_roll, v_dmg_pitch;$/;"	v
v_dmg_time	cl_view.c	/^float	v_dmg_time, v_dmg_roll, v_dmg_pitch;$/;"	v
v_forward	progdefs.h	/^	vec3_t	v_forward;$/;"	m	struct:__anon252
v_gamma	cl_view.c	/^cvar_t		v_gamma = {"gl_gamma", "0.8", CVAR_ARCHIVE};$/;"	v
v_gamma	cl_view.c	/^cvar_t		v_gamma = {"gl_gamma", "1.0", CVAR_ARCHIVE};$/;"	v
v_gamma	cl_view.c	/^cvar_t		v_gamma = {"sw_gamma", "1", CVAR_ARCHIVE};$/;"	v
v_gunkick	cl_view.c	/^cvar_t	v_gunkick = {"v_gunkick", "0"};$/;"	v
v_idlescale	cl_view.c	/^cvar_t	v_idlescale = {"v_idlescale", "0", 0, Change_v_idle};$/;"	v
v_ipitch_cycle	cl_view.c	/^cvar_t	v_ipitch_cycle = {"v_ipitch_cycle", "1", 0, Change_v_idle};$/;"	v
v_ipitch_level	cl_view.c	/^cvar_t	v_ipitch_level = {"v_ipitch_level", "0.3", 0, Change_v_idle};$/;"	v
v_iroll_cycle	cl_view.c	/^cvar_t	v_iroll_cycle = {"v_iroll_cycle", "0.5", 0, Change_v_idle};$/;"	v
v_iroll_level	cl_view.c	/^cvar_t	v_iroll_level = {"v_iroll_level", "0.1", 0, Change_v_idle};$/;"	v
v_iyaw_cycle	cl_view.c	/^cvar_t	v_iyaw_cycle = {"v_iyaw_cycle", "2", 0, Change_v_idle};$/;"	v
v_iyaw_level	cl_view.c	/^cvar_t	v_iyaw_level = {"v_iyaw_level", "0.3", 0, Change_v_idle};$/;"	v
v_kickpitch	cl_view.c	/^cvar_t	v_kickpitch = {"v_kickpitch", "0.0"};$/;"	v
v_kickroll	cl_view.c	/^cvar_t	v_kickroll = {"v_kickroll", "0.0"};$/;"	v
v_kicktime	cl_view.c	/^cvar_t	v_kicktime = {"v_kicktime", "0.0"};$/;"	v
v_pentcshift	cl_view.c	/^cvar_t	v_pentcshift = {"v_pentcshift", "0.75"};$/;"	v
v_quadcshift	cl_view.c	/^cvar_t	v_quadcshift = {"v_quadcshift", "0.75"};$/;"	v
v_right	progdefs.h	/^	vec3_t	v_right;$/;"	m	struct:__anon252
v_ringcshift	cl_view.c	/^cvar_t	v_ringcshift = {"v_ringcshift", "0.75"};$/;"	v
v_scrollbar	ez_scrollpane.h	/^	ez_scrollbar_t				*v_scrollbar;		\/\/ The vertical scrollbar.$/;"	m	struct:ez_scrollpane_s
v_suitcshift	cl_view.c	/^cvar_t	v_suitcshift = {"v_suitcshift", "0.75"};$/;"	v
v_up	progdefs.h	/^	vec3_t	v_up;$/;"	m	struct:__anon252
v_viewheight	cl_view.c	/^cvar_t	v_viewheight = {"v_viewheight", "0"};$/;"	v
va	common.c	/^char *va (char *format, ...)$/;"	f
val	mvd_utils.c	/^	int val;$/;"	m	struct:bp_var_s	file:
val	teamplay.c	/^	char *val;$/;"	m	struct:locmacro_s	file:
validated	client.h	/^	qbool	validated;				\/\/ for authentication$/;"	m	struct:player_info_s
validsequence	client.h	/^	int			validsequence;		\/\/\/< this is the sequence number of the last good$/;"	m	struct:__anon125
value	cam_event_system.c	/^	double value;$/;"	m	struct:event_list_entry_value	file:
value	cmd.h	/^	char				*value;$/;"	m	struct:cmd_alias_s
value	cvar.h	/^	float	value;    			\/\/ may be set in Cvar_Set(), Cvar_Register(), Cvar_Create()$/;"	m	struct:cvar_s
value	mvd_cam.h	/^	double	value;$/;"	m	struct:c_event_s
value	mvd_utils_common.h	/^	float value;						\/\/mvd_info\/mvd_autotrack value$/;"	m	struct:mvd_new_info_s
value	mvd_utils_common.h	/^    float value;$/;"	m	struct:mvd_info_s
value	rulesets.c	/^	char *value;$/;"	m	struct:locked_cvar_s	file:
value	xsd_variable.h	/^    } value;$/;"	m	struct:xml_variable_s	typeref:union:xml_variable_s::__anon308
value_type	xsd_variable.h	/^    cvartype_t value_type;$/;"	m	struct:xml_variable_s
values	EX_browser.h	/^    char *keys[MAX_KEYS], *values[MAX_KEYS];$/;"	m	struct:server_data_s
values	cam_event_system.c	/^	struct linked_list *values;$/;"	m	struct:event_list_entry	typeref:struct:event_list_entry::linked_list	file:
values_count	cam_event_system.c	/^	int values_count;$/;"	m	struct:event_list_entry	file:
var	rulesets.c	/^	cvar_t *var;$/;"	m	struct:limited_cvar_max_s	file:
var	rulesets.c	/^	cvar_t *var;$/;"	m	struct:limited_cvar_min_s	file:
var	rulesets.c	/^	cvar_t *var;$/;"	m	struct:locked_cvar_s	file:
var2val_fnc	parser.h	/^	variable_val_fnc		var2val_fnc;$/;"	m	struct:__anon242
varfnc	parser.c	/^	variable_val_fnc varfnc;	\/\/ pointer to a function returning variable values$/;"	m	struct:__anon53	file:
variable	mvd_cam.h	/^	cvar_t					*variable;$/;"	m	struct:mvd_menu_s
variable	new_menu.c	/^	cvar_t	*variable;$/;"	m	struct:menu_ct	file:
variable_enum_value_s	xsd_variable.h	/^typedef struct variable_enum_value_s$/;"	s
variable_enum_value_t	xsd_variable.h	/^variable_enum_value_t;$/;"	t	typeref:struct:variable_enum_value_s
variable_val_fnc	parser.h	/^typedef expr_val (* variable_val_fnc) (const char* varname);$/;"	t
varname	settings.h	/^	const char*	varname;		\/\/ name of a non-static cvar_t, also used for command name for bind$/;"	m	struct:__anon272
varray_vertex	gl_rpart.c	/^static float varray_vertex[16];$/;"	v	file:
vars	teamplay.c	/^tvars_t vars;$/;"	v
vblsave	vid_mac.c	/^GLint vblsave;$/;"	v
vec3_origin	mathlib.c	/^vec3_t vec3_origin = {0, 0, 0};$/;"	v
vec3_t	mathlib.h	/^typedef vec_t vec3_t[3];$/;"	t
vec5_t	mathlib.h	/^typedef vec_t vec5_t[5];$/;"	t
vec_t	mathlib.h	/^typedef float vec_t;$/;"	t
vec_to_st	gl_warp.c	/^static int	vec_to_st[6][3] = {$/;"	v	file:
vecptr	mvd_cam.h	/^	vec_t					**vecptr;$/;"	m	struct:mvd_menu_s
vecs	bspfile.h	/^	float		vecs[2][4];		\/\/ [s\/t][xyz offset]$/;"	m	struct:texinfo_s
vecs	gl_model.h	/^	float				vecs[2][4];$/;"	m	struct:mtexinfo_s
vecs	r_model.h	/^	float				vecs[2][4];$/;"	m	struct:mtexinfo_s
vectoangles	cl_cam.c	/^void vectoangles(vec3_t vec, vec3_t ang) {$/;"	f
vector	progs.h	/^	float			vector[3];$/;"	m	union:eval_s
vel	console.c	/^	vec3_t		vel;$/;"	m	struct:conpart_s	file:
vel	d_iface.h	/^	vec3_t		vel;$/;"	m	struct:particle_s
vel	gl_rpart.c	/^	vec3_t		vel;$/;"	m	struct:particle_s	file:
vel	r_part.c	/^	vec3_t		vel;$/;"	m	struct:particle_s	file:
velocity	client.h	/^	vec3_t			velocity; \/\/ hack$/;"	m	struct:__anon115
velocity	client.h	/^	vec3_t		velocity;$/;"	m	struct:__anon112
velocity	pmove.h	/^	vec3_t		velocity;$/;"	m	struct:__anon245
velocity	progdefs.h	/^	vec3_t	velocity;$/;"	m	struct:__anon253
vem_curve_a	cam_new.c	/^float *vem_point_x, *vem_point_y, *vem_point_z, *vem_curve_r, *vem_curve_g, *vem_curve_b, *vem_curve_a;$/;"	v
vem_curve_b	cam_new.c	/^float *vem_point_x, *vem_point_y, *vem_point_z, *vem_curve_r, *vem_curve_g, *vem_curve_b, *vem_curve_a;$/;"	v
vem_curve_g	cam_new.c	/^float *vem_point_x, *vem_point_y, *vem_point_z, *vem_curve_r, *vem_curve_g, *vem_curve_b, *vem_curve_a;$/;"	v
vem_curve_r	cam_new.c	/^float *vem_point_x, *vem_point_y, *vem_point_z, *vem_curve_r, *vem_curve_g, *vem_curve_b, *vem_curve_a;$/;"	v
vem_move_spline_x	cam_new.c	/^float *vem_move_spline_x, *vem_move_spline_y, *vem_move_spline_z;$/;"	v
vem_move_spline_y	cam_new.c	/^float *vem_move_spline_x, *vem_move_spline_y, *vem_move_spline_z;$/;"	v
vem_move_spline_z	cam_new.c	/^float *vem_move_spline_x, *vem_move_spline_y, *vem_move_spline_z;$/;"	v
vem_point_time	cam_new.c	/^double *cem_starttime, *cem_stoptime, *vem_starttime, *vem_stoptime, *cem_point_time, *vem_point_time;$/;"	v
vem_point_x	cam_new.c	/^float *vem_point_x, *vem_point_y, *vem_point_z, *vem_curve_r, *vem_curve_g, *vem_curve_b, *vem_curve_a;$/;"	v
vem_point_y	cam_new.c	/^float *vem_point_x, *vem_point_y, *vem_point_z, *vem_curve_r, *vem_curve_g, *vem_curve_b, *vem_curve_a;$/;"	v
vem_point_z	cam_new.c	/^float *vem_point_x, *vem_point_y, *vem_point_z, *vem_curve_r, *vem_curve_g, *vem_curve_b, *vem_curve_a;$/;"	v
vem_resolution	cam_new.c	/^int *cem_resolution, *vem_resolution;$/;"	v
vem_starttime	cam_new.c	/^double *cem_starttime, *cem_stoptime, *vem_starttime, *vem_stoptime, *cem_point_time, *vem_point_time;$/;"	v
vem_stoptime	cam_new.c	/^double *cem_starttime, *cem_stoptime, *vem_starttime, *vem_stoptime, *cem_point_time, *vem_point_time;$/;"	v
vendor	mac.h	/^	UInt8			vendor;		\/\/ OpenGL Vendor flags			$/;"	m	struct:__anon174
vendor_string	tr_types.h	/^	char					vendor_string[MAX_STRING_CHARS];$/;"	m	struct:__anon286
verbose	vid_x11.c	/^static int verbose = 0;$/;"	v	file:
verify_response	auth.c	/^static qbool verify_response (int index, char *hash)$/;"	f	file:
version	EX_browser_ping.c	/^    unsigned int   version:4;      \/\/ Version of IP$/;"	m	struct:IP_header_s	file:
version	bspfile.h	/^	int			version;	$/;"	m	struct:__anon100
version	fragstats.c	/^	int			version;$/;"	m	struct:fragdef_s	file:
version	gl_md3.h	/^	int			version;$/;"	m	struct:__anon154
version	gl_model.h	/^	int					version;$/;"	m	struct:aliashdr_s
version	image.c	/^    char			version;$/;"	m	struct:pcx_s	file:
version	modelgen.h	/^	int			version;$/;"	m	struct:__anon224
version	pr_comp.h	/^	int		version;$/;"	m	struct:__anon251
version	spritegn.h	/^	int			version;$/;"	m	struct:__anon277
version	vfs_tar.h	/^  char version[2];              \/* 263 *\/$/;"	m	struct:tar_header
version_string	tr_types.h	/^	char					version_string[MAX_STRING_CHARS];$/;"	m	struct:__anon286
vertJust	mgraph.h	/^	m_int			vertJust;		\/* Vertical justification			*\/$/;"	m	struct:__anon215
vertexes	gl_model.h	/^	mvertex_t			*vertexes;$/;"	m	struct:model_s
vertexes	r_model.h	/^	mvertex_t			*vertexes;$/;"	m	struct:model_s
vertexlight	gl_rmain.c	/^vec3_t vertexlight;$/;"	v
vertexorder	gl_mesh.c	/^int		vertexorder[8192];$/;"	v
vertical	ez_scrollbar.h	/^	vertical	= 0,$/;"	e	enum:ez_orientation_s
verticalFieldOfView	r_main.c	/^float	verticalFieldOfView;$/;"	v
vertindex	gl_model.h	/^	int					vertindex[3];$/;"	m	struct:mtriangle_s
vertindex	modelgen.h	/^	int					vertindex[3];$/;"	m	struct:dtriangle_s
vertindex	r_model.h	/^	int					vertindex[3];$/;"	m	struct:mtriangle_s
verts	gl_model.h	/^	float				verts[4][VERTEXSIZE];		\/\/ variable sized (xyz s1t1 s2t2)$/;"	m	struct:glpoly_s
vfsTarHeaderType_t	vfs_tar.h	/^} vfsTarHeaderType_t;$/;"	t	typeref:enum:__anon293
vfs_tcp_list	vfs_tcp.c	/^tcpfile_t *vfs_tcp_list = NULL;$/;"	v
vfserrno_t	fs.h	/^} vfserrno_t;$/;"	t	typeref:enum:__anon150
vfsfile_s	fs.h	/^typedef struct vfsfile_s {$/;"	s
vfsfile_t	fs.h	/^} vfsfile_t;$/;"	t	typeref:struct:vfsfile_s
vfsgzipfile_t	vfs_gzip.c	/^} vfsgzipfile_t;$/;"	t	typeref:struct:__anon73	file:
vfsmmapfile_t	vfs_mmap.c	/^} vfsmmapfile_t;$/;"	t	typeref:struct:__anon74	file:
vfsosfile_t	vfs.h	/^} vfsosfile_t;$/;"	t	typeref:struct:__anon290
vfspack_t	vfs_pak.c	/^} vfspack_t;$/;"	t	typeref:struct:__anon77	file:
vfstarfile_t	vfs_tar.c	/^} vfstarfile_t;$/;"	t	typeref:struct:__anon78	file:
vfszip_t	vfs_zip.c	/^} vfszip_t;$/;"	t	typeref:struct:__anon79	file:
vid	cl_screen.c	/^viddef_t vid; \/\/ global video state$/;"	v
vidHeight	tr_types.h	/^	int						vidWidth, vidHeight;$/;"	m	struct:__anon286
vidWidth	tr_types.h	/^	int						vidWidth, vidHeight;$/;"	m	struct:__anon286
vid_3dfxgamma	vid_wgl.c	/^qbool vid_3dfxgamma = false;$/;"	v
vid_CGDevices	vid_mac.c	/^CGDirectDisplayID 	vid_CGDevices[MAX_VIDEODEVICES];$/;"	v
vid_borderless	tr_init.c	/^cvar_t	vid_borderless		= { "vid_borderless",		"0",	CVAR_ARCHIVE | CVAR_LATCH };$/;"	v
vid_canalttab	tr_types.h	/^	qbool   vid_canalttab;$/;"	m	struct:__anon287
vid_canalttab	vid_wgl.c	/^static qbool vid_canalttab = false;$/;"	v	file:
vid_config_x	vid_win.c	/^cvar_t		vid_config_x = {"vid_config_x", "800", CVAR_ARCHIVE};$/;"	v
vid_config_y	vid_win.c	/^cvar_t		vid_config_y = {"vid_config_y", "600", CVAR_ARCHIVE};$/;"	v
vid_conheight	vid_wgl.c	/^cvar_t      vid_conheight		 = {"vid_conheight",   "0", CVAR_NO_RESET, OnChange_vid_con_xxx}; \/\/ default is 0, so i can sort out is user specify conheight on cmd line or something$/;"	v
vid_conwidth	vid_wgl.c	/^cvar_t      vid_conwidth		 = {"vid_conwidth",  "640", CVAR_NO_RESET, OnChange_vid_con_xxx};$/;"	v
vid_curpal	vid_mac.c	/^unsigned char	vid_curpal[256*3];$/;"	v
vid_curpal	vid_wgl.c	/^unsigned char	vid_curpal[256*3];$/;"	v
vid_curpal	vid_win.c	/^unsigned char	vid_curpal[256*3];$/;"	v
vid_current_palette	vid_svgalib.c	/^static byte vid_current_palette[768];$/;"	v	file:
vid_currentprofile	vid_mac.c	/^video_profile_t vid_currentprofile, vid_newprofile;$/;"	v
vid_default	vid_wgl.c	/^int				vid_default = MODE_WINDOWED;$/;"	v
vid_default	vid_win.c	/^int			vid_default = MODE_WINDOWED;$/;"	v
vid_devices	vid_mac.c	/^video_device_t 	vid_devices[MAX_VIDEODEVICES];$/;"	v
vid_displayfrequency	vid_wgl.c	/^cvar_t		vid_displayfrequency = {"vid_displayfrequency", "75", CVAR_NO_RESET, OnChange_vid_displayfrequency};$/;"	v
vid_displayfrequency	vid_win.c	/^cvar_t		vid_displayfrequency = {"vid_displayfrequency", "75", CVAR_INIT};$/;"	v
vid_dpy	vid_glx.c	/^static Display *vid_dpy = NULL;$/;"	v	file:
vid_flashonactivity	tr_init.c	/^cvar_t  vid_flashonactivity = { "vid_flashonactivity",	"1", CVAR_ARCHIVE | CVAR_SILENT };$/;"	v
vid_flashonactivity	vid_wgl.c	/^cvar_t      vid_flashonactivity  = {"vid_flashonactivity",  "1", CVAR_ARCHIVE};$/;"	v
vid_flashonactivity	vid_win.c	/^cvar_t      vid_flashonactivity = {"vid_flashonactivity", "1", CVAR_ARCHIVE};$/;"	v
vid_forcerestoregamma	vid_wgl.c	/^cvar_t		vid_forcerestoregamma = {"vid_forcerestoregamma", "0"};$/;"	v
vid_forcerestoregamma	win_glimp.c	/^cvar_t	vid_forcerestoregamma = {"vid_forcerestoregamma", "0", CVAR_SILENT};$/;"	v
vid_fulldib_on_focus_mode	vid_win.c	/^static int		vid_fulldib_on_focus_mode;$/;"	v	file:
vid_fullscreen_mode	vid_win.c	/^cvar_t		vid_fullscreen_mode = {"vid_fullscreen_mode", "3", CVAR_ARCHIVE};$/;"	v
vid_gamma	vid_common_gl.c	/^float vid_gamma = 1.0;$/;"	v
vid_gamma_table	vid_common_gl.c	/^byte vid_gamma_table[256];$/;"	v
vid_gammaworks	linux_glimp.c	/^qbool vid_gammaworks      = false;$/;"	v
vid_gammaworks	vid_glx.c	/^qbool vid_gammaworks = false;$/;"	v
vid_gammaworks	vid_mac.c	/^qbool	vid_gammaworks = false;$/;"	v
vid_gammaworks	vid_wgl.c	/^qbool vid_gammaworks = false;$/;"	v
vid_gammaworks	win_glimp.c	/^qbool vid_gammaworks	  = false;$/;"	v
vid_hwgamma_enabled	linux_glimp.c	/^qbool vid_hwgamma_enabled = false;$/;"	v
vid_hwgamma_enabled	vid_glx.c	/^qbool vid_hwgamma_enabled = false;$/;"	v
vid_hwgamma_enabled	vid_mac.c	/^qbool	vid_hwgamma_enabled;$/;"	v
vid_hwgamma_enabled	vid_wgl.c	/^qbool vid_hwgamma_enabled = false;$/;"	v
vid_hwgamma_enabled	win_glimp.c	/^qbool vid_hwgamma_enabled = false;$/;"	v
vid_hwgammacontrol	tr_init.c	/^cvar_t  vid_hwgammacontrol	= { "vid_hwgammacontrol", 	"2",    CVAR_ARCHIVE | CVAR_SILENT };$/;"	v
vid_hwgammacontrol	vid_glx.c	/^cvar_t	vid_hwgammacontrol = {"vid_hwgammacontrol", "1"};$/;"	v
vid_hwgammacontrol	vid_mac.c	/^cvar_t	vid_hwgammacontrol = {"vid_hwgammacontrol","1", 0}; $/;"	v
vid_hwgammacontrol	vid_wgl.c	/^cvar_t		vid_hwgammacontrol	 = {"vid_hwgammacontrol",   "1"};$/;"	v
vid_initialized	vid_mac.c	/^qbool		vid_initialized = false;$/;"	v
vid_initialized	vid_wgl.c	/^static qbool	vid_initialized = false;$/;"	v	file:
vid_initialized	vid_win.c	/^static qbool	vid_initialized = false, vid_palettized;$/;"	v	file:
vid_last_swap_time	win_glimp.c	/^double	vid_last_swap_time;$/;"	v
vid_line	vid_wgl.c	/^static int	vid_line, vid_wmodes;$/;"	v	file:
vid_line	vid_win.c	/^static int	vid_line, vid_wmodes;$/;"	v	file:
vid_menudrawfn	menu.c	/^void (*vid_menudrawfn)(void);$/;"	v
vid_menudrawfn	vid_x11.c	/^void (*vid_menudrawfn)(void);$/;"	v
vid_menukeyfn	menu.c	/^void (*vid_menukeyfn)(int key);$/;"	v
vid_menukeyfn	vid_x11.c	/^void (*vid_menukeyfn)(int key);$/;"	v
vid_minimized	vid_glx.c	/^static int vid_minimized = 0;$/;"	v	file:
vid_mode	mac_prefs.h	/^	int	vid_mode;			\/\/ Menu selection # for the screen resolution$/;"	m	struct:__anon179
vid_mode	vid_glx.c	/^cvar_t	vid_mode = {"vid_mode", "0"};$/;"	v
vid_mode	vid_mac.c	/^cvar_t	vid_mode = {"vid_mode", "0", false};\/\/ Saved in prefs, not config (list generated for each device at runtime)$/;"	v
vid_mode	vid_svgalib.c	/^cvar_t vid_mode = {"vid_mode","5"};$/;"	v
vid_mode	vid_wgl.c	/^cvar_t		vid_mode			 = {"vid_mode", "-1", CVAR_NO_RESET, OnChange_vid_mode};	\/\/ Note that -1 is NO_MODE$/;"	v
vid_mode	vid_win.c	/^cvar_t		vid_mode = {"vid_mode","0"};$/;"	v
vid_mode_set	vid_win.c	/^static qbool	palette_changed, syscolchg, vid_mode_set, hide_window, pal_is_nostatic;$/;"	v	file:
vid_modenum	vid_wgl.c	/^int				vid_modenum = NO_MODE;$/;"	v
vid_modenum	vid_win.c	/^int			vid_modenum = NO_MODE;$/;"	v
vid_modes	vid_mac.c	/^video_mode_t 	vid_modes[MAX_VIDEODEVICES][MAX_DISPLAYMODES];$/;"	v
vid_newprofile	vid_mac.c	/^video_profile_t vid_currentprofile, vid_newprofile;$/;"	v
vid_nopageflip	vid_win.c	/^cvar_t		vid_nopageflip = {"vid_nopageflip", "0", CVAR_ARCHIVE};$/;"	v
vid_palettized	vid_win.c	/^static qbool	vid_initialized = false, vid_palettized;$/;"	v	file:
vid_realmode	vid_win.c	/^int			vid_testingmode, vid_realmode;$/;"	v
vid_redrawfull	vid_svgalib.c	/^cvar_t vid_redrawfull = {"vid_redrawfull","0"};$/;"	v
vid_ref	tr_init.c	/^cvar_t	vid_ref				= { "vid_ref",				"gl",	CVAR_ROM | CVAR_SILENT };$/;"	v
vid_ref	vid_glx.c	/^cvar_t	vid_ref = {"vid_ref", "gl", CVAR_ROM};$/;"	v
vid_ref	vid_svgalib.c	/^cvar_t vid_ref = {"vid_ref", "soft", CVAR_ROM};$/;"	v
vid_ref	vid_wgl.c	/^cvar_t		vid_ref				 = {"vid_ref",  "gl", CVAR_ROM};$/;"	v
vid_ref	vid_win.c	/^cvar_t		vid_ref = {"vid_ref", "soft", CVAR_ROM};$/;"	v
vid_ref	vid_x11.c	/^cvar_t vid_ref = {"vid_ref", "soft", CVAR_ROM};$/;"	v
vid_resetonswitch	vid_win.c	/^cvar_t		vid_resetonswitch = {"vid_resetonswitch", "0", CVAR_ARCHIVE};$/;"	v
vid_stretch_by_2	vid_win.c	/^cvar_t		vid_stretch_by_2 = {"vid_stretch_by_2", "1", CVAR_ARCHIVE};$/;"	v
vid_stretched	vid_win.c	/^static int		vid_stretched, windowed_mouse;$/;"	v	file:
vid_surfcache	vid_svgalib.c	/^static byte *vid_surfcache;$/;"	v	file:
vid_surfcache	vid_win.c	/^static byte		*vid_surfcache;$/;"	v	file:
vid_surfcache	vid_x11.c	/^static void *vid_surfcache;$/;"	v	file:
vid_surfcachesize	vid_win.c	/^static int		vid_surfcachesize;$/;"	v	file:
vid_surfcachesize	vid_x11.c	/^static int vid_surfcachesize;$/;"	v	file:
vid_testendtime	vid_win.c	/^double		vid_testendtime;$/;"	v
vid_testingmode	vid_win.c	/^int			vid_testingmode, vid_realmode;$/;"	v
vid_vsync	vid_glx.c	/^cvar_t	vid_vsync = {"vid_vsync", "0"};$/;"	v
vid_vsync	vid_mac.c	/^cvar_t	vid_vsync = {"vid_vsync", "0", true};\/\/ VBL sync$/;"	v
vid_vsync	vid_svgalib.c	/^cvar_t vid_vsync = {"vid_vsync","0",CVAR_ARCHIVE};$/;"	v
vid_vsync	vid_wgl.c	/^cvar_t	vid_vsync = {"vid_vsync", "0", 0, OnChange_vid_vsync};$/;"	v
vid_vsync_lag	win_glimp.c	/^double	vid_vsync_lag;$/;"	v
vid_vsync_on	win_glimp.c	/^qbool	vid_vsync_on;$/;"	v
vid_wassuspended	tr_types.h	/^	qbool	vid_wassuspended; \/\/ FIXME: probaly i can use cdsFullscreen instead of this...$/;"	m	struct:__anon287
vid_wassuspended	vid_wgl.c	/^static qbool vid_wassuspended = false;$/;"	v	file:
vid_window	vid_glx.c	/^static Window vid_window;$/;"	v	file:
vid_window_x	vid_win.c	/^cvar_t		vid_window_x = {"vid_window_x", "0", CVAR_ARCHIVE};$/;"	v
vid_window_y	vid_win.c	/^cvar_t		vid_window_y = {"vid_window_y", "0", CVAR_ARCHIVE};$/;"	v
vid_windowed_mode	vid_win.c	/^cvar_t		vid_windowed_mode = {"vid_windowed_mode", "0", CVAR_ARCHIVE};$/;"	v
vid_windowedmouse	menu.c	/^qbool vid_windowedmouse = true;$/;"	v
vid_wmodes	vid_wgl.c	/^static int	vid_line, vid_wmodes;$/;"	v	file:
vid_wmodes	vid_win.c	/^static int	vid_line, vid_wmodes;$/;"	v	file:
vid_xpos	tr_init.c	/^cvar_t	vid_xpos			= { "vid_xpos",				"3",	CVAR_ARCHIVE | CVAR_SILENT };$/;"	v
vid_ypos	tr_init.c	/^cvar_t	vid_ypos			= { "vid_ypos",				"22",	CVAR_ARCHIVE | CVAR_SILENT };$/;"	v
viddef_t	vid.h	/^} viddef_t;$/;"	t	typeref:struct:__anon294
video_codec	ffmpeg.c	/^	AVCodec		*video_codec;$/;"	m	struct:ffm	file:
video_codec_context	ffmpeg.c	/^	AVCodecContext	*video_codec_context;$/;"	m	struct:ffm	file:
video_device_t	mac.h	/^video_device_t;$/;"	t	typeref:struct:__anon174
video_mode_t	mac.h	/^video_mode_t;$/;"	t	typeref:struct:__anon175
video_profile_t	mac.h	/^video_profile_t;$/;"	t	typeref:struct:__anon173
video_ptr_t	mac.h	/^video_ptr_t;$/;"	t	typeref:struct:__anon176
video_restart	vid_mac.c	/^qbool 	video_restart = false;\/\/ don't re-intialize certain things$/;"	v
video_stream	ffmpeg.c	/^	AVStream	*video_stream;$/;"	m	struct:ffm	file:
vidmode_MajorVersion	linux_glimp.c	/^static int vidmode_MajorVersion = 0, vidmode_MinorVersion = 0; \/\/ major and minor of XF86VidExtensions$/;"	v	file:
vidmode_MinorVersion	linux_glimp.c	/^static int vidmode_MajorVersion = 0, vidmode_MinorVersion = 0; \/\/ major and minor of XF86VidExtensions$/;"	v	file:
vidmode_active	linux_glimp.c	/^static qbool vidmode_active = false;$/;"	v	file:
vidmode_active	vid_glx.c	/^static qbool vidmode_active = false;$/;"	v	file:
vidmode_ext	linux_glimp.c	/^qbool vidmode_ext = false;$/;"	v
vidmode_ext	vid_glx.c	/^static qbool vidmode_ext = false;$/;"	v	file:
vidmode_s	tr_init.c	/^typedef struct vidmode_s$/;"	s	file:
vidmode_t	tr_init.c	/^} vidmode_t;$/;"	t	typeref:struct:vidmode_s	file:
vidmodes	linux_glimp.c	/^static XF86VidModeModeInfo **vidmodes;$/;"	v	file:
vidmodes	vid_glx.c	/^static XF86VidModeModeInfo **vidmodes;$/;"	v	file:
viewPort	mgraph.h	/^	rect_t			viewPort;		\/* Viewport dimensions				*\/$/;"	m	struct:__anon216
viewPortOrg	mgraph.h	/^	point_t			viewPortOrg;	\/* Logical viewport origin			*\/$/;"	m	struct:__anon216
view_clipplanes	r_rast.c	/^clipplane_t	view_clipplanes[4];$/;"	v
view_enable_all	mosdm.c	/^int view_enable_all = 0;$/;"	v
view_frame	cl_view.c	/^frame_t			*view_frame;$/;"	v
view_in_progress	mvd_cam.c	/^int view_in_progress = -1;$/;"	v
view_info_strings	mosdm.c	/^char *view_info_strings[8] = {{"View"},{"Number"},{"Info"},{"Submenu"},{"Modifier"},{"Show"},{"Enable"},{"Close"}};$/;"	v
view_message	cl_view.c	/^player_state_t	view_message;$/;"	v
view_num	mosdm.c	/^int *view_num;$/;"	v
view_ofs	progdefs.h	/^	vec3_t	view_ofs;$/;"	m	struct:__anon253
view_oldpos1	mvd_cam.c	/^double view_oldpos1,view_oldpos2,view_oldpos3;$/;"	v
view_oldpos2	mvd_cam.c	/^double view_oldpos1,view_oldpos2,view_oldpos3;$/;"	v
view_oldpos3	mvd_cam.c	/^double view_oldpos1,view_oldpos2,view_oldpos3;$/;"	v
view_pnum	mosdm.c	/^int		*view_pnum;$/;"	v
view_popups	cam_new.c	/^struct MS_Popup_Menu_Menu **cam_popups, **view_popups;$/;"	v	typeref:struct:
view_pos	mvd_cam.c	/^vec3_t	cam_pos,view_pos,cam_angles,snd_cam_pos,snd_cam_view;$/;"	v
view_pos1	mvd_cam.c	/^double view_pos1,view_pos2,view_pos3;$/;"	v
view_pos2	mvd_cam.c	/^double view_pos1,view_pos2,view_pos3;$/;"	v
view_pos3	mvd_cam.c	/^double view_pos1,view_pos2,view_pos3;$/;"	v
view_show_all	mosdm.c	/^int view_show_all = 0;$/;"	v
view_splines	cam_new.c	/^struct CamSys_Spline *view_splines, *cam_splines, *selected_view_spline, *selected_cam_spline;$/;"	v	typeref:struct:CamSys_Spline
view_spnum	mosdm.c	/^int		view_spnum;$/;"	v
viewangles	client.h	/^	vec3_t		viewangles;		\/\/ Only for demos, not from server.$/;"	m	struct:__anon112
viewangles	client.h	/^	vec3_t		viewangles;$/;"	m	struct:__anon125
viewangles	render.h	/^	vec3_t		viewangles;$/;"	m	struct:__anon256
viewent	client.h	/^	centity_t	viewent;			\/\/\/< weapon model$/;"	m	struct:__anon125
viewheight	client.h	/^	float		viewheight;$/;"	m	struct:__anon125
vieworg	render.h	/^	vec3_t		vieworg;$/;"	m	struct:__anon256
vieworg	teamplay.h	/^	vec3_t	vieworg;$/;"	m	struct:item_vis_s
viewplayernum	client.h	/^	int			viewplayernum;		\/\/\/< either playernum or spec_track (in chase camera mode)$/;"	m	struct:__anon125
viewpoint	settings.h	/^	int viewpoint;		\/\/ where rendering start (internal)$/;"	m	struct:__anon273
views	mvd_cam.c	/^c_curve_t views[max_cameras];$/;"	v
virtual_height	ez_controls.h	/^	int						virtual_height;$/;"	m	struct:ez_control_s
virtual_height_min	ez_controls.h	/^	int						virtual_height_min;$/;"	m	struct:ez_control_s
virtual_width	ez_controls.h	/^	int						virtual_width;			\/\/ The virtual size of the control (scrollable area).$/;"	m	struct:ez_control_s
virtual_width_min	ez_controls.h	/^	int						virtual_width_min;		\/\/ The virtual min size for the control.$/;"	m	struct:ez_control_s
virtual_x	ez_controls.h	/^	int						virtual_x;				\/\/ The relative position in the virtual window that the "real" window is showing.$/;"	m	struct:ez_control_s
virtual_y	ez_controls.h	/^	int						virtual_y;$/;"	m	struct:ez_control_s
visdata	gl_model.h	/^	byte				*visdata;$/;"	m	struct:model_s
visdata	r_model.h	/^	byte				*visdata;$/;"	m	struct:model_s
visentlist_s	client.h	/^typedef struct visentlist_s {$/;"	s
visentlist_t	client.h	/^} visentlist_t;$/;"	t	typeref:struct:visentlist_s
visframe	gl_model.h	/^	int					visframe;					\/\/ node needs to be traversed if current$/;"	m	struct:mleaf_s
visframe	gl_model.h	/^	int					visframe;					\/\/ node needs to be traversed if current$/;"	m	struct:mnode_s
visframe	gl_model.h	/^	int					visframe;					\/\/ should be drawn when node is crossed$/;"	m	struct:msurface_s
visframe	r_model.h	/^	int					visframe;					\/\/ node needs to be traversed if current$/;"	m	struct:mleaf_s
visframe	r_model.h	/^	int					visframe;					\/\/ node needs to be traversed if current$/;"	m	struct:mnode_s
visframe	r_model.h	/^	int					visframe;					\/\/ should be drawn when node is crossed$/;"	m	struct:msurface_s
visframe	render.h	/^	int						visframe;		\/\/ last frame this entity was found in an active leaf. only used for static objects$/;"	m	struct:entity_s
visleafs	bspfile.h	/^	int			visleafs;		\/\/ not including the solid leaf 0$/;"	m	struct:__anon99
visleafs	cmodel.c	/^static int			visleafs;$/;"	v	file:
visofs	bspfile.h	/^	int			visofs;				\/\/ -1 = no visibility info$/;"	m	struct:__anon108
vkCode	winquake.h	/^    DWORD   vkCode;$/;"	m	struct:__anon300
vlight_highcut	vx_vertexlights.c	/^float vlight_highcut = 128;$/;"	v
vlight_lowcut	vx_vertexlights.c	/^float vlight_lowcut = 60;$/;"	v
vlight_pitch	vx_vertexlights.c	/^float vlight_pitch = 45;$/;"	v
vlight_yaw	vx_vertexlights.c	/^float vlight_yaw = 45;$/;"	v
vlighttable	vx_vertexlights.c	/^byte vlighttable[256][256];$/;"	v
vmode_t	vid_wgl.c	/^} vmode_t;$/;"	t	typeref:struct:__anon81	file:
vmode_t	vid_win.c	/^} vmode_t;$/;"	t	typeref:struct:__anon85	file:
vol	client.h	/^	int			vol;$/;"	m	struct:__anon110
vorbisProcs	snd_ov.c	/^static qlib_dllfunction_t vorbisProcs[] = {$/;"	v	file:
vorbis_CheckActive	snd_ov.c	/^qbool vorbis_CheckActive(void) $/;"	f
vorbis_FreeLibrary	snd_ov.c	/^void vorbis_FreeLibrary(void) {$/;"	f
vorbis_LoadLibrary	snd_ov.c	/^void vorbis_LoadLibrary(void) $/;"	f
vorbis_callback_close	snd_ov.c	/^vorbis_callback_close (void *datasource)$/;"	f	file:
vorbis_callback_read	snd_ov.c	/^vorbis_callback_read (void *ptr, size_t size, size_t nmemb,  $/;"	f	file:
vorbis_callback_seek	snd_ov.c	/^vorbis_callback_seek (void *datasource, ogg_int64_t offset, int whence)$/;"	f	file:
vorbis_callback_tell	snd_ov.c	/^vorbis_callback_tell (void *datasource)$/;"	f	file:
vpn	d_iface.h	/^	vec3_t			vup, vright, vpn;	\/\/ in worldspace$/;"	m	struct:__anon142
vpn	gl_rmain.c	/^vec3_t		vup, vpn, vright;$/;"	v
vpn	r_main.c	/^vec3_t	vpn, base_vpn;$/;"	v
vrect	render.h	/^	vrect_t		vrect;				\/\/ subwindow in video for refresh$/;"	m	struct:__anon256
vrect_s	vid.h	/^typedef struct vrect_s {$/;"	s
vrect_t	vid.h	/^} vrect_t;$/;"	t	typeref:struct:vrect_s
vrect_x_adj_shift20	render.h	/^	int			vrect_x_adj_shift20;	\/\/ (vrect.x + 0.5 - epsilon) << 20$/;"	m	struct:__anon256
vrectbottom	render.h	/^	int			vrectright, vrectbottom;	\/\/ right & bottom screen coords$/;"	m	struct:__anon256
vrectright	render.h	/^	int			vrectright, vrectbottom;	\/\/ right & bottom screen coords$/;"	m	struct:__anon256
vrectright_adj_shift20	render.h	/^	int			vrectright_adj_shift20;	\/\/ (vrectright + 0.5 - epsilon) << 20$/;"	m	struct:__anon256
vrectrightedge	render.h	/^	float		vrectrightedge;			\/\/ rightmost right edge we care about,$/;"	m	struct:__anon256
vres	image.c	/^    unsigned short	hres,vres;$/;"	m	struct:pcx_s	file:
vright	d_iface.h	/^	vec3_t			vup, vright, vpn;	\/\/ in worldspace$/;"	m	struct:__anon142
vright	gl_rmain.c	/^vec3_t		vup, vpn, vright;$/;"	v
vright	r_main.c	/^vec3_t	vright, base_vright;$/;"	v
vsnprintf	q_shared.c	/^int vsnprintf(char *buffer, size_t count, const char *format, va_list argptr)$/;"	f
vstartscan	d_edge.c	/^int			vstartscan;$/;"	v
vup	d_iface.h	/^	vec3_t			vup, vright, vpn;	\/\/ in worldspace$/;"	m	struct:__anon142
vup	gl_rmain.c	/^vec3_t		vup, vpn, vright;$/;"	v
vup	r_main.c	/^vec3_t	vup, base_vup;$/;"	v
vv_enable	mosdm.c	/^int *vv_enable;			\/\/ enable pointer$/;"	v
vv_point	mosdm.c	/^vec3_t	*vv_point;$/;"	v
vv_point_x	mosdm.c	/^vec_t	*vv_point_x,*vv_point_y,*vv_point_z;$/;"	v
vv_point_y	mosdm.c	/^vec_t	*vv_point_x,*vv_point_y,*vv_point_z;$/;"	v
vv_point_z	mosdm.c	/^vec_t	*vv_point_x,*vv_point_y,*vv_point_z;$/;"	v
vv_points	mosdm.c	/^vec_t *vv_points[60];$/;"	v
vv_rstart	mosdm.c	/^double *vv_rstart;$/;"	v
vv_rstop	mosdm.c	/^double *vv_rstop;$/;"	v
vv_show	mosdm.c	/^int	*vv_show;$/;"	v
vv_startt	mosdm.c	/^double *vv_startt;$/;"	v
vv_stopt	mosdm.c	/^double *vv_stopt;$/;"	v
vv_type	mosdm.c	/^int *vv_type;$/;"	v
vw_index	client.h	/^	byte		vw_index;$/;"	m	struct:__anon112
vw_model_name	client.h	/^	char		vw_model_name[MAX_VWEP_MODELS][MAX_QPATH];	\/\/\/< VWep support$/;"	m	struct:__anon125
vw_model_precache	client.h	/^	struct model_s	*vw_model_precache[MAX_VWEP_MODELS];	\/\/\/< VWep support$/;"	m	struct:__anon125	typeref:struct:__anon125::model_s
vwep_enabled	client.h	/^	qbool		vwep_enabled;$/;"	m	struct:__anon125
vxdamagecount	vx_stuff.c	/^int vxdamagecount;$/;"	v
vxdamagecount_oldhealth	vx_stuff.c	/^int vxdamagecount_oldhealth;$/;"	v
vxdamagecount_time	vx_stuff.c	/^int vxdamagecount_time;$/;"	v
vxdamagecountarmour	vx_stuff.c	/^int vxdamagecountarmour;$/;"	v
vxdamagecountarmour_oldhealth	vx_stuff.c	/^int vxdamagecountarmour_oldhealth;$/;"	v
vxdamagecountarmour_time	vx_stuff.c	/^int vxdamagecountarmour_time;$/;"	v
w	EX_browser.h	/^	int x, y, w, h;$/;"	m	struct:serverbrowser_window_s
w	gl_rsurf.c	/^	unsigned char l, t, w, h;$/;"	m	struct:glRect_s	file:
w	menu.c	/^	int w;$/;"	m	struct:menu_window_s	file:
w	mgraph.h	/^	fix32_t		w,s,t;$/;"	m	struct:__anon200
wDay	localtime.h	/^    int wDay;$/;"	m	struct:SYSTEMTIME_s
wDayOfWeek	localtime.h	/^    int wDayOfWeek;$/;"	m	struct:SYSTEMTIME_s
wDeviceID	cd_win.c	/^UINT	wDeviceID;$/;"	v
wHour	localtime.h	/^    int wHour;$/;"	m	struct:SYSTEMTIME_s
wMilliseconds	localtime.h	/^    int wMilliseconds;$/;"	m	struct:SYSTEMTIME_s
wMinute	localtime.h	/^    int wMinute;$/;"	m	struct:SYSTEMTIME_s
wMonth	localtime.h	/^    int wMonth;$/;"	m	struct:SYSTEMTIME_s
wParam	in_raw.h	/^	WPARAM wParam;$/;"	m	struct:tagRAWINPUTHEADER
wSecond	localtime.h	/^    int wSecond;$/;"	m	struct:SYSTEMTIME_s
wYear	localtime.h	/^    int wYear;$/;"	m	struct:SYSTEMTIME_s
w_switch	cl_main.c	/^cvar_t	w_switch = {"w_switch", "", CVAR_ARCHIVE|CVAR_USERINFO};$/;"	v
wad3_numlumps	wad.c	/^static int wad3_numlumps = 0;$/;"	v	file:
wad_base	wad.c	/^static byte			*wad_base = NULL;$/;"	v	file:
wad_filesize	wad.c	/^static int			wad_filesize;$/;"	v	file:
wad_lumps	wad.c	/^static lumpinfo_t	*wad_lumps;$/;"	v	file:
wad_numlumps	wad.c	/^static int			wad_numlumps;$/;"	v	file:
wadinfo_t	wad.h	/^} wadinfo_t;$/;"	t	typeref:struct:__anon298
wait	cmd.h	/^	qbool	wait;$/;"	m	struct:cbuf_s
waitVRT	vid_win.c	/^int		waitVRT = true;			\/\/ True to wait for retrace on flip$/;"	v
waitingforprotocolconfirmation	server.h	/^	qbool waitingforprotocolconfirmation;$/;"	m	struct:svtcpstream_s
warned	client.h	/^	qbool			warned;			\/\/ warning about falied to load was alredy printed$/;"	m	struct:__anon111
warning	parser.c	/^	int warning;				\/\/ last warning$/;"	m	struct:__anon53	file:
warpface	gl_warp.c	/^static msurface_t *warpface;$/;"	v	file:
wasInMenus	menu.c	/^qbool    wasInMenus;$/;"	v
wasPlaying	cd_linux.c	/^static qbool	wasPlaying = false;$/;"	v	file:
wasPlaying	cd_win.c	/^static qbool	wasPlaying = false;$/;"	v	file:
was_standby	mvd_utils.c	/^static qbool was_standby = true;$/;"	v	file:
wateraccelerate	pmove.h	/^	float	wateraccelerate;$/;"	m	struct:__anon246
waterchain	gl_rsurf.c	/^msurface_t	*waterchain = NULL;$/;"	v
waterchain_tail	gl_rsurf.c	/^msurface_t	**waterchain_tail = &waterchain;$/;"	v
waterfriction	pmove.h	/^	float	waterfriction;$/;"	m	struct:__anon246
waterjumptime	client.h	/^	float		waterjumptime;$/;"	m	struct:__anon112
waterjumptime	pmove.h	/^	float		waterjumptime;$/;"	m	struct:__anon245
waterlevel	client.h	/^	int			waterlevel;$/;"	m	struct:__anon125
waterlevel	pmove.h	/^	int			waterlevel;$/;"	m	struct:__anon245
waterlevel	progdefs.h	/^	float	waterlevel;$/;"	m	struct:__anon253
watertype	pmove.h	/^	int			watertype;$/;"	m	struct:__anon245
watertype	progdefs.h	/^	float	watertype;$/;"	m	struct:__anon253
watervis	sv_main.c	/^cvar_t	watervis = {"watervis", "0", CVAR_SERVERINFO};$/;"	v
wav_init	snd_win.c	/^static qbool	wav_init;$/;"	v	file:
wavecaps	snd_win.c	/^WAVEOUTCAPS	wavecaps;$/;"	v
wavfilename	vx_tracker.c	/^	char *wavfilename;$/;"	m	struct:__anon94	file:
wavinfo_s	qsound.h	/^typedef struct wavinfo_s {$/;"	s
wavinfo_t	qsound.h	/^} wavinfo_t;$/;"	t	typeref:struct:wavinfo_s
wavonly	snd_win.c	/^static qbool	wavonly;$/;"	v	file:
wc2char	q_shared.c	/^char wc2char (wchar wc)$/;"	f
wc2koi	textencoding.c	/^static char wc2koi (wchar wc) {$/;"	f	file:
wc2koi_table	textencoding.c	/^static char *wc2koi_table =$/;"	v	file:
wchar	q_shared.h	35;"	d
wclass_index	fragstats.c	/^	int			wclass_index;$/;"	m	struct:fragmsg_s	file:
wclass_s	fragstats.c	/^typedef struct wclass_s {$/;"	s	file:
wclass_t	fragstats.c	/^} wclass_t;$/;"	t	typeref:struct:wclass_s	file:
wclasses	fragstats.c	/^static wclass_t wclasses[MAX_WEAPON_CLASSES];$/;"	v	file:
wcs2str	q_shared.c	/^char *wcs2str (const wchar *ws)$/;"	f
wcs2str_malloc	q_shared.c	/^char *wcs2str_malloc (const wchar *ws)$/;"	f
wcscasecmp	teamplay.c	3260;"	d	file:
wdeaths	fragstats.c	/^	int wdeaths[MAX_WEAPON_CLASSES];$/;"	m	struct:fragstats_s	file:
weapon	progdefs.h	/^	float	weapon;$/;"	m	struct:__anon253
weaponName_t	cl_screen.c	/^} weaponName_t;$/;"	t	typeref:enum:__anon5	file:
weapon_order	cl_input.c	/^int weapon_order[MAXWEAPONS] = {2, 1};$/;"	v
weaponframe	client.h	/^	int			weaponframe;$/;"	m	struct:__anon112
weaponframe	progdefs.h	/^	float	weaponframe;$/;"	m	struct:__anon253
weaponmodel	progdefs.h	/^	string_t	weaponmodel;$/;"	m	struct:__anon253
webpage	fragstats.c	/^	char		*webpage;$/;"	m	struct:fragdef_s	file:
weight	stats_grid.h	/^	float			weight;					\/\/ Weight of the box. Between 0.0 and 1.0$/;"	m	struct:cell_weight_s
wglGetDeviceGammaRamp3DFX	vid_wgl.c	/^BOOL (APIENTRY *wglGetDeviceGammaRamp3DFX)(HDC hDC, GLvoid *ramp);$/;"	v
wglSetDeviceGammaRamp3DFX	vid_wgl.c	/^BOOL (APIENTRY *wglSetDeviceGammaRamp3DFX)(HDC hDC, GLvoid *ramp);$/;"	v
wglSwapIntervalEXT	vid_wgl.c	/^SWAPINTERVALFUNCPTR wglSwapIntervalEXT = NULL;$/;"	v
what	mgraph.h	/^	m_uint		what;			\/* Event code							*\/$/;"	m	struct:__anon219
wheel_dn_count	in_win.c	/^int		 wheel_dn_count	= 0;$/;"	v
wheel_up_count	in_win.c	/^int		 wheel_up_count	= 0;$/;"	v
when	mgraph.h	/^	ulong		when;			\/* Clock ticks since midnight			*\/$/;"	m	struct:__anon219
whensaid	client.h	/^	double		whensaid[10];       \/\/\/< For floodprots$/;"	m	struct:__anon125
whensaid	server.h	/^	double		whensaid[10];		\/\/ For floodprots$/;"	m	struct:client_s
whensaidhead	client.h	/^ 	int			whensaidhead;       \/\/\/< Head value for floodprots$/;"	m	struct:__anon125
whensaidhead	server.h	/^ 	int			whensaidhead;		\/\/ Head value for floodprots$/;"	m	struct:client_s
where_x	mgraph.h	/^	m_int		where_x;		\/* Mouse location 						*\/$/;"	m	struct:__anon219
where_y	mgraph.h	/^	m_int		where_y;$/;"	m	struct:__anon219
which	mgraph.h	/^	ulong		which;			\/* Which window for window manager code	*\/$/;"	m	struct:__anon219
wich_one	mosdm.c	/^int wich_one = 0;$/;"	v
width	Ctrl.h	/^    int width, height;$/;"	m	struct:ScrollBar_s
width	Ctrl_EditBox.h	/^	unsigned int width;$/;"	m	struct:CEditBox_s
width	Ctrl_PageViewer.h	/^    int width;$/;"	m	struct:CPageViewer_page_s
width	Ctrl_Tab.h	/^	int			width;$/;"	m	struct:CTab_s
width	bspfile.h	/^	unsigned	width, height;$/;"	m	struct:miptex_s
width	cl_screen.c	/^	int width;$/;"	m	struct:mv_viewrect_s	file:
width	cl_screen.c	/^	unsigned				width;$/;"	m	struct:hud_element_s	file:
width	client.h	/^	int				width, height;	\/\/ this is valid for pcx too, but used for 32bit skins only$/;"	m	struct:__anon111
width	d_local.h	/^	unsigned			width;$/;"	m	struct:surfcache_s
width	document_rendering.c	/^    int     width;$/;"	m	struct:document_rendering_context_s	file:
width	draw.h	/^	int			width, height;$/;"	m	struct:__anon145
width	draw.h	/^	int			width;$/;"	m	struct:__anon146
width	ez_controls.h	/^	int 					width;					\/\/ Size.$/;"	m	struct:ez_control_s
width	gl_framebuffer.h	/^	int		width;				\/\/ Width the frame buffer is drawn at.$/;"	m	struct:fb_s
width	gl_model.h	/^	int					width;$/;"	m	struct:mspriteframe_s
width	gl_model.h	/^	unsigned			width, height;$/;"	m	struct:texture_s
width	gl_texture.c	/^	int			width, height;$/;"	m	struct:__anon28	file:
width	hud_editor.c	/^	int						width;$/;"	m	struct:hud_grephandle_s	file:
width	hud_editor.c	/^	int width;$/;"	m	struct:hud_resize_handle_s	file:
width	image.c	/^	unsigned short	xOrigin, yOrigin, width, height;$/;"	m	struct:TGAHeader_s	file:
width	mac.h	/^	UInt16	width;$/;"	m	struct:__anon175
width	mgraph.h	/^	m_int			width;			\/* Width of character or font		*\/$/;"	m	struct:__anon214
width	mgraph.h	/^	m_int		width;				\/* Width of bitmap in pixels		*\/$/;"	m	struct:__anon211
width	mvd_cam.h	/^	int			width;$/;"	m	struct:mvd_menu_s
width	new_menu.c	/^	int		width;$/;"	m	struct:menu_ct	file:
width	qsound.h	/^	int		width;$/;"	m	struct:wavinfo_s
width	qsound.h	/^	unsigned int	width;$/;"	m	struct:snd_format_s
width	r_draw.c	/^	int		width;$/;"	m	struct:__anon58	file:
width	r_model.h	/^	int					width;$/;"	m	struct:mspriteframe_s
width	r_model.h	/^	unsigned			width, height;$/;"	m	struct:texture_s
width	settings.h	/^    int width, height;  \/\/ last drawed width and height$/;"	m	struct:__anon273
width	spritegn.h	/^	int			width;$/;"	m	struct:__anon277
width	spritegn.h	/^	int			width;$/;"	m	struct:__anon278
width	stats_grid.h	/^	int				width;					\/\/ The width of the grid.$/;"	m	struct:stats_weight_grid_s
width	tr_init.c	/^    int         width, height;$/;"	m	struct:vidmode_s	file:
width	vid.h	/^	int x,y,width,height;$/;"	m	struct:vrect_s
width	vid.h	/^	unsigned		width;		$/;"	m	struct:__anon294
width	vid_wgl.c	/^	int			width;$/;"	m	struct:__anon81	file:
width	vid_wgl.c	/^	int			width;$/;"	m	struct:__anon82	file:
width	vid_win.c	/^	int			width;$/;"	m	struct:__anon85	file:
width	vid_win.c	/^	int		width;$/;"	m	struct:__anon84	file:
width	vid_win.c	/^	int		width;$/;"	m	struct:__anon86	file:
width	wad.h	/^	int			width, height;$/;"	m	struct:__anon297
width_max	ez_controls.h	/^	int						width_max;				\/\/ Max\/min sizes for the control.$/;"	m	struct:ez_control_s
width_min	ez_controls.h	/^	int						width_min;$/;"	m	struct:ez_control_s
wildcard_level	utils.c	/^int			wildcard_level = 0;$/;"	v
wildcard_re	utils.c	/^pcre		*wildcard_re[4];$/;"	v
wildcard_re_extra	utils.c	/^pcre_extra	*wildcard_re_extra[4];$/;"	v
wildcmp	q_shared.c	/^int wildcmp(char *wild, char *string)$/;"	f
wildpaks_t	fs.c	/^} wildpaks_t;$/;"	t	typeref:struct:__anon21	file:
win	linux_glimp.c	/^static Window win = 0;$/;"	v	file:
win_mouse	in_linux.c	29;"	d	file:
win_mouse	in_linux.c	31;"	d	file:
win_x	linux_glimp.c	/^static int win_x, win_y;$/;"	v	file:
win_y	linux_glimp.c	/^static int win_x, win_y;$/;"	v	file:
windc	vid_win.c	/^MGLDC		*mgldc = NULL,*memdc = NULL,*dibdc = NULL,*windc = NULL;$/;"	v
window	hud_editor.c	/^ez_window_t *window = NULL;$/;"	v
window	mac.h	/^	Boolean	window;			\/\/ gl_vid_windowed.value (0|1)$/;"	m	struct:__anon173
window	mac_prefs.h	/^	int	window;				\/\/ was in a window on last quit if true$/;"	m	struct:__anon179
windowAspect	tr_types.h	/^	float					windowAspect;$/;"	m	struct:__anon286
window_area	ez_window.h	/^	ez_control_t			*window_area;		\/\/ The window area where child controls are placed, also the target of the scrollpane.$/;"	m	struct:ez_window_s
window_center_x	vid_wgl.c	/^int		window_center_x, window_center_y, window_x, window_y, window_width, window_height;$/;"	v
window_center_x	vid_win.c	/^int			window_center_x, window_center_y, window_x, window_y, window_width, window_height;$/;"	v
window_center_x	win_glimp.c	/^int		window_center_x, window_center_y;$/;"	v
window_center_y	vid_wgl.c	/^int		window_center_x, window_center_y, window_x, window_y, window_width, window_height;$/;"	v
window_center_y	vid_win.c	/^int			window_center_x, window_center_y, window_x, window_y, window_width, window_height;$/;"	v
window_center_y	win_glimp.c	/^int		window_center_x, window_center_y;$/;"	v
window_height	vid_wgl.c	/^int		window_center_x, window_center_y, window_x, window_y, window_width, window_height;$/;"	v
window_height	vid_win.c	/^int			window_center_x, window_center_y, window_x, window_y, window_width, window_height;$/;"	v
window_rect	vid_wgl.c	/^RECT	window_rect;$/;"	v
window_rect	vid_win.c	/^RECT		window_rect;$/;"	v
window_rect	win_glimp.c	/^RECT	window_rect;$/;"	v
window_width	vid_wgl.c	/^int		window_center_x, window_center_y, window_x, window_y, window_width, window_height;$/;"	v
window_width	vid_win.c	/^int			window_center_x, window_center_y, window_x, window_y, window_width, window_height;$/;"	v
window_x	vid_wgl.c	/^int		window_center_x, window_center_y, window_x, window_y, window_width, window_height;$/;"	v
window_x	vid_win.c	/^int			window_center_x, window_center_y, window_x, window_y, window_width, window_height;$/;"	v
window_y	vid_wgl.c	/^int		window_center_x, window_center_y, window_x, window_y, window_width, window_height;$/;"	v
window_y	vid_win.c	/^int			window_center_x, window_center_y, window_x, window_y, window_width, window_height;$/;"	v
windowed	vid_mac.c	/^qbool		windowed = false;\/\/ Startup in a window$/;"	v
windowed	vid_wgl.c	/^static qbool	windowed, leavecurrentmode;$/;"	v	file:
windowed_default	vid_wgl.c	/^static int		windowed_default;$/;"	v	file:
windowed_default	vid_win.c	/^static int	windowed_default;$/;"	v	file:
windowed_mode_set	vid_win.c	/^static qbool	startwindowed = 0, windowed_mode_set;$/;"	v	file:
windowed_mouse	vid_wgl.c	/^static int		windowed_mouse;$/;"	v	file:
windowed_mouse	vid_win.c	/^static int		vid_stretched, windowed_mouse;$/;"	v	file:
winsockdata	net.c	/^WSADATA winsockdata;$/;"	v
wkills	fragstats.c	/^	int wkills[MAX_WEAPON_CLASSES];$/;"	m	struct:fragstats_s	file:
wm_delete_window_atom	linux_glimp.c	/^Atom wm_delete_window_atom; \/\/LordHavoc$/;"	v
wordwraps	ez_label.h	/^	ez_label_textpos_t		wordwraps[LABEL_MAX_WRAPS];	\/\/ Positions in the text where line breaks are located.$/;"	m	struct:ez_label_s
world	progdefs.h	/^	int	world;$/;"	m	struct:__anon252
world_clipplanes	r_rast.c	/^clipplane_t	world_clipplanes[16];$/;"	v
worldmodel	client.h	/^	struct model_s	*worldmodel;	\/\/\/< cl_entitites[0].model$/;"	m	struct:__anon125	typeref:struct:__anon125::model_s
worldmodel	server.h	/^	cmodel_t	*worldmodel;$/;"	m	struct:__anon264
wpAXE	cl_screen.c	/^	wpAXE,$/;"	e	enum:__anon5	file:
wpGL	cl_screen.c	/^	wpGL,$/;"	e	enum:__anon5	file:
wpLG	cl_screen.c	/^	wpLG,$/;"	e	enum:__anon5	file:
wpMAX	cl_screen.c	/^	wpMAX$/;"	e	enum:__anon5	file:
wpNG	cl_screen.c	/^	wpNG,$/;"	e	enum:__anon5	file:
wpNONE	cl_screen.c	/^	wpNONE = 0,$/;"	e	enum:__anon5	file:
wpRL	cl_screen.c	/^	wpRL,$/;"	e	enum:__anon5	file:
wpSG	cl_screen.c	/^	wpSG,$/;"	e	enum:__anon5	file:
wpSNG	cl_screen.c	/^	wpSNG,$/;"	e	enum:__anon5	file:
wpSSG	cl_screen.c	/^	wpSSG,$/;"	e	enum:__anon5	file:
wpType_s	cl_screen.c	/^typedef struct wpType_s {$/;"	s	file:
wpType_t	cl_screen.c	/^} wpType_t;$/;"	t	typeref:struct:wpType_s	file:
wpn	cl_screen.c	/^	wpType_t	wpn[wpMAX];$/;"	m	struct:ws_player_s	file:
writeMode	mgraph.h	/^	m_int			writeMode;		\/* Scan conversion write mode op.	*\/$/;"	m	struct:__anon216
writebuffer	vfs_tcp.c	/^	char	writebuffer[5 * 65536];$/;"	m	struct:tcpfile_s	file:
writebuffered	vfs_tcp.c	/^	int		writebuffered;$/;"	m	struct:tcpfile_s	file:
ws_clients	cl_screen.c	/^static ws_player_t ws_clients[MAX_CLIENTS];$/;"	v	file:
ws_player_s	cl_screen.c	/^typedef struct ws_player_s {$/;"	s	file:
ws_player_t	cl_screen.c	/^} ws_player_t;$/;"	t	typeref:struct:ws_player_s	file:
wsuicides	fragstats.c	/^	int wsuicides[MAX_WEAPON_CLASSES];$/;"	m	struct:fragstats_s	file:
wwp	mosdm.c	/^int *wwp;$/;"	v
x	Ctrl_Tab.h	/^    struct { int x, y, x2, y2; } navi_boxes[TAB_MAX_TABS];$/;"	m	struct:CTab_s::__anon137
x	EX_browser.h	/^	int x, y, w, h;$/;"	m	struct:serverbrowser_window_s
x	cl_screen.c	/^	float x, y;$/;"	m	struct:player_autoid_s	file:
x	cl_screen.c	/^	int x;$/;"	m	struct:mv_viewrect_s	file:
x	console.h	/^	int		x;				\/\/ offset in current line for next print$/;"	m	struct:__anon136
x	ez_controls.h	/^	int	 					x;						\/\/ Relative position to it's parent.$/;"	m	struct:ez_control_s
x	gl_framebuffer.h	/^	int		x;					\/\/ X position to draw the frame buffer contents at.$/;"	m	struct:fb_s
x	gl_local.h	/^	float	x, y, z;$/;"	m	struct:__anon153
x	gl_model.c	/^	short		x, y;$/;"	m	struct:__anon23	file:
x	hud_editor.c	/^	int						x;				\/\/ The position in screen coordinates for the grephandle.$/;"	m	struct:hud_grephandle_s	file:
x	hud_editor.c	/^	int x;$/;"	m	struct:hud_resize_handle_s	file:
x	keys.h	/^	double x;           \/\/ current mouse pointer horisontal position$/;"	m	struct:mouse_state_s
x	menu.c	/^	int x;$/;"	m	struct:menu_window_s	file:
x	mgraph.h	/^	fix32_t x,y;$/;"	m	struct:__anon198
x	mgraph.h	/^	m_int	x,y;					\/* Centre point of the arc			*\/$/;"	m	struct:__anon209
x	mgraph.h	/^	m_int	x,y;$/;"	m	struct:__anon196
x	new_menu.c	/^	int x,y, type;$/;"	m	struct:MS_Popup_Menu_Menu	file:
x	vid.h	/^	int x,y,width,height;$/;"	m	struct:vrect_s
x2	Ctrl_Tab.h	/^    struct { int x, y, x2, y2; } navi_boxes[TAB_MAX_TABS];$/;"	m	struct:CTab_s::__anon137
xHotSpot	mgraph.h	/^	m_int		xHotSpot;$/;"	m	struct:__anon210
xOrigin	image.c	/^	unsigned short	xOrigin, yOrigin, width, height;$/;"	m	struct:TGAHeader_s	file:
xOrigin	r_main.c	/^float	xOrigin, yOrigin;$/;"	v
xOrigin	render.h	/^	float		xOrigin;			\/\/ should probably always be 0.5$/;"	m	struct:__anon256
xRes	mgraph.h	/^	m_int	xRes;			\/* Device x resolution - 1					*\/$/;"	m	struct:__anon217
x_cmap	vid_x11.c	/^static Colormap		x_cmap;$/;"	v	file:
x_disp	vid_x11.c	/^static Display		*x_disp;$/;"	v	file:
x_framebuffer	vid_x11.c	/^static XImage *x_framebuffer[2] = {0, 0};$/;"	v	file:
x_gc	vid_x11.c	/^static GC			x_gc;$/;"	v	file:
x_old	keys.h	/^	double x_old;	    \/\/ previous mouse pointer positions$/;"	m	struct:mouse_state_s
x_shmeventtype	vid_x11.c	/^static int			x_shmeventtype;$/;"	v	file:
x_shminfo	vid_x11.c	/^static XShmSegmentInfo x_shminfo[2];$/;"	v	file:
x_vis	vid_x11.c	/^static Visual		*x_vis;$/;"	v	file:
x_visinfo	vid_x11.c	/^static XVisualInfo	*x_visinfo;$/;"	v	file:
x_win	vid_x11.c	/^static Window		x_win;$/;"	v	file:
xcenter	r_main.c	/^float		xcenter, ycenter;$/;"	v
xcommand_t	cmd.h	/^typedef void (*xcommand_t) (void);$/;"	t
xflags	fs.c	/^	unsigned char xflags;$/;"	m	struct:__anon20	file:
xlib_rgb16	vid_x11.c	/^static PIXEL16 xlib_rgb16 (int r,int g,int b)$/;"	f	file:
xlib_rgb24	vid_x11.c	/^static PIXEL24 xlib_rgb24 (int r,int g,int b)$/;"	f	file:
xmax	image.c	/^    unsigned short	xmin,ymin,xmax,ymax;$/;"	m	struct:pcx_s	file:
xmin	image.c	/^    unsigned short	xmin,ymin,xmax,ymax;$/;"	m	struct:pcx_s	file:
xml_command_s	xsd_command.h	/^typedef struct xml_command_s$/;"	s
xml_command_t	xsd_command.h	/^xml_command_t;$/;"	t	typeref:struct:xml_command_s
xml_document_author_s	xsd_document.h	/^typedef struct xml_document_author_s$/;"	s
xml_document_author_t	xsd_document.h	/^xml_document_author_t;$/;"	t	typeref:struct:xml_document_author_s
xml_document_s	xsd_document.h	/^typedef struct xml_document_s$/;"	s
xml_document_t	xsd_document.h	/^xml_document_t;$/;"	t	typeref:struct:xml_document_s
xml_parser_stack_s	xsd.h	/^typedef struct xml_parser_stack_s$/;"	s
xml_parser_stack_t	xsd.h	/^xml_parser_stack_t;$/;"	t	typeref:struct:xml_parser_stack_s
xml_s	xsd.h	/^typedef struct xml_s$/;"	s
xml_t	xsd.h	/^xml_t;$/;"	t	typeref:struct:xml_s
xml_variable_s	xsd_variable.h	/^typedef struct xml_variable_s$/;"	s
xml_variable_t	xsd_variable.h	/^xml_variable_t;$/;"	t	typeref:struct:xml_variable_s
xmms2Procs	mp3_xmms2.c	/^static qlib_dllfunction_t xmms2Procs[] = {$/;"	v	file:
xmmsProcs	mp3_audacious.c	/^static qlib_dllfunction_t xmmsProcs[] = {$/;"	v	file:
xmmsProcs	mp3_xmms.c	/^static qlib_dllfunction_t xmmsProcs[] = {$/;"	v	file:
xorMask	mgraph.h	/^	bitmap_t	xorMask;			\/* XOR mask for the icon			*\/$/;"	m	struct:__anon212
xorMask	mgraph.h	/^	ulong		xorMask[32];$/;"	m	struct:__anon210
xscale	r_main.c	/^float		xscale, yscale;$/;"	v
xscaleinv	r_main.c	/^float		xscaleinv, yscaleinv;$/;"	v
xscaleshrink	r_main.c	/^float		xscaleshrink, yscaleshrink;$/;"	v
xsd_mapping_s	xsd.c	/^typedef struct xsd_mapping_s$/;"	s	file:
xsd_mapping_t	xsd.c	/^xsd_mapping_t;$/;"	t	typeref:struct:xsd_mapping_s	file:
xsd_mappings	xsd.c	/^xsd_mapping_t xsd_mappings[] = {$/;"	v
xyz	gl_md3.h	/^	short		xyz[3];$/;"	m	struct:__anon156
y	Ctrl_Tab.h	/^    struct { int x, y, x2, y2; } navi_boxes[TAB_MAX_TABS];$/;"	m	struct:CTab_s::__anon137
y	EX_browser.h	/^	int x, y, w, h;$/;"	m	struct:serverbrowser_window_s
y	cl_screen.c	/^	float x, y;$/;"	m	struct:player_autoid_s	file:
y	cl_screen.c	/^	int y;$/;"	m	struct:mv_viewrect_s	file:
y	ez_controls.h	/^	int						y;$/;"	m	struct:ez_control_s
y	gl_framebuffer.h	/^	int		y;					\/\/ Y position to draw the frame buffer contents at.$/;"	m	struct:fb_s
y	gl_local.h	/^	float	x, y, z;$/;"	m	struct:__anon153
y	gl_model.c	/^	short		x, y;$/;"	m	struct:__anon23	file:
y	hud_editor.c	/^	int						y;$/;"	m	struct:hud_grephandle_s	file:
y	hud_editor.c	/^	int y;$/;"	m	struct:hud_resize_handle_s	file:
y	keys.h	/^	double y;           \/\/ current mouse pointer vertical position$/;"	m	struct:mouse_state_s
y	menu.c	/^	int y;$/;"	m	struct:menu_window_s	file:
y	mgraph.h	/^	fix32_t x,y;$/;"	m	struct:__anon198
y	mgraph.h	/^	m_int	x,y;					\/* Centre point of the arc			*\/$/;"	m	struct:__anon209
y	mgraph.h	/^	m_int	x,y;$/;"	m	struct:__anon196
y	new_menu.c	/^	int x,y, type;$/;"	m	struct:MS_Popup_Menu_Menu	file:
y	vid.h	/^	int x,y,width,height;$/;"	m	struct:vrect_s
y2	Ctrl_Tab.h	/^    struct { int x, y, x2, y2; } navi_boxes[TAB_MAX_TABS];$/;"	m	struct:CTab_s::__anon137
yHotSpot	mgraph.h	/^	m_int		yHotSpot;$/;"	m	struct:__anon210
yOrigin	image.c	/^	unsigned short	xOrigin, yOrigin, width, height;$/;"	m	struct:TGAHeader_s	file:
yOrigin	r_main.c	/^float	xOrigin, yOrigin;$/;"	v
yOrigin	render.h	/^	float		yOrigin;			\/\/ between be around 0.3 to 0.5$/;"	m	struct:__anon256
yRes	mgraph.h	/^	m_int	yRes;			\/* Device y resolution - 1					*\/$/;"	m	struct:__anon217
y_old	keys.h	/^	double y_old;$/;"	m	struct:mouse_state_s
ya_val	mvd_autotrack.c	63;"	d	file:
yaw_speed	progdefs.h	/^	float	yaw_speed;$/;"	m	struct:__anon253
ycenter	r_main.c	/^float		xcenter, ycenter;$/;"	v
year	match_tools.c	/^	char year[8];$/;"	m	struct:matchinfo_s	file:
yellowchars	keys.c	/^static qbool yellowchars = false;$/;"	v	file:
ymax	image.c	/^    unsigned short	xmin,ymin,xmax,ymax;$/;"	m	struct:pcx_s	file:
ymin	image.c	/^    unsigned short	xmin,ymin,xmax,ymax;$/;"	m	struct:pcx_s	file:
yscale	r_main.c	/^float		xscale, yscale;$/;"	v
yscaleinv	r_main.c	/^float		xscaleinv, yscaleinv;$/;"	v
yscaleshrink	r_main.c	/^float		xscaleshrink, yscaleshrink;$/;"	v
ystart	d_polyse.c	/^static int				ystart;$/;"	v	file:
z	gl_local.h	/^	float	x, y, z;$/;"	m	struct:__anon153
z	mgraph.h	/^	zfix32_t	z;$/;"	m	struct:__anon203
z	mgraph.h	/^	zfix32_t	z;$/;"	m	struct:__anon204
z	mgraph.h	/^	zfix32_t	z;$/;"	m	struct:__anon205
z_ext	client.h	/^	int			z_ext;				\/\/\/< ZQuake protocol extensions flags$/;"	m	struct:__anon125
z_ext_map_t	cl_cmd.c	/^} z_ext_map_t;$/;"	t	typeref:struct:__anon1	file:
z_map	cl_cmd.c	/^static z_ext_map_t z_map[] =$/;"	v	file:
z_map_cnt	cl_cmd.c	/^static int z_map_cnt = sizeof(z_map)\/sizeof(z_map[0]);$/;"	v	file:
zbits	mgraph.h	/^	m_int	zbits;			\/* Bits per zbuffer element					*\/$/;"	m	struct:__anon218
zbuffer	mgraph.h	/^	void	*zbuffer;		\/* Pointer to Z-buffer if allocated			*\/$/;"	m	struct:__anon218
zerodir	gl_rpart.c	/^static vec3_t zerodir = {22, 22, 22};$/;"	v	file:
zfix32_t	mgraph.h	/^typedef	long			zfix32_t;$/;"	t
zi	d_iface.h	/^	float	u, v, zi, color;$/;"	m	struct:__anon141
zi	d_iface.h	/^	float	u, v, zi, s, t;$/;"	m	struct:polyvert_s
zi	d_iface.h	/^	float	zi;$/;"	m	struct:__anon138
zi	d_iface.h	/^	float	zi;$/;"	m	struct:__anon143
zi	d_polyse.c	/^	int				sfrac, tfrac, light, zi;$/;"	m	struct:__anon10	file:
zipfile_s	vfs_zip.c	/^typedef struct zipfile_s$/;"	s	file:
zipfile_t	vfs_zip.c	/^} zipfile_t;$/;"	t	typeref:struct:zipfile_s	file:
zipfilefuncs	vfs_zip.c	/^searchpathfuncs_t zipfilefuncs = {$/;"	v
ziscale	r_alias.c	/^static float		ziscale;$/;"	v	file:
zlib_funcs	vfs_zip.c	/^	zlib_filefunc_def zlib_funcs;$/;"	m	struct:zipfile_s	file:
zlib_handle	image.c	/^static QLIB_HANDLETYPE_T zlib_handle = NULL;$/;"	v	file:
zonemempool	zone2.c	/^mempool_t *zonemempool;$/;"	v
zoomedin	cl_screen.c	/^qbool	zoomedin;$/;"	v
zpointdesc_t	d_iface.h	/^} zpointdesc_t;$/;"	t	typeref:struct:__anon143
zspantable	d_modech.c	/^short	*zspantable[MAXHEIGHT]; $/;"	v
zwidth	mgraph.h	/^	m_int   zwidth;			\/* Width of the zbuffer in pixels			*\/$/;"	m	struct:__anon218
